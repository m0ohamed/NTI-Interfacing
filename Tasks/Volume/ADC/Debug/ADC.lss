
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006f4c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000158  00800060  00006f4c  00006fe0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008001b8  008001b8  00007138  2**0
                  ALLOC
  3 .stab         00003810  00000000  00000000  00007138  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001953  00000000  00000000  0000a948  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  0000c29b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000020f  00000000  00000000  0000c45b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000030e2  00000000  00000000  0000c66a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000156a  00000000  00000000  0000f74c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014dd  00000000  00000000  00010cb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  00012194  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000375  00000000  00000000  00012374  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000022ac  00000000  00000000  000126e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00014995  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 74 1d 	jmp	0x3ae8	; 0x3ae8 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e4       	ldi	r30, 0x4C	; 76
      68:	ff e6       	ldi	r31, 0x6F	; 111
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 3b       	cpi	r26, 0xB8	; 184
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 eb       	ldi	r26, 0xB8	; 184
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 3b       	cpi	r26, 0xBE	; 190
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 7c 36 	call	0x6cf8	; 0x6cf8 <main>
      8a:	0c 94 a4 37 	jmp	0x6f48	; 0x6f48 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <__subsf3>
     1bc:	0e 94 b9 11 	call	0x2372	; 0x2372 <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 b9 11 	call	0x2372	; 0x2372 <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__udivdi3>:
     1e8:	ae e5       	ldi	r26, 0x5E	; 94
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 6d 37 	jmp	0x6eda	; 0x6eda <__prologue_saves__>
     1f4:	a8 e0       	ldi	r26, 0x08	; 8
     1f6:	4e 01       	movw	r8, r28
     1f8:	08 94       	sec
     1fa:	81 1c       	adc	r8, r1
     1fc:	91 1c       	adc	r9, r1
     1fe:	f4 01       	movw	r30, r8
     200:	6a 2e       	mov	r6, r26
     202:	11 92       	st	Z+, r1
     204:	6a 94       	dec	r6
     206:	e9 f7       	brne	.-6      	; 0x202 <__udivdi3+0x1a>
     208:	29 83       	std	Y+1, r18	; 0x01
     20a:	3a 83       	std	Y+2, r19	; 0x02
     20c:	4b 83       	std	Y+3, r20	; 0x03
     20e:	5c 83       	std	Y+4, r21	; 0x04
     210:	6d 83       	std	Y+5, r22	; 0x05
     212:	7e 83       	std	Y+6, r23	; 0x06
     214:	8f 83       	std	Y+7, r24	; 0x07
     216:	98 87       	std	Y+8, r25	; 0x08
     218:	ce 01       	movw	r24, r28
     21a:	09 96       	adiw	r24, 0x09	; 9
     21c:	fc 01       	movw	r30, r24
     21e:	11 92       	st	Z+, r1
     220:	aa 95       	dec	r26
     222:	e9 f7       	brne	.-6      	; 0x21e <__udivdi3+0x36>
     224:	a9 86       	std	Y+9, r10	; 0x09
     226:	ba 86       	std	Y+10, r11	; 0x0a
     228:	cb 86       	std	Y+11, r12	; 0x0b
     22a:	dc 86       	std	Y+12, r13	; 0x0c
     22c:	ed 86       	std	Y+13, r14	; 0x0d
     22e:	fe 86       	std	Y+14, r15	; 0x0e
     230:	0f 87       	std	Y+15, r16	; 0x0f
     232:	18 8b       	std	Y+16, r17	; 0x10
     234:	29 84       	ldd	r2, Y+9	; 0x09
     236:	3a 84       	ldd	r3, Y+10	; 0x0a
     238:	4b 84       	ldd	r4, Y+11	; 0x0b
     23a:	5c 84       	ldd	r5, Y+12	; 0x0c
     23c:	ed 84       	ldd	r14, Y+13	; 0x0d
     23e:	fe 84       	ldd	r15, Y+14	; 0x0e
     240:	0f 85       	ldd	r16, Y+15	; 0x0f
     242:	18 89       	ldd	r17, Y+16	; 0x10
     244:	69 80       	ldd	r6, Y+1	; 0x01
     246:	7a 80       	ldd	r7, Y+2	; 0x02
     248:	8b 80       	ldd	r8, Y+3	; 0x03
     24a:	9c 80       	ldd	r9, Y+4	; 0x04
     24c:	6d a6       	std	Y+45, r6	; 0x2d
     24e:	7e a6       	std	Y+46, r7	; 0x2e
     250:	8f a6       	std	Y+47, r8	; 0x2f
     252:	98 aa       	std	Y+48, r9	; 0x30
     254:	6d 80       	ldd	r6, Y+5	; 0x05
     256:	7e 80       	ldd	r7, Y+6	; 0x06
     258:	8f 80       	ldd	r8, Y+7	; 0x07
     25a:	98 84       	ldd	r9, Y+8	; 0x08
     25c:	e1 14       	cp	r14, r1
     25e:	f1 04       	cpc	r15, r1
     260:	01 05       	cpc	r16, r1
     262:	11 05       	cpc	r17, r1
     264:	09 f0       	breq	.+2      	; 0x268 <__udivdi3+0x80>
     266:	b3 c3       	rjmp	.+1894   	; 0x9ce <__stack+0x16f>
     268:	62 14       	cp	r6, r2
     26a:	73 04       	cpc	r7, r3
     26c:	84 04       	cpc	r8, r4
     26e:	95 04       	cpc	r9, r5
     270:	08 f0       	brcs	.+2      	; 0x274 <__udivdi3+0x8c>
     272:	3d c1       	rjmp	.+634    	; 0x4ee <__udivdi3+0x306>
     274:	00 e0       	ldi	r16, 0x00	; 0
     276:	20 16       	cp	r2, r16
     278:	00 e0       	ldi	r16, 0x00	; 0
     27a:	30 06       	cpc	r3, r16
     27c:	01 e0       	ldi	r16, 0x01	; 1
     27e:	40 06       	cpc	r4, r16
     280:	00 e0       	ldi	r16, 0x00	; 0
     282:	50 06       	cpc	r5, r16
     284:	88 f4       	brcc	.+34     	; 0x2a8 <__udivdi3+0xc0>
     286:	1f ef       	ldi	r17, 0xFF	; 255
     288:	21 16       	cp	r2, r17
     28a:	31 04       	cpc	r3, r1
     28c:	41 04       	cpc	r4, r1
     28e:	51 04       	cpc	r5, r1
     290:	39 f0       	breq	.+14     	; 0x2a0 <__udivdi3+0xb8>
     292:	30 f0       	brcs	.+12     	; 0x2a0 <__udivdi3+0xb8>
     294:	48 e0       	ldi	r20, 0x08	; 8
     296:	e4 2e       	mov	r14, r20
     298:	f1 2c       	mov	r15, r1
     29a:	01 2d       	mov	r16, r1
     29c:	11 2d       	mov	r17, r1
     29e:	18 c0       	rjmp	.+48     	; 0x2d0 <__udivdi3+0xe8>
     2a0:	ee 24       	eor	r14, r14
     2a2:	ff 24       	eor	r15, r15
     2a4:	87 01       	movw	r16, r14
     2a6:	14 c0       	rjmp	.+40     	; 0x2d0 <__udivdi3+0xe8>
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	22 16       	cp	r2, r18
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	32 06       	cpc	r3, r18
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	42 06       	cpc	r4, r18
     2b4:	21 e0       	ldi	r18, 0x01	; 1
     2b6:	52 06       	cpc	r5, r18
     2b8:	30 f0       	brcs	.+12     	; 0x2c6 <__udivdi3+0xde>
     2ba:	38 e1       	ldi	r19, 0x18	; 24
     2bc:	e3 2e       	mov	r14, r19
     2be:	f1 2c       	mov	r15, r1
     2c0:	01 2d       	mov	r16, r1
     2c2:	11 2d       	mov	r17, r1
     2c4:	05 c0       	rjmp	.+10     	; 0x2d0 <__udivdi3+0xe8>
     2c6:	20 e1       	ldi	r18, 0x10	; 16
     2c8:	e2 2e       	mov	r14, r18
     2ca:	f1 2c       	mov	r15, r1
     2cc:	01 2d       	mov	r16, r1
     2ce:	11 2d       	mov	r17, r1
     2d0:	d2 01       	movw	r26, r4
     2d2:	c1 01       	movw	r24, r2
     2d4:	0e 2c       	mov	r0, r14
     2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <__udivdi3+0xf8>
     2d8:	b6 95       	lsr	r27
     2da:	a7 95       	ror	r26
     2dc:	97 95       	ror	r25
     2de:	87 95       	ror	r24
     2e0:	0a 94       	dec	r0
     2e2:	d2 f7       	brpl	.-12     	; 0x2d8 <__udivdi3+0xf0>
     2e4:	84 56       	subi	r24, 0x64	; 100
     2e6:	9f 4f       	sbci	r25, 0xFF	; 255
     2e8:	dc 01       	movw	r26, r24
     2ea:	2c 91       	ld	r18, X
     2ec:	80 e2       	ldi	r24, 0x20	; 32
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	a0 e0       	ldi	r26, 0x00	; 0
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	8e 19       	sub	r24, r14
     2f6:	9f 09       	sbc	r25, r15
     2f8:	a0 0b       	sbc	r26, r16
     2fa:	b1 0b       	sbc	r27, r17
     2fc:	7c 01       	movw	r14, r24
     2fe:	8d 01       	movw	r16, r26
     300:	e2 1a       	sub	r14, r18
     302:	f1 08       	sbc	r15, r1
     304:	01 09       	sbc	r16, r1
     306:	11 09       	sbc	r17, r1
     308:	e1 14       	cp	r14, r1
     30a:	f1 04       	cpc	r15, r1
     30c:	01 05       	cpc	r16, r1
     30e:	11 05       	cpc	r17, r1
     310:	a1 f1       	breq	.+104    	; 0x37a <__udivdi3+0x192>
     312:	0e 2c       	mov	r0, r14
     314:	04 c0       	rjmp	.+8      	; 0x31e <__udivdi3+0x136>
     316:	22 0c       	add	r2, r2
     318:	33 1c       	adc	r3, r3
     31a:	44 1c       	adc	r4, r4
     31c:	55 1c       	adc	r5, r5
     31e:	0a 94       	dec	r0
     320:	d2 f7       	brpl	.-12     	; 0x316 <__udivdi3+0x12e>
     322:	a4 01       	movw	r20, r8
     324:	93 01       	movw	r18, r6
     326:	0e 2c       	mov	r0, r14
     328:	04 c0       	rjmp	.+8      	; 0x332 <__udivdi3+0x14a>
     32a:	22 0f       	add	r18, r18
     32c:	33 1f       	adc	r19, r19
     32e:	44 1f       	adc	r20, r20
     330:	55 1f       	adc	r21, r21
     332:	0a 94       	dec	r0
     334:	d2 f7       	brpl	.-12     	; 0x32a <__udivdi3+0x142>
     336:	80 e2       	ldi	r24, 0x20	; 32
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	8e 19       	sub	r24, r14
     33c:	9f 09       	sbc	r25, r15
     33e:	6d a4       	ldd	r6, Y+45	; 0x2d
     340:	7e a4       	ldd	r7, Y+46	; 0x2e
     342:	8f a4       	ldd	r8, Y+47	; 0x2f
     344:	98 a8       	ldd	r9, Y+48	; 0x30
     346:	04 c0       	rjmp	.+8      	; 0x350 <__udivdi3+0x168>
     348:	96 94       	lsr	r9
     34a:	87 94       	ror	r8
     34c:	77 94       	ror	r7
     34e:	67 94       	ror	r6
     350:	8a 95       	dec	r24
     352:	d2 f7       	brpl	.-12     	; 0x348 <__udivdi3+0x160>
     354:	62 2a       	or	r6, r18
     356:	73 2a       	or	r7, r19
     358:	84 2a       	or	r8, r20
     35a:	95 2a       	or	r9, r21
     35c:	ad a4       	ldd	r10, Y+45	; 0x2d
     35e:	be a4       	ldd	r11, Y+46	; 0x2e
     360:	cf a4       	ldd	r12, Y+47	; 0x2f
     362:	d8 a8       	ldd	r13, Y+48	; 0x30
     364:	04 c0       	rjmp	.+8      	; 0x36e <__udivdi3+0x186>
     366:	aa 0c       	add	r10, r10
     368:	bb 1c       	adc	r11, r11
     36a:	cc 1c       	adc	r12, r12
     36c:	dd 1c       	adc	r13, r13
     36e:	ea 94       	dec	r14
     370:	d2 f7       	brpl	.-12     	; 0x366 <__udivdi3+0x17e>
     372:	ad a6       	std	Y+45, r10	; 0x2d
     374:	be a6       	std	Y+46, r11	; 0x2e
     376:	cf a6       	std	Y+47, r12	; 0x2f
     378:	d8 aa       	std	Y+48, r13	; 0x30
     37a:	62 01       	movw	r12, r4
     37c:	ee 24       	eor	r14, r14
     37e:	ff 24       	eor	r15, r15
     380:	cd aa       	std	Y+53, r12	; 0x35
     382:	de aa       	std	Y+54, r13	; 0x36
     384:	ef aa       	std	Y+55, r14	; 0x37
     386:	f8 ae       	std	Y+56, r15	; 0x38
     388:	92 01       	movw	r18, r4
     38a:	81 01       	movw	r16, r2
     38c:	20 70       	andi	r18, 0x00	; 0
     38e:	30 70       	andi	r19, 0x00	; 0
     390:	09 af       	std	Y+57, r16	; 0x39
     392:	1a af       	std	Y+58, r17	; 0x3a
     394:	2b af       	std	Y+59, r18	; 0x3b
     396:	3c af       	std	Y+60, r19	; 0x3c
     398:	c4 01       	movw	r24, r8
     39a:	b3 01       	movw	r22, r6
     39c:	a7 01       	movw	r20, r14
     39e:	96 01       	movw	r18, r12
     3a0:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     3a4:	7b 01       	movw	r14, r22
     3a6:	8c 01       	movw	r16, r24
     3a8:	c4 01       	movw	r24, r8
     3aa:	b3 01       	movw	r22, r6
     3ac:	2d a9       	ldd	r18, Y+53	; 0x35
     3ae:	3e a9       	ldd	r19, Y+54	; 0x36
     3b0:	4f a9       	ldd	r20, Y+55	; 0x37
     3b2:	58 ad       	ldd	r21, Y+56	; 0x38
     3b4:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     3b8:	c9 01       	movw	r24, r18
     3ba:	da 01       	movw	r26, r20
     3bc:	3c 01       	movw	r6, r24
     3be:	4d 01       	movw	r8, r26
     3c0:	c4 01       	movw	r24, r8
     3c2:	b3 01       	movw	r22, r6
     3c4:	29 ad       	ldd	r18, Y+57	; 0x39
     3c6:	3a ad       	ldd	r19, Y+58	; 0x3a
     3c8:	4b ad       	ldd	r20, Y+59	; 0x3b
     3ca:	5c ad       	ldd	r21, Y+60	; 0x3c
     3cc:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     3d0:	9b 01       	movw	r18, r22
     3d2:	ac 01       	movw	r20, r24
     3d4:	87 01       	movw	r16, r14
     3d6:	ff 24       	eor	r15, r15
     3d8:	ee 24       	eor	r14, r14
     3da:	ad a4       	ldd	r10, Y+45	; 0x2d
     3dc:	be a4       	ldd	r11, Y+46	; 0x2e
     3de:	cf a4       	ldd	r12, Y+47	; 0x2f
     3e0:	d8 a8       	ldd	r13, Y+48	; 0x30
     3e2:	c6 01       	movw	r24, r12
     3e4:	aa 27       	eor	r26, r26
     3e6:	bb 27       	eor	r27, r27
     3e8:	57 01       	movw	r10, r14
     3ea:	68 01       	movw	r12, r16
     3ec:	a8 2a       	or	r10, r24
     3ee:	b9 2a       	or	r11, r25
     3f0:	ca 2a       	or	r12, r26
     3f2:	db 2a       	or	r13, r27
     3f4:	a2 16       	cp	r10, r18
     3f6:	b3 06       	cpc	r11, r19
     3f8:	c4 06       	cpc	r12, r20
     3fa:	d5 06       	cpc	r13, r21
     3fc:	e0 f4       	brcc	.+56     	; 0x436 <__udivdi3+0x24e>
     3fe:	08 94       	sec
     400:	61 08       	sbc	r6, r1
     402:	71 08       	sbc	r7, r1
     404:	81 08       	sbc	r8, r1
     406:	91 08       	sbc	r9, r1
     408:	a2 0c       	add	r10, r2
     40a:	b3 1c       	adc	r11, r3
     40c:	c4 1c       	adc	r12, r4
     40e:	d5 1c       	adc	r13, r5
     410:	a2 14       	cp	r10, r2
     412:	b3 04       	cpc	r11, r3
     414:	c4 04       	cpc	r12, r4
     416:	d5 04       	cpc	r13, r5
     418:	70 f0       	brcs	.+28     	; 0x436 <__udivdi3+0x24e>
     41a:	a2 16       	cp	r10, r18
     41c:	b3 06       	cpc	r11, r19
     41e:	c4 06       	cpc	r12, r20
     420:	d5 06       	cpc	r13, r21
     422:	48 f4       	brcc	.+18     	; 0x436 <__udivdi3+0x24e>
     424:	08 94       	sec
     426:	61 08       	sbc	r6, r1
     428:	71 08       	sbc	r7, r1
     42a:	81 08       	sbc	r8, r1
     42c:	91 08       	sbc	r9, r1
     42e:	a2 0c       	add	r10, r2
     430:	b3 1c       	adc	r11, r3
     432:	c4 1c       	adc	r12, r4
     434:	d5 1c       	adc	r13, r5
     436:	a2 1a       	sub	r10, r18
     438:	b3 0a       	sbc	r11, r19
     43a:	c4 0a       	sbc	r12, r20
     43c:	d5 0a       	sbc	r13, r21
     43e:	c6 01       	movw	r24, r12
     440:	b5 01       	movw	r22, r10
     442:	2d a9       	ldd	r18, Y+53	; 0x35
     444:	3e a9       	ldd	r19, Y+54	; 0x36
     446:	4f a9       	ldd	r20, Y+55	; 0x37
     448:	58 ad       	ldd	r21, Y+56	; 0x38
     44a:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     44e:	7b 01       	movw	r14, r22
     450:	8c 01       	movw	r16, r24
     452:	c6 01       	movw	r24, r12
     454:	b5 01       	movw	r22, r10
     456:	2d a9       	ldd	r18, Y+53	; 0x35
     458:	3e a9       	ldd	r19, Y+54	; 0x36
     45a:	4f a9       	ldd	r20, Y+55	; 0x37
     45c:	58 ad       	ldd	r21, Y+56	; 0x38
     45e:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     462:	c9 01       	movw	r24, r18
     464:	da 01       	movw	r26, r20
     466:	5c 01       	movw	r10, r24
     468:	6d 01       	movw	r12, r26
     46a:	c6 01       	movw	r24, r12
     46c:	b5 01       	movw	r22, r10
     46e:	29 ad       	ldd	r18, Y+57	; 0x39
     470:	3a ad       	ldd	r19, Y+58	; 0x3a
     472:	4b ad       	ldd	r20, Y+59	; 0x3b
     474:	5c ad       	ldd	r21, Y+60	; 0x3c
     476:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     47a:	9b 01       	movw	r18, r22
     47c:	ac 01       	movw	r20, r24
     47e:	87 01       	movw	r16, r14
     480:	ff 24       	eor	r15, r15
     482:	ee 24       	eor	r14, r14
     484:	8d a5       	ldd	r24, Y+45	; 0x2d
     486:	9e a5       	ldd	r25, Y+46	; 0x2e
     488:	af a5       	ldd	r26, Y+47	; 0x2f
     48a:	b8 a9       	ldd	r27, Y+48	; 0x30
     48c:	a0 70       	andi	r26, 0x00	; 0
     48e:	b0 70       	andi	r27, 0x00	; 0
     490:	e8 2a       	or	r14, r24
     492:	f9 2a       	or	r15, r25
     494:	0a 2b       	or	r16, r26
     496:	1b 2b       	or	r17, r27
     498:	e2 16       	cp	r14, r18
     49a:	f3 06       	cpc	r15, r19
     49c:	04 07       	cpc	r16, r20
     49e:	15 07       	cpc	r17, r21
     4a0:	c0 f4       	brcc	.+48     	; 0x4d2 <__udivdi3+0x2ea>
     4a2:	08 94       	sec
     4a4:	a1 08       	sbc	r10, r1
     4a6:	b1 08       	sbc	r11, r1
     4a8:	c1 08       	sbc	r12, r1
     4aa:	d1 08       	sbc	r13, r1
     4ac:	e2 0c       	add	r14, r2
     4ae:	f3 1c       	adc	r15, r3
     4b0:	04 1d       	adc	r16, r4
     4b2:	15 1d       	adc	r17, r5
     4b4:	e2 14       	cp	r14, r2
     4b6:	f3 04       	cpc	r15, r3
     4b8:	04 05       	cpc	r16, r4
     4ba:	15 05       	cpc	r17, r5
     4bc:	50 f0       	brcs	.+20     	; 0x4d2 <__udivdi3+0x2ea>
     4be:	e2 16       	cp	r14, r18
     4c0:	f3 06       	cpc	r15, r19
     4c2:	04 07       	cpc	r16, r20
     4c4:	15 07       	cpc	r17, r21
     4c6:	28 f4       	brcc	.+10     	; 0x4d2 <__udivdi3+0x2ea>
     4c8:	08 94       	sec
     4ca:	a1 08       	sbc	r10, r1
     4cc:	b1 08       	sbc	r11, r1
     4ce:	c1 08       	sbc	r12, r1
     4d0:	d1 08       	sbc	r13, r1
     4d2:	d3 01       	movw	r26, r6
     4d4:	99 27       	eor	r25, r25
     4d6:	88 27       	eor	r24, r24
     4d8:	86 01       	movw	r16, r12
     4da:	75 01       	movw	r14, r10
     4dc:	e8 2a       	or	r14, r24
     4de:	f9 2a       	or	r15, r25
     4e0:	0a 2b       	or	r16, r26
     4e2:	1b 2b       	or	r17, r27
     4e4:	e9 aa       	std	Y+49, r14	; 0x31
     4e6:	fa aa       	std	Y+50, r15	; 0x32
     4e8:	0b ab       	std	Y+51, r16	; 0x33
     4ea:	1c ab       	std	Y+52, r17	; 0x34
     4ec:	cf c4       	rjmp	.+2462   	; 0xe8c <__stack+0x62d>
     4ee:	21 14       	cp	r2, r1
     4f0:	31 04       	cpc	r3, r1
     4f2:	41 04       	cpc	r4, r1
     4f4:	51 04       	cpc	r5, r1
     4f6:	71 f4       	brne	.+28     	; 0x514 <__udivdi3+0x32c>
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 e0       	ldi	r20, 0x00	; 0
     506:	50 e0       	ldi	r21, 0x00	; 0
     508:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     50c:	c9 01       	movw	r24, r18
     50e:	da 01       	movw	r26, r20
     510:	1c 01       	movw	r2, r24
     512:	2d 01       	movw	r4, r26
     514:	00 e0       	ldi	r16, 0x00	; 0
     516:	20 16       	cp	r2, r16
     518:	00 e0       	ldi	r16, 0x00	; 0
     51a:	30 06       	cpc	r3, r16
     51c:	01 e0       	ldi	r16, 0x01	; 1
     51e:	40 06       	cpc	r4, r16
     520:	00 e0       	ldi	r16, 0x00	; 0
     522:	50 06       	cpc	r5, r16
     524:	88 f4       	brcc	.+34     	; 0x548 <__udivdi3+0x360>
     526:	1f ef       	ldi	r17, 0xFF	; 255
     528:	21 16       	cp	r2, r17
     52a:	31 04       	cpc	r3, r1
     52c:	41 04       	cpc	r4, r1
     52e:	51 04       	cpc	r5, r1
     530:	31 f0       	breq	.+12     	; 0x53e <__udivdi3+0x356>
     532:	28 f0       	brcs	.+10     	; 0x53e <__udivdi3+0x356>
     534:	48 e0       	ldi	r20, 0x08	; 8
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	17 c0       	rjmp	.+46     	; 0x56c <__udivdi3+0x384>
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	50 e0       	ldi	r21, 0x00	; 0
     542:	60 e0       	ldi	r22, 0x00	; 0
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	12 c0       	rjmp	.+36     	; 0x56c <__udivdi3+0x384>
     548:	20 e0       	ldi	r18, 0x00	; 0
     54a:	22 16       	cp	r2, r18
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	32 06       	cpc	r3, r18
     550:	20 e0       	ldi	r18, 0x00	; 0
     552:	42 06       	cpc	r4, r18
     554:	21 e0       	ldi	r18, 0x01	; 1
     556:	52 06       	cpc	r5, r18
     558:	28 f0       	brcs	.+10     	; 0x564 <__udivdi3+0x37c>
     55a:	48 e1       	ldi	r20, 0x18	; 24
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	04 c0       	rjmp	.+8      	; 0x56c <__udivdi3+0x384>
     564:	40 e1       	ldi	r20, 0x10	; 16
     566:	50 e0       	ldi	r21, 0x00	; 0
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	d2 01       	movw	r26, r4
     56e:	c1 01       	movw	r24, r2
     570:	04 2e       	mov	r0, r20
     572:	04 c0       	rjmp	.+8      	; 0x57c <__udivdi3+0x394>
     574:	b6 95       	lsr	r27
     576:	a7 95       	ror	r26
     578:	97 95       	ror	r25
     57a:	87 95       	ror	r24
     57c:	0a 94       	dec	r0
     57e:	d2 f7       	brpl	.-12     	; 0x574 <__udivdi3+0x38c>
     580:	84 56       	subi	r24, 0x64	; 100
     582:	9f 4f       	sbci	r25, 0xFF	; 255
     584:	dc 01       	movw	r26, r24
     586:	2c 91       	ld	r18, X
     588:	e0 e2       	ldi	r30, 0x20	; 32
     58a:	ee 2e       	mov	r14, r30
     58c:	f1 2c       	mov	r15, r1
     58e:	01 2d       	mov	r16, r1
     590:	11 2d       	mov	r17, r1
     592:	d8 01       	movw	r26, r16
     594:	c7 01       	movw	r24, r14
     596:	84 1b       	sub	r24, r20
     598:	95 0b       	sbc	r25, r21
     59a:	a6 0b       	sbc	r26, r22
     59c:	b7 0b       	sbc	r27, r23
     59e:	82 1b       	sub	r24, r18
     5a0:	91 09       	sbc	r25, r1
     5a2:	a1 09       	sbc	r26, r1
     5a4:	b1 09       	sbc	r27, r1
     5a6:	00 97       	sbiw	r24, 0x00	; 0
     5a8:	a1 05       	cpc	r26, r1
     5aa:	b1 05       	cpc	r27, r1
     5ac:	61 f4       	brne	.+24     	; 0x5c6 <__udivdi3+0x3de>
     5ae:	64 01       	movw	r12, r8
     5b0:	53 01       	movw	r10, r6
     5b2:	a2 18       	sub	r10, r2
     5b4:	b3 08       	sbc	r11, r3
     5b6:	c4 08       	sbc	r12, r4
     5b8:	d5 08       	sbc	r13, r5
     5ba:	31 e0       	ldi	r19, 0x01	; 1
     5bc:	63 2e       	mov	r6, r19
     5be:	71 2c       	mov	r7, r1
     5c0:	81 2c       	mov	r8, r1
     5c2:	91 2c       	mov	r9, r1
     5c4:	1e c1       	rjmp	.+572    	; 0x802 <__udivdi3+0x61a>
     5c6:	6f 96       	adiw	r28, 0x1f	; 31
     5c8:	8f af       	std	Y+63, r24	; 0x3f
     5ca:	6f 97       	sbiw	r28, 0x1f	; 31
     5cc:	08 2e       	mov	r0, r24
     5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <__udivdi3+0x3f0>
     5d0:	22 0c       	add	r2, r2
     5d2:	33 1c       	adc	r3, r3
     5d4:	44 1c       	adc	r4, r4
     5d6:	55 1c       	adc	r5, r5
     5d8:	0a 94       	dec	r0
     5da:	d2 f7       	brpl	.-12     	; 0x5d0 <__udivdi3+0x3e8>
     5dc:	ee 2d       	mov	r30, r14
     5de:	e8 1b       	sub	r30, r24
     5e0:	64 01       	movw	r12, r8
     5e2:	53 01       	movw	r10, r6
     5e4:	0e 2e       	mov	r0, r30
     5e6:	04 c0       	rjmp	.+8      	; 0x5f0 <__udivdi3+0x408>
     5e8:	d6 94       	lsr	r13
     5ea:	c7 94       	ror	r12
     5ec:	b7 94       	ror	r11
     5ee:	a7 94       	ror	r10
     5f0:	0a 94       	dec	r0
     5f2:	d2 f7       	brpl	.-12     	; 0x5e8 <__udivdi3+0x400>
     5f4:	a4 01       	movw	r20, r8
     5f6:	93 01       	movw	r18, r6
     5f8:	6f 96       	adiw	r28, 0x1f	; 31
     5fa:	0f ac       	ldd	r0, Y+63	; 0x3f
     5fc:	6f 97       	sbiw	r28, 0x1f	; 31
     5fe:	04 c0       	rjmp	.+8      	; 0x608 <__udivdi3+0x420>
     600:	22 0f       	add	r18, r18
     602:	33 1f       	adc	r19, r19
     604:	44 1f       	adc	r20, r20
     606:	55 1f       	adc	r21, r21
     608:	0a 94       	dec	r0
     60a:	d2 f7       	brpl	.-12     	; 0x600 <__udivdi3+0x418>
     60c:	6d a4       	ldd	r6, Y+45	; 0x2d
     60e:	7e a4       	ldd	r7, Y+46	; 0x2e
     610:	8f a4       	ldd	r8, Y+47	; 0x2f
     612:	98 a8       	ldd	r9, Y+48	; 0x30
     614:	0e 2e       	mov	r0, r30
     616:	04 c0       	rjmp	.+8      	; 0x620 <__udivdi3+0x438>
     618:	96 94       	lsr	r9
     61a:	87 94       	ror	r8
     61c:	77 94       	ror	r7
     61e:	67 94       	ror	r6
     620:	0a 94       	dec	r0
     622:	d2 f7       	brpl	.-12     	; 0x618 <__udivdi3+0x430>
     624:	84 01       	movw	r16, r8
     626:	73 01       	movw	r14, r6
     628:	e2 2a       	or	r14, r18
     62a:	f3 2a       	or	r15, r19
     62c:	04 2b       	or	r16, r20
     62e:	15 2b       	or	r17, r21
     630:	e9 a6       	std	Y+41, r14	; 0x29
     632:	fa a6       	std	Y+42, r15	; 0x2a
     634:	0b a7       	std	Y+43, r16	; 0x2b
     636:	1c a7       	std	Y+44, r17	; 0x2c
     638:	32 01       	movw	r6, r4
     63a:	88 24       	eor	r8, r8
     63c:	99 24       	eor	r9, r9
     63e:	92 01       	movw	r18, r4
     640:	81 01       	movw	r16, r2
     642:	20 70       	andi	r18, 0x00	; 0
     644:	30 70       	andi	r19, 0x00	; 0
     646:	21 96       	adiw	r28, 0x01	; 1
     648:	0c af       	std	Y+60, r16	; 0x3c
     64a:	1d af       	std	Y+61, r17	; 0x3d
     64c:	2e af       	std	Y+62, r18	; 0x3e
     64e:	3f af       	std	Y+63, r19	; 0x3f
     650:	21 97       	sbiw	r28, 0x01	; 1
     652:	c6 01       	movw	r24, r12
     654:	b5 01       	movw	r22, r10
     656:	a4 01       	movw	r20, r8
     658:	93 01       	movw	r18, r6
     65a:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     65e:	7b 01       	movw	r14, r22
     660:	8c 01       	movw	r16, r24
     662:	c6 01       	movw	r24, r12
     664:	b5 01       	movw	r22, r10
     666:	a4 01       	movw	r20, r8
     668:	93 01       	movw	r18, r6
     66a:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     66e:	c9 01       	movw	r24, r18
     670:	da 01       	movw	r26, r20
     672:	25 96       	adiw	r28, 0x05	; 5
     674:	8c af       	std	Y+60, r24	; 0x3c
     676:	9d af       	std	Y+61, r25	; 0x3d
     678:	ae af       	std	Y+62, r26	; 0x3e
     67a:	bf af       	std	Y+63, r27	; 0x3f
     67c:	25 97       	sbiw	r28, 0x05	; 5
     67e:	bc 01       	movw	r22, r24
     680:	cd 01       	movw	r24, r26
     682:	21 96       	adiw	r28, 0x01	; 1
     684:	2c ad       	ldd	r18, Y+60	; 0x3c
     686:	3d ad       	ldd	r19, Y+61	; 0x3d
     688:	4e ad       	ldd	r20, Y+62	; 0x3e
     68a:	5f ad       	ldd	r21, Y+63	; 0x3f
     68c:	21 97       	sbiw	r28, 0x01	; 1
     68e:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     692:	9b 01       	movw	r18, r22
     694:	ac 01       	movw	r20, r24
     696:	87 01       	movw	r16, r14
     698:	ff 24       	eor	r15, r15
     69a:	ee 24       	eor	r14, r14
     69c:	a9 a4       	ldd	r10, Y+41	; 0x29
     69e:	ba a4       	ldd	r11, Y+42	; 0x2a
     6a0:	cb a4       	ldd	r12, Y+43	; 0x2b
     6a2:	dc a4       	ldd	r13, Y+44	; 0x2c
     6a4:	c6 01       	movw	r24, r12
     6a6:	aa 27       	eor	r26, r26
     6a8:	bb 27       	eor	r27, r27
     6aa:	5c 01       	movw	r10, r24
     6ac:	6d 01       	movw	r12, r26
     6ae:	ae 28       	or	r10, r14
     6b0:	bf 28       	or	r11, r15
     6b2:	c0 2a       	or	r12, r16
     6b4:	d1 2a       	or	r13, r17
     6b6:	a2 16       	cp	r10, r18
     6b8:	b3 06       	cpc	r11, r19
     6ba:	c4 06       	cpc	r12, r20
     6bc:	d5 06       	cpc	r13, r21
     6be:	60 f5       	brcc	.+88     	; 0x718 <__udivdi3+0x530>
     6c0:	25 96       	adiw	r28, 0x05	; 5
     6c2:	6c ad       	ldd	r22, Y+60	; 0x3c
     6c4:	7d ad       	ldd	r23, Y+61	; 0x3d
     6c6:	8e ad       	ldd	r24, Y+62	; 0x3e
     6c8:	9f ad       	ldd	r25, Y+63	; 0x3f
     6ca:	25 97       	sbiw	r28, 0x05	; 5
     6cc:	61 50       	subi	r22, 0x01	; 1
     6ce:	70 40       	sbci	r23, 0x00	; 0
     6d0:	80 40       	sbci	r24, 0x00	; 0
     6d2:	90 40       	sbci	r25, 0x00	; 0
     6d4:	25 96       	adiw	r28, 0x05	; 5
     6d6:	6c af       	std	Y+60, r22	; 0x3c
     6d8:	7d af       	std	Y+61, r23	; 0x3d
     6da:	8e af       	std	Y+62, r24	; 0x3e
     6dc:	9f af       	std	Y+63, r25	; 0x3f
     6de:	25 97       	sbiw	r28, 0x05	; 5
     6e0:	a2 0c       	add	r10, r2
     6e2:	b3 1c       	adc	r11, r3
     6e4:	c4 1c       	adc	r12, r4
     6e6:	d5 1c       	adc	r13, r5
     6e8:	a2 14       	cp	r10, r2
     6ea:	b3 04       	cpc	r11, r3
     6ec:	c4 04       	cpc	r12, r4
     6ee:	d5 04       	cpc	r13, r5
     6f0:	98 f0       	brcs	.+38     	; 0x718 <__udivdi3+0x530>
     6f2:	a2 16       	cp	r10, r18
     6f4:	b3 06       	cpc	r11, r19
     6f6:	c4 06       	cpc	r12, r20
     6f8:	d5 06       	cpc	r13, r21
     6fa:	70 f4       	brcc	.+28     	; 0x718 <__udivdi3+0x530>
     6fc:	61 50       	subi	r22, 0x01	; 1
     6fe:	70 40       	sbci	r23, 0x00	; 0
     700:	80 40       	sbci	r24, 0x00	; 0
     702:	90 40       	sbci	r25, 0x00	; 0
     704:	25 96       	adiw	r28, 0x05	; 5
     706:	6c af       	std	Y+60, r22	; 0x3c
     708:	7d af       	std	Y+61, r23	; 0x3d
     70a:	8e af       	std	Y+62, r24	; 0x3e
     70c:	9f af       	std	Y+63, r25	; 0x3f
     70e:	25 97       	sbiw	r28, 0x05	; 5
     710:	a2 0c       	add	r10, r2
     712:	b3 1c       	adc	r11, r3
     714:	c4 1c       	adc	r12, r4
     716:	d5 1c       	adc	r13, r5
     718:	a2 1a       	sub	r10, r18
     71a:	b3 0a       	sbc	r11, r19
     71c:	c4 0a       	sbc	r12, r20
     71e:	d5 0a       	sbc	r13, r21
     720:	c6 01       	movw	r24, r12
     722:	b5 01       	movw	r22, r10
     724:	a4 01       	movw	r20, r8
     726:	93 01       	movw	r18, r6
     728:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     72c:	7b 01       	movw	r14, r22
     72e:	8c 01       	movw	r16, r24
     730:	c6 01       	movw	r24, r12
     732:	b5 01       	movw	r22, r10
     734:	a4 01       	movw	r20, r8
     736:	93 01       	movw	r18, r6
     738:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     73c:	c9 01       	movw	r24, r18
     73e:	da 01       	movw	r26, r20
     740:	3c 01       	movw	r6, r24
     742:	4d 01       	movw	r8, r26
     744:	c4 01       	movw	r24, r8
     746:	b3 01       	movw	r22, r6
     748:	21 96       	adiw	r28, 0x01	; 1
     74a:	2c ad       	ldd	r18, Y+60	; 0x3c
     74c:	3d ad       	ldd	r19, Y+61	; 0x3d
     74e:	4e ad       	ldd	r20, Y+62	; 0x3e
     750:	5f ad       	ldd	r21, Y+63	; 0x3f
     752:	21 97       	sbiw	r28, 0x01	; 1
     754:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     758:	9b 01       	movw	r18, r22
     75a:	ac 01       	movw	r20, r24
     75c:	87 01       	movw	r16, r14
     75e:	ff 24       	eor	r15, r15
     760:	ee 24       	eor	r14, r14
     762:	89 a5       	ldd	r24, Y+41	; 0x29
     764:	9a a5       	ldd	r25, Y+42	; 0x2a
     766:	ab a5       	ldd	r26, Y+43	; 0x2b
     768:	bc a5       	ldd	r27, Y+44	; 0x2c
     76a:	a0 70       	andi	r26, 0x00	; 0
     76c:	b0 70       	andi	r27, 0x00	; 0
     76e:	57 01       	movw	r10, r14
     770:	68 01       	movw	r12, r16
     772:	a8 2a       	or	r10, r24
     774:	b9 2a       	or	r11, r25
     776:	ca 2a       	or	r12, r26
     778:	db 2a       	or	r13, r27
     77a:	a2 16       	cp	r10, r18
     77c:	b3 06       	cpc	r11, r19
     77e:	c4 06       	cpc	r12, r20
     780:	d5 06       	cpc	r13, r21
     782:	e0 f4       	brcc	.+56     	; 0x7bc <__udivdi3+0x5d4>
     784:	08 94       	sec
     786:	61 08       	sbc	r6, r1
     788:	71 08       	sbc	r7, r1
     78a:	81 08       	sbc	r8, r1
     78c:	91 08       	sbc	r9, r1
     78e:	a2 0c       	add	r10, r2
     790:	b3 1c       	adc	r11, r3
     792:	c4 1c       	adc	r12, r4
     794:	d5 1c       	adc	r13, r5
     796:	a2 14       	cp	r10, r2
     798:	b3 04       	cpc	r11, r3
     79a:	c4 04       	cpc	r12, r4
     79c:	d5 04       	cpc	r13, r5
     79e:	70 f0       	brcs	.+28     	; 0x7bc <__udivdi3+0x5d4>
     7a0:	a2 16       	cp	r10, r18
     7a2:	b3 06       	cpc	r11, r19
     7a4:	c4 06       	cpc	r12, r20
     7a6:	d5 06       	cpc	r13, r21
     7a8:	48 f4       	brcc	.+18     	; 0x7bc <__udivdi3+0x5d4>
     7aa:	08 94       	sec
     7ac:	61 08       	sbc	r6, r1
     7ae:	71 08       	sbc	r7, r1
     7b0:	81 08       	sbc	r8, r1
     7b2:	91 08       	sbc	r9, r1
     7b4:	a2 0c       	add	r10, r2
     7b6:	b3 1c       	adc	r11, r3
     7b8:	c4 1c       	adc	r12, r4
     7ba:	d5 1c       	adc	r13, r5
     7bc:	8d a5       	ldd	r24, Y+45	; 0x2d
     7be:	9e a5       	ldd	r25, Y+46	; 0x2e
     7c0:	af a5       	ldd	r26, Y+47	; 0x2f
     7c2:	b8 a9       	ldd	r27, Y+48	; 0x30
     7c4:	6f 96       	adiw	r28, 0x1f	; 31
     7c6:	0f ac       	ldd	r0, Y+63	; 0x3f
     7c8:	6f 97       	sbiw	r28, 0x1f	; 31
     7ca:	04 c0       	rjmp	.+8      	; 0x7d4 <__udivdi3+0x5ec>
     7cc:	88 0f       	add	r24, r24
     7ce:	99 1f       	adc	r25, r25
     7d0:	aa 1f       	adc	r26, r26
     7d2:	bb 1f       	adc	r27, r27
     7d4:	0a 94       	dec	r0
     7d6:	d2 f7       	brpl	.-12     	; 0x7cc <__udivdi3+0x5e4>
     7d8:	8d a7       	std	Y+45, r24	; 0x2d
     7da:	9e a7       	std	Y+46, r25	; 0x2e
     7dc:	af a7       	std	Y+47, r26	; 0x2f
     7de:	b8 ab       	std	Y+48, r27	; 0x30
     7e0:	a2 1a       	sub	r10, r18
     7e2:	b3 0a       	sbc	r11, r19
     7e4:	c4 0a       	sbc	r12, r20
     7e6:	d5 0a       	sbc	r13, r21
     7e8:	25 96       	adiw	r28, 0x05	; 5
     7ea:	ec ac       	ldd	r14, Y+60	; 0x3c
     7ec:	fd ac       	ldd	r15, Y+61	; 0x3d
     7ee:	0e ad       	ldd	r16, Y+62	; 0x3e
     7f0:	1f ad       	ldd	r17, Y+63	; 0x3f
     7f2:	25 97       	sbiw	r28, 0x05	; 5
     7f4:	d7 01       	movw	r26, r14
     7f6:	99 27       	eor	r25, r25
     7f8:	88 27       	eor	r24, r24
     7fa:	68 2a       	or	r6, r24
     7fc:	79 2a       	or	r7, r25
     7fe:	8a 2a       	or	r8, r26
     800:	9b 2a       	or	r9, r27
     802:	82 01       	movw	r16, r4
     804:	22 27       	eor	r18, r18
     806:	33 27       	eor	r19, r19
     808:	29 96       	adiw	r28, 0x09	; 9
     80a:	0c af       	std	Y+60, r16	; 0x3c
     80c:	1d af       	std	Y+61, r17	; 0x3d
     80e:	2e af       	std	Y+62, r18	; 0x3e
     810:	3f af       	std	Y+63, r19	; 0x3f
     812:	29 97       	sbiw	r28, 0x09	; 9
     814:	a2 01       	movw	r20, r4
     816:	91 01       	movw	r18, r2
     818:	40 70       	andi	r20, 0x00	; 0
     81a:	50 70       	andi	r21, 0x00	; 0
     81c:	2d 96       	adiw	r28, 0x0d	; 13
     81e:	2c af       	std	Y+60, r18	; 0x3c
     820:	3d af       	std	Y+61, r19	; 0x3d
     822:	4e af       	std	Y+62, r20	; 0x3e
     824:	5f af       	std	Y+63, r21	; 0x3f
     826:	2d 97       	sbiw	r28, 0x0d	; 13
     828:	c6 01       	movw	r24, r12
     82a:	b5 01       	movw	r22, r10
     82c:	29 96       	adiw	r28, 0x09	; 9
     82e:	2c ad       	ldd	r18, Y+60	; 0x3c
     830:	3d ad       	ldd	r19, Y+61	; 0x3d
     832:	4e ad       	ldd	r20, Y+62	; 0x3e
     834:	5f ad       	ldd	r21, Y+63	; 0x3f
     836:	29 97       	sbiw	r28, 0x09	; 9
     838:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     83c:	7b 01       	movw	r14, r22
     83e:	8c 01       	movw	r16, r24
     840:	c6 01       	movw	r24, r12
     842:	b5 01       	movw	r22, r10
     844:	29 96       	adiw	r28, 0x09	; 9
     846:	2c ad       	ldd	r18, Y+60	; 0x3c
     848:	3d ad       	ldd	r19, Y+61	; 0x3d
     84a:	4e ad       	ldd	r20, Y+62	; 0x3e
     84c:	5f ad       	ldd	r21, Y+63	; 0x3f
     84e:	29 97       	sbiw	r28, 0x09	; 9
     850:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     854:	c9 01       	movw	r24, r18
     856:	da 01       	movw	r26, r20
     858:	61 96       	adiw	r28, 0x11	; 17
     85a:	8c af       	std	Y+60, r24	; 0x3c
     85c:	9d af       	std	Y+61, r25	; 0x3d
     85e:	ae af       	std	Y+62, r26	; 0x3e
     860:	bf af       	std	Y+63, r27	; 0x3f
     862:	61 97       	sbiw	r28, 0x11	; 17
     864:	bc 01       	movw	r22, r24
     866:	cd 01       	movw	r24, r26
     868:	2d 96       	adiw	r28, 0x0d	; 13
     86a:	2c ad       	ldd	r18, Y+60	; 0x3c
     86c:	3d ad       	ldd	r19, Y+61	; 0x3d
     86e:	4e ad       	ldd	r20, Y+62	; 0x3e
     870:	5f ad       	ldd	r21, Y+63	; 0x3f
     872:	2d 97       	sbiw	r28, 0x0d	; 13
     874:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     878:	9b 01       	movw	r18, r22
     87a:	ac 01       	movw	r20, r24
     87c:	87 01       	movw	r16, r14
     87e:	ff 24       	eor	r15, r15
     880:	ee 24       	eor	r14, r14
     882:	ad a4       	ldd	r10, Y+45	; 0x2d
     884:	be a4       	ldd	r11, Y+46	; 0x2e
     886:	cf a4       	ldd	r12, Y+47	; 0x2f
     888:	d8 a8       	ldd	r13, Y+48	; 0x30
     88a:	c6 01       	movw	r24, r12
     88c:	aa 27       	eor	r26, r26
     88e:	bb 27       	eor	r27, r27
     890:	57 01       	movw	r10, r14
     892:	68 01       	movw	r12, r16
     894:	a8 2a       	or	r10, r24
     896:	b9 2a       	or	r11, r25
     898:	ca 2a       	or	r12, r26
     89a:	db 2a       	or	r13, r27
     89c:	a2 16       	cp	r10, r18
     89e:	b3 06       	cpc	r11, r19
     8a0:	c4 06       	cpc	r12, r20
     8a2:	d5 06       	cpc	r13, r21
     8a4:	60 f5       	brcc	.+88     	; 0x8fe <__stack+0x9f>
     8a6:	61 96       	adiw	r28, 0x11	; 17
     8a8:	6c ad       	ldd	r22, Y+60	; 0x3c
     8aa:	7d ad       	ldd	r23, Y+61	; 0x3d
     8ac:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ae:	9f ad       	ldd	r25, Y+63	; 0x3f
     8b0:	61 97       	sbiw	r28, 0x11	; 17
     8b2:	61 50       	subi	r22, 0x01	; 1
     8b4:	70 40       	sbci	r23, 0x00	; 0
     8b6:	80 40       	sbci	r24, 0x00	; 0
     8b8:	90 40       	sbci	r25, 0x00	; 0
     8ba:	61 96       	adiw	r28, 0x11	; 17
     8bc:	6c af       	std	Y+60, r22	; 0x3c
     8be:	7d af       	std	Y+61, r23	; 0x3d
     8c0:	8e af       	std	Y+62, r24	; 0x3e
     8c2:	9f af       	std	Y+63, r25	; 0x3f
     8c4:	61 97       	sbiw	r28, 0x11	; 17
     8c6:	a2 0c       	add	r10, r2
     8c8:	b3 1c       	adc	r11, r3
     8ca:	c4 1c       	adc	r12, r4
     8cc:	d5 1c       	adc	r13, r5
     8ce:	a2 14       	cp	r10, r2
     8d0:	b3 04       	cpc	r11, r3
     8d2:	c4 04       	cpc	r12, r4
     8d4:	d5 04       	cpc	r13, r5
     8d6:	98 f0       	brcs	.+38     	; 0x8fe <__stack+0x9f>
     8d8:	a2 16       	cp	r10, r18
     8da:	b3 06       	cpc	r11, r19
     8dc:	c4 06       	cpc	r12, r20
     8de:	d5 06       	cpc	r13, r21
     8e0:	70 f4       	brcc	.+28     	; 0x8fe <__stack+0x9f>
     8e2:	61 50       	subi	r22, 0x01	; 1
     8e4:	70 40       	sbci	r23, 0x00	; 0
     8e6:	80 40       	sbci	r24, 0x00	; 0
     8e8:	90 40       	sbci	r25, 0x00	; 0
     8ea:	61 96       	adiw	r28, 0x11	; 17
     8ec:	6c af       	std	Y+60, r22	; 0x3c
     8ee:	7d af       	std	Y+61, r23	; 0x3d
     8f0:	8e af       	std	Y+62, r24	; 0x3e
     8f2:	9f af       	std	Y+63, r25	; 0x3f
     8f4:	61 97       	sbiw	r28, 0x11	; 17
     8f6:	a2 0c       	add	r10, r2
     8f8:	b3 1c       	adc	r11, r3
     8fa:	c4 1c       	adc	r12, r4
     8fc:	d5 1c       	adc	r13, r5
     8fe:	a2 1a       	sub	r10, r18
     900:	b3 0a       	sbc	r11, r19
     902:	c4 0a       	sbc	r12, r20
     904:	d5 0a       	sbc	r13, r21
     906:	c6 01       	movw	r24, r12
     908:	b5 01       	movw	r22, r10
     90a:	29 96       	adiw	r28, 0x09	; 9
     90c:	2c ad       	ldd	r18, Y+60	; 0x3c
     90e:	3d ad       	ldd	r19, Y+61	; 0x3d
     910:	4e ad       	ldd	r20, Y+62	; 0x3e
     912:	5f ad       	ldd	r21, Y+63	; 0x3f
     914:	29 97       	sbiw	r28, 0x09	; 9
     916:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     91a:	7b 01       	movw	r14, r22
     91c:	8c 01       	movw	r16, r24
     91e:	c6 01       	movw	r24, r12
     920:	b5 01       	movw	r22, r10
     922:	29 96       	adiw	r28, 0x09	; 9
     924:	2c ad       	ldd	r18, Y+60	; 0x3c
     926:	3d ad       	ldd	r19, Y+61	; 0x3d
     928:	4e ad       	ldd	r20, Y+62	; 0x3e
     92a:	5f ad       	ldd	r21, Y+63	; 0x3f
     92c:	29 97       	sbiw	r28, 0x09	; 9
     92e:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     932:	c9 01       	movw	r24, r18
     934:	da 01       	movw	r26, r20
     936:	5c 01       	movw	r10, r24
     938:	6d 01       	movw	r12, r26
     93a:	c6 01       	movw	r24, r12
     93c:	b5 01       	movw	r22, r10
     93e:	2d 96       	adiw	r28, 0x0d	; 13
     940:	2c ad       	ldd	r18, Y+60	; 0x3c
     942:	3d ad       	ldd	r19, Y+61	; 0x3d
     944:	4e ad       	ldd	r20, Y+62	; 0x3e
     946:	5f ad       	ldd	r21, Y+63	; 0x3f
     948:	2d 97       	sbiw	r28, 0x0d	; 13
     94a:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     94e:	9b 01       	movw	r18, r22
     950:	ac 01       	movw	r20, r24
     952:	87 01       	movw	r16, r14
     954:	ff 24       	eor	r15, r15
     956:	ee 24       	eor	r14, r14
     958:	8d a5       	ldd	r24, Y+45	; 0x2d
     95a:	9e a5       	ldd	r25, Y+46	; 0x2e
     95c:	af a5       	ldd	r26, Y+47	; 0x2f
     95e:	b8 a9       	ldd	r27, Y+48	; 0x30
     960:	a0 70       	andi	r26, 0x00	; 0
     962:	b0 70       	andi	r27, 0x00	; 0
     964:	e8 2a       	or	r14, r24
     966:	f9 2a       	or	r15, r25
     968:	0a 2b       	or	r16, r26
     96a:	1b 2b       	or	r17, r27
     96c:	e2 16       	cp	r14, r18
     96e:	f3 06       	cpc	r15, r19
     970:	04 07       	cpc	r16, r20
     972:	15 07       	cpc	r17, r21
     974:	c0 f4       	brcc	.+48     	; 0x9a6 <__stack+0x147>
     976:	08 94       	sec
     978:	a1 08       	sbc	r10, r1
     97a:	b1 08       	sbc	r11, r1
     97c:	c1 08       	sbc	r12, r1
     97e:	d1 08       	sbc	r13, r1
     980:	e2 0c       	add	r14, r2
     982:	f3 1c       	adc	r15, r3
     984:	04 1d       	adc	r16, r4
     986:	15 1d       	adc	r17, r5
     988:	e2 14       	cp	r14, r2
     98a:	f3 04       	cpc	r15, r3
     98c:	04 05       	cpc	r16, r4
     98e:	15 05       	cpc	r17, r5
     990:	50 f0       	brcs	.+20     	; 0x9a6 <__stack+0x147>
     992:	e2 16       	cp	r14, r18
     994:	f3 06       	cpc	r15, r19
     996:	04 07       	cpc	r16, r20
     998:	15 07       	cpc	r17, r21
     99a:	28 f4       	brcc	.+10     	; 0x9a6 <__stack+0x147>
     99c:	08 94       	sec
     99e:	a1 08       	sbc	r10, r1
     9a0:	b1 08       	sbc	r11, r1
     9a2:	c1 08       	sbc	r12, r1
     9a4:	d1 08       	sbc	r13, r1
     9a6:	61 96       	adiw	r28, 0x11	; 17
     9a8:	ec ac       	ldd	r14, Y+60	; 0x3c
     9aa:	fd ac       	ldd	r15, Y+61	; 0x3d
     9ac:	0e ad       	ldd	r16, Y+62	; 0x3e
     9ae:	1f ad       	ldd	r17, Y+63	; 0x3f
     9b0:	61 97       	sbiw	r28, 0x11	; 17
     9b2:	d7 01       	movw	r26, r14
     9b4:	99 27       	eor	r25, r25
     9b6:	88 27       	eor	r24, r24
     9b8:	96 01       	movw	r18, r12
     9ba:	85 01       	movw	r16, r10
     9bc:	08 2b       	or	r16, r24
     9be:	19 2b       	or	r17, r25
     9c0:	2a 2b       	or	r18, r26
     9c2:	3b 2b       	or	r19, r27
     9c4:	09 ab       	std	Y+49, r16	; 0x31
     9c6:	1a ab       	std	Y+50, r17	; 0x32
     9c8:	2b ab       	std	Y+51, r18	; 0x33
     9ca:	3c ab       	std	Y+52, r19	; 0x34
     9cc:	62 c2       	rjmp	.+1220   	; 0xe92 <__stack+0x633>
     9ce:	6e 14       	cp	r6, r14
     9d0:	7f 04       	cpc	r7, r15
     9d2:	80 06       	cpc	r8, r16
     9d4:	91 06       	cpc	r9, r17
     9d6:	08 f4       	brcc	.+2      	; 0x9da <__stack+0x17b>
     9d8:	51 c2       	rjmp	.+1186   	; 0xe7c <__stack+0x61d>
     9da:	20 e0       	ldi	r18, 0x00	; 0
     9dc:	e2 16       	cp	r14, r18
     9de:	20 e0       	ldi	r18, 0x00	; 0
     9e0:	f2 06       	cpc	r15, r18
     9e2:	21 e0       	ldi	r18, 0x01	; 1
     9e4:	02 07       	cpc	r16, r18
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	12 07       	cpc	r17, r18
     9ea:	88 f4       	brcc	.+34     	; 0xa0e <__stack+0x1af>
     9ec:	3f ef       	ldi	r19, 0xFF	; 255
     9ee:	e3 16       	cp	r14, r19
     9f0:	f1 04       	cpc	r15, r1
     9f2:	01 05       	cpc	r16, r1
     9f4:	11 05       	cpc	r17, r1
     9f6:	31 f0       	breq	.+12     	; 0xa04 <__stack+0x1a5>
     9f8:	28 f0       	brcs	.+10     	; 0xa04 <__stack+0x1a5>
     9fa:	48 e0       	ldi	r20, 0x08	; 8
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	17 c0       	rjmp	.+46     	; 0xa32 <__stack+0x1d3>
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	60 e0       	ldi	r22, 0x00	; 0
     a0a:	70 e0       	ldi	r23, 0x00	; 0
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__stack+0x1d3>
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	e4 16       	cp	r14, r20
     a12:	40 e0       	ldi	r20, 0x00	; 0
     a14:	f4 06       	cpc	r15, r20
     a16:	40 e0       	ldi	r20, 0x00	; 0
     a18:	04 07       	cpc	r16, r20
     a1a:	41 e0       	ldi	r20, 0x01	; 1
     a1c:	14 07       	cpc	r17, r20
     a1e:	28 f0       	brcs	.+10     	; 0xa2a <__stack+0x1cb>
     a20:	48 e1       	ldi	r20, 0x18	; 24
     a22:	50 e0       	ldi	r21, 0x00	; 0
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <__stack+0x1d3>
     a2a:	40 e1       	ldi	r20, 0x10	; 16
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	d8 01       	movw	r26, r16
     a34:	c7 01       	movw	r24, r14
     a36:	04 2e       	mov	r0, r20
     a38:	04 c0       	rjmp	.+8      	; 0xa42 <__stack+0x1e3>
     a3a:	b6 95       	lsr	r27
     a3c:	a7 95       	ror	r26
     a3e:	97 95       	ror	r25
     a40:	87 95       	ror	r24
     a42:	0a 94       	dec	r0
     a44:	d2 f7       	brpl	.-12     	; 0xa3a <__stack+0x1db>
     a46:	84 56       	subi	r24, 0x64	; 100
     a48:	9f 4f       	sbci	r25, 0xFF	; 255
     a4a:	dc 01       	movw	r26, r24
     a4c:	2c 91       	ld	r18, X
     a4e:	30 e2       	ldi	r19, 0x20	; 32
     a50:	a3 2e       	mov	r10, r19
     a52:	b1 2c       	mov	r11, r1
     a54:	c1 2c       	mov	r12, r1
     a56:	d1 2c       	mov	r13, r1
     a58:	d6 01       	movw	r26, r12
     a5a:	c5 01       	movw	r24, r10
     a5c:	84 1b       	sub	r24, r20
     a5e:	95 0b       	sbc	r25, r21
     a60:	a6 0b       	sbc	r26, r22
     a62:	b7 0b       	sbc	r27, r23
     a64:	82 1b       	sub	r24, r18
     a66:	91 09       	sbc	r25, r1
     a68:	a1 09       	sbc	r26, r1
     a6a:	b1 09       	sbc	r27, r1
     a6c:	00 97       	sbiw	r24, 0x00	; 0
     a6e:	a1 05       	cpc	r26, r1
     a70:	b1 05       	cpc	r27, r1
     a72:	89 f4       	brne	.+34     	; 0xa96 <__stack+0x237>
     a74:	e6 14       	cp	r14, r6
     a76:	f7 04       	cpc	r15, r7
     a78:	08 05       	cpc	r16, r8
     a7a:	19 05       	cpc	r17, r9
     a7c:	08 f4       	brcc	.+2      	; 0xa80 <__stack+0x221>
     a7e:	f2 c1       	rjmp	.+996    	; 0xe64 <__stack+0x605>
     a80:	6d a4       	ldd	r6, Y+45	; 0x2d
     a82:	7e a4       	ldd	r7, Y+46	; 0x2e
     a84:	8f a4       	ldd	r8, Y+47	; 0x2f
     a86:	98 a8       	ldd	r9, Y+48	; 0x30
     a88:	62 14       	cp	r6, r2
     a8a:	73 04       	cpc	r7, r3
     a8c:	84 04       	cpc	r8, r4
     a8e:	95 04       	cpc	r9, r5
     a90:	08 f0       	brcs	.+2      	; 0xa94 <__stack+0x235>
     a92:	e8 c1       	rjmp	.+976    	; 0xe64 <__stack+0x605>
     a94:	f3 c1       	rjmp	.+998    	; 0xe7c <__stack+0x61d>
     a96:	6e 96       	adiw	r28, 0x1e	; 30
     a98:	8f af       	std	Y+63, r24	; 0x3f
     a9a:	6e 97       	sbiw	r28, 0x1e	; 30
     a9c:	08 2e       	mov	r0, r24
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__stack+0x249>
     aa0:	ee 0c       	add	r14, r14
     aa2:	ff 1c       	adc	r15, r15
     aa4:	00 1f       	adc	r16, r16
     aa6:	11 1f       	adc	r17, r17
     aa8:	0a 94       	dec	r0
     aaa:	d2 f7       	brpl	.-12     	; 0xaa0 <__stack+0x241>
     aac:	6a 2d       	mov	r22, r10
     aae:	68 1b       	sub	r22, r24
     ab0:	d2 01       	movw	r26, r4
     ab2:	c1 01       	movw	r24, r2
     ab4:	06 2e       	mov	r0, r22
     ab6:	04 c0       	rjmp	.+8      	; 0xac0 <__stack+0x261>
     ab8:	b6 95       	lsr	r27
     aba:	a7 95       	ror	r26
     abc:	97 95       	ror	r25
     abe:	87 95       	ror	r24
     ac0:	0a 94       	dec	r0
     ac2:	d2 f7       	brpl	.-12     	; 0xab8 <__stack+0x259>
     ac4:	5c 01       	movw	r10, r24
     ac6:	6d 01       	movw	r12, r26
     ac8:	ae 28       	or	r10, r14
     aca:	bf 28       	or	r11, r15
     acc:	c0 2a       	or	r12, r16
     ace:	d1 2a       	or	r13, r17
     ad0:	ad a2       	std	Y+37, r10	; 0x25
     ad2:	be a2       	std	Y+38, r11	; 0x26
     ad4:	cf a2       	std	Y+39, r12	; 0x27
     ad6:	d8 a6       	std	Y+40, r13	; 0x28
     ad8:	72 01       	movw	r14, r4
     ada:	61 01       	movw	r12, r2
     adc:	6e 96       	adiw	r28, 0x1e	; 30
     ade:	0f ac       	ldd	r0, Y+63	; 0x3f
     ae0:	6e 97       	sbiw	r28, 0x1e	; 30
     ae2:	04 c0       	rjmp	.+8      	; 0xaec <__stack+0x28d>
     ae4:	cc 0c       	add	r12, r12
     ae6:	dd 1c       	adc	r13, r13
     ae8:	ee 1c       	adc	r14, r14
     aea:	ff 1c       	adc	r15, r15
     aec:	0a 94       	dec	r0
     aee:	d2 f7       	brpl	.-12     	; 0xae4 <__stack+0x285>
     af0:	c9 a2       	std	Y+33, r12	; 0x21
     af2:	da a2       	std	Y+34, r13	; 0x22
     af4:	eb a2       	std	Y+35, r14	; 0x23
     af6:	fc a2       	std	Y+36, r15	; 0x24
     af8:	64 01       	movw	r12, r8
     afa:	53 01       	movw	r10, r6
     afc:	06 2e       	mov	r0, r22
     afe:	04 c0       	rjmp	.+8      	; 0xb08 <__stack+0x2a9>
     b00:	d6 94       	lsr	r13
     b02:	c7 94       	ror	r12
     b04:	b7 94       	ror	r11
     b06:	a7 94       	ror	r10
     b08:	0a 94       	dec	r0
     b0a:	d2 f7       	brpl	.-12     	; 0xb00 <__stack+0x2a1>
     b0c:	d4 01       	movw	r26, r8
     b0e:	c3 01       	movw	r24, r6
     b10:	6e 96       	adiw	r28, 0x1e	; 30
     b12:	0f ac       	ldd	r0, Y+63	; 0x3f
     b14:	6e 97       	sbiw	r28, 0x1e	; 30
     b16:	04 c0       	rjmp	.+8      	; 0xb20 <__stack+0x2c1>
     b18:	88 0f       	add	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	aa 1f       	adc	r26, r26
     b1e:	bb 1f       	adc	r27, r27
     b20:	0a 94       	dec	r0
     b22:	d2 f7       	brpl	.-12     	; 0xb18 <__stack+0x2b9>
     b24:	ed a4       	ldd	r14, Y+45	; 0x2d
     b26:	fe a4       	ldd	r15, Y+46	; 0x2e
     b28:	0f a5       	ldd	r16, Y+47	; 0x2f
     b2a:	18 a9       	ldd	r17, Y+48	; 0x30
     b2c:	04 c0       	rjmp	.+8      	; 0xb36 <__stack+0x2d7>
     b2e:	16 95       	lsr	r17
     b30:	07 95       	ror	r16
     b32:	f7 94       	ror	r15
     b34:	e7 94       	ror	r14
     b36:	6a 95       	dec	r22
     b38:	d2 f7       	brpl	.-12     	; 0xb2e <__stack+0x2cf>
     b3a:	37 01       	movw	r6, r14
     b3c:	48 01       	movw	r8, r16
     b3e:	68 2a       	or	r6, r24
     b40:	79 2a       	or	r7, r25
     b42:	8a 2a       	or	r8, r26
     b44:	9b 2a       	or	r9, r27
     b46:	6d 8e       	std	Y+29, r6	; 0x1d
     b48:	7e 8e       	std	Y+30, r7	; 0x1e
     b4a:	8f 8e       	std	Y+31, r8	; 0x1f
     b4c:	98 a2       	std	Y+32, r9	; 0x20
     b4e:	ed a0       	ldd	r14, Y+37	; 0x25
     b50:	fe a0       	ldd	r15, Y+38	; 0x26
     b52:	0f a1       	ldd	r16, Y+39	; 0x27
     b54:	18 a5       	ldd	r17, Y+40	; 0x28
     b56:	38 01       	movw	r6, r16
     b58:	88 24       	eor	r8, r8
     b5a:	99 24       	eor	r9, r9
     b5c:	98 01       	movw	r18, r16
     b5e:	87 01       	movw	r16, r14
     b60:	20 70       	andi	r18, 0x00	; 0
     b62:	30 70       	andi	r19, 0x00	; 0
     b64:	65 96       	adiw	r28, 0x15	; 21
     b66:	0c af       	std	Y+60, r16	; 0x3c
     b68:	1d af       	std	Y+61, r17	; 0x3d
     b6a:	2e af       	std	Y+62, r18	; 0x3e
     b6c:	3f af       	std	Y+63, r19	; 0x3f
     b6e:	65 97       	sbiw	r28, 0x15	; 21
     b70:	c6 01       	movw	r24, r12
     b72:	b5 01       	movw	r22, r10
     b74:	a4 01       	movw	r20, r8
     b76:	93 01       	movw	r18, r6
     b78:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     b7c:	7b 01       	movw	r14, r22
     b7e:	8c 01       	movw	r16, r24
     b80:	c6 01       	movw	r24, r12
     b82:	b5 01       	movw	r22, r10
     b84:	a4 01       	movw	r20, r8
     b86:	93 01       	movw	r18, r6
     b88:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     b8c:	c9 01       	movw	r24, r18
     b8e:	da 01       	movw	r26, r20
     b90:	1c 01       	movw	r2, r24
     b92:	2d 01       	movw	r4, r26
     b94:	c2 01       	movw	r24, r4
     b96:	b1 01       	movw	r22, r2
     b98:	65 96       	adiw	r28, 0x15	; 21
     b9a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b9c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b9e:	4e ad       	ldd	r20, Y+62	; 0x3e
     ba0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ba2:	65 97       	sbiw	r28, 0x15	; 21
     ba4:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     ba8:	9b 01       	movw	r18, r22
     baa:	ac 01       	movw	r20, r24
     bac:	87 01       	movw	r16, r14
     bae:	ff 24       	eor	r15, r15
     bb0:	ee 24       	eor	r14, r14
     bb2:	ad 8c       	ldd	r10, Y+29	; 0x1d
     bb4:	be 8c       	ldd	r11, Y+30	; 0x1e
     bb6:	cf 8c       	ldd	r12, Y+31	; 0x1f
     bb8:	d8 a0       	ldd	r13, Y+32	; 0x20
     bba:	c6 01       	movw	r24, r12
     bbc:	aa 27       	eor	r26, r26
     bbe:	bb 27       	eor	r27, r27
     bc0:	57 01       	movw	r10, r14
     bc2:	68 01       	movw	r12, r16
     bc4:	a8 2a       	or	r10, r24
     bc6:	b9 2a       	or	r11, r25
     bc8:	ca 2a       	or	r12, r26
     bca:	db 2a       	or	r13, r27
     bcc:	a2 16       	cp	r10, r18
     bce:	b3 06       	cpc	r11, r19
     bd0:	c4 06       	cpc	r12, r20
     bd2:	d5 06       	cpc	r13, r21
     bd4:	00 f5       	brcc	.+64     	; 0xc16 <__stack+0x3b7>
     bd6:	08 94       	sec
     bd8:	21 08       	sbc	r2, r1
     bda:	31 08       	sbc	r3, r1
     bdc:	41 08       	sbc	r4, r1
     bde:	51 08       	sbc	r5, r1
     be0:	ed a0       	ldd	r14, Y+37	; 0x25
     be2:	fe a0       	ldd	r15, Y+38	; 0x26
     be4:	0f a1       	ldd	r16, Y+39	; 0x27
     be6:	18 a5       	ldd	r17, Y+40	; 0x28
     be8:	ae 0c       	add	r10, r14
     bea:	bf 1c       	adc	r11, r15
     bec:	c0 1e       	adc	r12, r16
     bee:	d1 1e       	adc	r13, r17
     bf0:	ae 14       	cp	r10, r14
     bf2:	bf 04       	cpc	r11, r15
     bf4:	c0 06       	cpc	r12, r16
     bf6:	d1 06       	cpc	r13, r17
     bf8:	70 f0       	brcs	.+28     	; 0xc16 <__stack+0x3b7>
     bfa:	a2 16       	cp	r10, r18
     bfc:	b3 06       	cpc	r11, r19
     bfe:	c4 06       	cpc	r12, r20
     c00:	d5 06       	cpc	r13, r21
     c02:	48 f4       	brcc	.+18     	; 0xc16 <__stack+0x3b7>
     c04:	08 94       	sec
     c06:	21 08       	sbc	r2, r1
     c08:	31 08       	sbc	r3, r1
     c0a:	41 08       	sbc	r4, r1
     c0c:	51 08       	sbc	r5, r1
     c0e:	ae 0c       	add	r10, r14
     c10:	bf 1c       	adc	r11, r15
     c12:	c0 1e       	adc	r12, r16
     c14:	d1 1e       	adc	r13, r17
     c16:	a2 1a       	sub	r10, r18
     c18:	b3 0a       	sbc	r11, r19
     c1a:	c4 0a       	sbc	r12, r20
     c1c:	d5 0a       	sbc	r13, r21
     c1e:	c6 01       	movw	r24, r12
     c20:	b5 01       	movw	r22, r10
     c22:	a4 01       	movw	r20, r8
     c24:	93 01       	movw	r18, r6
     c26:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     c2a:	7b 01       	movw	r14, r22
     c2c:	8c 01       	movw	r16, r24
     c2e:	c6 01       	movw	r24, r12
     c30:	b5 01       	movw	r22, r10
     c32:	a4 01       	movw	r20, r8
     c34:	93 01       	movw	r18, r6
     c36:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
     c3a:	c9 01       	movw	r24, r18
     c3c:	da 01       	movw	r26, r20
     c3e:	3c 01       	movw	r6, r24
     c40:	4d 01       	movw	r8, r26
     c42:	c4 01       	movw	r24, r8
     c44:	b3 01       	movw	r22, r6
     c46:	65 96       	adiw	r28, 0x15	; 21
     c48:	2c ad       	ldd	r18, Y+60	; 0x3c
     c4a:	3d ad       	ldd	r19, Y+61	; 0x3d
     c4c:	4e ad       	ldd	r20, Y+62	; 0x3e
     c4e:	5f ad       	ldd	r21, Y+63	; 0x3f
     c50:	65 97       	sbiw	r28, 0x15	; 21
     c52:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     c56:	9b 01       	movw	r18, r22
     c58:	ac 01       	movw	r20, r24
     c5a:	87 01       	movw	r16, r14
     c5c:	ff 24       	eor	r15, r15
     c5e:	ee 24       	eor	r14, r14
     c60:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c62:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c64:	af 8d       	ldd	r26, Y+31	; 0x1f
     c66:	b8 a1       	ldd	r27, Y+32	; 0x20
     c68:	a0 70       	andi	r26, 0x00	; 0
     c6a:	b0 70       	andi	r27, 0x00	; 0
     c6c:	57 01       	movw	r10, r14
     c6e:	68 01       	movw	r12, r16
     c70:	a8 2a       	or	r10, r24
     c72:	b9 2a       	or	r11, r25
     c74:	ca 2a       	or	r12, r26
     c76:	db 2a       	or	r13, r27
     c78:	a2 16       	cp	r10, r18
     c7a:	b3 06       	cpc	r11, r19
     c7c:	c4 06       	cpc	r12, r20
     c7e:	d5 06       	cpc	r13, r21
     c80:	00 f5       	brcc	.+64     	; 0xcc2 <__stack+0x463>
     c82:	08 94       	sec
     c84:	61 08       	sbc	r6, r1
     c86:	71 08       	sbc	r7, r1
     c88:	81 08       	sbc	r8, r1
     c8a:	91 08       	sbc	r9, r1
     c8c:	6d a1       	ldd	r22, Y+37	; 0x25
     c8e:	7e a1       	ldd	r23, Y+38	; 0x26
     c90:	8f a1       	ldd	r24, Y+39	; 0x27
     c92:	98 a5       	ldd	r25, Y+40	; 0x28
     c94:	a6 0e       	add	r10, r22
     c96:	b7 1e       	adc	r11, r23
     c98:	c8 1e       	adc	r12, r24
     c9a:	d9 1e       	adc	r13, r25
     c9c:	a6 16       	cp	r10, r22
     c9e:	b7 06       	cpc	r11, r23
     ca0:	c8 06       	cpc	r12, r24
     ca2:	d9 06       	cpc	r13, r25
     ca4:	70 f0       	brcs	.+28     	; 0xcc2 <__stack+0x463>
     ca6:	a2 16       	cp	r10, r18
     ca8:	b3 06       	cpc	r11, r19
     caa:	c4 06       	cpc	r12, r20
     cac:	d5 06       	cpc	r13, r21
     cae:	48 f4       	brcc	.+18     	; 0xcc2 <__stack+0x463>
     cb0:	08 94       	sec
     cb2:	61 08       	sbc	r6, r1
     cb4:	71 08       	sbc	r7, r1
     cb6:	81 08       	sbc	r8, r1
     cb8:	91 08       	sbc	r9, r1
     cba:	a6 0e       	add	r10, r22
     cbc:	b7 1e       	adc	r11, r23
     cbe:	c8 1e       	adc	r12, r24
     cc0:	d9 1e       	adc	r13, r25
     cc2:	d6 01       	movw	r26, r12
     cc4:	c5 01       	movw	r24, r10
     cc6:	82 1b       	sub	r24, r18
     cc8:	93 0b       	sbc	r25, r19
     cca:	a4 0b       	sbc	r26, r20
     ccc:	b5 0b       	sbc	r27, r21
     cce:	89 8f       	std	Y+25, r24	; 0x19
     cd0:	9a 8f       	std	Y+26, r25	; 0x1a
     cd2:	ab 8f       	std	Y+27, r26	; 0x1b
     cd4:	bc 8f       	std	Y+28, r27	; 0x1c
     cd6:	d1 01       	movw	r26, r2
     cd8:	99 27       	eor	r25, r25
     cda:	88 27       	eor	r24, r24
     cdc:	64 01       	movw	r12, r8
     cde:	53 01       	movw	r10, r6
     ce0:	a8 2a       	or	r10, r24
     ce2:	b9 2a       	or	r11, r25
     ce4:	ca 2a       	or	r12, r26
     ce6:	db 2a       	or	r13, r27
     ce8:	a9 aa       	std	Y+49, r10	; 0x31
     cea:	ba aa       	std	Y+50, r11	; 0x32
     cec:	cb aa       	std	Y+51, r12	; 0x33
     cee:	dc aa       	std	Y+52, r13	; 0x34
     cf0:	86 01       	movw	r16, r12
     cf2:	75 01       	movw	r14, r10
     cf4:	2f ef       	ldi	r18, 0xFF	; 255
     cf6:	3f ef       	ldi	r19, 0xFF	; 255
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	e2 22       	and	r14, r18
     cfe:	f3 22       	and	r15, r19
     d00:	04 23       	and	r16, r20
     d02:	15 23       	and	r17, r21
     d04:	a6 01       	movw	r20, r12
     d06:	66 27       	eor	r22, r22
     d08:	77 27       	eor	r23, r23
     d0a:	6d 96       	adiw	r28, 0x1d	; 29
     d0c:	4c af       	std	Y+60, r20	; 0x3c
     d0e:	5d af       	std	Y+61, r21	; 0x3d
     d10:	6e af       	std	Y+62, r22	; 0x3e
     d12:	7f af       	std	Y+63, r23	; 0x3f
     d14:	6d 97       	sbiw	r28, 0x1d	; 29
     d16:	a9 a0       	ldd	r10, Y+33	; 0x21
     d18:	ba a0       	ldd	r11, Y+34	; 0x22
     d1a:	cb a0       	ldd	r12, Y+35	; 0x23
     d1c:	dc a0       	ldd	r13, Y+36	; 0x24
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	7f ef       	ldi	r23, 0xFF	; 255
     d22:	80 e0       	ldi	r24, 0x00	; 0
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	a6 22       	and	r10, r22
     d28:	b7 22       	and	r11, r23
     d2a:	c8 22       	and	r12, r24
     d2c:	d9 22       	and	r13, r25
     d2e:	89 a1       	ldd	r24, Y+33	; 0x21
     d30:	9a a1       	ldd	r25, Y+34	; 0x22
     d32:	ab a1       	ldd	r26, Y+35	; 0x23
     d34:	bc a1       	ldd	r27, Y+36	; 0x24
     d36:	1d 01       	movw	r2, r26
     d38:	44 24       	eor	r4, r4
     d3a:	55 24       	eor	r5, r5
     d3c:	c8 01       	movw	r24, r16
     d3e:	b7 01       	movw	r22, r14
     d40:	a6 01       	movw	r20, r12
     d42:	95 01       	movw	r18, r10
     d44:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     d48:	69 96       	adiw	r28, 0x19	; 25
     d4a:	6c af       	std	Y+60, r22	; 0x3c
     d4c:	7d af       	std	Y+61, r23	; 0x3d
     d4e:	8e af       	std	Y+62, r24	; 0x3e
     d50:	9f af       	std	Y+63, r25	; 0x3f
     d52:	69 97       	sbiw	r28, 0x19	; 25
     d54:	c8 01       	movw	r24, r16
     d56:	b7 01       	movw	r22, r14
     d58:	a2 01       	movw	r20, r4
     d5a:	91 01       	movw	r18, r2
     d5c:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     d60:	3b 01       	movw	r6, r22
     d62:	4c 01       	movw	r8, r24
     d64:	6d 96       	adiw	r28, 0x1d	; 29
     d66:	6c ad       	ldd	r22, Y+60	; 0x3c
     d68:	7d ad       	ldd	r23, Y+61	; 0x3d
     d6a:	8e ad       	ldd	r24, Y+62	; 0x3e
     d6c:	9f ad       	ldd	r25, Y+63	; 0x3f
     d6e:	6d 97       	sbiw	r28, 0x1d	; 29
     d70:	a6 01       	movw	r20, r12
     d72:	95 01       	movw	r18, r10
     d74:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     d78:	7b 01       	movw	r14, r22
     d7a:	8c 01       	movw	r16, r24
     d7c:	6d 96       	adiw	r28, 0x1d	; 29
     d7e:	6c ad       	ldd	r22, Y+60	; 0x3c
     d80:	7d ad       	ldd	r23, Y+61	; 0x3d
     d82:	8e ad       	ldd	r24, Y+62	; 0x3e
     d84:	9f ad       	ldd	r25, Y+63	; 0x3f
     d86:	6d 97       	sbiw	r28, 0x1d	; 29
     d88:	a2 01       	movw	r20, r4
     d8a:	91 01       	movw	r18, r2
     d8c:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
     d90:	5b 01       	movw	r10, r22
     d92:	6c 01       	movw	r12, r24
     d94:	a8 01       	movw	r20, r16
     d96:	97 01       	movw	r18, r14
     d98:	26 0d       	add	r18, r6
     d9a:	37 1d       	adc	r19, r7
     d9c:	48 1d       	adc	r20, r8
     d9e:	59 1d       	adc	r21, r9
     da0:	69 96       	adiw	r28, 0x19	; 25
     da2:	6c ac       	ldd	r6, Y+60	; 0x3c
     da4:	7d ac       	ldd	r7, Y+61	; 0x3d
     da6:	8e ac       	ldd	r8, Y+62	; 0x3e
     da8:	9f ac       	ldd	r9, Y+63	; 0x3f
     daa:	69 97       	sbiw	r28, 0x19	; 25
     dac:	c4 01       	movw	r24, r8
     dae:	aa 27       	eor	r26, r26
     db0:	bb 27       	eor	r27, r27
     db2:	28 0f       	add	r18, r24
     db4:	39 1f       	adc	r19, r25
     db6:	4a 1f       	adc	r20, r26
     db8:	5b 1f       	adc	r21, r27
     dba:	2e 15       	cp	r18, r14
     dbc:	3f 05       	cpc	r19, r15
     dbe:	40 07       	cpc	r20, r16
     dc0:	51 07       	cpc	r21, r17
     dc2:	48 f4       	brcc	.+18     	; 0xdd6 <__stack+0x577>
     dc4:	e1 2c       	mov	r14, r1
     dc6:	f1 2c       	mov	r15, r1
     dc8:	61 e0       	ldi	r22, 0x01	; 1
     dca:	06 2f       	mov	r16, r22
     dcc:	11 2d       	mov	r17, r1
     dce:	ae 0c       	add	r10, r14
     dd0:	bf 1c       	adc	r11, r15
     dd2:	c0 1e       	adc	r12, r16
     dd4:	d1 1e       	adc	r13, r17
     dd6:	ca 01       	movw	r24, r20
     dd8:	aa 27       	eor	r26, r26
     dda:	bb 27       	eor	r27, r27
     ddc:	bc 01       	movw	r22, r24
     dde:	cd 01       	movw	r24, r26
     de0:	6a 0d       	add	r22, r10
     de2:	7b 1d       	adc	r23, r11
     de4:	8c 1d       	adc	r24, r12
     de6:	9d 1d       	adc	r25, r13
     de8:	69 8c       	ldd	r6, Y+25	; 0x19
     dea:	7a 8c       	ldd	r7, Y+26	; 0x1a
     dec:	8b 8c       	ldd	r8, Y+27	; 0x1b
     dee:	9c 8c       	ldd	r9, Y+28	; 0x1c
     df0:	66 16       	cp	r6, r22
     df2:	77 06       	cpc	r7, r23
     df4:	88 06       	cpc	r8, r24
     df6:	99 06       	cpc	r9, r25
     df8:	40 f1       	brcs	.+80     	; 0xe4a <__stack+0x5eb>
     dfa:	66 15       	cp	r22, r6
     dfc:	77 05       	cpc	r23, r7
     dfe:	88 05       	cpc	r24, r8
     e00:	99 05       	cpc	r25, r9
     e02:	09 f0       	breq	.+2      	; 0xe06 <__stack+0x5a7>
     e04:	43 c0       	rjmp	.+134    	; 0xe8c <__stack+0x62d>
     e06:	d9 01       	movw	r26, r18
     e08:	99 27       	eor	r25, r25
     e0a:	88 27       	eor	r24, r24
     e0c:	69 96       	adiw	r28, 0x19	; 25
     e0e:	2c ad       	ldd	r18, Y+60	; 0x3c
     e10:	3d ad       	ldd	r19, Y+61	; 0x3d
     e12:	4e ad       	ldd	r20, Y+62	; 0x3e
     e14:	5f ad       	ldd	r21, Y+63	; 0x3f
     e16:	69 97       	sbiw	r28, 0x19	; 25
     e18:	40 70       	andi	r20, 0x00	; 0
     e1a:	50 70       	andi	r21, 0x00	; 0
     e1c:	82 0f       	add	r24, r18
     e1e:	93 1f       	adc	r25, r19
     e20:	a4 1f       	adc	r26, r20
     e22:	b5 1f       	adc	r27, r21
     e24:	2d a5       	ldd	r18, Y+45	; 0x2d
     e26:	3e a5       	ldd	r19, Y+46	; 0x2e
     e28:	4f a5       	ldd	r20, Y+47	; 0x2f
     e2a:	58 a9       	ldd	r21, Y+48	; 0x30
     e2c:	6e 96       	adiw	r28, 0x1e	; 30
     e2e:	0f ac       	ldd	r0, Y+63	; 0x3f
     e30:	6e 97       	sbiw	r28, 0x1e	; 30
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <__stack+0x5dd>
     e34:	22 0f       	add	r18, r18
     e36:	33 1f       	adc	r19, r19
     e38:	44 1f       	adc	r20, r20
     e3a:	55 1f       	adc	r21, r21
     e3c:	0a 94       	dec	r0
     e3e:	d2 f7       	brpl	.-12     	; 0xe34 <__stack+0x5d5>
     e40:	28 17       	cp	r18, r24
     e42:	39 07       	cpc	r19, r25
     e44:	4a 07       	cpc	r20, r26
     e46:	5b 07       	cpc	r21, r27
     e48:	08 f5       	brcc	.+66     	; 0xe8c <__stack+0x62d>
     e4a:	09 a9       	ldd	r16, Y+49	; 0x31
     e4c:	1a a9       	ldd	r17, Y+50	; 0x32
     e4e:	2b a9       	ldd	r18, Y+51	; 0x33
     e50:	3c a9       	ldd	r19, Y+52	; 0x34
     e52:	01 50       	subi	r16, 0x01	; 1
     e54:	10 40       	sbci	r17, 0x00	; 0
     e56:	20 40       	sbci	r18, 0x00	; 0
     e58:	30 40       	sbci	r19, 0x00	; 0
     e5a:	09 ab       	std	Y+49, r16	; 0x31
     e5c:	1a ab       	std	Y+50, r17	; 0x32
     e5e:	2b ab       	std	Y+51, r18	; 0x33
     e60:	3c ab       	std	Y+52, r19	; 0x34
     e62:	14 c0       	rjmp	.+40     	; 0xe8c <__stack+0x62d>
     e64:	66 24       	eor	r6, r6
     e66:	77 24       	eor	r7, r7
     e68:	43 01       	movw	r8, r6
     e6a:	21 e0       	ldi	r18, 0x01	; 1
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	40 e0       	ldi	r20, 0x00	; 0
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	29 ab       	std	Y+49, r18	; 0x31
     e74:	3a ab       	std	Y+50, r19	; 0x32
     e76:	4b ab       	std	Y+51, r20	; 0x33
     e78:	5c ab       	std	Y+52, r21	; 0x34
     e7a:	0b c0       	rjmp	.+22     	; 0xe92 <__stack+0x633>
     e7c:	66 24       	eor	r6, r6
     e7e:	77 24       	eor	r7, r7
     e80:	43 01       	movw	r8, r6
     e82:	19 aa       	std	Y+49, r1	; 0x31
     e84:	1a aa       	std	Y+50, r1	; 0x32
     e86:	1b aa       	std	Y+51, r1	; 0x33
     e88:	1c aa       	std	Y+52, r1	; 0x34
     e8a:	03 c0       	rjmp	.+6      	; 0xe92 <__stack+0x633>
     e8c:	66 24       	eor	r6, r6
     e8e:	77 24       	eor	r7, r7
     e90:	43 01       	movw	r8, r6
     e92:	fe 01       	movw	r30, r28
     e94:	71 96       	adiw	r30, 0x11	; 17
     e96:	88 e0       	ldi	r24, 0x08	; 8
     e98:	df 01       	movw	r26, r30
     e9a:	1d 92       	st	X+, r1
     e9c:	8a 95       	dec	r24
     e9e:	e9 f7       	brne	.-6      	; 0xe9a <__stack+0x63b>
     ea0:	a9 a8       	ldd	r10, Y+49	; 0x31
     ea2:	ba a8       	ldd	r11, Y+50	; 0x32
     ea4:	cb a8       	ldd	r12, Y+51	; 0x33
     ea6:	dc a8       	ldd	r13, Y+52	; 0x34
     ea8:	a9 8a       	std	Y+17, r10	; 0x11
     eaa:	ba 8a       	std	Y+18, r11	; 0x12
     eac:	cb 8a       	std	Y+19, r12	; 0x13
     eae:	dc 8a       	std	Y+20, r13	; 0x14
     eb0:	6d 8a       	std	Y+21, r6	; 0x15
     eb2:	7e 8a       	std	Y+22, r7	; 0x16
     eb4:	8f 8a       	std	Y+23, r8	; 0x17
     eb6:	98 8e       	std	Y+24, r9	; 0x18
     eb8:	29 a9       	ldd	r18, Y+49	; 0x31
     eba:	3a 89       	ldd	r19, Y+18	; 0x12
     ebc:	4b 89       	ldd	r20, Y+19	; 0x13
     ebe:	5c 89       	ldd	r21, Y+20	; 0x14
     ec0:	66 2d       	mov	r22, r6
     ec2:	7e 89       	ldd	r23, Y+22	; 0x16
     ec4:	8f 89       	ldd	r24, Y+23	; 0x17
     ec6:	98 8d       	ldd	r25, Y+24	; 0x18
     ec8:	c2 5a       	subi	r28, 0xA2	; 162
     eca:	df 4f       	sbci	r29, 0xFF	; 255
     ecc:	e2 e1       	ldi	r30, 0x12	; 18
     ece:	0c 94 89 37 	jmp	0x6f12	; 0x6f12 <__epilogue_restores__>

00000ed2 <__umoddi3>:
     ed2:	ab e5       	ldi	r26, 0x5B	; 91
     ed4:	b0 e0       	ldi	r27, 0x00	; 0
     ed6:	ef e6       	ldi	r30, 0x6F	; 111
     ed8:	f7 e0       	ldi	r31, 0x07	; 7
     eda:	0c 94 6d 37 	jmp	0x6eda	; 0x6eda <__prologue_saves__>
     ede:	a8 e0       	ldi	r26, 0x08	; 8
     ee0:	4e 01       	movw	r8, r28
     ee2:	08 94       	sec
     ee4:	81 1c       	adc	r8, r1
     ee6:	91 1c       	adc	r9, r1
     ee8:	f4 01       	movw	r30, r8
     eea:	6a 2e       	mov	r6, r26
     eec:	11 92       	st	Z+, r1
     eee:	6a 94       	dec	r6
     ef0:	e9 f7       	brne	.-6      	; 0xeec <__umoddi3+0x1a>
     ef2:	29 83       	std	Y+1, r18	; 0x01
     ef4:	3a 83       	std	Y+2, r19	; 0x02
     ef6:	4b 83       	std	Y+3, r20	; 0x03
     ef8:	5c 83       	std	Y+4, r21	; 0x04
     efa:	6d 83       	std	Y+5, r22	; 0x05
     efc:	7e 83       	std	Y+6, r23	; 0x06
     efe:	8f 83       	std	Y+7, r24	; 0x07
     f00:	98 87       	std	Y+8, r25	; 0x08
     f02:	ce 01       	movw	r24, r28
     f04:	09 96       	adiw	r24, 0x09	; 9
     f06:	fc 01       	movw	r30, r24
     f08:	11 92       	st	Z+, r1
     f0a:	aa 95       	dec	r26
     f0c:	e9 f7       	brne	.-6      	; 0xf08 <__umoddi3+0x36>
     f0e:	a9 86       	std	Y+9, r10	; 0x09
     f10:	ba 86       	std	Y+10, r11	; 0x0a
     f12:	cb 86       	std	Y+11, r12	; 0x0b
     f14:	dc 86       	std	Y+12, r13	; 0x0c
     f16:	ed 86       	std	Y+13, r14	; 0x0d
     f18:	fe 86       	std	Y+14, r15	; 0x0e
     f1a:	0f 87       	std	Y+15, r16	; 0x0f
     f1c:	18 8b       	std	Y+16, r17	; 0x10
     f1e:	29 84       	ldd	r2, Y+9	; 0x09
     f20:	3a 84       	ldd	r3, Y+10	; 0x0a
     f22:	4b 84       	ldd	r4, Y+11	; 0x0b
     f24:	5c 84       	ldd	r5, Y+12	; 0x0c
     f26:	ad 84       	ldd	r10, Y+13	; 0x0d
     f28:	be 84       	ldd	r11, Y+14	; 0x0e
     f2a:	cf 84       	ldd	r12, Y+15	; 0x0f
     f2c:	d8 88       	ldd	r13, Y+16	; 0x10
     f2e:	29 81       	ldd	r18, Y+1	; 0x01
     f30:	3a 81       	ldd	r19, Y+2	; 0x02
     f32:	4b 81       	ldd	r20, Y+3	; 0x03
     f34:	5c 81       	ldd	r21, Y+4	; 0x04
     f36:	69 96       	adiw	r28, 0x19	; 25
     f38:	2f af       	std	Y+63, r18	; 0x3f
     f3a:	69 97       	sbiw	r28, 0x19	; 25
     f3c:	6a 96       	adiw	r28, 0x1a	; 26
     f3e:	3f af       	std	Y+63, r19	; 0x3f
     f40:	6a 97       	sbiw	r28, 0x1a	; 26
     f42:	6b 96       	adiw	r28, 0x1b	; 27
     f44:	4f af       	std	Y+63, r20	; 0x3f
     f46:	6b 97       	sbiw	r28, 0x1b	; 27
     f48:	6c 96       	adiw	r28, 0x1c	; 28
     f4a:	5f af       	std	Y+63, r21	; 0x3f
     f4c:	6c 97       	sbiw	r28, 0x1c	; 28
     f4e:	6c 96       	adiw	r28, 0x1c	; 28
     f50:	6c ac       	ldd	r6, Y+60	; 0x3c
     f52:	7d ac       	ldd	r7, Y+61	; 0x3d
     f54:	8e ac       	ldd	r8, Y+62	; 0x3e
     f56:	9f ac       	ldd	r9, Y+63	; 0x3f
     f58:	6c 97       	sbiw	r28, 0x1c	; 28
     f5a:	69 aa       	std	Y+49, r6	; 0x31
     f5c:	7a aa       	std	Y+50, r7	; 0x32
     f5e:	8b aa       	std	Y+51, r8	; 0x33
     f60:	9c aa       	std	Y+52, r9	; 0x34
     f62:	6d 81       	ldd	r22, Y+5	; 0x05
     f64:	7e 81       	ldd	r23, Y+6	; 0x06
     f66:	8f 81       	ldd	r24, Y+7	; 0x07
     f68:	98 85       	ldd	r25, Y+8	; 0x08
     f6a:	3b 01       	movw	r6, r22
     f6c:	4c 01       	movw	r8, r24
     f6e:	6d aa       	std	Y+53, r6	; 0x35
     f70:	7e aa       	std	Y+54, r7	; 0x36
     f72:	8f aa       	std	Y+55, r8	; 0x37
     f74:	98 ae       	std	Y+56, r9	; 0x38
     f76:	a1 14       	cp	r10, r1
     f78:	b1 04       	cpc	r11, r1
     f7a:	c1 04       	cpc	r12, r1
     f7c:	d1 04       	cpc	r13, r1
     f7e:	09 f0       	breq	.+2      	; 0xf82 <__umoddi3+0xb0>
     f80:	04 c3       	rjmp	.+1544   	; 0x158a <__umoddi3+0x6b8>
     f82:	62 14       	cp	r6, r2
     f84:	73 04       	cpc	r7, r3
     f86:	84 04       	cpc	r8, r4
     f88:	95 04       	cpc	r9, r5
     f8a:	08 f0       	brcs	.+2      	; 0xf8e <__umoddi3+0xbc>
     f8c:	00 c1       	rjmp	.+512    	; 0x118e <__umoddi3+0x2bc>
     f8e:	00 e0       	ldi	r16, 0x00	; 0
     f90:	20 16       	cp	r2, r16
     f92:	00 e0       	ldi	r16, 0x00	; 0
     f94:	30 06       	cpc	r3, r16
     f96:	01 e0       	ldi	r16, 0x01	; 1
     f98:	40 06       	cpc	r4, r16
     f9a:	00 e0       	ldi	r16, 0x00	; 0
     f9c:	50 06       	cpc	r5, r16
     f9e:	88 f4       	brcc	.+34     	; 0xfc2 <__umoddi3+0xf0>
     fa0:	1f ef       	ldi	r17, 0xFF	; 255
     fa2:	21 16       	cp	r2, r17
     fa4:	31 04       	cpc	r3, r1
     fa6:	41 04       	cpc	r4, r1
     fa8:	51 04       	cpc	r5, r1
     faa:	39 f0       	breq	.+14     	; 0xfba <__umoddi3+0xe8>
     fac:	30 f0       	brcs	.+12     	; 0xfba <__umoddi3+0xe8>
     fae:	88 e0       	ldi	r24, 0x08	; 8
     fb0:	e8 2e       	mov	r14, r24
     fb2:	f1 2c       	mov	r15, r1
     fb4:	01 2d       	mov	r16, r1
     fb6:	11 2d       	mov	r17, r1
     fb8:	18 c0       	rjmp	.+48     	; 0xfea <__umoddi3+0x118>
     fba:	ee 24       	eor	r14, r14
     fbc:	ff 24       	eor	r15, r15
     fbe:	87 01       	movw	r16, r14
     fc0:	14 c0       	rjmp	.+40     	; 0xfea <__umoddi3+0x118>
     fc2:	40 e0       	ldi	r20, 0x00	; 0
     fc4:	24 16       	cp	r2, r20
     fc6:	40 e0       	ldi	r20, 0x00	; 0
     fc8:	34 06       	cpc	r3, r20
     fca:	40 e0       	ldi	r20, 0x00	; 0
     fcc:	44 06       	cpc	r4, r20
     fce:	41 e0       	ldi	r20, 0x01	; 1
     fd0:	54 06       	cpc	r5, r20
     fd2:	30 f0       	brcs	.+12     	; 0xfe0 <__umoddi3+0x10e>
     fd4:	b8 e1       	ldi	r27, 0x18	; 24
     fd6:	eb 2e       	mov	r14, r27
     fd8:	f1 2c       	mov	r15, r1
     fda:	01 2d       	mov	r16, r1
     fdc:	11 2d       	mov	r17, r1
     fde:	05 c0       	rjmp	.+10     	; 0xfea <__umoddi3+0x118>
     fe0:	a0 e1       	ldi	r26, 0x10	; 16
     fe2:	ea 2e       	mov	r14, r26
     fe4:	f1 2c       	mov	r15, r1
     fe6:	01 2d       	mov	r16, r1
     fe8:	11 2d       	mov	r17, r1
     fea:	d2 01       	movw	r26, r4
     fec:	c1 01       	movw	r24, r2
     fee:	0e 2c       	mov	r0, r14
     ff0:	04 c0       	rjmp	.+8      	; 0xffa <__umoddi3+0x128>
     ff2:	b6 95       	lsr	r27
     ff4:	a7 95       	ror	r26
     ff6:	97 95       	ror	r25
     ff8:	87 95       	ror	r24
     ffa:	0a 94       	dec	r0
     ffc:	d2 f7       	brpl	.-12     	; 0xff2 <__umoddi3+0x120>
     ffe:	84 56       	subi	r24, 0x64	; 100
    1000:	9f 4f       	sbci	r25, 0xFF	; 255
    1002:	dc 01       	movw	r26, r24
    1004:	2c 91       	ld	r18, X
    1006:	80 e2       	ldi	r24, 0x20	; 32
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	a0 e0       	ldi	r26, 0x00	; 0
    100c:	b0 e0       	ldi	r27, 0x00	; 0
    100e:	8e 19       	sub	r24, r14
    1010:	9f 09       	sbc	r25, r15
    1012:	a0 0b       	sbc	r26, r16
    1014:	b1 0b       	sbc	r27, r17
    1016:	5c 01       	movw	r10, r24
    1018:	6d 01       	movw	r12, r26
    101a:	a2 1a       	sub	r10, r18
    101c:	b1 08       	sbc	r11, r1
    101e:	c1 08       	sbc	r12, r1
    1020:	d1 08       	sbc	r13, r1
    1022:	a9 ae       	std	Y+57, r10	; 0x39
    1024:	ba ae       	std	Y+58, r11	; 0x3a
    1026:	cb ae       	std	Y+59, r12	; 0x3b
    1028:	dc ae       	std	Y+60, r13	; 0x3c
    102a:	a1 14       	cp	r10, r1
    102c:	b1 04       	cpc	r11, r1
    102e:	c1 04       	cpc	r12, r1
    1030:	d1 04       	cpc	r13, r1
    1032:	09 f4       	brne	.+2      	; 0x1036 <__umoddi3+0x164>
    1034:	3f c0       	rjmp	.+126    	; 0x10b4 <__umoddi3+0x1e2>
    1036:	69 ad       	ldd	r22, Y+57	; 0x39
    1038:	06 2e       	mov	r0, r22
    103a:	04 c0       	rjmp	.+8      	; 0x1044 <__umoddi3+0x172>
    103c:	22 0c       	add	r2, r2
    103e:	33 1c       	adc	r3, r3
    1040:	44 1c       	adc	r4, r4
    1042:	55 1c       	adc	r5, r5
    1044:	0a 94       	dec	r0
    1046:	d2 f7       	brpl	.-12     	; 0x103c <__umoddi3+0x16a>
    1048:	a4 01       	movw	r20, r8
    104a:	93 01       	movw	r18, r6
    104c:	06 2e       	mov	r0, r22
    104e:	04 c0       	rjmp	.+8      	; 0x1058 <__umoddi3+0x186>
    1050:	22 0f       	add	r18, r18
    1052:	33 1f       	adc	r19, r19
    1054:	44 1f       	adc	r20, r20
    1056:	55 1f       	adc	r21, r21
    1058:	0a 94       	dec	r0
    105a:	d2 f7       	brpl	.-12     	; 0x1050 <__umoddi3+0x17e>
    105c:	80 e2       	ldi	r24, 0x20	; 32
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	8a 19       	sub	r24, r10
    1062:	9b 09       	sbc	r25, r11
    1064:	6c 96       	adiw	r28, 0x1c	; 28
    1066:	cc ac       	ldd	r12, Y+60	; 0x3c
    1068:	dd ac       	ldd	r13, Y+61	; 0x3d
    106a:	ee ac       	ldd	r14, Y+62	; 0x3e
    106c:	ff ac       	ldd	r15, Y+63	; 0x3f
    106e:	6c 97       	sbiw	r28, 0x1c	; 28
    1070:	04 c0       	rjmp	.+8      	; 0x107a <__umoddi3+0x1a8>
    1072:	f6 94       	lsr	r15
    1074:	e7 94       	ror	r14
    1076:	d7 94       	ror	r13
    1078:	c7 94       	ror	r12
    107a:	8a 95       	dec	r24
    107c:	d2 f7       	brpl	.-12     	; 0x1072 <__umoddi3+0x1a0>
    107e:	87 01       	movw	r16, r14
    1080:	76 01       	movw	r14, r12
    1082:	e2 2a       	or	r14, r18
    1084:	f3 2a       	or	r15, r19
    1086:	04 2b       	or	r16, r20
    1088:	15 2b       	or	r17, r21
    108a:	ed aa       	std	Y+53, r14	; 0x35
    108c:	fe aa       	std	Y+54, r15	; 0x36
    108e:	0f ab       	std	Y+55, r16	; 0x37
    1090:	18 af       	std	Y+56, r17	; 0x38
    1092:	6c 96       	adiw	r28, 0x1c	; 28
    1094:	8c ad       	ldd	r24, Y+60	; 0x3c
    1096:	9d ad       	ldd	r25, Y+61	; 0x3d
    1098:	ae ad       	ldd	r26, Y+62	; 0x3e
    109a:	bf ad       	ldd	r27, Y+63	; 0x3f
    109c:	6c 97       	sbiw	r28, 0x1c	; 28
    109e:	04 c0       	rjmp	.+8      	; 0x10a8 <__umoddi3+0x1d6>
    10a0:	88 0f       	add	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	aa 1f       	adc	r26, r26
    10a6:	bb 1f       	adc	r27, r27
    10a8:	6a 95       	dec	r22
    10aa:	d2 f7       	brpl	.-12     	; 0x10a0 <__umoddi3+0x1ce>
    10ac:	89 ab       	std	Y+49, r24	; 0x31
    10ae:	9a ab       	std	Y+50, r25	; 0x32
    10b0:	ab ab       	std	Y+51, r26	; 0x33
    10b2:	bc ab       	std	Y+52, r27	; 0x34
    10b4:	32 01       	movw	r6, r4
    10b6:	88 24       	eor	r8, r8
    10b8:	99 24       	eor	r9, r9
    10ba:	b2 01       	movw	r22, r4
    10bc:	a1 01       	movw	r20, r2
    10be:	60 70       	andi	r22, 0x00	; 0
    10c0:	70 70       	andi	r23, 0x00	; 0
    10c2:	21 96       	adiw	r28, 0x01	; 1
    10c4:	4c af       	std	Y+60, r20	; 0x3c
    10c6:	5d af       	std	Y+61, r21	; 0x3d
    10c8:	6e af       	std	Y+62, r22	; 0x3e
    10ca:	7f af       	std	Y+63, r23	; 0x3f
    10cc:	21 97       	sbiw	r28, 0x01	; 1
    10ce:	6d a9       	ldd	r22, Y+53	; 0x35
    10d0:	7e a9       	ldd	r23, Y+54	; 0x36
    10d2:	8f a9       	ldd	r24, Y+55	; 0x37
    10d4:	98 ad       	ldd	r25, Y+56	; 0x38
    10d6:	a4 01       	movw	r20, r8
    10d8:	93 01       	movw	r18, r6
    10da:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    10de:	7b 01       	movw	r14, r22
    10e0:	8c 01       	movw	r16, r24
    10e2:	6d a9       	ldd	r22, Y+53	; 0x35
    10e4:	7e a9       	ldd	r23, Y+54	; 0x36
    10e6:	8f a9       	ldd	r24, Y+55	; 0x37
    10e8:	98 ad       	ldd	r25, Y+56	; 0x38
    10ea:	a4 01       	movw	r20, r8
    10ec:	93 01       	movw	r18, r6
    10ee:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    10f2:	ca 01       	movw	r24, r20
    10f4:	b9 01       	movw	r22, r18
    10f6:	21 96       	adiw	r28, 0x01	; 1
    10f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    10fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    10fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    10fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1100:	21 97       	sbiw	r28, 0x01	; 1
    1102:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    1106:	9b 01       	movw	r18, r22
    1108:	ac 01       	movw	r20, r24
    110a:	87 01       	movw	r16, r14
    110c:	ff 24       	eor	r15, r15
    110e:	ee 24       	eor	r14, r14
    1110:	a9 a8       	ldd	r10, Y+49	; 0x31
    1112:	ba a8       	ldd	r11, Y+50	; 0x32
    1114:	cb a8       	ldd	r12, Y+51	; 0x33
    1116:	dc a8       	ldd	r13, Y+52	; 0x34
    1118:	c6 01       	movw	r24, r12
    111a:	aa 27       	eor	r26, r26
    111c:	bb 27       	eor	r27, r27
    111e:	57 01       	movw	r10, r14
    1120:	68 01       	movw	r12, r16
    1122:	a8 2a       	or	r10, r24
    1124:	b9 2a       	or	r11, r25
    1126:	ca 2a       	or	r12, r26
    1128:	db 2a       	or	r13, r27
    112a:	a2 16       	cp	r10, r18
    112c:	b3 06       	cpc	r11, r19
    112e:	c4 06       	cpc	r12, r20
    1130:	d5 06       	cpc	r13, r21
    1132:	90 f4       	brcc	.+36     	; 0x1158 <__umoddi3+0x286>
    1134:	a2 0c       	add	r10, r2
    1136:	b3 1c       	adc	r11, r3
    1138:	c4 1c       	adc	r12, r4
    113a:	d5 1c       	adc	r13, r5
    113c:	a2 14       	cp	r10, r2
    113e:	b3 04       	cpc	r11, r3
    1140:	c4 04       	cpc	r12, r4
    1142:	d5 04       	cpc	r13, r5
    1144:	48 f0       	brcs	.+18     	; 0x1158 <__umoddi3+0x286>
    1146:	a2 16       	cp	r10, r18
    1148:	b3 06       	cpc	r11, r19
    114a:	c4 06       	cpc	r12, r20
    114c:	d5 06       	cpc	r13, r21
    114e:	20 f4       	brcc	.+8      	; 0x1158 <__umoddi3+0x286>
    1150:	a2 0c       	add	r10, r2
    1152:	b3 1c       	adc	r11, r3
    1154:	c4 1c       	adc	r12, r4
    1156:	d5 1c       	adc	r13, r5
    1158:	a2 1a       	sub	r10, r18
    115a:	b3 0a       	sbc	r11, r19
    115c:	c4 0a       	sbc	r12, r20
    115e:	d5 0a       	sbc	r13, r21
    1160:	c6 01       	movw	r24, r12
    1162:	b5 01       	movw	r22, r10
    1164:	a4 01       	movw	r20, r8
    1166:	93 01       	movw	r18, r6
    1168:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    116c:	7b 01       	movw	r14, r22
    116e:	8c 01       	movw	r16, r24
    1170:	c6 01       	movw	r24, r12
    1172:	b5 01       	movw	r22, r10
    1174:	a4 01       	movw	r20, r8
    1176:	93 01       	movw	r18, r6
    1178:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    117c:	ca 01       	movw	r24, r20
    117e:	b9 01       	movw	r22, r18
    1180:	21 96       	adiw	r28, 0x01	; 1
    1182:	2c ad       	ldd	r18, Y+60	; 0x3c
    1184:	3d ad       	ldd	r19, Y+61	; 0x3d
    1186:	4e ad       	ldd	r20, Y+62	; 0x3e
    1188:	5f ad       	ldd	r21, Y+63	; 0x3f
    118a:	21 97       	sbiw	r28, 0x01	; 1
    118c:	ba c1       	rjmp	.+884    	; 0x1502 <__umoddi3+0x630>
    118e:	21 14       	cp	r2, r1
    1190:	31 04       	cpc	r3, r1
    1192:	41 04       	cpc	r4, r1
    1194:	51 04       	cpc	r5, r1
    1196:	71 f4       	brne	.+28     	; 0x11b4 <__umoddi3+0x2e2>
    1198:	61 e0       	ldi	r22, 0x01	; 1
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	20 e0       	ldi	r18, 0x00	; 0
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	50 e0       	ldi	r21, 0x00	; 0
    11a8:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    11ac:	c9 01       	movw	r24, r18
    11ae:	da 01       	movw	r26, r20
    11b0:	1c 01       	movw	r2, r24
    11b2:	2d 01       	movw	r4, r26
    11b4:	00 e0       	ldi	r16, 0x00	; 0
    11b6:	20 16       	cp	r2, r16
    11b8:	00 e0       	ldi	r16, 0x00	; 0
    11ba:	30 06       	cpc	r3, r16
    11bc:	01 e0       	ldi	r16, 0x01	; 1
    11be:	40 06       	cpc	r4, r16
    11c0:	00 e0       	ldi	r16, 0x00	; 0
    11c2:	50 06       	cpc	r5, r16
    11c4:	88 f4       	brcc	.+34     	; 0x11e8 <__umoddi3+0x316>
    11c6:	1f ef       	ldi	r17, 0xFF	; 255
    11c8:	21 16       	cp	r2, r17
    11ca:	31 04       	cpc	r3, r1
    11cc:	41 04       	cpc	r4, r1
    11ce:	51 04       	cpc	r5, r1
    11d0:	39 f0       	breq	.+14     	; 0x11e0 <__umoddi3+0x30e>
    11d2:	30 f0       	brcs	.+12     	; 0x11e0 <__umoddi3+0x30e>
    11d4:	68 e0       	ldi	r22, 0x08	; 8
    11d6:	e6 2e       	mov	r14, r22
    11d8:	f1 2c       	mov	r15, r1
    11da:	01 2d       	mov	r16, r1
    11dc:	11 2d       	mov	r17, r1
    11de:	18 c0       	rjmp	.+48     	; 0x1210 <__umoddi3+0x33e>
    11e0:	ee 24       	eor	r14, r14
    11e2:	ff 24       	eor	r15, r15
    11e4:	87 01       	movw	r16, r14
    11e6:	14 c0       	rjmp	.+40     	; 0x1210 <__umoddi3+0x33e>
    11e8:	40 e0       	ldi	r20, 0x00	; 0
    11ea:	24 16       	cp	r2, r20
    11ec:	40 e0       	ldi	r20, 0x00	; 0
    11ee:	34 06       	cpc	r3, r20
    11f0:	40 e0       	ldi	r20, 0x00	; 0
    11f2:	44 06       	cpc	r4, r20
    11f4:	41 e0       	ldi	r20, 0x01	; 1
    11f6:	54 06       	cpc	r5, r20
    11f8:	30 f0       	brcs	.+12     	; 0x1206 <__umoddi3+0x334>
    11fa:	58 e1       	ldi	r21, 0x18	; 24
    11fc:	e5 2e       	mov	r14, r21
    11fe:	f1 2c       	mov	r15, r1
    1200:	01 2d       	mov	r16, r1
    1202:	11 2d       	mov	r17, r1
    1204:	05 c0       	rjmp	.+10     	; 0x1210 <__umoddi3+0x33e>
    1206:	40 e1       	ldi	r20, 0x10	; 16
    1208:	e4 2e       	mov	r14, r20
    120a:	f1 2c       	mov	r15, r1
    120c:	01 2d       	mov	r16, r1
    120e:	11 2d       	mov	r17, r1
    1210:	d2 01       	movw	r26, r4
    1212:	c1 01       	movw	r24, r2
    1214:	0e 2c       	mov	r0, r14
    1216:	04 c0       	rjmp	.+8      	; 0x1220 <__umoddi3+0x34e>
    1218:	b6 95       	lsr	r27
    121a:	a7 95       	ror	r26
    121c:	97 95       	ror	r25
    121e:	87 95       	ror	r24
    1220:	0a 94       	dec	r0
    1222:	d2 f7       	brpl	.-12     	; 0x1218 <__umoddi3+0x346>
    1224:	84 56       	subi	r24, 0x64	; 100
    1226:	9f 4f       	sbci	r25, 0xFF	; 255
    1228:	dc 01       	movw	r26, r24
    122a:	2c 91       	ld	r18, X
    122c:	30 e2       	ldi	r19, 0x20	; 32
    122e:	a3 2e       	mov	r10, r19
    1230:	b1 2c       	mov	r11, r1
    1232:	c1 2c       	mov	r12, r1
    1234:	d1 2c       	mov	r13, r1
    1236:	d6 01       	movw	r26, r12
    1238:	c5 01       	movw	r24, r10
    123a:	8e 19       	sub	r24, r14
    123c:	9f 09       	sbc	r25, r15
    123e:	a0 0b       	sbc	r26, r16
    1240:	b1 0b       	sbc	r27, r17
    1242:	7c 01       	movw	r14, r24
    1244:	8d 01       	movw	r16, r26
    1246:	e2 1a       	sub	r14, r18
    1248:	f1 08       	sbc	r15, r1
    124a:	01 09       	sbc	r16, r1
    124c:	11 09       	sbc	r17, r1
    124e:	e9 ae       	std	Y+57, r14	; 0x39
    1250:	fa ae       	std	Y+58, r15	; 0x3a
    1252:	0b af       	std	Y+59, r16	; 0x3b
    1254:	1c af       	std	Y+60, r17	; 0x3c
    1256:	e1 14       	cp	r14, r1
    1258:	f1 04       	cpc	r15, r1
    125a:	01 05       	cpc	r16, r1
    125c:	11 05       	cpc	r17, r1
    125e:	39 f4       	brne	.+14     	; 0x126e <__umoddi3+0x39c>
    1260:	64 01       	movw	r12, r8
    1262:	53 01       	movw	r10, r6
    1264:	a2 18       	sub	r10, r2
    1266:	b3 08       	sbc	r11, r3
    1268:	c4 08       	sbc	r12, r4
    126a:	d5 08       	sbc	r13, r5
    126c:	e2 c0       	rjmp	.+452    	; 0x1432 <__umoddi3+0x560>
    126e:	f9 ac       	ldd	r15, Y+57	; 0x39
    1270:	68 96       	adiw	r28, 0x18	; 24
    1272:	ff ae       	std	Y+63, r15	; 0x3f
    1274:	68 97       	sbiw	r28, 0x18	; 24
    1276:	0f 2c       	mov	r0, r15
    1278:	04 c0       	rjmp	.+8      	; 0x1282 <__umoddi3+0x3b0>
    127a:	22 0c       	add	r2, r2
    127c:	33 1c       	adc	r3, r3
    127e:	44 1c       	adc	r4, r4
    1280:	55 1c       	adc	r5, r5
    1282:	0a 94       	dec	r0
    1284:	d2 f7       	brpl	.-12     	; 0x127a <__umoddi3+0x3a8>
    1286:	8a 2d       	mov	r24, r10
    1288:	8f 19       	sub	r24, r15
    128a:	64 01       	movw	r12, r8
    128c:	53 01       	movw	r10, r6
    128e:	08 2e       	mov	r0, r24
    1290:	04 c0       	rjmp	.+8      	; 0x129a <__umoddi3+0x3c8>
    1292:	d6 94       	lsr	r13
    1294:	c7 94       	ror	r12
    1296:	b7 94       	ror	r11
    1298:	a7 94       	ror	r10
    129a:	0a 94       	dec	r0
    129c:	d2 f7       	brpl	.-12     	; 0x1292 <__umoddi3+0x3c0>
    129e:	a4 01       	movw	r20, r8
    12a0:	93 01       	movw	r18, r6
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <__umoddi3+0x3da>
    12a4:	22 0f       	add	r18, r18
    12a6:	33 1f       	adc	r19, r19
    12a8:	44 1f       	adc	r20, r20
    12aa:	55 1f       	adc	r21, r21
    12ac:	fa 94       	dec	r15
    12ae:	d2 f7       	brpl	.-12     	; 0x12a4 <__umoddi3+0x3d2>
    12b0:	6c 96       	adiw	r28, 0x1c	; 28
    12b2:	6c ac       	ldd	r6, Y+60	; 0x3c
    12b4:	7d ac       	ldd	r7, Y+61	; 0x3d
    12b6:	8e ac       	ldd	r8, Y+62	; 0x3e
    12b8:	9f ac       	ldd	r9, Y+63	; 0x3f
    12ba:	6c 97       	sbiw	r28, 0x1c	; 28
    12bc:	04 c0       	rjmp	.+8      	; 0x12c6 <__umoddi3+0x3f4>
    12be:	96 94       	lsr	r9
    12c0:	87 94       	ror	r8
    12c2:	77 94       	ror	r7
    12c4:	67 94       	ror	r6
    12c6:	8a 95       	dec	r24
    12c8:	d2 f7       	brpl	.-12     	; 0x12be <__umoddi3+0x3ec>
    12ca:	84 01       	movw	r16, r8
    12cc:	73 01       	movw	r14, r6
    12ce:	e2 2a       	or	r14, r18
    12d0:	f3 2a       	or	r15, r19
    12d2:	04 2b       	or	r16, r20
    12d4:	15 2b       	or	r17, r21
    12d6:	ed a6       	std	Y+45, r14	; 0x2d
    12d8:	fe a6       	std	Y+46, r15	; 0x2e
    12da:	0f a7       	std	Y+47, r16	; 0x2f
    12dc:	18 ab       	std	Y+48, r17	; 0x30
    12de:	32 01       	movw	r6, r4
    12e0:	88 24       	eor	r8, r8
    12e2:	99 24       	eor	r9, r9
    12e4:	b2 01       	movw	r22, r4
    12e6:	a1 01       	movw	r20, r2
    12e8:	60 70       	andi	r22, 0x00	; 0
    12ea:	70 70       	andi	r23, 0x00	; 0
    12ec:	25 96       	adiw	r28, 0x05	; 5
    12ee:	4c af       	std	Y+60, r20	; 0x3c
    12f0:	5d af       	std	Y+61, r21	; 0x3d
    12f2:	6e af       	std	Y+62, r22	; 0x3e
    12f4:	7f af       	std	Y+63, r23	; 0x3f
    12f6:	25 97       	sbiw	r28, 0x05	; 5
    12f8:	c6 01       	movw	r24, r12
    12fa:	b5 01       	movw	r22, r10
    12fc:	a4 01       	movw	r20, r8
    12fe:	93 01       	movw	r18, r6
    1300:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    1304:	7b 01       	movw	r14, r22
    1306:	8c 01       	movw	r16, r24
    1308:	c6 01       	movw	r24, r12
    130a:	b5 01       	movw	r22, r10
    130c:	a4 01       	movw	r20, r8
    130e:	93 01       	movw	r18, r6
    1310:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    1314:	ca 01       	movw	r24, r20
    1316:	b9 01       	movw	r22, r18
    1318:	25 96       	adiw	r28, 0x05	; 5
    131a:	2c ad       	ldd	r18, Y+60	; 0x3c
    131c:	3d ad       	ldd	r19, Y+61	; 0x3d
    131e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1320:	5f ad       	ldd	r21, Y+63	; 0x3f
    1322:	25 97       	sbiw	r28, 0x05	; 5
    1324:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    1328:	9b 01       	movw	r18, r22
    132a:	ac 01       	movw	r20, r24
    132c:	87 01       	movw	r16, r14
    132e:	ff 24       	eor	r15, r15
    1330:	ee 24       	eor	r14, r14
    1332:	ad a4       	ldd	r10, Y+45	; 0x2d
    1334:	be a4       	ldd	r11, Y+46	; 0x2e
    1336:	cf a4       	ldd	r12, Y+47	; 0x2f
    1338:	d8 a8       	ldd	r13, Y+48	; 0x30
    133a:	c6 01       	movw	r24, r12
    133c:	aa 27       	eor	r26, r26
    133e:	bb 27       	eor	r27, r27
    1340:	5c 01       	movw	r10, r24
    1342:	6d 01       	movw	r12, r26
    1344:	ae 28       	or	r10, r14
    1346:	bf 28       	or	r11, r15
    1348:	c0 2a       	or	r12, r16
    134a:	d1 2a       	or	r13, r17
    134c:	a2 16       	cp	r10, r18
    134e:	b3 06       	cpc	r11, r19
    1350:	c4 06       	cpc	r12, r20
    1352:	d5 06       	cpc	r13, r21
    1354:	90 f4       	brcc	.+36     	; 0x137a <__umoddi3+0x4a8>
    1356:	a2 0c       	add	r10, r2
    1358:	b3 1c       	adc	r11, r3
    135a:	c4 1c       	adc	r12, r4
    135c:	d5 1c       	adc	r13, r5
    135e:	a2 14       	cp	r10, r2
    1360:	b3 04       	cpc	r11, r3
    1362:	c4 04       	cpc	r12, r4
    1364:	d5 04       	cpc	r13, r5
    1366:	48 f0       	brcs	.+18     	; 0x137a <__umoddi3+0x4a8>
    1368:	a2 16       	cp	r10, r18
    136a:	b3 06       	cpc	r11, r19
    136c:	c4 06       	cpc	r12, r20
    136e:	d5 06       	cpc	r13, r21
    1370:	20 f4       	brcc	.+8      	; 0x137a <__umoddi3+0x4a8>
    1372:	a2 0c       	add	r10, r2
    1374:	b3 1c       	adc	r11, r3
    1376:	c4 1c       	adc	r12, r4
    1378:	d5 1c       	adc	r13, r5
    137a:	a2 1a       	sub	r10, r18
    137c:	b3 0a       	sbc	r11, r19
    137e:	c4 0a       	sbc	r12, r20
    1380:	d5 0a       	sbc	r13, r21
    1382:	c6 01       	movw	r24, r12
    1384:	b5 01       	movw	r22, r10
    1386:	a4 01       	movw	r20, r8
    1388:	93 01       	movw	r18, r6
    138a:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    138e:	7b 01       	movw	r14, r22
    1390:	8c 01       	movw	r16, r24
    1392:	c6 01       	movw	r24, r12
    1394:	b5 01       	movw	r22, r10
    1396:	a4 01       	movw	r20, r8
    1398:	93 01       	movw	r18, r6
    139a:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    139e:	ca 01       	movw	r24, r20
    13a0:	b9 01       	movw	r22, r18
    13a2:	25 96       	adiw	r28, 0x05	; 5
    13a4:	2c ad       	ldd	r18, Y+60	; 0x3c
    13a6:	3d ad       	ldd	r19, Y+61	; 0x3d
    13a8:	4e ad       	ldd	r20, Y+62	; 0x3e
    13aa:	5f ad       	ldd	r21, Y+63	; 0x3f
    13ac:	25 97       	sbiw	r28, 0x05	; 5
    13ae:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    13b2:	9b 01       	movw	r18, r22
    13b4:	ac 01       	movw	r20, r24
    13b6:	87 01       	movw	r16, r14
    13b8:	ff 24       	eor	r15, r15
    13ba:	ee 24       	eor	r14, r14
    13bc:	8d a5       	ldd	r24, Y+45	; 0x2d
    13be:	9e a5       	ldd	r25, Y+46	; 0x2e
    13c0:	af a5       	ldd	r26, Y+47	; 0x2f
    13c2:	b8 a9       	ldd	r27, Y+48	; 0x30
    13c4:	a0 70       	andi	r26, 0x00	; 0
    13c6:	b0 70       	andi	r27, 0x00	; 0
    13c8:	57 01       	movw	r10, r14
    13ca:	68 01       	movw	r12, r16
    13cc:	a8 2a       	or	r10, r24
    13ce:	b9 2a       	or	r11, r25
    13d0:	ca 2a       	or	r12, r26
    13d2:	db 2a       	or	r13, r27
    13d4:	a2 16       	cp	r10, r18
    13d6:	b3 06       	cpc	r11, r19
    13d8:	c4 06       	cpc	r12, r20
    13da:	d5 06       	cpc	r13, r21
    13dc:	90 f4       	brcc	.+36     	; 0x1402 <__umoddi3+0x530>
    13de:	a2 0c       	add	r10, r2
    13e0:	b3 1c       	adc	r11, r3
    13e2:	c4 1c       	adc	r12, r4
    13e4:	d5 1c       	adc	r13, r5
    13e6:	a2 14       	cp	r10, r2
    13e8:	b3 04       	cpc	r11, r3
    13ea:	c4 04       	cpc	r12, r4
    13ec:	d5 04       	cpc	r13, r5
    13ee:	48 f0       	brcs	.+18     	; 0x1402 <__umoddi3+0x530>
    13f0:	a2 16       	cp	r10, r18
    13f2:	b3 06       	cpc	r11, r19
    13f4:	c4 06       	cpc	r12, r20
    13f6:	d5 06       	cpc	r13, r21
    13f8:	20 f4       	brcc	.+8      	; 0x1402 <__umoddi3+0x530>
    13fa:	a2 0c       	add	r10, r2
    13fc:	b3 1c       	adc	r11, r3
    13fe:	c4 1c       	adc	r12, r4
    1400:	d5 1c       	adc	r13, r5
    1402:	6c 96       	adiw	r28, 0x1c	; 28
    1404:	ec ac       	ldd	r14, Y+60	; 0x3c
    1406:	fd ac       	ldd	r15, Y+61	; 0x3d
    1408:	0e ad       	ldd	r16, Y+62	; 0x3e
    140a:	1f ad       	ldd	r17, Y+63	; 0x3f
    140c:	6c 97       	sbiw	r28, 0x1c	; 28
    140e:	68 96       	adiw	r28, 0x18	; 24
    1410:	0f ac       	ldd	r0, Y+63	; 0x3f
    1412:	68 97       	sbiw	r28, 0x18	; 24
    1414:	04 c0       	rjmp	.+8      	; 0x141e <__umoddi3+0x54c>
    1416:	ee 0c       	add	r14, r14
    1418:	ff 1c       	adc	r15, r15
    141a:	00 1f       	adc	r16, r16
    141c:	11 1f       	adc	r17, r17
    141e:	0a 94       	dec	r0
    1420:	d2 f7       	brpl	.-12     	; 0x1416 <__umoddi3+0x544>
    1422:	e9 aa       	std	Y+49, r14	; 0x31
    1424:	fa aa       	std	Y+50, r15	; 0x32
    1426:	0b ab       	std	Y+51, r16	; 0x33
    1428:	1c ab       	std	Y+52, r17	; 0x34
    142a:	a2 1a       	sub	r10, r18
    142c:	b3 0a       	sbc	r11, r19
    142e:	c4 0a       	sbc	r12, r20
    1430:	d5 0a       	sbc	r13, r21
    1432:	32 01       	movw	r6, r4
    1434:	88 24       	eor	r8, r8
    1436:	99 24       	eor	r9, r9
    1438:	b2 01       	movw	r22, r4
    143a:	a1 01       	movw	r20, r2
    143c:	60 70       	andi	r22, 0x00	; 0
    143e:	70 70       	andi	r23, 0x00	; 0
    1440:	29 96       	adiw	r28, 0x09	; 9
    1442:	4c af       	std	Y+60, r20	; 0x3c
    1444:	5d af       	std	Y+61, r21	; 0x3d
    1446:	6e af       	std	Y+62, r22	; 0x3e
    1448:	7f af       	std	Y+63, r23	; 0x3f
    144a:	29 97       	sbiw	r28, 0x09	; 9
    144c:	c6 01       	movw	r24, r12
    144e:	b5 01       	movw	r22, r10
    1450:	a4 01       	movw	r20, r8
    1452:	93 01       	movw	r18, r6
    1454:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    1458:	7b 01       	movw	r14, r22
    145a:	8c 01       	movw	r16, r24
    145c:	c6 01       	movw	r24, r12
    145e:	b5 01       	movw	r22, r10
    1460:	a4 01       	movw	r20, r8
    1462:	93 01       	movw	r18, r6
    1464:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    1468:	ca 01       	movw	r24, r20
    146a:	b9 01       	movw	r22, r18
    146c:	29 96       	adiw	r28, 0x09	; 9
    146e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1470:	3d ad       	ldd	r19, Y+61	; 0x3d
    1472:	4e ad       	ldd	r20, Y+62	; 0x3e
    1474:	5f ad       	ldd	r21, Y+63	; 0x3f
    1476:	29 97       	sbiw	r28, 0x09	; 9
    1478:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    147c:	9b 01       	movw	r18, r22
    147e:	ac 01       	movw	r20, r24
    1480:	87 01       	movw	r16, r14
    1482:	ff 24       	eor	r15, r15
    1484:	ee 24       	eor	r14, r14
    1486:	a9 a8       	ldd	r10, Y+49	; 0x31
    1488:	ba a8       	ldd	r11, Y+50	; 0x32
    148a:	cb a8       	ldd	r12, Y+51	; 0x33
    148c:	dc a8       	ldd	r13, Y+52	; 0x34
    148e:	c6 01       	movw	r24, r12
    1490:	aa 27       	eor	r26, r26
    1492:	bb 27       	eor	r27, r27
    1494:	57 01       	movw	r10, r14
    1496:	68 01       	movw	r12, r16
    1498:	a8 2a       	or	r10, r24
    149a:	b9 2a       	or	r11, r25
    149c:	ca 2a       	or	r12, r26
    149e:	db 2a       	or	r13, r27
    14a0:	a2 16       	cp	r10, r18
    14a2:	b3 06       	cpc	r11, r19
    14a4:	c4 06       	cpc	r12, r20
    14a6:	d5 06       	cpc	r13, r21
    14a8:	90 f4       	brcc	.+36     	; 0x14ce <__umoddi3+0x5fc>
    14aa:	a2 0c       	add	r10, r2
    14ac:	b3 1c       	adc	r11, r3
    14ae:	c4 1c       	adc	r12, r4
    14b0:	d5 1c       	adc	r13, r5
    14b2:	a2 14       	cp	r10, r2
    14b4:	b3 04       	cpc	r11, r3
    14b6:	c4 04       	cpc	r12, r4
    14b8:	d5 04       	cpc	r13, r5
    14ba:	48 f0       	brcs	.+18     	; 0x14ce <__umoddi3+0x5fc>
    14bc:	a2 16       	cp	r10, r18
    14be:	b3 06       	cpc	r11, r19
    14c0:	c4 06       	cpc	r12, r20
    14c2:	d5 06       	cpc	r13, r21
    14c4:	20 f4       	brcc	.+8      	; 0x14ce <__umoddi3+0x5fc>
    14c6:	a2 0c       	add	r10, r2
    14c8:	b3 1c       	adc	r11, r3
    14ca:	c4 1c       	adc	r12, r4
    14cc:	d5 1c       	adc	r13, r5
    14ce:	a2 1a       	sub	r10, r18
    14d0:	b3 0a       	sbc	r11, r19
    14d2:	c4 0a       	sbc	r12, r20
    14d4:	d5 0a       	sbc	r13, r21
    14d6:	c6 01       	movw	r24, r12
    14d8:	b5 01       	movw	r22, r10
    14da:	a4 01       	movw	r20, r8
    14dc:	93 01       	movw	r18, r6
    14de:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    14e2:	7b 01       	movw	r14, r22
    14e4:	8c 01       	movw	r16, r24
    14e6:	c6 01       	movw	r24, r12
    14e8:	b5 01       	movw	r22, r10
    14ea:	a4 01       	movw	r20, r8
    14ec:	93 01       	movw	r18, r6
    14ee:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    14f2:	ca 01       	movw	r24, r20
    14f4:	b9 01       	movw	r22, r18
    14f6:	29 96       	adiw	r28, 0x09	; 9
    14f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    14fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    14fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    14fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1500:	29 97       	sbiw	r28, 0x09	; 9
    1502:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    1506:	9b 01       	movw	r18, r22
    1508:	ac 01       	movw	r20, r24
    150a:	87 01       	movw	r16, r14
    150c:	ff 24       	eor	r15, r15
    150e:	ee 24       	eor	r14, r14
    1510:	89 a9       	ldd	r24, Y+49	; 0x31
    1512:	9a a9       	ldd	r25, Y+50	; 0x32
    1514:	ab a9       	ldd	r26, Y+51	; 0x33
    1516:	bc a9       	ldd	r27, Y+52	; 0x34
    1518:	a0 70       	andi	r26, 0x00	; 0
    151a:	b0 70       	andi	r27, 0x00	; 0
    151c:	e8 2a       	or	r14, r24
    151e:	f9 2a       	or	r15, r25
    1520:	0a 2b       	or	r16, r26
    1522:	1b 2b       	or	r17, r27
    1524:	e2 16       	cp	r14, r18
    1526:	f3 06       	cpc	r15, r19
    1528:	04 07       	cpc	r16, r20
    152a:	15 07       	cpc	r17, r21
    152c:	90 f4       	brcc	.+36     	; 0x1552 <__umoddi3+0x680>
    152e:	e2 0c       	add	r14, r2
    1530:	f3 1c       	adc	r15, r3
    1532:	04 1d       	adc	r16, r4
    1534:	15 1d       	adc	r17, r5
    1536:	e2 14       	cp	r14, r2
    1538:	f3 04       	cpc	r15, r3
    153a:	04 05       	cpc	r16, r4
    153c:	15 05       	cpc	r17, r5
    153e:	48 f0       	brcs	.+18     	; 0x1552 <__umoddi3+0x680>
    1540:	e2 16       	cp	r14, r18
    1542:	f3 06       	cpc	r15, r19
    1544:	04 07       	cpc	r16, r20
    1546:	15 07       	cpc	r17, r21
    1548:	20 f4       	brcc	.+8      	; 0x1552 <__umoddi3+0x680>
    154a:	e2 0c       	add	r14, r2
    154c:	f3 1c       	adc	r15, r3
    154e:	04 1d       	adc	r16, r4
    1550:	15 1d       	adc	r17, r5
    1552:	e2 1a       	sub	r14, r18
    1554:	f3 0a       	sbc	r15, r19
    1556:	04 0b       	sbc	r16, r20
    1558:	15 0b       	sbc	r17, r21
    155a:	d8 01       	movw	r26, r16
    155c:	c7 01       	movw	r24, r14
    155e:	09 ac       	ldd	r0, Y+57	; 0x39
    1560:	04 c0       	rjmp	.+8      	; 0x156a <__umoddi3+0x698>
    1562:	b6 95       	lsr	r27
    1564:	a7 95       	ror	r26
    1566:	97 95       	ror	r25
    1568:	87 95       	ror	r24
    156a:	0a 94       	dec	r0
    156c:	d2 f7       	brpl	.-12     	; 0x1562 <__umoddi3+0x690>
    156e:	89 8b       	std	Y+17, r24	; 0x11
    1570:	9a 8b       	std	Y+18, r25	; 0x12
    1572:	ab 8b       	std	Y+19, r26	; 0x13
    1574:	bc 8b       	std	Y+20, r27	; 0x14
    1576:	1d 8a       	std	Y+21, r1	; 0x15
    1578:	1e 8a       	std	Y+22, r1	; 0x16
    157a:	1f 8a       	std	Y+23, r1	; 0x17
    157c:	18 8e       	std	Y+24, r1	; 0x18
    157e:	28 2f       	mov	r18, r24
    1580:	3a 89       	ldd	r19, Y+18	; 0x12
    1582:	4b 89       	ldd	r20, Y+19	; 0x13
    1584:	5c 89       	ldd	r21, Y+20	; 0x14
    1586:	6d 89       	ldd	r22, Y+21	; 0x15
    1588:	0c c3       	rjmp	.+1560   	; 0x1ba2 <__umoddi3+0xcd0>
    158a:	6a 14       	cp	r6, r10
    158c:	7b 04       	cpc	r7, r11
    158e:	8c 04       	cpc	r8, r12
    1590:	9d 04       	cpc	r9, r13
    1592:	08 f4       	brcc	.+2      	; 0x1596 <__umoddi3+0x6c4>
    1594:	09 c3       	rjmp	.+1554   	; 0x1ba8 <__umoddi3+0xcd6>
    1596:	00 e0       	ldi	r16, 0x00	; 0
    1598:	a0 16       	cp	r10, r16
    159a:	00 e0       	ldi	r16, 0x00	; 0
    159c:	b0 06       	cpc	r11, r16
    159e:	01 e0       	ldi	r16, 0x01	; 1
    15a0:	c0 06       	cpc	r12, r16
    15a2:	00 e0       	ldi	r16, 0x00	; 0
    15a4:	d0 06       	cpc	r13, r16
    15a6:	88 f4       	brcc	.+34     	; 0x15ca <__umoddi3+0x6f8>
    15a8:	1f ef       	ldi	r17, 0xFF	; 255
    15aa:	a1 16       	cp	r10, r17
    15ac:	b1 04       	cpc	r11, r1
    15ae:	c1 04       	cpc	r12, r1
    15b0:	d1 04       	cpc	r13, r1
    15b2:	39 f0       	breq	.+14     	; 0x15c2 <__umoddi3+0x6f0>
    15b4:	30 f0       	brcs	.+12     	; 0x15c2 <__umoddi3+0x6f0>
    15b6:	28 e0       	ldi	r18, 0x08	; 8
    15b8:	e2 2e       	mov	r14, r18
    15ba:	f1 2c       	mov	r15, r1
    15bc:	01 2d       	mov	r16, r1
    15be:	11 2d       	mov	r17, r1
    15c0:	18 c0       	rjmp	.+48     	; 0x15f2 <__umoddi3+0x720>
    15c2:	ee 24       	eor	r14, r14
    15c4:	ff 24       	eor	r15, r15
    15c6:	87 01       	movw	r16, r14
    15c8:	14 c0       	rjmp	.+40     	; 0x15f2 <__umoddi3+0x720>
    15ca:	40 e0       	ldi	r20, 0x00	; 0
    15cc:	a4 16       	cp	r10, r20
    15ce:	40 e0       	ldi	r20, 0x00	; 0
    15d0:	b4 06       	cpc	r11, r20
    15d2:	40 e0       	ldi	r20, 0x00	; 0
    15d4:	c4 06       	cpc	r12, r20
    15d6:	41 e0       	ldi	r20, 0x01	; 1
    15d8:	d4 06       	cpc	r13, r20
    15da:	30 f0       	brcs	.+12     	; 0x15e8 <__umoddi3+0x716>
    15dc:	98 e1       	ldi	r25, 0x18	; 24
    15de:	e9 2e       	mov	r14, r25
    15e0:	f1 2c       	mov	r15, r1
    15e2:	01 2d       	mov	r16, r1
    15e4:	11 2d       	mov	r17, r1
    15e6:	05 c0       	rjmp	.+10     	; 0x15f2 <__umoddi3+0x720>
    15e8:	80 e1       	ldi	r24, 0x10	; 16
    15ea:	e8 2e       	mov	r14, r24
    15ec:	f1 2c       	mov	r15, r1
    15ee:	01 2d       	mov	r16, r1
    15f0:	11 2d       	mov	r17, r1
    15f2:	d6 01       	movw	r26, r12
    15f4:	c5 01       	movw	r24, r10
    15f6:	0e 2c       	mov	r0, r14
    15f8:	04 c0       	rjmp	.+8      	; 0x1602 <__umoddi3+0x730>
    15fa:	b6 95       	lsr	r27
    15fc:	a7 95       	ror	r26
    15fe:	97 95       	ror	r25
    1600:	87 95       	ror	r24
    1602:	0a 94       	dec	r0
    1604:	d2 f7       	brpl	.-12     	; 0x15fa <__umoddi3+0x728>
    1606:	84 56       	subi	r24, 0x64	; 100
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	dc 01       	movw	r26, r24
    160c:	2c 91       	ld	r18, X
    160e:	80 e2       	ldi	r24, 0x20	; 32
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	a0 e0       	ldi	r26, 0x00	; 0
    1614:	b0 e0       	ldi	r27, 0x00	; 0
    1616:	8e 19       	sub	r24, r14
    1618:	9f 09       	sbc	r25, r15
    161a:	a0 0b       	sbc	r26, r16
    161c:	b1 0b       	sbc	r27, r17
    161e:	82 1b       	sub	r24, r18
    1620:	91 09       	sbc	r25, r1
    1622:	a1 09       	sbc	r26, r1
    1624:	b1 09       	sbc	r27, r1
    1626:	00 97       	sbiw	r24, 0x00	; 0
    1628:	a1 05       	cpc	r26, r1
    162a:	b1 05       	cpc	r27, r1
    162c:	09 f0       	breq	.+2      	; 0x1630 <__umoddi3+0x75e>
    162e:	4f c0       	rjmp	.+158    	; 0x16ce <__umoddi3+0x7fc>
    1630:	a6 14       	cp	r10, r6
    1632:	b7 04       	cpc	r11, r7
    1634:	c8 04       	cpc	r12, r8
    1636:	d9 04       	cpc	r13, r9
    1638:	58 f0       	brcs	.+22     	; 0x1650 <__umoddi3+0x77e>
    163a:	6c 96       	adiw	r28, 0x1c	; 28
    163c:	ec ac       	ldd	r14, Y+60	; 0x3c
    163e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1640:	0e ad       	ldd	r16, Y+62	; 0x3e
    1642:	1f ad       	ldd	r17, Y+63	; 0x3f
    1644:	6c 97       	sbiw	r28, 0x1c	; 28
    1646:	e2 14       	cp	r14, r2
    1648:	f3 04       	cpc	r15, r3
    164a:	04 05       	cpc	r16, r4
    164c:	15 05       	cpc	r17, r5
    164e:	68 f1       	brcs	.+90     	; 0x16aa <__umoddi3+0x7d8>
    1650:	6c 96       	adiw	r28, 0x1c	; 28
    1652:	ec ac       	ldd	r14, Y+60	; 0x3c
    1654:	fd ac       	ldd	r15, Y+61	; 0x3d
    1656:	0e ad       	ldd	r16, Y+62	; 0x3e
    1658:	1f ad       	ldd	r17, Y+63	; 0x3f
    165a:	6c 97       	sbiw	r28, 0x1c	; 28
    165c:	e2 18       	sub	r14, r2
    165e:	f3 08       	sbc	r15, r3
    1660:	04 09       	sbc	r16, r4
    1662:	15 09       	sbc	r17, r5
    1664:	a4 01       	movw	r20, r8
    1666:	93 01       	movw	r18, r6
    1668:	2a 19       	sub	r18, r10
    166a:	3b 09       	sbc	r19, r11
    166c:	4c 09       	sbc	r20, r12
    166e:	5d 09       	sbc	r21, r13
    1670:	aa 24       	eor	r10, r10
    1672:	bb 24       	eor	r11, r11
    1674:	65 01       	movw	r12, r10
    1676:	6c 96       	adiw	r28, 0x1c	; 28
    1678:	6c ad       	ldd	r22, Y+60	; 0x3c
    167a:	7d ad       	ldd	r23, Y+61	; 0x3d
    167c:	8e ad       	ldd	r24, Y+62	; 0x3e
    167e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1680:	6c 97       	sbiw	r28, 0x1c	; 28
    1682:	6e 15       	cp	r22, r14
    1684:	7f 05       	cpc	r23, r15
    1686:	80 07       	cpc	r24, r16
    1688:	91 07       	cpc	r25, r17
    168a:	28 f4       	brcc	.+10     	; 0x1696 <__umoddi3+0x7c4>
    168c:	b1 e0       	ldi	r27, 0x01	; 1
    168e:	ab 2e       	mov	r10, r27
    1690:	b1 2c       	mov	r11, r1
    1692:	c1 2c       	mov	r12, r1
    1694:	d1 2c       	mov	r13, r1
    1696:	da 01       	movw	r26, r20
    1698:	c9 01       	movw	r24, r18
    169a:	8a 19       	sub	r24, r10
    169c:	9b 09       	sbc	r25, r11
    169e:	ac 09       	sbc	r26, r12
    16a0:	bd 09       	sbc	r27, r13
    16a2:	8d ab       	std	Y+53, r24	; 0x35
    16a4:	9e ab       	std	Y+54, r25	; 0x36
    16a6:	af ab       	std	Y+55, r26	; 0x37
    16a8:	b8 af       	std	Y+56, r27	; 0x38
    16aa:	e9 8a       	std	Y+17, r14	; 0x11
    16ac:	fa 8a       	std	Y+18, r15	; 0x12
    16ae:	0b 8b       	std	Y+19, r16	; 0x13
    16b0:	1c 8b       	std	Y+20, r17	; 0x14
    16b2:	6d a8       	ldd	r6, Y+53	; 0x35
    16b4:	7e a8       	ldd	r7, Y+54	; 0x36
    16b6:	8f a8       	ldd	r8, Y+55	; 0x37
    16b8:	98 ac       	ldd	r9, Y+56	; 0x38
    16ba:	6d 8a       	std	Y+21, r6	; 0x15
    16bc:	7e 8a       	std	Y+22, r7	; 0x16
    16be:	8f 8a       	std	Y+23, r8	; 0x17
    16c0:	98 8e       	std	Y+24, r9	; 0x18
    16c2:	2e 2d       	mov	r18, r14
    16c4:	3a 89       	ldd	r19, Y+18	; 0x12
    16c6:	4b 89       	ldd	r20, Y+19	; 0x13
    16c8:	5c 89       	ldd	r21, Y+20	; 0x14
    16ca:	6d a9       	ldd	r22, Y+53	; 0x35
    16cc:	6a c2       	rjmp	.+1236   	; 0x1ba2 <__umoddi3+0xcd0>
    16ce:	67 96       	adiw	r28, 0x17	; 23
    16d0:	8f af       	std	Y+63, r24	; 0x3f
    16d2:	67 97       	sbiw	r28, 0x17	; 23
    16d4:	a6 01       	movw	r20, r12
    16d6:	95 01       	movw	r18, r10
    16d8:	08 2e       	mov	r0, r24
    16da:	04 c0       	rjmp	.+8      	; 0x16e4 <__umoddi3+0x812>
    16dc:	22 0f       	add	r18, r18
    16de:	33 1f       	adc	r19, r19
    16e0:	44 1f       	adc	r20, r20
    16e2:	55 1f       	adc	r21, r21
    16e4:	0a 94       	dec	r0
    16e6:	d2 f7       	brpl	.-12     	; 0x16dc <__umoddi3+0x80a>
    16e8:	a0 e2       	ldi	r26, 0x20	; 32
    16ea:	aa 2e       	mov	r10, r26
    16ec:	a8 1a       	sub	r10, r24
    16ee:	66 96       	adiw	r28, 0x16	; 22
    16f0:	af ae       	std	Y+63, r10	; 0x3f
    16f2:	66 97       	sbiw	r28, 0x16	; 22
    16f4:	d2 01       	movw	r26, r4
    16f6:	c1 01       	movw	r24, r2
    16f8:	04 c0       	rjmp	.+8      	; 0x1702 <__umoddi3+0x830>
    16fa:	b6 95       	lsr	r27
    16fc:	a7 95       	ror	r26
    16fe:	97 95       	ror	r25
    1700:	87 95       	ror	r24
    1702:	aa 94       	dec	r10
    1704:	d2 f7       	brpl	.-12     	; 0x16fa <__umoddi3+0x828>
    1706:	6c 01       	movw	r12, r24
    1708:	7d 01       	movw	r14, r26
    170a:	c2 2a       	or	r12, r18
    170c:	d3 2a       	or	r13, r19
    170e:	e4 2a       	or	r14, r20
    1710:	f5 2a       	or	r15, r21
    1712:	c9 a6       	std	Y+41, r12	; 0x29
    1714:	da a6       	std	Y+42, r13	; 0x2a
    1716:	eb a6       	std	Y+43, r14	; 0x2b
    1718:	fc a6       	std	Y+44, r15	; 0x2c
    171a:	82 01       	movw	r16, r4
    171c:	71 01       	movw	r14, r2
    171e:	67 96       	adiw	r28, 0x17	; 23
    1720:	0f ac       	ldd	r0, Y+63	; 0x3f
    1722:	67 97       	sbiw	r28, 0x17	; 23
    1724:	04 c0       	rjmp	.+8      	; 0x172e <__umoddi3+0x85c>
    1726:	ee 0c       	add	r14, r14
    1728:	ff 1c       	adc	r15, r15
    172a:	00 1f       	adc	r16, r16
    172c:	11 1f       	adc	r17, r17
    172e:	0a 94       	dec	r0
    1730:	d2 f7       	brpl	.-12     	; 0x1726 <__umoddi3+0x854>
    1732:	ed a2       	std	Y+37, r14	; 0x25
    1734:	fe a2       	std	Y+38, r15	; 0x26
    1736:	0f a3       	std	Y+39, r16	; 0x27
    1738:	18 a7       	std	Y+40, r17	; 0x28
    173a:	64 01       	movw	r12, r8
    173c:	53 01       	movw	r10, r6
    173e:	66 96       	adiw	r28, 0x16	; 22
    1740:	0f ac       	ldd	r0, Y+63	; 0x3f
    1742:	66 97       	sbiw	r28, 0x16	; 22
    1744:	04 c0       	rjmp	.+8      	; 0x174e <__umoddi3+0x87c>
    1746:	d6 94       	lsr	r13
    1748:	c7 94       	ror	r12
    174a:	b7 94       	ror	r11
    174c:	a7 94       	ror	r10
    174e:	0a 94       	dec	r0
    1750:	d2 f7       	brpl	.-12     	; 0x1746 <__umoddi3+0x874>
    1752:	a4 01       	movw	r20, r8
    1754:	93 01       	movw	r18, r6
    1756:	67 96       	adiw	r28, 0x17	; 23
    1758:	0f ac       	ldd	r0, Y+63	; 0x3f
    175a:	67 97       	sbiw	r28, 0x17	; 23
    175c:	04 c0       	rjmp	.+8      	; 0x1766 <__umoddi3+0x894>
    175e:	22 0f       	add	r18, r18
    1760:	33 1f       	adc	r19, r19
    1762:	44 1f       	adc	r20, r20
    1764:	55 1f       	adc	r21, r21
    1766:	0a 94       	dec	r0
    1768:	d2 f7       	brpl	.-12     	; 0x175e <__umoddi3+0x88c>
    176a:	6c 96       	adiw	r28, 0x1c	; 28
    176c:	8c ad       	ldd	r24, Y+60	; 0x3c
    176e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1770:	ae ad       	ldd	r26, Y+62	; 0x3e
    1772:	bf ad       	ldd	r27, Y+63	; 0x3f
    1774:	6c 97       	sbiw	r28, 0x1c	; 28
    1776:	66 96       	adiw	r28, 0x16	; 22
    1778:	0f ac       	ldd	r0, Y+63	; 0x3f
    177a:	66 97       	sbiw	r28, 0x16	; 22
    177c:	04 c0       	rjmp	.+8      	; 0x1786 <__umoddi3+0x8b4>
    177e:	b6 95       	lsr	r27
    1780:	a7 95       	ror	r26
    1782:	97 95       	ror	r25
    1784:	87 95       	ror	r24
    1786:	0a 94       	dec	r0
    1788:	d2 f7       	brpl	.-12     	; 0x177e <__umoddi3+0x8ac>
    178a:	3c 01       	movw	r6, r24
    178c:	4d 01       	movw	r8, r26
    178e:	62 2a       	or	r6, r18
    1790:	73 2a       	or	r7, r19
    1792:	84 2a       	or	r8, r20
    1794:	95 2a       	or	r9, r21
    1796:	69 a2       	std	Y+33, r6	; 0x21
    1798:	7a a2       	std	Y+34, r7	; 0x22
    179a:	8b a2       	std	Y+35, r8	; 0x23
    179c:	9c a2       	std	Y+36, r9	; 0x24
    179e:	6c 96       	adiw	r28, 0x1c	; 28
    17a0:	ec ac       	ldd	r14, Y+60	; 0x3c
    17a2:	fd ac       	ldd	r15, Y+61	; 0x3d
    17a4:	0e ad       	ldd	r16, Y+62	; 0x3e
    17a6:	1f ad       	ldd	r17, Y+63	; 0x3f
    17a8:	6c 97       	sbiw	r28, 0x1c	; 28
    17aa:	67 96       	adiw	r28, 0x17	; 23
    17ac:	0f ac       	ldd	r0, Y+63	; 0x3f
    17ae:	67 97       	sbiw	r28, 0x17	; 23
    17b0:	04 c0       	rjmp	.+8      	; 0x17ba <__umoddi3+0x8e8>
    17b2:	ee 0c       	add	r14, r14
    17b4:	ff 1c       	adc	r15, r15
    17b6:	00 1f       	adc	r16, r16
    17b8:	11 1f       	adc	r17, r17
    17ba:	0a 94       	dec	r0
    17bc:	d2 f7       	brpl	.-12     	; 0x17b2 <__umoddi3+0x8e0>
    17be:	ed 8e       	std	Y+29, r14	; 0x1d
    17c0:	fe 8e       	std	Y+30, r15	; 0x1e
    17c2:	0f 8f       	std	Y+31, r16	; 0x1f
    17c4:	18 a3       	std	Y+32, r17	; 0x20
    17c6:	49 a5       	ldd	r20, Y+41	; 0x29
    17c8:	5a a5       	ldd	r21, Y+42	; 0x2a
    17ca:	6b a5       	ldd	r22, Y+43	; 0x2b
    17cc:	7c a5       	ldd	r23, Y+44	; 0x2c
    17ce:	3b 01       	movw	r6, r22
    17d0:	88 24       	eor	r8, r8
    17d2:	99 24       	eor	r9, r9
    17d4:	60 70       	andi	r22, 0x00	; 0
    17d6:	70 70       	andi	r23, 0x00	; 0
    17d8:	2d 96       	adiw	r28, 0x0d	; 13
    17da:	4c af       	std	Y+60, r20	; 0x3c
    17dc:	5d af       	std	Y+61, r21	; 0x3d
    17de:	6e af       	std	Y+62, r22	; 0x3e
    17e0:	7f af       	std	Y+63, r23	; 0x3f
    17e2:	2d 97       	sbiw	r28, 0x0d	; 13
    17e4:	c6 01       	movw	r24, r12
    17e6:	b5 01       	movw	r22, r10
    17e8:	a4 01       	movw	r20, r8
    17ea:	93 01       	movw	r18, r6
    17ec:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    17f0:	7b 01       	movw	r14, r22
    17f2:	8c 01       	movw	r16, r24
    17f4:	c6 01       	movw	r24, r12
    17f6:	b5 01       	movw	r22, r10
    17f8:	a4 01       	movw	r20, r8
    17fa:	93 01       	movw	r18, r6
    17fc:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    1800:	c9 01       	movw	r24, r18
    1802:	da 01       	movw	r26, r20
    1804:	1c 01       	movw	r2, r24
    1806:	2d 01       	movw	r4, r26
    1808:	c2 01       	movw	r24, r4
    180a:	b1 01       	movw	r22, r2
    180c:	2d 96       	adiw	r28, 0x0d	; 13
    180e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1810:	3d ad       	ldd	r19, Y+61	; 0x3d
    1812:	4e ad       	ldd	r20, Y+62	; 0x3e
    1814:	5f ad       	ldd	r21, Y+63	; 0x3f
    1816:	2d 97       	sbiw	r28, 0x0d	; 13
    1818:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    181c:	9b 01       	movw	r18, r22
    181e:	ac 01       	movw	r20, r24
    1820:	87 01       	movw	r16, r14
    1822:	ff 24       	eor	r15, r15
    1824:	ee 24       	eor	r14, r14
    1826:	a9 a0       	ldd	r10, Y+33	; 0x21
    1828:	ba a0       	ldd	r11, Y+34	; 0x22
    182a:	cb a0       	ldd	r12, Y+35	; 0x23
    182c:	dc a0       	ldd	r13, Y+36	; 0x24
    182e:	c6 01       	movw	r24, r12
    1830:	aa 27       	eor	r26, r26
    1832:	bb 27       	eor	r27, r27
    1834:	57 01       	movw	r10, r14
    1836:	68 01       	movw	r12, r16
    1838:	a8 2a       	or	r10, r24
    183a:	b9 2a       	or	r11, r25
    183c:	ca 2a       	or	r12, r26
    183e:	db 2a       	or	r13, r27
    1840:	a2 16       	cp	r10, r18
    1842:	b3 06       	cpc	r11, r19
    1844:	c4 06       	cpc	r12, r20
    1846:	d5 06       	cpc	r13, r21
    1848:	00 f5       	brcc	.+64     	; 0x188a <__umoddi3+0x9b8>
    184a:	08 94       	sec
    184c:	21 08       	sbc	r2, r1
    184e:	31 08       	sbc	r3, r1
    1850:	41 08       	sbc	r4, r1
    1852:	51 08       	sbc	r5, r1
    1854:	e9 a4       	ldd	r14, Y+41	; 0x29
    1856:	fa a4       	ldd	r15, Y+42	; 0x2a
    1858:	0b a5       	ldd	r16, Y+43	; 0x2b
    185a:	1c a5       	ldd	r17, Y+44	; 0x2c
    185c:	ae 0c       	add	r10, r14
    185e:	bf 1c       	adc	r11, r15
    1860:	c0 1e       	adc	r12, r16
    1862:	d1 1e       	adc	r13, r17
    1864:	ae 14       	cp	r10, r14
    1866:	bf 04       	cpc	r11, r15
    1868:	c0 06       	cpc	r12, r16
    186a:	d1 06       	cpc	r13, r17
    186c:	70 f0       	brcs	.+28     	; 0x188a <__umoddi3+0x9b8>
    186e:	a2 16       	cp	r10, r18
    1870:	b3 06       	cpc	r11, r19
    1872:	c4 06       	cpc	r12, r20
    1874:	d5 06       	cpc	r13, r21
    1876:	48 f4       	brcc	.+18     	; 0x188a <__umoddi3+0x9b8>
    1878:	08 94       	sec
    187a:	21 08       	sbc	r2, r1
    187c:	31 08       	sbc	r3, r1
    187e:	41 08       	sbc	r4, r1
    1880:	51 08       	sbc	r5, r1
    1882:	ae 0c       	add	r10, r14
    1884:	bf 1c       	adc	r11, r15
    1886:	c0 1e       	adc	r12, r16
    1888:	d1 1e       	adc	r13, r17
    188a:	a2 1a       	sub	r10, r18
    188c:	b3 0a       	sbc	r11, r19
    188e:	c4 0a       	sbc	r12, r20
    1890:	d5 0a       	sbc	r13, r21
    1892:	c6 01       	movw	r24, r12
    1894:	b5 01       	movw	r22, r10
    1896:	a4 01       	movw	r20, r8
    1898:	93 01       	movw	r18, r6
    189a:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    189e:	7b 01       	movw	r14, r22
    18a0:	8c 01       	movw	r16, r24
    18a2:	c6 01       	movw	r24, r12
    18a4:	b5 01       	movw	r22, r10
    18a6:	a4 01       	movw	r20, r8
    18a8:	93 01       	movw	r18, r6
    18aa:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    18ae:	c9 01       	movw	r24, r18
    18b0:	da 01       	movw	r26, r20
    18b2:	3c 01       	movw	r6, r24
    18b4:	4d 01       	movw	r8, r26
    18b6:	c4 01       	movw	r24, r8
    18b8:	b3 01       	movw	r22, r6
    18ba:	2d 96       	adiw	r28, 0x0d	; 13
    18bc:	2c ad       	ldd	r18, Y+60	; 0x3c
    18be:	3d ad       	ldd	r19, Y+61	; 0x3d
    18c0:	4e ad       	ldd	r20, Y+62	; 0x3e
    18c2:	5f ad       	ldd	r21, Y+63	; 0x3f
    18c4:	2d 97       	sbiw	r28, 0x0d	; 13
    18c6:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    18ca:	9b 01       	movw	r18, r22
    18cc:	ac 01       	movw	r20, r24
    18ce:	87 01       	movw	r16, r14
    18d0:	ff 24       	eor	r15, r15
    18d2:	ee 24       	eor	r14, r14
    18d4:	89 a1       	ldd	r24, Y+33	; 0x21
    18d6:	9a a1       	ldd	r25, Y+34	; 0x22
    18d8:	ab a1       	ldd	r26, Y+35	; 0x23
    18da:	bc a1       	ldd	r27, Y+36	; 0x24
    18dc:	a0 70       	andi	r26, 0x00	; 0
    18de:	b0 70       	andi	r27, 0x00	; 0
    18e0:	57 01       	movw	r10, r14
    18e2:	68 01       	movw	r12, r16
    18e4:	a8 2a       	or	r10, r24
    18e6:	b9 2a       	or	r11, r25
    18e8:	ca 2a       	or	r12, r26
    18ea:	db 2a       	or	r13, r27
    18ec:	a2 16       	cp	r10, r18
    18ee:	b3 06       	cpc	r11, r19
    18f0:	c4 06       	cpc	r12, r20
    18f2:	d5 06       	cpc	r13, r21
    18f4:	00 f5       	brcc	.+64     	; 0x1936 <__umoddi3+0xa64>
    18f6:	08 94       	sec
    18f8:	61 08       	sbc	r6, r1
    18fa:	71 08       	sbc	r7, r1
    18fc:	81 08       	sbc	r8, r1
    18fe:	91 08       	sbc	r9, r1
    1900:	69 a5       	ldd	r22, Y+41	; 0x29
    1902:	7a a5       	ldd	r23, Y+42	; 0x2a
    1904:	8b a5       	ldd	r24, Y+43	; 0x2b
    1906:	9c a5       	ldd	r25, Y+44	; 0x2c
    1908:	a6 0e       	add	r10, r22
    190a:	b7 1e       	adc	r11, r23
    190c:	c8 1e       	adc	r12, r24
    190e:	d9 1e       	adc	r13, r25
    1910:	a6 16       	cp	r10, r22
    1912:	b7 06       	cpc	r11, r23
    1914:	c8 06       	cpc	r12, r24
    1916:	d9 06       	cpc	r13, r25
    1918:	70 f0       	brcs	.+28     	; 0x1936 <__umoddi3+0xa64>
    191a:	a2 16       	cp	r10, r18
    191c:	b3 06       	cpc	r11, r19
    191e:	c4 06       	cpc	r12, r20
    1920:	d5 06       	cpc	r13, r21
    1922:	48 f4       	brcc	.+18     	; 0x1936 <__umoddi3+0xa64>
    1924:	08 94       	sec
    1926:	61 08       	sbc	r6, r1
    1928:	71 08       	sbc	r7, r1
    192a:	81 08       	sbc	r8, r1
    192c:	91 08       	sbc	r9, r1
    192e:	a6 0e       	add	r10, r22
    1930:	b7 1e       	adc	r11, r23
    1932:	c8 1e       	adc	r12, r24
    1934:	d9 1e       	adc	r13, r25
    1936:	d6 01       	movw	r26, r12
    1938:	c5 01       	movw	r24, r10
    193a:	82 1b       	sub	r24, r18
    193c:	93 0b       	sbc	r25, r19
    193e:	a4 0b       	sbc	r26, r20
    1940:	b5 0b       	sbc	r27, r21
    1942:	89 8f       	std	Y+25, r24	; 0x19
    1944:	9a 8f       	std	Y+26, r25	; 0x1a
    1946:	ab 8f       	std	Y+27, r26	; 0x1b
    1948:	bc 8f       	std	Y+28, r27	; 0x1c
    194a:	d1 01       	movw	r26, r2
    194c:	99 27       	eor	r25, r25
    194e:	88 27       	eor	r24, r24
    1950:	84 01       	movw	r16, r8
    1952:	73 01       	movw	r14, r6
    1954:	e8 2a       	or	r14, r24
    1956:	f9 2a       	or	r15, r25
    1958:	0a 2b       	or	r16, r26
    195a:	1b 2b       	or	r17, r27
    195c:	4f ef       	ldi	r20, 0xFF	; 255
    195e:	a4 2e       	mov	r10, r20
    1960:	4f ef       	ldi	r20, 0xFF	; 255
    1962:	b4 2e       	mov	r11, r20
    1964:	c1 2c       	mov	r12, r1
    1966:	d1 2c       	mov	r13, r1
    1968:	ae 20       	and	r10, r14
    196a:	bf 20       	and	r11, r15
    196c:	c0 22       	and	r12, r16
    196e:	d1 22       	and	r13, r17
    1970:	78 01       	movw	r14, r16
    1972:	00 27       	eor	r16, r16
    1974:	11 27       	eor	r17, r17
    1976:	6d a0       	ldd	r6, Y+37	; 0x25
    1978:	7e a0       	ldd	r7, Y+38	; 0x26
    197a:	8f a0       	ldd	r8, Y+39	; 0x27
    197c:	98 a4       	ldd	r9, Y+40	; 0x28
    197e:	4f ef       	ldi	r20, 0xFF	; 255
    1980:	5f ef       	ldi	r21, 0xFF	; 255
    1982:	60 e0       	ldi	r22, 0x00	; 0
    1984:	70 e0       	ldi	r23, 0x00	; 0
    1986:	64 22       	and	r6, r20
    1988:	75 22       	and	r7, r21
    198a:	86 22       	and	r8, r22
    198c:	97 22       	and	r9, r23
    198e:	8d a1       	ldd	r24, Y+37	; 0x25
    1990:	9e a1       	ldd	r25, Y+38	; 0x26
    1992:	af a1       	ldd	r26, Y+39	; 0x27
    1994:	b8 a5       	ldd	r27, Y+40	; 0x28
    1996:	bd 01       	movw	r22, r26
    1998:	88 27       	eor	r24, r24
    199a:	99 27       	eor	r25, r25
    199c:	65 96       	adiw	r28, 0x15	; 21
    199e:	6c af       	std	Y+60, r22	; 0x3c
    19a0:	7d af       	std	Y+61, r23	; 0x3d
    19a2:	8e af       	std	Y+62, r24	; 0x3e
    19a4:	9f af       	std	Y+63, r25	; 0x3f
    19a6:	65 97       	sbiw	r28, 0x15	; 21
    19a8:	c6 01       	movw	r24, r12
    19aa:	b5 01       	movw	r22, r10
    19ac:	a4 01       	movw	r20, r8
    19ae:	93 01       	movw	r18, r6
    19b0:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    19b4:	61 96       	adiw	r28, 0x11	; 17
    19b6:	6c af       	std	Y+60, r22	; 0x3c
    19b8:	7d af       	std	Y+61, r23	; 0x3d
    19ba:	8e af       	std	Y+62, r24	; 0x3e
    19bc:	9f af       	std	Y+63, r25	; 0x3f
    19be:	61 97       	sbiw	r28, 0x11	; 17
    19c0:	c6 01       	movw	r24, r12
    19c2:	b5 01       	movw	r22, r10
    19c4:	65 96       	adiw	r28, 0x15	; 21
    19c6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19c8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ca:	4e ad       	ldd	r20, Y+62	; 0x3e
    19cc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19ce:	65 97       	sbiw	r28, 0x15	; 21
    19d0:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    19d4:	1b 01       	movw	r2, r22
    19d6:	2c 01       	movw	r4, r24
    19d8:	c8 01       	movw	r24, r16
    19da:	b7 01       	movw	r22, r14
    19dc:	a4 01       	movw	r20, r8
    19de:	93 01       	movw	r18, r6
    19e0:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    19e4:	5b 01       	movw	r10, r22
    19e6:	6c 01       	movw	r12, r24
    19e8:	c8 01       	movw	r24, r16
    19ea:	b7 01       	movw	r22, r14
    19ec:	65 96       	adiw	r28, 0x15	; 21
    19ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    19f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    19f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    19f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    19f6:	65 97       	sbiw	r28, 0x15	; 21
    19f8:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <__mulsi3>
    19fc:	7b 01       	movw	r14, r22
    19fe:	8c 01       	movw	r16, r24
    1a00:	a6 01       	movw	r20, r12
    1a02:	95 01       	movw	r18, r10
    1a04:	22 0d       	add	r18, r2
    1a06:	33 1d       	adc	r19, r3
    1a08:	44 1d       	adc	r20, r4
    1a0a:	55 1d       	adc	r21, r5
    1a0c:	61 96       	adiw	r28, 0x11	; 17
    1a0e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a10:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a12:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a14:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a16:	61 97       	sbiw	r28, 0x11	; 17
    1a18:	c4 01       	movw	r24, r8
    1a1a:	aa 27       	eor	r26, r26
    1a1c:	bb 27       	eor	r27, r27
    1a1e:	28 0f       	add	r18, r24
    1a20:	39 1f       	adc	r19, r25
    1a22:	4a 1f       	adc	r20, r26
    1a24:	5b 1f       	adc	r21, r27
    1a26:	2a 15       	cp	r18, r10
    1a28:	3b 05       	cpc	r19, r11
    1a2a:	4c 05       	cpc	r20, r12
    1a2c:	5d 05       	cpc	r21, r13
    1a2e:	48 f4       	brcc	.+18     	; 0x1a42 <__umoddi3+0xb70>
    1a30:	81 2c       	mov	r8, r1
    1a32:	91 2c       	mov	r9, r1
    1a34:	e1 e0       	ldi	r30, 0x01	; 1
    1a36:	ae 2e       	mov	r10, r30
    1a38:	b1 2c       	mov	r11, r1
    1a3a:	e8 0c       	add	r14, r8
    1a3c:	f9 1c       	adc	r15, r9
    1a3e:	0a 1d       	adc	r16, r10
    1a40:	1b 1d       	adc	r17, r11
    1a42:	ca 01       	movw	r24, r20
    1a44:	aa 27       	eor	r26, r26
    1a46:	bb 27       	eor	r27, r27
    1a48:	57 01       	movw	r10, r14
    1a4a:	68 01       	movw	r12, r16
    1a4c:	a8 0e       	add	r10, r24
    1a4e:	b9 1e       	adc	r11, r25
    1a50:	ca 1e       	adc	r12, r26
    1a52:	db 1e       	adc	r13, r27
    1a54:	a9 01       	movw	r20, r18
    1a56:	33 27       	eor	r19, r19
    1a58:	22 27       	eor	r18, r18
    1a5a:	61 96       	adiw	r28, 0x11	; 17
    1a5c:	8c ad       	ldd	r24, Y+60	; 0x3c
    1a5e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1a60:	ae ad       	ldd	r26, Y+62	; 0x3e
    1a62:	bf ad       	ldd	r27, Y+63	; 0x3f
    1a64:	61 97       	sbiw	r28, 0x11	; 17
    1a66:	a0 70       	andi	r26, 0x00	; 0
    1a68:	b0 70       	andi	r27, 0x00	; 0
    1a6a:	28 0f       	add	r18, r24
    1a6c:	39 1f       	adc	r19, r25
    1a6e:	4a 1f       	adc	r20, r26
    1a70:	5b 1f       	adc	r21, r27
    1a72:	e9 8c       	ldd	r14, Y+25	; 0x19
    1a74:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1a76:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1a78:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1a7a:	ea 14       	cp	r14, r10
    1a7c:	fb 04       	cpc	r15, r11
    1a7e:	0c 05       	cpc	r16, r12
    1a80:	1d 05       	cpc	r17, r13
    1a82:	70 f0       	brcs	.+28     	; 0x1aa0 <__umoddi3+0xbce>
    1a84:	ae 14       	cp	r10, r14
    1a86:	bf 04       	cpc	r11, r15
    1a88:	c0 06       	cpc	r12, r16
    1a8a:	d1 06       	cpc	r13, r17
    1a8c:	69 f5       	brne	.+90     	; 0x1ae8 <__umoddi3+0xc16>
    1a8e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a90:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a92:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a94:	98 a1       	ldd	r25, Y+32	; 0x20
    1a96:	62 17       	cp	r22, r18
    1a98:	73 07       	cpc	r23, r19
    1a9a:	84 07       	cpc	r24, r20
    1a9c:	95 07       	cpc	r25, r21
    1a9e:	20 f5       	brcc	.+72     	; 0x1ae8 <__umoddi3+0xc16>
    1aa0:	da 01       	movw	r26, r20
    1aa2:	c9 01       	movw	r24, r18
    1aa4:	6d a0       	ldd	r6, Y+37	; 0x25
    1aa6:	7e a0       	ldd	r7, Y+38	; 0x26
    1aa8:	8f a0       	ldd	r8, Y+39	; 0x27
    1aaa:	98 a4       	ldd	r9, Y+40	; 0x28
    1aac:	86 19       	sub	r24, r6
    1aae:	97 09       	sbc	r25, r7
    1ab0:	a8 09       	sbc	r26, r8
    1ab2:	b9 09       	sbc	r27, r9
    1ab4:	e9 a4       	ldd	r14, Y+41	; 0x29
    1ab6:	fa a4       	ldd	r15, Y+42	; 0x2a
    1ab8:	0b a5       	ldd	r16, Y+43	; 0x2b
    1aba:	1c a5       	ldd	r17, Y+44	; 0x2c
    1abc:	ae 18       	sub	r10, r14
    1abe:	bf 08       	sbc	r11, r15
    1ac0:	c0 0a       	sbc	r12, r16
    1ac2:	d1 0a       	sbc	r13, r17
    1ac4:	ee 24       	eor	r14, r14
    1ac6:	ff 24       	eor	r15, r15
    1ac8:	87 01       	movw	r16, r14
    1aca:	28 17       	cp	r18, r24
    1acc:	39 07       	cpc	r19, r25
    1ace:	4a 07       	cpc	r20, r26
    1ad0:	5b 07       	cpc	r21, r27
    1ad2:	28 f4       	brcc	.+10     	; 0x1ade <__umoddi3+0xc0c>
    1ad4:	21 e0       	ldi	r18, 0x01	; 1
    1ad6:	e2 2e       	mov	r14, r18
    1ad8:	f1 2c       	mov	r15, r1
    1ada:	01 2d       	mov	r16, r1
    1adc:	11 2d       	mov	r17, r1
    1ade:	ae 18       	sub	r10, r14
    1ae0:	bf 08       	sbc	r11, r15
    1ae2:	c0 0a       	sbc	r12, r16
    1ae4:	d1 0a       	sbc	r13, r17
    1ae6:	02 c0       	rjmp	.+4      	; 0x1aec <__umoddi3+0xc1a>
    1ae8:	da 01       	movw	r26, r20
    1aea:	c9 01       	movw	r24, r18
    1aec:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1aee:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1af0:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1af2:	98 a0       	ldd	r9, Y+32	; 0x20
    1af4:	68 1a       	sub	r6, r24
    1af6:	79 0a       	sbc	r7, r25
    1af8:	8a 0a       	sbc	r8, r26
    1afa:	9b 0a       	sbc	r9, r27
    1afc:	49 8d       	ldd	r20, Y+25	; 0x19
    1afe:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b00:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b02:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b04:	4a 19       	sub	r20, r10
    1b06:	5b 09       	sbc	r21, r11
    1b08:	6c 09       	sbc	r22, r12
    1b0a:	7d 09       	sbc	r23, r13
    1b0c:	5a 01       	movw	r10, r20
    1b0e:	6b 01       	movw	r12, r22
    1b10:	22 24       	eor	r2, r2
    1b12:	33 24       	eor	r3, r3
    1b14:	21 01       	movw	r4, r2
    1b16:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b18:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b1a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b1c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b1e:	66 15       	cp	r22, r6
    1b20:	77 05       	cpc	r23, r7
    1b22:	88 05       	cpc	r24, r8
    1b24:	99 05       	cpc	r25, r9
    1b26:	28 f4       	brcc	.+10     	; 0x1b32 <__umoddi3+0xc60>
    1b28:	81 e0       	ldi	r24, 0x01	; 1
    1b2a:	28 2e       	mov	r2, r24
    1b2c:	31 2c       	mov	r3, r1
    1b2e:	41 2c       	mov	r4, r1
    1b30:	51 2c       	mov	r5, r1
    1b32:	86 01       	movw	r16, r12
    1b34:	75 01       	movw	r14, r10
    1b36:	e2 18       	sub	r14, r2
    1b38:	f3 08       	sbc	r15, r3
    1b3a:	04 09       	sbc	r16, r4
    1b3c:	15 09       	sbc	r17, r5
    1b3e:	a8 01       	movw	r20, r16
    1b40:	97 01       	movw	r18, r14
    1b42:	66 96       	adiw	r28, 0x16	; 22
    1b44:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b46:	66 97       	sbiw	r28, 0x16	; 22
    1b48:	04 c0       	rjmp	.+8      	; 0x1b52 <__umoddi3+0xc80>
    1b4a:	22 0f       	add	r18, r18
    1b4c:	33 1f       	adc	r19, r19
    1b4e:	44 1f       	adc	r20, r20
    1b50:	55 1f       	adc	r21, r21
    1b52:	0a 94       	dec	r0
    1b54:	d2 f7       	brpl	.-12     	; 0x1b4a <__umoddi3+0xc78>
    1b56:	d4 01       	movw	r26, r8
    1b58:	c3 01       	movw	r24, r6
    1b5a:	67 96       	adiw	r28, 0x17	; 23
    1b5c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b5e:	67 97       	sbiw	r28, 0x17	; 23
    1b60:	04 c0       	rjmp	.+8      	; 0x1b6a <__umoddi3+0xc98>
    1b62:	b6 95       	lsr	r27
    1b64:	a7 95       	ror	r26
    1b66:	97 95       	ror	r25
    1b68:	87 95       	ror	r24
    1b6a:	0a 94       	dec	r0
    1b6c:	d2 f7       	brpl	.-12     	; 0x1b62 <__umoddi3+0xc90>
    1b6e:	28 2b       	or	r18, r24
    1b70:	39 2b       	or	r19, r25
    1b72:	4a 2b       	or	r20, r26
    1b74:	5b 2b       	or	r21, r27
    1b76:	29 8b       	std	Y+17, r18	; 0x11
    1b78:	3a 8b       	std	Y+18, r19	; 0x12
    1b7a:	4b 8b       	std	Y+19, r20	; 0x13
    1b7c:	5c 8b       	std	Y+20, r21	; 0x14
    1b7e:	67 96       	adiw	r28, 0x17	; 23
    1b80:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b82:	67 97       	sbiw	r28, 0x17	; 23
    1b84:	04 c0       	rjmp	.+8      	; 0x1b8e <__umoddi3+0xcbc>
    1b86:	16 95       	lsr	r17
    1b88:	07 95       	ror	r16
    1b8a:	f7 94       	ror	r15
    1b8c:	e7 94       	ror	r14
    1b8e:	0a 94       	dec	r0
    1b90:	d2 f7       	brpl	.-12     	; 0x1b86 <__umoddi3+0xcb4>
    1b92:	ed 8a       	std	Y+21, r14	; 0x15
    1b94:	fe 8a       	std	Y+22, r15	; 0x16
    1b96:	0f 8b       	std	Y+23, r16	; 0x17
    1b98:	18 8f       	std	Y+24, r17	; 0x18
    1b9a:	3a 89       	ldd	r19, Y+18	; 0x12
    1b9c:	4b 89       	ldd	r20, Y+19	; 0x13
    1b9e:	5c 89       	ldd	r21, Y+20	; 0x14
    1ba0:	6e 2d       	mov	r22, r14
    1ba2:	7e 89       	ldd	r23, Y+22	; 0x16
    1ba4:	8f 89       	ldd	r24, Y+23	; 0x17
    1ba6:	98 8d       	ldd	r25, Y+24	; 0x18
    1ba8:	c5 5a       	subi	r28, 0xA5	; 165
    1baa:	df 4f       	sbci	r29, 0xFF	; 255
    1bac:	e2 e1       	ldi	r30, 0x12	; 18
    1bae:	0c 94 89 37 	jmp	0x6f12	; 0x6f12 <__epilogue_restores__>

00001bb2 <_fpadd_parts>:
    1bb2:	a0 e0       	ldi	r26, 0x00	; 0
    1bb4:	b0 e0       	ldi	r27, 0x00	; 0
    1bb6:	ef ed       	ldi	r30, 0xDF	; 223
    1bb8:	fd e0       	ldi	r31, 0x0D	; 13
    1bba:	0c 94 6d 37 	jmp	0x6eda	; 0x6eda <__prologue_saves__>
    1bbe:	dc 01       	movw	r26, r24
    1bc0:	2b 01       	movw	r4, r22
    1bc2:	fa 01       	movw	r30, r20
    1bc4:	9c 91       	ld	r25, X
    1bc6:	92 30       	cpi	r25, 0x02	; 2
    1bc8:	08 f4       	brcc	.+2      	; 0x1bcc <_fpadd_parts+0x1a>
    1bca:	39 c1       	rjmp	.+626    	; 0x1e3e <_fpadd_parts+0x28c>
    1bcc:	eb 01       	movw	r28, r22
    1bce:	88 81       	ld	r24, Y
    1bd0:	82 30       	cpi	r24, 0x02	; 2
    1bd2:	08 f4       	brcc	.+2      	; 0x1bd6 <_fpadd_parts+0x24>
    1bd4:	33 c1       	rjmp	.+614    	; 0x1e3c <_fpadd_parts+0x28a>
    1bd6:	94 30       	cpi	r25, 0x04	; 4
    1bd8:	69 f4       	brne	.+26     	; 0x1bf4 <_fpadd_parts+0x42>
    1bda:	84 30       	cpi	r24, 0x04	; 4
    1bdc:	09 f0       	breq	.+2      	; 0x1be0 <_fpadd_parts+0x2e>
    1bde:	2f c1       	rjmp	.+606    	; 0x1e3e <_fpadd_parts+0x28c>
    1be0:	11 96       	adiw	r26, 0x01	; 1
    1be2:	9c 91       	ld	r25, X
    1be4:	11 97       	sbiw	r26, 0x01	; 1
    1be6:	89 81       	ldd	r24, Y+1	; 0x01
    1be8:	98 17       	cp	r25, r24
    1bea:	09 f4       	brne	.+2      	; 0x1bee <_fpadd_parts+0x3c>
    1bec:	28 c1       	rjmp	.+592    	; 0x1e3e <_fpadd_parts+0x28c>
    1bee:	a4 e9       	ldi	r26, 0x94	; 148
    1bf0:	b0 e0       	ldi	r27, 0x00	; 0
    1bf2:	25 c1       	rjmp	.+586    	; 0x1e3e <_fpadd_parts+0x28c>
    1bf4:	84 30       	cpi	r24, 0x04	; 4
    1bf6:	09 f4       	brne	.+2      	; 0x1bfa <_fpadd_parts+0x48>
    1bf8:	21 c1       	rjmp	.+578    	; 0x1e3c <_fpadd_parts+0x28a>
    1bfa:	82 30       	cpi	r24, 0x02	; 2
    1bfc:	a9 f4       	brne	.+42     	; 0x1c28 <_fpadd_parts+0x76>
    1bfe:	92 30       	cpi	r25, 0x02	; 2
    1c00:	09 f0       	breq	.+2      	; 0x1c04 <_fpadd_parts+0x52>
    1c02:	1d c1       	rjmp	.+570    	; 0x1e3e <_fpadd_parts+0x28c>
    1c04:	9a 01       	movw	r18, r20
    1c06:	ad 01       	movw	r20, r26
    1c08:	88 e0       	ldi	r24, 0x08	; 8
    1c0a:	ea 01       	movw	r28, r20
    1c0c:	09 90       	ld	r0, Y+
    1c0e:	ae 01       	movw	r20, r28
    1c10:	e9 01       	movw	r28, r18
    1c12:	09 92       	st	Y+, r0
    1c14:	9e 01       	movw	r18, r28
    1c16:	81 50       	subi	r24, 0x01	; 1
    1c18:	c1 f7       	brne	.-16     	; 0x1c0a <_fpadd_parts+0x58>
    1c1a:	e2 01       	movw	r28, r4
    1c1c:	89 81       	ldd	r24, Y+1	; 0x01
    1c1e:	11 96       	adiw	r26, 0x01	; 1
    1c20:	9c 91       	ld	r25, X
    1c22:	89 23       	and	r24, r25
    1c24:	81 83       	std	Z+1, r24	; 0x01
    1c26:	08 c1       	rjmp	.+528    	; 0x1e38 <_fpadd_parts+0x286>
    1c28:	92 30       	cpi	r25, 0x02	; 2
    1c2a:	09 f4       	brne	.+2      	; 0x1c2e <_fpadd_parts+0x7c>
    1c2c:	07 c1       	rjmp	.+526    	; 0x1e3c <_fpadd_parts+0x28a>
    1c2e:	12 96       	adiw	r26, 0x02	; 2
    1c30:	2d 90       	ld	r2, X+
    1c32:	3c 90       	ld	r3, X
    1c34:	13 97       	sbiw	r26, 0x03	; 3
    1c36:	eb 01       	movw	r28, r22
    1c38:	8a 81       	ldd	r24, Y+2	; 0x02
    1c3a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c3c:	14 96       	adiw	r26, 0x04	; 4
    1c3e:	ad 90       	ld	r10, X+
    1c40:	bd 90       	ld	r11, X+
    1c42:	cd 90       	ld	r12, X+
    1c44:	dc 90       	ld	r13, X
    1c46:	17 97       	sbiw	r26, 0x07	; 7
    1c48:	ec 80       	ldd	r14, Y+4	; 0x04
    1c4a:	fd 80       	ldd	r15, Y+5	; 0x05
    1c4c:	0e 81       	ldd	r16, Y+6	; 0x06
    1c4e:	1f 81       	ldd	r17, Y+7	; 0x07
    1c50:	91 01       	movw	r18, r2
    1c52:	28 1b       	sub	r18, r24
    1c54:	39 0b       	sbc	r19, r25
    1c56:	b9 01       	movw	r22, r18
    1c58:	37 ff       	sbrs	r19, 7
    1c5a:	04 c0       	rjmp	.+8      	; 0x1c64 <_fpadd_parts+0xb2>
    1c5c:	66 27       	eor	r22, r22
    1c5e:	77 27       	eor	r23, r23
    1c60:	62 1b       	sub	r22, r18
    1c62:	73 0b       	sbc	r23, r19
    1c64:	60 32       	cpi	r22, 0x20	; 32
    1c66:	71 05       	cpc	r23, r1
    1c68:	0c f0       	brlt	.+2      	; 0x1c6c <_fpadd_parts+0xba>
    1c6a:	61 c0       	rjmp	.+194    	; 0x1d2e <_fpadd_parts+0x17c>
    1c6c:	12 16       	cp	r1, r18
    1c6e:	13 06       	cpc	r1, r19
    1c70:	6c f5       	brge	.+90     	; 0x1ccc <_fpadd_parts+0x11a>
    1c72:	37 01       	movw	r6, r14
    1c74:	48 01       	movw	r8, r16
    1c76:	06 2e       	mov	r0, r22
    1c78:	04 c0       	rjmp	.+8      	; 0x1c82 <_fpadd_parts+0xd0>
    1c7a:	96 94       	lsr	r9
    1c7c:	87 94       	ror	r8
    1c7e:	77 94       	ror	r7
    1c80:	67 94       	ror	r6
    1c82:	0a 94       	dec	r0
    1c84:	d2 f7       	brpl	.-12     	; 0x1c7a <_fpadd_parts+0xc8>
    1c86:	21 e0       	ldi	r18, 0x01	; 1
    1c88:	30 e0       	ldi	r19, 0x00	; 0
    1c8a:	40 e0       	ldi	r20, 0x00	; 0
    1c8c:	50 e0       	ldi	r21, 0x00	; 0
    1c8e:	04 c0       	rjmp	.+8      	; 0x1c98 <_fpadd_parts+0xe6>
    1c90:	22 0f       	add	r18, r18
    1c92:	33 1f       	adc	r19, r19
    1c94:	44 1f       	adc	r20, r20
    1c96:	55 1f       	adc	r21, r21
    1c98:	6a 95       	dec	r22
    1c9a:	d2 f7       	brpl	.-12     	; 0x1c90 <_fpadd_parts+0xde>
    1c9c:	21 50       	subi	r18, 0x01	; 1
    1c9e:	30 40       	sbci	r19, 0x00	; 0
    1ca0:	40 40       	sbci	r20, 0x00	; 0
    1ca2:	50 40       	sbci	r21, 0x00	; 0
    1ca4:	2e 21       	and	r18, r14
    1ca6:	3f 21       	and	r19, r15
    1ca8:	40 23       	and	r20, r16
    1caa:	51 23       	and	r21, r17
    1cac:	21 15       	cp	r18, r1
    1cae:	31 05       	cpc	r19, r1
    1cb0:	41 05       	cpc	r20, r1
    1cb2:	51 05       	cpc	r21, r1
    1cb4:	21 f0       	breq	.+8      	; 0x1cbe <_fpadd_parts+0x10c>
    1cb6:	21 e0       	ldi	r18, 0x01	; 1
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	40 e0       	ldi	r20, 0x00	; 0
    1cbc:	50 e0       	ldi	r21, 0x00	; 0
    1cbe:	79 01       	movw	r14, r18
    1cc0:	8a 01       	movw	r16, r20
    1cc2:	e6 28       	or	r14, r6
    1cc4:	f7 28       	or	r15, r7
    1cc6:	08 29       	or	r16, r8
    1cc8:	19 29       	or	r17, r9
    1cca:	3c c0       	rjmp	.+120    	; 0x1d44 <_fpadd_parts+0x192>
    1ccc:	23 2b       	or	r18, r19
    1cce:	d1 f1       	breq	.+116    	; 0x1d44 <_fpadd_parts+0x192>
    1cd0:	26 0e       	add	r2, r22
    1cd2:	37 1e       	adc	r3, r23
    1cd4:	35 01       	movw	r6, r10
    1cd6:	46 01       	movw	r8, r12
    1cd8:	06 2e       	mov	r0, r22
    1cda:	04 c0       	rjmp	.+8      	; 0x1ce4 <_fpadd_parts+0x132>
    1cdc:	96 94       	lsr	r9
    1cde:	87 94       	ror	r8
    1ce0:	77 94       	ror	r7
    1ce2:	67 94       	ror	r6
    1ce4:	0a 94       	dec	r0
    1ce6:	d2 f7       	brpl	.-12     	; 0x1cdc <_fpadd_parts+0x12a>
    1ce8:	21 e0       	ldi	r18, 0x01	; 1
    1cea:	30 e0       	ldi	r19, 0x00	; 0
    1cec:	40 e0       	ldi	r20, 0x00	; 0
    1cee:	50 e0       	ldi	r21, 0x00	; 0
    1cf0:	04 c0       	rjmp	.+8      	; 0x1cfa <_fpadd_parts+0x148>
    1cf2:	22 0f       	add	r18, r18
    1cf4:	33 1f       	adc	r19, r19
    1cf6:	44 1f       	adc	r20, r20
    1cf8:	55 1f       	adc	r21, r21
    1cfa:	6a 95       	dec	r22
    1cfc:	d2 f7       	brpl	.-12     	; 0x1cf2 <_fpadd_parts+0x140>
    1cfe:	21 50       	subi	r18, 0x01	; 1
    1d00:	30 40       	sbci	r19, 0x00	; 0
    1d02:	40 40       	sbci	r20, 0x00	; 0
    1d04:	50 40       	sbci	r21, 0x00	; 0
    1d06:	2a 21       	and	r18, r10
    1d08:	3b 21       	and	r19, r11
    1d0a:	4c 21       	and	r20, r12
    1d0c:	5d 21       	and	r21, r13
    1d0e:	21 15       	cp	r18, r1
    1d10:	31 05       	cpc	r19, r1
    1d12:	41 05       	cpc	r20, r1
    1d14:	51 05       	cpc	r21, r1
    1d16:	21 f0       	breq	.+8      	; 0x1d20 <_fpadd_parts+0x16e>
    1d18:	21 e0       	ldi	r18, 0x01	; 1
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	40 e0       	ldi	r20, 0x00	; 0
    1d1e:	50 e0       	ldi	r21, 0x00	; 0
    1d20:	59 01       	movw	r10, r18
    1d22:	6a 01       	movw	r12, r20
    1d24:	a6 28       	or	r10, r6
    1d26:	b7 28       	or	r11, r7
    1d28:	c8 28       	or	r12, r8
    1d2a:	d9 28       	or	r13, r9
    1d2c:	0b c0       	rjmp	.+22     	; 0x1d44 <_fpadd_parts+0x192>
    1d2e:	82 15       	cp	r24, r2
    1d30:	93 05       	cpc	r25, r3
    1d32:	2c f0       	brlt	.+10     	; 0x1d3e <_fpadd_parts+0x18c>
    1d34:	1c 01       	movw	r2, r24
    1d36:	aa 24       	eor	r10, r10
    1d38:	bb 24       	eor	r11, r11
    1d3a:	65 01       	movw	r12, r10
    1d3c:	03 c0       	rjmp	.+6      	; 0x1d44 <_fpadd_parts+0x192>
    1d3e:	ee 24       	eor	r14, r14
    1d40:	ff 24       	eor	r15, r15
    1d42:	87 01       	movw	r16, r14
    1d44:	11 96       	adiw	r26, 0x01	; 1
    1d46:	9c 91       	ld	r25, X
    1d48:	d2 01       	movw	r26, r4
    1d4a:	11 96       	adiw	r26, 0x01	; 1
    1d4c:	8c 91       	ld	r24, X
    1d4e:	98 17       	cp	r25, r24
    1d50:	09 f4       	brne	.+2      	; 0x1d54 <_fpadd_parts+0x1a2>
    1d52:	45 c0       	rjmp	.+138    	; 0x1dde <_fpadd_parts+0x22c>
    1d54:	99 23       	and	r25, r25
    1d56:	39 f0       	breq	.+14     	; 0x1d66 <_fpadd_parts+0x1b4>
    1d58:	a8 01       	movw	r20, r16
    1d5a:	97 01       	movw	r18, r14
    1d5c:	2a 19       	sub	r18, r10
    1d5e:	3b 09       	sbc	r19, r11
    1d60:	4c 09       	sbc	r20, r12
    1d62:	5d 09       	sbc	r21, r13
    1d64:	06 c0       	rjmp	.+12     	; 0x1d72 <_fpadd_parts+0x1c0>
    1d66:	a6 01       	movw	r20, r12
    1d68:	95 01       	movw	r18, r10
    1d6a:	2e 19       	sub	r18, r14
    1d6c:	3f 09       	sbc	r19, r15
    1d6e:	40 0b       	sbc	r20, r16
    1d70:	51 0b       	sbc	r21, r17
    1d72:	57 fd       	sbrc	r21, 7
    1d74:	08 c0       	rjmp	.+16     	; 0x1d86 <_fpadd_parts+0x1d4>
    1d76:	11 82       	std	Z+1, r1	; 0x01
    1d78:	33 82       	std	Z+3, r3	; 0x03
    1d7a:	22 82       	std	Z+2, r2	; 0x02
    1d7c:	24 83       	std	Z+4, r18	; 0x04
    1d7e:	35 83       	std	Z+5, r19	; 0x05
    1d80:	46 83       	std	Z+6, r20	; 0x06
    1d82:	57 83       	std	Z+7, r21	; 0x07
    1d84:	1d c0       	rjmp	.+58     	; 0x1dc0 <_fpadd_parts+0x20e>
    1d86:	81 e0       	ldi	r24, 0x01	; 1
    1d88:	81 83       	std	Z+1, r24	; 0x01
    1d8a:	33 82       	std	Z+3, r3	; 0x03
    1d8c:	22 82       	std	Z+2, r2	; 0x02
    1d8e:	88 27       	eor	r24, r24
    1d90:	99 27       	eor	r25, r25
    1d92:	dc 01       	movw	r26, r24
    1d94:	82 1b       	sub	r24, r18
    1d96:	93 0b       	sbc	r25, r19
    1d98:	a4 0b       	sbc	r26, r20
    1d9a:	b5 0b       	sbc	r27, r21
    1d9c:	84 83       	std	Z+4, r24	; 0x04
    1d9e:	95 83       	std	Z+5, r25	; 0x05
    1da0:	a6 83       	std	Z+6, r26	; 0x06
    1da2:	b7 83       	std	Z+7, r27	; 0x07
    1da4:	0d c0       	rjmp	.+26     	; 0x1dc0 <_fpadd_parts+0x20e>
    1da6:	22 0f       	add	r18, r18
    1da8:	33 1f       	adc	r19, r19
    1daa:	44 1f       	adc	r20, r20
    1dac:	55 1f       	adc	r21, r21
    1dae:	24 83       	std	Z+4, r18	; 0x04
    1db0:	35 83       	std	Z+5, r19	; 0x05
    1db2:	46 83       	std	Z+6, r20	; 0x06
    1db4:	57 83       	std	Z+7, r21	; 0x07
    1db6:	82 81       	ldd	r24, Z+2	; 0x02
    1db8:	93 81       	ldd	r25, Z+3	; 0x03
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	93 83       	std	Z+3, r25	; 0x03
    1dbe:	82 83       	std	Z+2, r24	; 0x02
    1dc0:	24 81       	ldd	r18, Z+4	; 0x04
    1dc2:	35 81       	ldd	r19, Z+5	; 0x05
    1dc4:	46 81       	ldd	r20, Z+6	; 0x06
    1dc6:	57 81       	ldd	r21, Z+7	; 0x07
    1dc8:	da 01       	movw	r26, r20
    1dca:	c9 01       	movw	r24, r18
    1dcc:	01 97       	sbiw	r24, 0x01	; 1
    1dce:	a1 09       	sbc	r26, r1
    1dd0:	b1 09       	sbc	r27, r1
    1dd2:	8f 5f       	subi	r24, 0xFF	; 255
    1dd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd6:	af 4f       	sbci	r26, 0xFF	; 255
    1dd8:	bf 43       	sbci	r27, 0x3F	; 63
    1dda:	28 f3       	brcs	.-54     	; 0x1da6 <_fpadd_parts+0x1f4>
    1ddc:	0b c0       	rjmp	.+22     	; 0x1df4 <_fpadd_parts+0x242>
    1dde:	91 83       	std	Z+1, r25	; 0x01
    1de0:	33 82       	std	Z+3, r3	; 0x03
    1de2:	22 82       	std	Z+2, r2	; 0x02
    1de4:	ea 0c       	add	r14, r10
    1de6:	fb 1c       	adc	r15, r11
    1de8:	0c 1d       	adc	r16, r12
    1dea:	1d 1d       	adc	r17, r13
    1dec:	e4 82       	std	Z+4, r14	; 0x04
    1dee:	f5 82       	std	Z+5, r15	; 0x05
    1df0:	06 83       	std	Z+6, r16	; 0x06
    1df2:	17 83       	std	Z+7, r17	; 0x07
    1df4:	83 e0       	ldi	r24, 0x03	; 3
    1df6:	80 83       	st	Z, r24
    1df8:	24 81       	ldd	r18, Z+4	; 0x04
    1dfa:	35 81       	ldd	r19, Z+5	; 0x05
    1dfc:	46 81       	ldd	r20, Z+6	; 0x06
    1dfe:	57 81       	ldd	r21, Z+7	; 0x07
    1e00:	57 ff       	sbrs	r21, 7
    1e02:	1a c0       	rjmp	.+52     	; 0x1e38 <_fpadd_parts+0x286>
    1e04:	c9 01       	movw	r24, r18
    1e06:	aa 27       	eor	r26, r26
    1e08:	97 fd       	sbrc	r25, 7
    1e0a:	a0 95       	com	r26
    1e0c:	ba 2f       	mov	r27, r26
    1e0e:	81 70       	andi	r24, 0x01	; 1
    1e10:	90 70       	andi	r25, 0x00	; 0
    1e12:	a0 70       	andi	r26, 0x00	; 0
    1e14:	b0 70       	andi	r27, 0x00	; 0
    1e16:	56 95       	lsr	r21
    1e18:	47 95       	ror	r20
    1e1a:	37 95       	ror	r19
    1e1c:	27 95       	ror	r18
    1e1e:	82 2b       	or	r24, r18
    1e20:	93 2b       	or	r25, r19
    1e22:	a4 2b       	or	r26, r20
    1e24:	b5 2b       	or	r27, r21
    1e26:	84 83       	std	Z+4, r24	; 0x04
    1e28:	95 83       	std	Z+5, r25	; 0x05
    1e2a:	a6 83       	std	Z+6, r26	; 0x06
    1e2c:	b7 83       	std	Z+7, r27	; 0x07
    1e2e:	82 81       	ldd	r24, Z+2	; 0x02
    1e30:	93 81       	ldd	r25, Z+3	; 0x03
    1e32:	01 96       	adiw	r24, 0x01	; 1
    1e34:	93 83       	std	Z+3, r25	; 0x03
    1e36:	82 83       	std	Z+2, r24	; 0x02
    1e38:	df 01       	movw	r26, r30
    1e3a:	01 c0       	rjmp	.+2      	; 0x1e3e <_fpadd_parts+0x28c>
    1e3c:	d2 01       	movw	r26, r4
    1e3e:	cd 01       	movw	r24, r26
    1e40:	cd b7       	in	r28, 0x3d	; 61
    1e42:	de b7       	in	r29, 0x3e	; 62
    1e44:	e2 e1       	ldi	r30, 0x12	; 18
    1e46:	0c 94 89 37 	jmp	0x6f12	; 0x6f12 <__epilogue_restores__>

00001e4a <__subsf3>:
    1e4a:	a0 e2       	ldi	r26, 0x20	; 32
    1e4c:	b0 e0       	ldi	r27, 0x00	; 0
    1e4e:	eb e2       	ldi	r30, 0x2B	; 43
    1e50:	ff e0       	ldi	r31, 0x0F	; 15
    1e52:	0c 94 79 37 	jmp	0x6ef2	; 0x6ef2 <__prologue_saves__+0x18>
    1e56:	69 83       	std	Y+1, r22	; 0x01
    1e58:	7a 83       	std	Y+2, r23	; 0x02
    1e5a:	8b 83       	std	Y+3, r24	; 0x03
    1e5c:	9c 83       	std	Y+4, r25	; 0x04
    1e5e:	2d 83       	std	Y+5, r18	; 0x05
    1e60:	3e 83       	std	Y+6, r19	; 0x06
    1e62:	4f 83       	std	Y+7, r20	; 0x07
    1e64:	58 87       	std	Y+8, r21	; 0x08
    1e66:	e9 e0       	ldi	r30, 0x09	; 9
    1e68:	ee 2e       	mov	r14, r30
    1e6a:	f1 2c       	mov	r15, r1
    1e6c:	ec 0e       	add	r14, r28
    1e6e:	fd 1e       	adc	r15, r29
    1e70:	ce 01       	movw	r24, r28
    1e72:	01 96       	adiw	r24, 0x01	; 1
    1e74:	b7 01       	movw	r22, r14
    1e76:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1e7a:	8e 01       	movw	r16, r28
    1e7c:	0f 5e       	subi	r16, 0xEF	; 239
    1e7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e80:	ce 01       	movw	r24, r28
    1e82:	05 96       	adiw	r24, 0x05	; 5
    1e84:	b8 01       	movw	r22, r16
    1e86:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1e8a:	8a 89       	ldd	r24, Y+18	; 0x12
    1e8c:	91 e0       	ldi	r25, 0x01	; 1
    1e8e:	89 27       	eor	r24, r25
    1e90:	8a 8b       	std	Y+18, r24	; 0x12
    1e92:	c7 01       	movw	r24, r14
    1e94:	b8 01       	movw	r22, r16
    1e96:	ae 01       	movw	r20, r28
    1e98:	47 5e       	subi	r20, 0xE7	; 231
    1e9a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e9c:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_fpadd_parts>
    1ea0:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    1ea4:	a0 96       	adiw	r28, 0x20	; 32
    1ea6:	e6 e0       	ldi	r30, 0x06	; 6
    1ea8:	0c 94 95 37 	jmp	0x6f2a	; 0x6f2a <__epilogue_restores__+0x18>

00001eac <__addsf3>:
    1eac:	a0 e2       	ldi	r26, 0x20	; 32
    1eae:	b0 e0       	ldi	r27, 0x00	; 0
    1eb0:	ec e5       	ldi	r30, 0x5C	; 92
    1eb2:	ff e0       	ldi	r31, 0x0F	; 15
    1eb4:	0c 94 79 37 	jmp	0x6ef2	; 0x6ef2 <__prologue_saves__+0x18>
    1eb8:	69 83       	std	Y+1, r22	; 0x01
    1eba:	7a 83       	std	Y+2, r23	; 0x02
    1ebc:	8b 83       	std	Y+3, r24	; 0x03
    1ebe:	9c 83       	std	Y+4, r25	; 0x04
    1ec0:	2d 83       	std	Y+5, r18	; 0x05
    1ec2:	3e 83       	std	Y+6, r19	; 0x06
    1ec4:	4f 83       	std	Y+7, r20	; 0x07
    1ec6:	58 87       	std	Y+8, r21	; 0x08
    1ec8:	f9 e0       	ldi	r31, 0x09	; 9
    1eca:	ef 2e       	mov	r14, r31
    1ecc:	f1 2c       	mov	r15, r1
    1ece:	ec 0e       	add	r14, r28
    1ed0:	fd 1e       	adc	r15, r29
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	01 96       	adiw	r24, 0x01	; 1
    1ed6:	b7 01       	movw	r22, r14
    1ed8:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1edc:	8e 01       	movw	r16, r28
    1ede:	0f 5e       	subi	r16, 0xEF	; 239
    1ee0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ee2:	ce 01       	movw	r24, r28
    1ee4:	05 96       	adiw	r24, 0x05	; 5
    1ee6:	b8 01       	movw	r22, r16
    1ee8:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1eec:	c7 01       	movw	r24, r14
    1eee:	b8 01       	movw	r22, r16
    1ef0:	ae 01       	movw	r20, r28
    1ef2:	47 5e       	subi	r20, 0xE7	; 231
    1ef4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ef6:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_fpadd_parts>
    1efa:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    1efe:	a0 96       	adiw	r28, 0x20	; 32
    1f00:	e6 e0       	ldi	r30, 0x06	; 6
    1f02:	0c 94 95 37 	jmp	0x6f2a	; 0x6f2a <__epilogue_restores__+0x18>

00001f06 <__mulsf3>:
    1f06:	a0 e2       	ldi	r26, 0x20	; 32
    1f08:	b0 e0       	ldi	r27, 0x00	; 0
    1f0a:	e9 e8       	ldi	r30, 0x89	; 137
    1f0c:	ff e0       	ldi	r31, 0x0F	; 15
    1f0e:	0c 94 6d 37 	jmp	0x6eda	; 0x6eda <__prologue_saves__>
    1f12:	69 83       	std	Y+1, r22	; 0x01
    1f14:	7a 83       	std	Y+2, r23	; 0x02
    1f16:	8b 83       	std	Y+3, r24	; 0x03
    1f18:	9c 83       	std	Y+4, r25	; 0x04
    1f1a:	2d 83       	std	Y+5, r18	; 0x05
    1f1c:	3e 83       	std	Y+6, r19	; 0x06
    1f1e:	4f 83       	std	Y+7, r20	; 0x07
    1f20:	58 87       	std	Y+8, r21	; 0x08
    1f22:	ce 01       	movw	r24, r28
    1f24:	01 96       	adiw	r24, 0x01	; 1
    1f26:	be 01       	movw	r22, r28
    1f28:	67 5f       	subi	r22, 0xF7	; 247
    1f2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f2c:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1f30:	ce 01       	movw	r24, r28
    1f32:	05 96       	adiw	r24, 0x05	; 5
    1f34:	be 01       	movw	r22, r28
    1f36:	6f 5e       	subi	r22, 0xEF	; 239
    1f38:	7f 4f       	sbci	r23, 0xFF	; 255
    1f3a:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    1f3e:	99 85       	ldd	r25, Y+9	; 0x09
    1f40:	92 30       	cpi	r25, 0x02	; 2
    1f42:	88 f0       	brcs	.+34     	; 0x1f66 <__mulsf3+0x60>
    1f44:	89 89       	ldd	r24, Y+17	; 0x11
    1f46:	82 30       	cpi	r24, 0x02	; 2
    1f48:	c8 f0       	brcs	.+50     	; 0x1f7c <__mulsf3+0x76>
    1f4a:	94 30       	cpi	r25, 0x04	; 4
    1f4c:	19 f4       	brne	.+6      	; 0x1f54 <__mulsf3+0x4e>
    1f4e:	82 30       	cpi	r24, 0x02	; 2
    1f50:	51 f4       	brne	.+20     	; 0x1f66 <__mulsf3+0x60>
    1f52:	04 c0       	rjmp	.+8      	; 0x1f5c <__mulsf3+0x56>
    1f54:	84 30       	cpi	r24, 0x04	; 4
    1f56:	29 f4       	brne	.+10     	; 0x1f62 <__mulsf3+0x5c>
    1f58:	92 30       	cpi	r25, 0x02	; 2
    1f5a:	81 f4       	brne	.+32     	; 0x1f7c <__mulsf3+0x76>
    1f5c:	84 e9       	ldi	r24, 0x94	; 148
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	c6 c0       	rjmp	.+396    	; 0x20ee <__mulsf3+0x1e8>
    1f62:	92 30       	cpi	r25, 0x02	; 2
    1f64:	49 f4       	brne	.+18     	; 0x1f78 <__mulsf3+0x72>
    1f66:	20 e0       	ldi	r18, 0x00	; 0
    1f68:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f6a:	8a 89       	ldd	r24, Y+18	; 0x12
    1f6c:	98 13       	cpse	r25, r24
    1f6e:	21 e0       	ldi	r18, 0x01	; 1
    1f70:	2a 87       	std	Y+10, r18	; 0x0a
    1f72:	ce 01       	movw	r24, r28
    1f74:	09 96       	adiw	r24, 0x09	; 9
    1f76:	bb c0       	rjmp	.+374    	; 0x20ee <__mulsf3+0x1e8>
    1f78:	82 30       	cpi	r24, 0x02	; 2
    1f7a:	49 f4       	brne	.+18     	; 0x1f8e <__mulsf3+0x88>
    1f7c:	20 e0       	ldi	r18, 0x00	; 0
    1f7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f80:	8a 89       	ldd	r24, Y+18	; 0x12
    1f82:	98 13       	cpse	r25, r24
    1f84:	21 e0       	ldi	r18, 0x01	; 1
    1f86:	2a 8b       	std	Y+18, r18	; 0x12
    1f88:	ce 01       	movw	r24, r28
    1f8a:	41 96       	adiw	r24, 0x11	; 17
    1f8c:	b0 c0       	rjmp	.+352    	; 0x20ee <__mulsf3+0x1e8>
    1f8e:	2d 84       	ldd	r2, Y+13	; 0x0d
    1f90:	3e 84       	ldd	r3, Y+14	; 0x0e
    1f92:	4f 84       	ldd	r4, Y+15	; 0x0f
    1f94:	58 88       	ldd	r5, Y+16	; 0x10
    1f96:	6d 88       	ldd	r6, Y+21	; 0x15
    1f98:	7e 88       	ldd	r7, Y+22	; 0x16
    1f9a:	8f 88       	ldd	r8, Y+23	; 0x17
    1f9c:	98 8c       	ldd	r9, Y+24	; 0x18
    1f9e:	ee 24       	eor	r14, r14
    1fa0:	ff 24       	eor	r15, r15
    1fa2:	87 01       	movw	r16, r14
    1fa4:	aa 24       	eor	r10, r10
    1fa6:	bb 24       	eor	r11, r11
    1fa8:	65 01       	movw	r12, r10
    1faa:	40 e0       	ldi	r20, 0x00	; 0
    1fac:	50 e0       	ldi	r21, 0x00	; 0
    1fae:	60 e0       	ldi	r22, 0x00	; 0
    1fb0:	70 e0       	ldi	r23, 0x00	; 0
    1fb2:	e0 e0       	ldi	r30, 0x00	; 0
    1fb4:	f0 e0       	ldi	r31, 0x00	; 0
    1fb6:	c1 01       	movw	r24, r2
    1fb8:	81 70       	andi	r24, 0x01	; 1
    1fba:	90 70       	andi	r25, 0x00	; 0
    1fbc:	89 2b       	or	r24, r25
    1fbe:	e9 f0       	breq	.+58     	; 0x1ffa <__mulsf3+0xf4>
    1fc0:	e6 0c       	add	r14, r6
    1fc2:	f7 1c       	adc	r15, r7
    1fc4:	08 1d       	adc	r16, r8
    1fc6:	19 1d       	adc	r17, r9
    1fc8:	9a 01       	movw	r18, r20
    1fca:	ab 01       	movw	r20, r22
    1fcc:	2a 0d       	add	r18, r10
    1fce:	3b 1d       	adc	r19, r11
    1fd0:	4c 1d       	adc	r20, r12
    1fd2:	5d 1d       	adc	r21, r13
    1fd4:	80 e0       	ldi	r24, 0x00	; 0
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	a0 e0       	ldi	r26, 0x00	; 0
    1fda:	b0 e0       	ldi	r27, 0x00	; 0
    1fdc:	e6 14       	cp	r14, r6
    1fde:	f7 04       	cpc	r15, r7
    1fe0:	08 05       	cpc	r16, r8
    1fe2:	19 05       	cpc	r17, r9
    1fe4:	20 f4       	brcc	.+8      	; 0x1fee <__mulsf3+0xe8>
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	a0 e0       	ldi	r26, 0x00	; 0
    1fec:	b0 e0       	ldi	r27, 0x00	; 0
    1fee:	ba 01       	movw	r22, r20
    1ff0:	a9 01       	movw	r20, r18
    1ff2:	48 0f       	add	r20, r24
    1ff4:	59 1f       	adc	r21, r25
    1ff6:	6a 1f       	adc	r22, r26
    1ff8:	7b 1f       	adc	r23, r27
    1ffa:	aa 0c       	add	r10, r10
    1ffc:	bb 1c       	adc	r11, r11
    1ffe:	cc 1c       	adc	r12, r12
    2000:	dd 1c       	adc	r13, r13
    2002:	97 fe       	sbrs	r9, 7
    2004:	08 c0       	rjmp	.+16     	; 0x2016 <__mulsf3+0x110>
    2006:	81 e0       	ldi	r24, 0x01	; 1
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	a0 e0       	ldi	r26, 0x00	; 0
    200c:	b0 e0       	ldi	r27, 0x00	; 0
    200e:	a8 2a       	or	r10, r24
    2010:	b9 2a       	or	r11, r25
    2012:	ca 2a       	or	r12, r26
    2014:	db 2a       	or	r13, r27
    2016:	31 96       	adiw	r30, 0x01	; 1
    2018:	e0 32       	cpi	r30, 0x20	; 32
    201a:	f1 05       	cpc	r31, r1
    201c:	49 f0       	breq	.+18     	; 0x2030 <__mulsf3+0x12a>
    201e:	66 0c       	add	r6, r6
    2020:	77 1c       	adc	r7, r7
    2022:	88 1c       	adc	r8, r8
    2024:	99 1c       	adc	r9, r9
    2026:	56 94       	lsr	r5
    2028:	47 94       	ror	r4
    202a:	37 94       	ror	r3
    202c:	27 94       	ror	r2
    202e:	c3 cf       	rjmp	.-122    	; 0x1fb6 <__mulsf3+0xb0>
    2030:	fa 85       	ldd	r31, Y+10	; 0x0a
    2032:	ea 89       	ldd	r30, Y+18	; 0x12
    2034:	2b 89       	ldd	r18, Y+19	; 0x13
    2036:	3c 89       	ldd	r19, Y+20	; 0x14
    2038:	8b 85       	ldd	r24, Y+11	; 0x0b
    203a:	9c 85       	ldd	r25, Y+12	; 0x0c
    203c:	28 0f       	add	r18, r24
    203e:	39 1f       	adc	r19, r25
    2040:	2e 5f       	subi	r18, 0xFE	; 254
    2042:	3f 4f       	sbci	r19, 0xFF	; 255
    2044:	17 c0       	rjmp	.+46     	; 0x2074 <__mulsf3+0x16e>
    2046:	ca 01       	movw	r24, r20
    2048:	81 70       	andi	r24, 0x01	; 1
    204a:	90 70       	andi	r25, 0x00	; 0
    204c:	89 2b       	or	r24, r25
    204e:	61 f0       	breq	.+24     	; 0x2068 <__mulsf3+0x162>
    2050:	16 95       	lsr	r17
    2052:	07 95       	ror	r16
    2054:	f7 94       	ror	r15
    2056:	e7 94       	ror	r14
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	a0 e0       	ldi	r26, 0x00	; 0
    205e:	b0 e8       	ldi	r27, 0x80	; 128
    2060:	e8 2a       	or	r14, r24
    2062:	f9 2a       	or	r15, r25
    2064:	0a 2b       	or	r16, r26
    2066:	1b 2b       	or	r17, r27
    2068:	76 95       	lsr	r23
    206a:	67 95       	ror	r22
    206c:	57 95       	ror	r21
    206e:	47 95       	ror	r20
    2070:	2f 5f       	subi	r18, 0xFF	; 255
    2072:	3f 4f       	sbci	r19, 0xFF	; 255
    2074:	77 fd       	sbrc	r23, 7
    2076:	e7 cf       	rjmp	.-50     	; 0x2046 <__mulsf3+0x140>
    2078:	0c c0       	rjmp	.+24     	; 0x2092 <__mulsf3+0x18c>
    207a:	44 0f       	add	r20, r20
    207c:	55 1f       	adc	r21, r21
    207e:	66 1f       	adc	r22, r22
    2080:	77 1f       	adc	r23, r23
    2082:	17 fd       	sbrc	r17, 7
    2084:	41 60       	ori	r20, 0x01	; 1
    2086:	ee 0c       	add	r14, r14
    2088:	ff 1c       	adc	r15, r15
    208a:	00 1f       	adc	r16, r16
    208c:	11 1f       	adc	r17, r17
    208e:	21 50       	subi	r18, 0x01	; 1
    2090:	30 40       	sbci	r19, 0x00	; 0
    2092:	40 30       	cpi	r20, 0x00	; 0
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	59 07       	cpc	r21, r25
    2098:	90 e0       	ldi	r25, 0x00	; 0
    209a:	69 07       	cpc	r22, r25
    209c:	90 e4       	ldi	r25, 0x40	; 64
    209e:	79 07       	cpc	r23, r25
    20a0:	60 f3       	brcs	.-40     	; 0x207a <__mulsf3+0x174>
    20a2:	2b 8f       	std	Y+27, r18	; 0x1b
    20a4:	3c 8f       	std	Y+28, r19	; 0x1c
    20a6:	db 01       	movw	r26, r22
    20a8:	ca 01       	movw	r24, r20
    20aa:	8f 77       	andi	r24, 0x7F	; 127
    20ac:	90 70       	andi	r25, 0x00	; 0
    20ae:	a0 70       	andi	r26, 0x00	; 0
    20b0:	b0 70       	andi	r27, 0x00	; 0
    20b2:	80 34       	cpi	r24, 0x40	; 64
    20b4:	91 05       	cpc	r25, r1
    20b6:	a1 05       	cpc	r26, r1
    20b8:	b1 05       	cpc	r27, r1
    20ba:	61 f4       	brne	.+24     	; 0x20d4 <__mulsf3+0x1ce>
    20bc:	47 fd       	sbrc	r20, 7
    20be:	0a c0       	rjmp	.+20     	; 0x20d4 <__mulsf3+0x1ce>
    20c0:	e1 14       	cp	r14, r1
    20c2:	f1 04       	cpc	r15, r1
    20c4:	01 05       	cpc	r16, r1
    20c6:	11 05       	cpc	r17, r1
    20c8:	29 f0       	breq	.+10     	; 0x20d4 <__mulsf3+0x1ce>
    20ca:	40 5c       	subi	r20, 0xC0	; 192
    20cc:	5f 4f       	sbci	r21, 0xFF	; 255
    20ce:	6f 4f       	sbci	r22, 0xFF	; 255
    20d0:	7f 4f       	sbci	r23, 0xFF	; 255
    20d2:	40 78       	andi	r20, 0x80	; 128
    20d4:	1a 8e       	std	Y+26, r1	; 0x1a
    20d6:	fe 17       	cp	r31, r30
    20d8:	11 f0       	breq	.+4      	; 0x20de <__mulsf3+0x1d8>
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	8a 8f       	std	Y+26, r24	; 0x1a
    20de:	4d 8f       	std	Y+29, r20	; 0x1d
    20e0:	5e 8f       	std	Y+30, r21	; 0x1e
    20e2:	6f 8f       	std	Y+31, r22	; 0x1f
    20e4:	78 a3       	std	Y+32, r23	; 0x20
    20e6:	83 e0       	ldi	r24, 0x03	; 3
    20e8:	89 8f       	std	Y+25, r24	; 0x19
    20ea:	ce 01       	movw	r24, r28
    20ec:	49 96       	adiw	r24, 0x19	; 25
    20ee:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    20f2:	a0 96       	adiw	r28, 0x20	; 32
    20f4:	e2 e1       	ldi	r30, 0x12	; 18
    20f6:	0c 94 89 37 	jmp	0x6f12	; 0x6f12 <__epilogue_restores__>

000020fa <__divsf3>:
    20fa:	a8 e1       	ldi	r26, 0x18	; 24
    20fc:	b0 e0       	ldi	r27, 0x00	; 0
    20fe:	e3 e8       	ldi	r30, 0x83	; 131
    2100:	f0 e1       	ldi	r31, 0x10	; 16
    2102:	0c 94 75 37 	jmp	0x6eea	; 0x6eea <__prologue_saves__+0x10>
    2106:	69 83       	std	Y+1, r22	; 0x01
    2108:	7a 83       	std	Y+2, r23	; 0x02
    210a:	8b 83       	std	Y+3, r24	; 0x03
    210c:	9c 83       	std	Y+4, r25	; 0x04
    210e:	2d 83       	std	Y+5, r18	; 0x05
    2110:	3e 83       	std	Y+6, r19	; 0x06
    2112:	4f 83       	std	Y+7, r20	; 0x07
    2114:	58 87       	std	Y+8, r21	; 0x08
    2116:	b9 e0       	ldi	r27, 0x09	; 9
    2118:	eb 2e       	mov	r14, r27
    211a:	f1 2c       	mov	r15, r1
    211c:	ec 0e       	add	r14, r28
    211e:	fd 1e       	adc	r15, r29
    2120:	ce 01       	movw	r24, r28
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	b7 01       	movw	r22, r14
    2126:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    212a:	8e 01       	movw	r16, r28
    212c:	0f 5e       	subi	r16, 0xEF	; 239
    212e:	1f 4f       	sbci	r17, 0xFF	; 255
    2130:	ce 01       	movw	r24, r28
    2132:	05 96       	adiw	r24, 0x05	; 5
    2134:	b8 01       	movw	r22, r16
    2136:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    213a:	29 85       	ldd	r18, Y+9	; 0x09
    213c:	22 30       	cpi	r18, 0x02	; 2
    213e:	08 f4       	brcc	.+2      	; 0x2142 <__divsf3+0x48>
    2140:	7e c0       	rjmp	.+252    	; 0x223e <__divsf3+0x144>
    2142:	39 89       	ldd	r19, Y+17	; 0x11
    2144:	32 30       	cpi	r19, 0x02	; 2
    2146:	10 f4       	brcc	.+4      	; 0x214c <__divsf3+0x52>
    2148:	b8 01       	movw	r22, r16
    214a:	7c c0       	rjmp	.+248    	; 0x2244 <__divsf3+0x14a>
    214c:	8a 85       	ldd	r24, Y+10	; 0x0a
    214e:	9a 89       	ldd	r25, Y+18	; 0x12
    2150:	89 27       	eor	r24, r25
    2152:	8a 87       	std	Y+10, r24	; 0x0a
    2154:	24 30       	cpi	r18, 0x04	; 4
    2156:	11 f0       	breq	.+4      	; 0x215c <__divsf3+0x62>
    2158:	22 30       	cpi	r18, 0x02	; 2
    215a:	31 f4       	brne	.+12     	; 0x2168 <__divsf3+0x6e>
    215c:	23 17       	cp	r18, r19
    215e:	09 f0       	breq	.+2      	; 0x2162 <__divsf3+0x68>
    2160:	6e c0       	rjmp	.+220    	; 0x223e <__divsf3+0x144>
    2162:	64 e9       	ldi	r22, 0x94	; 148
    2164:	70 e0       	ldi	r23, 0x00	; 0
    2166:	6e c0       	rjmp	.+220    	; 0x2244 <__divsf3+0x14a>
    2168:	34 30       	cpi	r19, 0x04	; 4
    216a:	39 f4       	brne	.+14     	; 0x217a <__divsf3+0x80>
    216c:	1d 86       	std	Y+13, r1	; 0x0d
    216e:	1e 86       	std	Y+14, r1	; 0x0e
    2170:	1f 86       	std	Y+15, r1	; 0x0f
    2172:	18 8a       	std	Y+16, r1	; 0x10
    2174:	1c 86       	std	Y+12, r1	; 0x0c
    2176:	1b 86       	std	Y+11, r1	; 0x0b
    2178:	04 c0       	rjmp	.+8      	; 0x2182 <__divsf3+0x88>
    217a:	32 30       	cpi	r19, 0x02	; 2
    217c:	21 f4       	brne	.+8      	; 0x2186 <__divsf3+0x8c>
    217e:	84 e0       	ldi	r24, 0x04	; 4
    2180:	89 87       	std	Y+9, r24	; 0x09
    2182:	b7 01       	movw	r22, r14
    2184:	5f c0       	rjmp	.+190    	; 0x2244 <__divsf3+0x14a>
    2186:	2b 85       	ldd	r18, Y+11	; 0x0b
    2188:	3c 85       	ldd	r19, Y+12	; 0x0c
    218a:	8b 89       	ldd	r24, Y+19	; 0x13
    218c:	9c 89       	ldd	r25, Y+20	; 0x14
    218e:	28 1b       	sub	r18, r24
    2190:	39 0b       	sbc	r19, r25
    2192:	3c 87       	std	Y+12, r19	; 0x0c
    2194:	2b 87       	std	Y+11, r18	; 0x0b
    2196:	ed 84       	ldd	r14, Y+13	; 0x0d
    2198:	fe 84       	ldd	r15, Y+14	; 0x0e
    219a:	0f 85       	ldd	r16, Y+15	; 0x0f
    219c:	18 89       	ldd	r17, Y+16	; 0x10
    219e:	ad 88       	ldd	r10, Y+21	; 0x15
    21a0:	be 88       	ldd	r11, Y+22	; 0x16
    21a2:	cf 88       	ldd	r12, Y+23	; 0x17
    21a4:	d8 8c       	ldd	r13, Y+24	; 0x18
    21a6:	ea 14       	cp	r14, r10
    21a8:	fb 04       	cpc	r15, r11
    21aa:	0c 05       	cpc	r16, r12
    21ac:	1d 05       	cpc	r17, r13
    21ae:	40 f4       	brcc	.+16     	; 0x21c0 <__divsf3+0xc6>
    21b0:	ee 0c       	add	r14, r14
    21b2:	ff 1c       	adc	r15, r15
    21b4:	00 1f       	adc	r16, r16
    21b6:	11 1f       	adc	r17, r17
    21b8:	21 50       	subi	r18, 0x01	; 1
    21ba:	30 40       	sbci	r19, 0x00	; 0
    21bc:	3c 87       	std	Y+12, r19	; 0x0c
    21be:	2b 87       	std	Y+11, r18	; 0x0b
    21c0:	20 e0       	ldi	r18, 0x00	; 0
    21c2:	30 e0       	ldi	r19, 0x00	; 0
    21c4:	40 e0       	ldi	r20, 0x00	; 0
    21c6:	50 e0       	ldi	r21, 0x00	; 0
    21c8:	80 e0       	ldi	r24, 0x00	; 0
    21ca:	90 e0       	ldi	r25, 0x00	; 0
    21cc:	a0 e0       	ldi	r26, 0x00	; 0
    21ce:	b0 e4       	ldi	r27, 0x40	; 64
    21d0:	60 e0       	ldi	r22, 0x00	; 0
    21d2:	70 e0       	ldi	r23, 0x00	; 0
    21d4:	ea 14       	cp	r14, r10
    21d6:	fb 04       	cpc	r15, r11
    21d8:	0c 05       	cpc	r16, r12
    21da:	1d 05       	cpc	r17, r13
    21dc:	40 f0       	brcs	.+16     	; 0x21ee <__divsf3+0xf4>
    21de:	28 2b       	or	r18, r24
    21e0:	39 2b       	or	r19, r25
    21e2:	4a 2b       	or	r20, r26
    21e4:	5b 2b       	or	r21, r27
    21e6:	ea 18       	sub	r14, r10
    21e8:	fb 08       	sbc	r15, r11
    21ea:	0c 09       	sbc	r16, r12
    21ec:	1d 09       	sbc	r17, r13
    21ee:	b6 95       	lsr	r27
    21f0:	a7 95       	ror	r26
    21f2:	97 95       	ror	r25
    21f4:	87 95       	ror	r24
    21f6:	ee 0c       	add	r14, r14
    21f8:	ff 1c       	adc	r15, r15
    21fa:	00 1f       	adc	r16, r16
    21fc:	11 1f       	adc	r17, r17
    21fe:	6f 5f       	subi	r22, 0xFF	; 255
    2200:	7f 4f       	sbci	r23, 0xFF	; 255
    2202:	6f 31       	cpi	r22, 0x1F	; 31
    2204:	71 05       	cpc	r23, r1
    2206:	31 f7       	brne	.-52     	; 0x21d4 <__divsf3+0xda>
    2208:	da 01       	movw	r26, r20
    220a:	c9 01       	movw	r24, r18
    220c:	8f 77       	andi	r24, 0x7F	; 127
    220e:	90 70       	andi	r25, 0x00	; 0
    2210:	a0 70       	andi	r26, 0x00	; 0
    2212:	b0 70       	andi	r27, 0x00	; 0
    2214:	80 34       	cpi	r24, 0x40	; 64
    2216:	91 05       	cpc	r25, r1
    2218:	a1 05       	cpc	r26, r1
    221a:	b1 05       	cpc	r27, r1
    221c:	61 f4       	brne	.+24     	; 0x2236 <__divsf3+0x13c>
    221e:	27 fd       	sbrc	r18, 7
    2220:	0a c0       	rjmp	.+20     	; 0x2236 <__divsf3+0x13c>
    2222:	e1 14       	cp	r14, r1
    2224:	f1 04       	cpc	r15, r1
    2226:	01 05       	cpc	r16, r1
    2228:	11 05       	cpc	r17, r1
    222a:	29 f0       	breq	.+10     	; 0x2236 <__divsf3+0x13c>
    222c:	20 5c       	subi	r18, 0xC0	; 192
    222e:	3f 4f       	sbci	r19, 0xFF	; 255
    2230:	4f 4f       	sbci	r20, 0xFF	; 255
    2232:	5f 4f       	sbci	r21, 0xFF	; 255
    2234:	20 78       	andi	r18, 0x80	; 128
    2236:	2d 87       	std	Y+13, r18	; 0x0d
    2238:	3e 87       	std	Y+14, r19	; 0x0e
    223a:	4f 87       	std	Y+15, r20	; 0x0f
    223c:	58 8b       	std	Y+16, r21	; 0x10
    223e:	be 01       	movw	r22, r28
    2240:	67 5f       	subi	r22, 0xF7	; 247
    2242:	7f 4f       	sbci	r23, 0xFF	; 255
    2244:	cb 01       	movw	r24, r22
    2246:	0e 94 0d 12 	call	0x241a	; 0x241a <__pack_f>
    224a:	68 96       	adiw	r28, 0x18	; 24
    224c:	ea e0       	ldi	r30, 0x0A	; 10
    224e:	0c 94 91 37 	jmp	0x6f22	; 0x6f22 <__epilogue_restores__+0x10>

00002252 <__gtsf2>:
    2252:	a8 e1       	ldi	r26, 0x18	; 24
    2254:	b0 e0       	ldi	r27, 0x00	; 0
    2256:	ef e2       	ldi	r30, 0x2F	; 47
    2258:	f1 e1       	ldi	r31, 0x11	; 17
    225a:	0c 94 79 37 	jmp	0x6ef2	; 0x6ef2 <__prologue_saves__+0x18>
    225e:	69 83       	std	Y+1, r22	; 0x01
    2260:	7a 83       	std	Y+2, r23	; 0x02
    2262:	8b 83       	std	Y+3, r24	; 0x03
    2264:	9c 83       	std	Y+4, r25	; 0x04
    2266:	2d 83       	std	Y+5, r18	; 0x05
    2268:	3e 83       	std	Y+6, r19	; 0x06
    226a:	4f 83       	std	Y+7, r20	; 0x07
    226c:	58 87       	std	Y+8, r21	; 0x08
    226e:	89 e0       	ldi	r24, 0x09	; 9
    2270:	e8 2e       	mov	r14, r24
    2272:	f1 2c       	mov	r15, r1
    2274:	ec 0e       	add	r14, r28
    2276:	fd 1e       	adc	r15, r29
    2278:	ce 01       	movw	r24, r28
    227a:	01 96       	adiw	r24, 0x01	; 1
    227c:	b7 01       	movw	r22, r14
    227e:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    2282:	8e 01       	movw	r16, r28
    2284:	0f 5e       	subi	r16, 0xEF	; 239
    2286:	1f 4f       	sbci	r17, 0xFF	; 255
    2288:	ce 01       	movw	r24, r28
    228a:	05 96       	adiw	r24, 0x05	; 5
    228c:	b8 01       	movw	r22, r16
    228e:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    2292:	89 85       	ldd	r24, Y+9	; 0x09
    2294:	82 30       	cpi	r24, 0x02	; 2
    2296:	40 f0       	brcs	.+16     	; 0x22a8 <__gtsf2+0x56>
    2298:	89 89       	ldd	r24, Y+17	; 0x11
    229a:	82 30       	cpi	r24, 0x02	; 2
    229c:	28 f0       	brcs	.+10     	; 0x22a8 <__gtsf2+0x56>
    229e:	c7 01       	movw	r24, r14
    22a0:	b8 01       	movw	r22, r16
    22a2:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <__fpcmp_parts_f>
    22a6:	01 c0       	rjmp	.+2      	; 0x22aa <__gtsf2+0x58>
    22a8:	8f ef       	ldi	r24, 0xFF	; 255
    22aa:	68 96       	adiw	r28, 0x18	; 24
    22ac:	e6 e0       	ldi	r30, 0x06	; 6
    22ae:	0c 94 95 37 	jmp	0x6f2a	; 0x6f2a <__epilogue_restores__+0x18>

000022b2 <__gesf2>:
    22b2:	a8 e1       	ldi	r26, 0x18	; 24
    22b4:	b0 e0       	ldi	r27, 0x00	; 0
    22b6:	ef e5       	ldi	r30, 0x5F	; 95
    22b8:	f1 e1       	ldi	r31, 0x11	; 17
    22ba:	0c 94 79 37 	jmp	0x6ef2	; 0x6ef2 <__prologue_saves__+0x18>
    22be:	69 83       	std	Y+1, r22	; 0x01
    22c0:	7a 83       	std	Y+2, r23	; 0x02
    22c2:	8b 83       	std	Y+3, r24	; 0x03
    22c4:	9c 83       	std	Y+4, r25	; 0x04
    22c6:	2d 83       	std	Y+5, r18	; 0x05
    22c8:	3e 83       	std	Y+6, r19	; 0x06
    22ca:	4f 83       	std	Y+7, r20	; 0x07
    22cc:	58 87       	std	Y+8, r21	; 0x08
    22ce:	89 e0       	ldi	r24, 0x09	; 9
    22d0:	e8 2e       	mov	r14, r24
    22d2:	f1 2c       	mov	r15, r1
    22d4:	ec 0e       	add	r14, r28
    22d6:	fd 1e       	adc	r15, r29
    22d8:	ce 01       	movw	r24, r28
    22da:	01 96       	adiw	r24, 0x01	; 1
    22dc:	b7 01       	movw	r22, r14
    22de:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    22e2:	8e 01       	movw	r16, r28
    22e4:	0f 5e       	subi	r16, 0xEF	; 239
    22e6:	1f 4f       	sbci	r17, 0xFF	; 255
    22e8:	ce 01       	movw	r24, r28
    22ea:	05 96       	adiw	r24, 0x05	; 5
    22ec:	b8 01       	movw	r22, r16
    22ee:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    22f2:	89 85       	ldd	r24, Y+9	; 0x09
    22f4:	82 30       	cpi	r24, 0x02	; 2
    22f6:	40 f0       	brcs	.+16     	; 0x2308 <__gesf2+0x56>
    22f8:	89 89       	ldd	r24, Y+17	; 0x11
    22fa:	82 30       	cpi	r24, 0x02	; 2
    22fc:	28 f0       	brcs	.+10     	; 0x2308 <__gesf2+0x56>
    22fe:	c7 01       	movw	r24, r14
    2300:	b8 01       	movw	r22, r16
    2302:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <__fpcmp_parts_f>
    2306:	01 c0       	rjmp	.+2      	; 0x230a <__gesf2+0x58>
    2308:	8f ef       	ldi	r24, 0xFF	; 255
    230a:	68 96       	adiw	r28, 0x18	; 24
    230c:	e6 e0       	ldi	r30, 0x06	; 6
    230e:	0c 94 95 37 	jmp	0x6f2a	; 0x6f2a <__epilogue_restores__+0x18>

00002312 <__ltsf2>:
    2312:	a8 e1       	ldi	r26, 0x18	; 24
    2314:	b0 e0       	ldi	r27, 0x00	; 0
    2316:	ef e8       	ldi	r30, 0x8F	; 143
    2318:	f1 e1       	ldi	r31, 0x11	; 17
    231a:	0c 94 79 37 	jmp	0x6ef2	; 0x6ef2 <__prologue_saves__+0x18>
    231e:	69 83       	std	Y+1, r22	; 0x01
    2320:	7a 83       	std	Y+2, r23	; 0x02
    2322:	8b 83       	std	Y+3, r24	; 0x03
    2324:	9c 83       	std	Y+4, r25	; 0x04
    2326:	2d 83       	std	Y+5, r18	; 0x05
    2328:	3e 83       	std	Y+6, r19	; 0x06
    232a:	4f 83       	std	Y+7, r20	; 0x07
    232c:	58 87       	std	Y+8, r21	; 0x08
    232e:	89 e0       	ldi	r24, 0x09	; 9
    2330:	e8 2e       	mov	r14, r24
    2332:	f1 2c       	mov	r15, r1
    2334:	ec 0e       	add	r14, r28
    2336:	fd 1e       	adc	r15, r29
    2338:	ce 01       	movw	r24, r28
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	b7 01       	movw	r22, r14
    233e:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    2342:	8e 01       	movw	r16, r28
    2344:	0f 5e       	subi	r16, 0xEF	; 239
    2346:	1f 4f       	sbci	r17, 0xFF	; 255
    2348:	ce 01       	movw	r24, r28
    234a:	05 96       	adiw	r24, 0x05	; 5
    234c:	b8 01       	movw	r22, r16
    234e:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    2352:	89 85       	ldd	r24, Y+9	; 0x09
    2354:	82 30       	cpi	r24, 0x02	; 2
    2356:	40 f0       	brcs	.+16     	; 0x2368 <__ltsf2+0x56>
    2358:	89 89       	ldd	r24, Y+17	; 0x11
    235a:	82 30       	cpi	r24, 0x02	; 2
    235c:	28 f0       	brcs	.+10     	; 0x2368 <__ltsf2+0x56>
    235e:	c7 01       	movw	r24, r14
    2360:	b8 01       	movw	r22, r16
    2362:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <__fpcmp_parts_f>
    2366:	01 c0       	rjmp	.+2      	; 0x236a <__ltsf2+0x58>
    2368:	81 e0       	ldi	r24, 0x01	; 1
    236a:	68 96       	adiw	r28, 0x18	; 24
    236c:	e6 e0       	ldi	r30, 0x06	; 6
    236e:	0c 94 95 37 	jmp	0x6f2a	; 0x6f2a <__epilogue_restores__+0x18>

00002372 <__fixsfsi>:
    2372:	ac e0       	ldi	r26, 0x0C	; 12
    2374:	b0 e0       	ldi	r27, 0x00	; 0
    2376:	ef eb       	ldi	r30, 0xBF	; 191
    2378:	f1 e1       	ldi	r31, 0x11	; 17
    237a:	0c 94 7d 37 	jmp	0x6efa	; 0x6efa <__prologue_saves__+0x20>
    237e:	69 83       	std	Y+1, r22	; 0x01
    2380:	7a 83       	std	Y+2, r23	; 0x02
    2382:	8b 83       	std	Y+3, r24	; 0x03
    2384:	9c 83       	std	Y+4, r25	; 0x04
    2386:	ce 01       	movw	r24, r28
    2388:	01 96       	adiw	r24, 0x01	; 1
    238a:	be 01       	movw	r22, r28
    238c:	6b 5f       	subi	r22, 0xFB	; 251
    238e:	7f 4f       	sbci	r23, 0xFF	; 255
    2390:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <__unpack_f>
    2394:	8d 81       	ldd	r24, Y+5	; 0x05
    2396:	82 30       	cpi	r24, 0x02	; 2
    2398:	61 f1       	breq	.+88     	; 0x23f2 <__fixsfsi+0x80>
    239a:	82 30       	cpi	r24, 0x02	; 2
    239c:	50 f1       	brcs	.+84     	; 0x23f2 <__fixsfsi+0x80>
    239e:	84 30       	cpi	r24, 0x04	; 4
    23a0:	21 f4       	brne	.+8      	; 0x23aa <__fixsfsi+0x38>
    23a2:	8e 81       	ldd	r24, Y+6	; 0x06
    23a4:	88 23       	and	r24, r24
    23a6:	51 f1       	breq	.+84     	; 0x23fc <__fixsfsi+0x8a>
    23a8:	2e c0       	rjmp	.+92     	; 0x2406 <__fixsfsi+0x94>
    23aa:	2f 81       	ldd	r18, Y+7	; 0x07
    23ac:	38 85       	ldd	r19, Y+8	; 0x08
    23ae:	37 fd       	sbrc	r19, 7
    23b0:	20 c0       	rjmp	.+64     	; 0x23f2 <__fixsfsi+0x80>
    23b2:	6e 81       	ldd	r22, Y+6	; 0x06
    23b4:	2f 31       	cpi	r18, 0x1F	; 31
    23b6:	31 05       	cpc	r19, r1
    23b8:	1c f0       	brlt	.+6      	; 0x23c0 <__fixsfsi+0x4e>
    23ba:	66 23       	and	r22, r22
    23bc:	f9 f0       	breq	.+62     	; 0x23fc <__fixsfsi+0x8a>
    23be:	23 c0       	rjmp	.+70     	; 0x2406 <__fixsfsi+0x94>
    23c0:	8e e1       	ldi	r24, 0x1E	; 30
    23c2:	90 e0       	ldi	r25, 0x00	; 0
    23c4:	82 1b       	sub	r24, r18
    23c6:	93 0b       	sbc	r25, r19
    23c8:	29 85       	ldd	r18, Y+9	; 0x09
    23ca:	3a 85       	ldd	r19, Y+10	; 0x0a
    23cc:	4b 85       	ldd	r20, Y+11	; 0x0b
    23ce:	5c 85       	ldd	r21, Y+12	; 0x0c
    23d0:	04 c0       	rjmp	.+8      	; 0x23da <__fixsfsi+0x68>
    23d2:	56 95       	lsr	r21
    23d4:	47 95       	ror	r20
    23d6:	37 95       	ror	r19
    23d8:	27 95       	ror	r18
    23da:	8a 95       	dec	r24
    23dc:	d2 f7       	brpl	.-12     	; 0x23d2 <__fixsfsi+0x60>
    23de:	66 23       	and	r22, r22
    23e0:	b1 f0       	breq	.+44     	; 0x240e <__fixsfsi+0x9c>
    23e2:	50 95       	com	r21
    23e4:	40 95       	com	r20
    23e6:	30 95       	com	r19
    23e8:	21 95       	neg	r18
    23ea:	3f 4f       	sbci	r19, 0xFF	; 255
    23ec:	4f 4f       	sbci	r20, 0xFF	; 255
    23ee:	5f 4f       	sbci	r21, 0xFF	; 255
    23f0:	0e c0       	rjmp	.+28     	; 0x240e <__fixsfsi+0x9c>
    23f2:	20 e0       	ldi	r18, 0x00	; 0
    23f4:	30 e0       	ldi	r19, 0x00	; 0
    23f6:	40 e0       	ldi	r20, 0x00	; 0
    23f8:	50 e0       	ldi	r21, 0x00	; 0
    23fa:	09 c0       	rjmp	.+18     	; 0x240e <__fixsfsi+0x9c>
    23fc:	2f ef       	ldi	r18, 0xFF	; 255
    23fe:	3f ef       	ldi	r19, 0xFF	; 255
    2400:	4f ef       	ldi	r20, 0xFF	; 255
    2402:	5f e7       	ldi	r21, 0x7F	; 127
    2404:	04 c0       	rjmp	.+8      	; 0x240e <__fixsfsi+0x9c>
    2406:	20 e0       	ldi	r18, 0x00	; 0
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	40 e0       	ldi	r20, 0x00	; 0
    240c:	50 e8       	ldi	r21, 0x80	; 128
    240e:	b9 01       	movw	r22, r18
    2410:	ca 01       	movw	r24, r20
    2412:	2c 96       	adiw	r28, 0x0c	; 12
    2414:	e2 e0       	ldi	r30, 0x02	; 2
    2416:	0c 94 99 37 	jmp	0x6f32	; 0x6f32 <__epilogue_restores__+0x20>

0000241a <__pack_f>:
    241a:	df 92       	push	r13
    241c:	ef 92       	push	r14
    241e:	ff 92       	push	r15
    2420:	0f 93       	push	r16
    2422:	1f 93       	push	r17
    2424:	fc 01       	movw	r30, r24
    2426:	e4 80       	ldd	r14, Z+4	; 0x04
    2428:	f5 80       	ldd	r15, Z+5	; 0x05
    242a:	06 81       	ldd	r16, Z+6	; 0x06
    242c:	17 81       	ldd	r17, Z+7	; 0x07
    242e:	d1 80       	ldd	r13, Z+1	; 0x01
    2430:	80 81       	ld	r24, Z
    2432:	82 30       	cpi	r24, 0x02	; 2
    2434:	48 f4       	brcc	.+18     	; 0x2448 <__pack_f+0x2e>
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	a0 e1       	ldi	r26, 0x10	; 16
    243c:	b0 e0       	ldi	r27, 0x00	; 0
    243e:	e8 2a       	or	r14, r24
    2440:	f9 2a       	or	r15, r25
    2442:	0a 2b       	or	r16, r26
    2444:	1b 2b       	or	r17, r27
    2446:	a5 c0       	rjmp	.+330    	; 0x2592 <__pack_f+0x178>
    2448:	84 30       	cpi	r24, 0x04	; 4
    244a:	09 f4       	brne	.+2      	; 0x244e <__pack_f+0x34>
    244c:	9f c0       	rjmp	.+318    	; 0x258c <__pack_f+0x172>
    244e:	82 30       	cpi	r24, 0x02	; 2
    2450:	21 f4       	brne	.+8      	; 0x245a <__pack_f+0x40>
    2452:	ee 24       	eor	r14, r14
    2454:	ff 24       	eor	r15, r15
    2456:	87 01       	movw	r16, r14
    2458:	05 c0       	rjmp	.+10     	; 0x2464 <__pack_f+0x4a>
    245a:	e1 14       	cp	r14, r1
    245c:	f1 04       	cpc	r15, r1
    245e:	01 05       	cpc	r16, r1
    2460:	11 05       	cpc	r17, r1
    2462:	19 f4       	brne	.+6      	; 0x246a <__pack_f+0x50>
    2464:	e0 e0       	ldi	r30, 0x00	; 0
    2466:	f0 e0       	ldi	r31, 0x00	; 0
    2468:	96 c0       	rjmp	.+300    	; 0x2596 <__pack_f+0x17c>
    246a:	62 81       	ldd	r22, Z+2	; 0x02
    246c:	73 81       	ldd	r23, Z+3	; 0x03
    246e:	9f ef       	ldi	r25, 0xFF	; 255
    2470:	62 38       	cpi	r22, 0x82	; 130
    2472:	79 07       	cpc	r23, r25
    2474:	0c f0       	brlt	.+2      	; 0x2478 <__pack_f+0x5e>
    2476:	5b c0       	rjmp	.+182    	; 0x252e <__pack_f+0x114>
    2478:	22 e8       	ldi	r18, 0x82	; 130
    247a:	3f ef       	ldi	r19, 0xFF	; 255
    247c:	26 1b       	sub	r18, r22
    247e:	37 0b       	sbc	r19, r23
    2480:	2a 31       	cpi	r18, 0x1A	; 26
    2482:	31 05       	cpc	r19, r1
    2484:	2c f0       	brlt	.+10     	; 0x2490 <__pack_f+0x76>
    2486:	20 e0       	ldi	r18, 0x00	; 0
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	40 e0       	ldi	r20, 0x00	; 0
    248c:	50 e0       	ldi	r21, 0x00	; 0
    248e:	2a c0       	rjmp	.+84     	; 0x24e4 <__pack_f+0xca>
    2490:	b8 01       	movw	r22, r16
    2492:	a7 01       	movw	r20, r14
    2494:	02 2e       	mov	r0, r18
    2496:	04 c0       	rjmp	.+8      	; 0x24a0 <__pack_f+0x86>
    2498:	76 95       	lsr	r23
    249a:	67 95       	ror	r22
    249c:	57 95       	ror	r21
    249e:	47 95       	ror	r20
    24a0:	0a 94       	dec	r0
    24a2:	d2 f7       	brpl	.-12     	; 0x2498 <__pack_f+0x7e>
    24a4:	81 e0       	ldi	r24, 0x01	; 1
    24a6:	90 e0       	ldi	r25, 0x00	; 0
    24a8:	a0 e0       	ldi	r26, 0x00	; 0
    24aa:	b0 e0       	ldi	r27, 0x00	; 0
    24ac:	04 c0       	rjmp	.+8      	; 0x24b6 <__pack_f+0x9c>
    24ae:	88 0f       	add	r24, r24
    24b0:	99 1f       	adc	r25, r25
    24b2:	aa 1f       	adc	r26, r26
    24b4:	bb 1f       	adc	r27, r27
    24b6:	2a 95       	dec	r18
    24b8:	d2 f7       	brpl	.-12     	; 0x24ae <__pack_f+0x94>
    24ba:	01 97       	sbiw	r24, 0x01	; 1
    24bc:	a1 09       	sbc	r26, r1
    24be:	b1 09       	sbc	r27, r1
    24c0:	8e 21       	and	r24, r14
    24c2:	9f 21       	and	r25, r15
    24c4:	a0 23       	and	r26, r16
    24c6:	b1 23       	and	r27, r17
    24c8:	00 97       	sbiw	r24, 0x00	; 0
    24ca:	a1 05       	cpc	r26, r1
    24cc:	b1 05       	cpc	r27, r1
    24ce:	21 f0       	breq	.+8      	; 0x24d8 <__pack_f+0xbe>
    24d0:	81 e0       	ldi	r24, 0x01	; 1
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	a0 e0       	ldi	r26, 0x00	; 0
    24d6:	b0 e0       	ldi	r27, 0x00	; 0
    24d8:	9a 01       	movw	r18, r20
    24da:	ab 01       	movw	r20, r22
    24dc:	28 2b       	or	r18, r24
    24de:	39 2b       	or	r19, r25
    24e0:	4a 2b       	or	r20, r26
    24e2:	5b 2b       	or	r21, r27
    24e4:	da 01       	movw	r26, r20
    24e6:	c9 01       	movw	r24, r18
    24e8:	8f 77       	andi	r24, 0x7F	; 127
    24ea:	90 70       	andi	r25, 0x00	; 0
    24ec:	a0 70       	andi	r26, 0x00	; 0
    24ee:	b0 70       	andi	r27, 0x00	; 0
    24f0:	80 34       	cpi	r24, 0x40	; 64
    24f2:	91 05       	cpc	r25, r1
    24f4:	a1 05       	cpc	r26, r1
    24f6:	b1 05       	cpc	r27, r1
    24f8:	39 f4       	brne	.+14     	; 0x2508 <__pack_f+0xee>
    24fa:	27 ff       	sbrs	r18, 7
    24fc:	09 c0       	rjmp	.+18     	; 0x2510 <__pack_f+0xf6>
    24fe:	20 5c       	subi	r18, 0xC0	; 192
    2500:	3f 4f       	sbci	r19, 0xFF	; 255
    2502:	4f 4f       	sbci	r20, 0xFF	; 255
    2504:	5f 4f       	sbci	r21, 0xFF	; 255
    2506:	04 c0       	rjmp	.+8      	; 0x2510 <__pack_f+0xf6>
    2508:	21 5c       	subi	r18, 0xC1	; 193
    250a:	3f 4f       	sbci	r19, 0xFF	; 255
    250c:	4f 4f       	sbci	r20, 0xFF	; 255
    250e:	5f 4f       	sbci	r21, 0xFF	; 255
    2510:	e0 e0       	ldi	r30, 0x00	; 0
    2512:	f0 e0       	ldi	r31, 0x00	; 0
    2514:	20 30       	cpi	r18, 0x00	; 0
    2516:	a0 e0       	ldi	r26, 0x00	; 0
    2518:	3a 07       	cpc	r19, r26
    251a:	a0 e0       	ldi	r26, 0x00	; 0
    251c:	4a 07       	cpc	r20, r26
    251e:	a0 e4       	ldi	r26, 0x40	; 64
    2520:	5a 07       	cpc	r21, r26
    2522:	10 f0       	brcs	.+4      	; 0x2528 <__pack_f+0x10e>
    2524:	e1 e0       	ldi	r30, 0x01	; 1
    2526:	f0 e0       	ldi	r31, 0x00	; 0
    2528:	79 01       	movw	r14, r18
    252a:	8a 01       	movw	r16, r20
    252c:	27 c0       	rjmp	.+78     	; 0x257c <__pack_f+0x162>
    252e:	60 38       	cpi	r22, 0x80	; 128
    2530:	71 05       	cpc	r23, r1
    2532:	64 f5       	brge	.+88     	; 0x258c <__pack_f+0x172>
    2534:	fb 01       	movw	r30, r22
    2536:	e1 58       	subi	r30, 0x81	; 129
    2538:	ff 4f       	sbci	r31, 0xFF	; 255
    253a:	d8 01       	movw	r26, r16
    253c:	c7 01       	movw	r24, r14
    253e:	8f 77       	andi	r24, 0x7F	; 127
    2540:	90 70       	andi	r25, 0x00	; 0
    2542:	a0 70       	andi	r26, 0x00	; 0
    2544:	b0 70       	andi	r27, 0x00	; 0
    2546:	80 34       	cpi	r24, 0x40	; 64
    2548:	91 05       	cpc	r25, r1
    254a:	a1 05       	cpc	r26, r1
    254c:	b1 05       	cpc	r27, r1
    254e:	39 f4       	brne	.+14     	; 0x255e <__pack_f+0x144>
    2550:	e7 fe       	sbrs	r14, 7
    2552:	0d c0       	rjmp	.+26     	; 0x256e <__pack_f+0x154>
    2554:	80 e4       	ldi	r24, 0x40	; 64
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	a0 e0       	ldi	r26, 0x00	; 0
    255a:	b0 e0       	ldi	r27, 0x00	; 0
    255c:	04 c0       	rjmp	.+8      	; 0x2566 <__pack_f+0x14c>
    255e:	8f e3       	ldi	r24, 0x3F	; 63
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	a0 e0       	ldi	r26, 0x00	; 0
    2564:	b0 e0       	ldi	r27, 0x00	; 0
    2566:	e8 0e       	add	r14, r24
    2568:	f9 1e       	adc	r15, r25
    256a:	0a 1f       	adc	r16, r26
    256c:	1b 1f       	adc	r17, r27
    256e:	17 ff       	sbrs	r17, 7
    2570:	05 c0       	rjmp	.+10     	; 0x257c <__pack_f+0x162>
    2572:	16 95       	lsr	r17
    2574:	07 95       	ror	r16
    2576:	f7 94       	ror	r15
    2578:	e7 94       	ror	r14
    257a:	31 96       	adiw	r30, 0x01	; 1
    257c:	87 e0       	ldi	r24, 0x07	; 7
    257e:	16 95       	lsr	r17
    2580:	07 95       	ror	r16
    2582:	f7 94       	ror	r15
    2584:	e7 94       	ror	r14
    2586:	8a 95       	dec	r24
    2588:	d1 f7       	brne	.-12     	; 0x257e <__pack_f+0x164>
    258a:	05 c0       	rjmp	.+10     	; 0x2596 <__pack_f+0x17c>
    258c:	ee 24       	eor	r14, r14
    258e:	ff 24       	eor	r15, r15
    2590:	87 01       	movw	r16, r14
    2592:	ef ef       	ldi	r30, 0xFF	; 255
    2594:	f0 e0       	ldi	r31, 0x00	; 0
    2596:	6e 2f       	mov	r22, r30
    2598:	67 95       	ror	r22
    259a:	66 27       	eor	r22, r22
    259c:	67 95       	ror	r22
    259e:	90 2f       	mov	r25, r16
    25a0:	9f 77       	andi	r25, 0x7F	; 127
    25a2:	d7 94       	ror	r13
    25a4:	dd 24       	eor	r13, r13
    25a6:	d7 94       	ror	r13
    25a8:	8e 2f       	mov	r24, r30
    25aa:	86 95       	lsr	r24
    25ac:	49 2f       	mov	r20, r25
    25ae:	46 2b       	or	r20, r22
    25b0:	58 2f       	mov	r21, r24
    25b2:	5d 29       	or	r21, r13
    25b4:	b7 01       	movw	r22, r14
    25b6:	ca 01       	movw	r24, r20
    25b8:	1f 91       	pop	r17
    25ba:	0f 91       	pop	r16
    25bc:	ff 90       	pop	r15
    25be:	ef 90       	pop	r14
    25c0:	df 90       	pop	r13
    25c2:	08 95       	ret

000025c4 <__unpack_f>:
    25c4:	fc 01       	movw	r30, r24
    25c6:	db 01       	movw	r26, r22
    25c8:	40 81       	ld	r20, Z
    25ca:	51 81       	ldd	r21, Z+1	; 0x01
    25cc:	22 81       	ldd	r18, Z+2	; 0x02
    25ce:	62 2f       	mov	r22, r18
    25d0:	6f 77       	andi	r22, 0x7F	; 127
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	22 1f       	adc	r18, r18
    25d6:	22 27       	eor	r18, r18
    25d8:	22 1f       	adc	r18, r18
    25da:	93 81       	ldd	r25, Z+3	; 0x03
    25dc:	89 2f       	mov	r24, r25
    25de:	88 0f       	add	r24, r24
    25e0:	82 2b       	or	r24, r18
    25e2:	28 2f       	mov	r18, r24
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	99 1f       	adc	r25, r25
    25e8:	99 27       	eor	r25, r25
    25ea:	99 1f       	adc	r25, r25
    25ec:	11 96       	adiw	r26, 0x01	; 1
    25ee:	9c 93       	st	X, r25
    25f0:	11 97       	sbiw	r26, 0x01	; 1
    25f2:	21 15       	cp	r18, r1
    25f4:	31 05       	cpc	r19, r1
    25f6:	a9 f5       	brne	.+106    	; 0x2662 <__unpack_f+0x9e>
    25f8:	41 15       	cp	r20, r1
    25fa:	51 05       	cpc	r21, r1
    25fc:	61 05       	cpc	r22, r1
    25fe:	71 05       	cpc	r23, r1
    2600:	11 f4       	brne	.+4      	; 0x2606 <__unpack_f+0x42>
    2602:	82 e0       	ldi	r24, 0x02	; 2
    2604:	37 c0       	rjmp	.+110    	; 0x2674 <__unpack_f+0xb0>
    2606:	82 e8       	ldi	r24, 0x82	; 130
    2608:	9f ef       	ldi	r25, 0xFF	; 255
    260a:	13 96       	adiw	r26, 0x03	; 3
    260c:	9c 93       	st	X, r25
    260e:	8e 93       	st	-X, r24
    2610:	12 97       	sbiw	r26, 0x02	; 2
    2612:	9a 01       	movw	r18, r20
    2614:	ab 01       	movw	r20, r22
    2616:	67 e0       	ldi	r22, 0x07	; 7
    2618:	22 0f       	add	r18, r18
    261a:	33 1f       	adc	r19, r19
    261c:	44 1f       	adc	r20, r20
    261e:	55 1f       	adc	r21, r21
    2620:	6a 95       	dec	r22
    2622:	d1 f7       	brne	.-12     	; 0x2618 <__unpack_f+0x54>
    2624:	83 e0       	ldi	r24, 0x03	; 3
    2626:	8c 93       	st	X, r24
    2628:	0d c0       	rjmp	.+26     	; 0x2644 <__unpack_f+0x80>
    262a:	22 0f       	add	r18, r18
    262c:	33 1f       	adc	r19, r19
    262e:	44 1f       	adc	r20, r20
    2630:	55 1f       	adc	r21, r21
    2632:	12 96       	adiw	r26, 0x02	; 2
    2634:	8d 91       	ld	r24, X+
    2636:	9c 91       	ld	r25, X
    2638:	13 97       	sbiw	r26, 0x03	; 3
    263a:	01 97       	sbiw	r24, 0x01	; 1
    263c:	13 96       	adiw	r26, 0x03	; 3
    263e:	9c 93       	st	X, r25
    2640:	8e 93       	st	-X, r24
    2642:	12 97       	sbiw	r26, 0x02	; 2
    2644:	20 30       	cpi	r18, 0x00	; 0
    2646:	80 e0       	ldi	r24, 0x00	; 0
    2648:	38 07       	cpc	r19, r24
    264a:	80 e0       	ldi	r24, 0x00	; 0
    264c:	48 07       	cpc	r20, r24
    264e:	80 e4       	ldi	r24, 0x40	; 64
    2650:	58 07       	cpc	r21, r24
    2652:	58 f3       	brcs	.-42     	; 0x262a <__unpack_f+0x66>
    2654:	14 96       	adiw	r26, 0x04	; 4
    2656:	2d 93       	st	X+, r18
    2658:	3d 93       	st	X+, r19
    265a:	4d 93       	st	X+, r20
    265c:	5c 93       	st	X, r21
    265e:	17 97       	sbiw	r26, 0x07	; 7
    2660:	08 95       	ret
    2662:	2f 3f       	cpi	r18, 0xFF	; 255
    2664:	31 05       	cpc	r19, r1
    2666:	79 f4       	brne	.+30     	; 0x2686 <__unpack_f+0xc2>
    2668:	41 15       	cp	r20, r1
    266a:	51 05       	cpc	r21, r1
    266c:	61 05       	cpc	r22, r1
    266e:	71 05       	cpc	r23, r1
    2670:	19 f4       	brne	.+6      	; 0x2678 <__unpack_f+0xb4>
    2672:	84 e0       	ldi	r24, 0x04	; 4
    2674:	8c 93       	st	X, r24
    2676:	08 95       	ret
    2678:	64 ff       	sbrs	r22, 4
    267a:	03 c0       	rjmp	.+6      	; 0x2682 <__unpack_f+0xbe>
    267c:	81 e0       	ldi	r24, 0x01	; 1
    267e:	8c 93       	st	X, r24
    2680:	12 c0       	rjmp	.+36     	; 0x26a6 <__unpack_f+0xe2>
    2682:	1c 92       	st	X, r1
    2684:	10 c0       	rjmp	.+32     	; 0x26a6 <__unpack_f+0xe2>
    2686:	2f 57       	subi	r18, 0x7F	; 127
    2688:	30 40       	sbci	r19, 0x00	; 0
    268a:	13 96       	adiw	r26, 0x03	; 3
    268c:	3c 93       	st	X, r19
    268e:	2e 93       	st	-X, r18
    2690:	12 97       	sbiw	r26, 0x02	; 2
    2692:	83 e0       	ldi	r24, 0x03	; 3
    2694:	8c 93       	st	X, r24
    2696:	87 e0       	ldi	r24, 0x07	; 7
    2698:	44 0f       	add	r20, r20
    269a:	55 1f       	adc	r21, r21
    269c:	66 1f       	adc	r22, r22
    269e:	77 1f       	adc	r23, r23
    26a0:	8a 95       	dec	r24
    26a2:	d1 f7       	brne	.-12     	; 0x2698 <__unpack_f+0xd4>
    26a4:	70 64       	ori	r23, 0x40	; 64
    26a6:	14 96       	adiw	r26, 0x04	; 4
    26a8:	4d 93       	st	X+, r20
    26aa:	5d 93       	st	X+, r21
    26ac:	6d 93       	st	X+, r22
    26ae:	7c 93       	st	X, r23
    26b0:	17 97       	sbiw	r26, 0x07	; 7
    26b2:	08 95       	ret

000026b4 <__fpcmp_parts_f>:
    26b4:	1f 93       	push	r17
    26b6:	dc 01       	movw	r26, r24
    26b8:	fb 01       	movw	r30, r22
    26ba:	9c 91       	ld	r25, X
    26bc:	92 30       	cpi	r25, 0x02	; 2
    26be:	08 f4       	brcc	.+2      	; 0x26c2 <__fpcmp_parts_f+0xe>
    26c0:	47 c0       	rjmp	.+142    	; 0x2750 <__fpcmp_parts_f+0x9c>
    26c2:	80 81       	ld	r24, Z
    26c4:	82 30       	cpi	r24, 0x02	; 2
    26c6:	08 f4       	brcc	.+2      	; 0x26ca <__fpcmp_parts_f+0x16>
    26c8:	43 c0       	rjmp	.+134    	; 0x2750 <__fpcmp_parts_f+0x9c>
    26ca:	94 30       	cpi	r25, 0x04	; 4
    26cc:	51 f4       	brne	.+20     	; 0x26e2 <__fpcmp_parts_f+0x2e>
    26ce:	11 96       	adiw	r26, 0x01	; 1
    26d0:	1c 91       	ld	r17, X
    26d2:	84 30       	cpi	r24, 0x04	; 4
    26d4:	99 f5       	brne	.+102    	; 0x273c <__fpcmp_parts_f+0x88>
    26d6:	81 81       	ldd	r24, Z+1	; 0x01
    26d8:	68 2f       	mov	r22, r24
    26da:	70 e0       	ldi	r23, 0x00	; 0
    26dc:	61 1b       	sub	r22, r17
    26de:	71 09       	sbc	r23, r1
    26e0:	3f c0       	rjmp	.+126    	; 0x2760 <__fpcmp_parts_f+0xac>
    26e2:	84 30       	cpi	r24, 0x04	; 4
    26e4:	21 f0       	breq	.+8      	; 0x26ee <__fpcmp_parts_f+0x3a>
    26e6:	92 30       	cpi	r25, 0x02	; 2
    26e8:	31 f4       	brne	.+12     	; 0x26f6 <__fpcmp_parts_f+0x42>
    26ea:	82 30       	cpi	r24, 0x02	; 2
    26ec:	b9 f1       	breq	.+110    	; 0x275c <__fpcmp_parts_f+0xa8>
    26ee:	81 81       	ldd	r24, Z+1	; 0x01
    26f0:	88 23       	and	r24, r24
    26f2:	89 f1       	breq	.+98     	; 0x2756 <__fpcmp_parts_f+0xa2>
    26f4:	2d c0       	rjmp	.+90     	; 0x2750 <__fpcmp_parts_f+0x9c>
    26f6:	11 96       	adiw	r26, 0x01	; 1
    26f8:	1c 91       	ld	r17, X
    26fa:	11 97       	sbiw	r26, 0x01	; 1
    26fc:	82 30       	cpi	r24, 0x02	; 2
    26fe:	f1 f0       	breq	.+60     	; 0x273c <__fpcmp_parts_f+0x88>
    2700:	81 81       	ldd	r24, Z+1	; 0x01
    2702:	18 17       	cp	r17, r24
    2704:	d9 f4       	brne	.+54     	; 0x273c <__fpcmp_parts_f+0x88>
    2706:	12 96       	adiw	r26, 0x02	; 2
    2708:	2d 91       	ld	r18, X+
    270a:	3c 91       	ld	r19, X
    270c:	13 97       	sbiw	r26, 0x03	; 3
    270e:	82 81       	ldd	r24, Z+2	; 0x02
    2710:	93 81       	ldd	r25, Z+3	; 0x03
    2712:	82 17       	cp	r24, r18
    2714:	93 07       	cpc	r25, r19
    2716:	94 f0       	brlt	.+36     	; 0x273c <__fpcmp_parts_f+0x88>
    2718:	28 17       	cp	r18, r24
    271a:	39 07       	cpc	r19, r25
    271c:	bc f0       	brlt	.+46     	; 0x274c <__fpcmp_parts_f+0x98>
    271e:	14 96       	adiw	r26, 0x04	; 4
    2720:	8d 91       	ld	r24, X+
    2722:	9d 91       	ld	r25, X+
    2724:	0d 90       	ld	r0, X+
    2726:	bc 91       	ld	r27, X
    2728:	a0 2d       	mov	r26, r0
    272a:	24 81       	ldd	r18, Z+4	; 0x04
    272c:	35 81       	ldd	r19, Z+5	; 0x05
    272e:	46 81       	ldd	r20, Z+6	; 0x06
    2730:	57 81       	ldd	r21, Z+7	; 0x07
    2732:	28 17       	cp	r18, r24
    2734:	39 07       	cpc	r19, r25
    2736:	4a 07       	cpc	r20, r26
    2738:	5b 07       	cpc	r21, r27
    273a:	18 f4       	brcc	.+6      	; 0x2742 <__fpcmp_parts_f+0x8e>
    273c:	11 23       	and	r17, r17
    273e:	41 f0       	breq	.+16     	; 0x2750 <__fpcmp_parts_f+0x9c>
    2740:	0a c0       	rjmp	.+20     	; 0x2756 <__fpcmp_parts_f+0xa2>
    2742:	82 17       	cp	r24, r18
    2744:	93 07       	cpc	r25, r19
    2746:	a4 07       	cpc	r26, r20
    2748:	b5 07       	cpc	r27, r21
    274a:	40 f4       	brcc	.+16     	; 0x275c <__fpcmp_parts_f+0xa8>
    274c:	11 23       	and	r17, r17
    274e:	19 f0       	breq	.+6      	; 0x2756 <__fpcmp_parts_f+0xa2>
    2750:	61 e0       	ldi	r22, 0x01	; 1
    2752:	70 e0       	ldi	r23, 0x00	; 0
    2754:	05 c0       	rjmp	.+10     	; 0x2760 <__fpcmp_parts_f+0xac>
    2756:	6f ef       	ldi	r22, 0xFF	; 255
    2758:	7f ef       	ldi	r23, 0xFF	; 255
    275a:	02 c0       	rjmp	.+4      	; 0x2760 <__fpcmp_parts_f+0xac>
    275c:	60 e0       	ldi	r22, 0x00	; 0
    275e:	70 e0       	ldi	r23, 0x00	; 0
    2760:	cb 01       	movw	r24, r22
    2762:	1f 91       	pop	r17
    2764:	08 95       	ret

00002766 <PORT_Init>:
 * Description     : Function responsible for initializing all Pins with initial configurations
 * Parameters(IN)  : None
 * Parameters(OUT) : None
 *******************************************************************************************/
void PORT_Init(void)
{
    2766:	df 93       	push	r29
    2768:	cf 93       	push	r28
    276a:	cd b7       	in	r28, 0x3d	; 61
    276c:	de b7       	in	r29, 0x3e	; 62
#define  PORT_INPUT_FLOATING 0
#define  PORT_INPUT_PULLUP   0


//set the initial direction of all Pins by using ConC function like macro in std_types.h
	DDRA=CONC(PORT_PIN7_CONFIG,PORT_PIN6_CONFIG,PORT_PIN5_CONFIG,PORT_PIN4_CONFIG,PORT_PIN3_CONFIG,PORT_PIN2_CONFIG,PORT_PIN1_CONFIG,PORT_PIN0_CONFIG);
    276e:	ea e3       	ldi	r30, 0x3A	; 58
    2770:	f0 e0       	ldi	r31, 0x00	; 0
    2772:	8e ef       	ldi	r24, 0xFE	; 254
    2774:	80 83       	st	Z, r24
	DDRB=CONC(PORT_PIN15_CONFIG,PORT_PIN14_CONFIG,PORT_PIN13_CONFIG,PORT_PIN12_CONFIG,PORT_PIN11_CONFIG,PORT_PIN10_CONFIG,PORT_PIN9_CONFIG,PORT_PIN8_CONFIG);
    2776:	e7 e3       	ldi	r30, 0x37	; 55
    2778:	f0 e0       	ldi	r31, 0x00	; 0
    277a:	8f ef       	ldi	r24, 0xFF	; 255
    277c:	80 83       	st	Z, r24
	DDRC=CONC(PORT_PIN23_CONFIG,PORT_PIN22_CONFIG,PORT_PIN21_CONFIG,PORT_PIN20_CONFIG,PORT_PIN19_CONFIG,PORT_PIN18_CONFIG,PORT_PIN17_CONFIG,PORT_PIN16_CONFIG);
    277e:	e4 e3       	ldi	r30, 0x34	; 52
    2780:	f0 e0       	ldi	r31, 0x00	; 0
    2782:	8f ef       	ldi	r24, 0xFF	; 255
    2784:	80 83       	st	Z, r24
	DDRD=CONC(PORT_PIN31_CONFIG,PORT_PIN30_CONFIG,PORT_PIN29_CONFIG,PORT_PIN28_CONFIG,PORT_PIN27_CONFIG,PORT_PIN26_CONFIG,PORT_PIN25_CONFIG,PORT_PIN24_CONFIG);
    2786:	e1 e3       	ldi	r30, 0x31	; 49
    2788:	f0 e0       	ldi	r31, 0x00	; 0
    278a:	8f ef       	ldi	r24, 0xFF	; 255
    278c:	80 83       	st	Z, r24
#define PORT_INPUT_FLOATING               0
#define PORT_INPUT_PULLUP                 1


//set the initial mode of all Pins by using ConC function like macro in std_types.h
	PORTA=CONC(PORT_PIN7_CONFIG,PORT_PIN6_CONFIG,PORT_PIN5_CONFIG,PORT_PIN4_CONFIG,PORT_PIN3_CONFIG,PORT_PIN2_CONFIG,PORT_PIN1_CONFIG,PORT_PIN0_CONFIG);
    278e:	eb e3       	ldi	r30, 0x3B	; 59
    2790:	f0 e0       	ldi	r31, 0x00	; 0
    2792:	10 82       	st	Z, r1
	PORTB=CONC(PORT_PIN15_CONFIG,PORT_PIN14_CONFIG,PORT_PIN13_CONFIG,PORT_PIN12_CONFIG,PORT_PIN11_CONFIG,PORT_PIN10_CONFIG,PORT_PIN9_CONFIG,PORT_PIN8_CONFIG);
    2794:	e8 e3       	ldi	r30, 0x38	; 56
    2796:	f0 e0       	ldi	r31, 0x00	; 0
    2798:	10 82       	st	Z, r1
	PORTC=CONC(PORT_PIN23_CONFIG,PORT_PIN22_CONFIG,PORT_PIN21_CONFIG,PORT_PIN20_CONFIG,PORT_PIN19_CONFIG,PORT_PIN18_CONFIG,PORT_PIN17_CONFIG,PORT_PIN16_CONFIG);
    279a:	e5 e3       	ldi	r30, 0x35	; 53
    279c:	f0 e0       	ldi	r31, 0x00	; 0
    279e:	10 82       	st	Z, r1
	PORTD=CONC(PORT_PIN31_CONFIG,PORT_PIN30_CONFIG,PORT_PIN29_CONFIG,PORT_PIN28_CONFIG,PORT_PIN27_CONFIG,PORT_PIN26_CONFIG,PORT_PIN25_CONFIG,PORT_PIN24_CONFIG);
    27a0:	e2 e3       	ldi	r30, 0x32	; 50
    27a2:	f0 e0       	ldi	r31, 0x00	; 0
    27a4:	10 82       	st	Z, r1

#define PORT_OUTPUT_HIGH                  2
#define PORT_OUTPUT_LOW			          3
#define PORT_INPUT_FLOATING               4
#define PORT_INPUT_PULLUP                 5
}
    27a6:	cf 91       	pop	r28
    27a8:	df 91       	pop	r29
    27aa:	08 95       	ret

000027ac <PORT_enuSetPinMode>:
 * Parameters(IN)  : 1.Copy_u8PinId   --> channel Number
 *                   2.Copy_u8PinMode --> Mode
 * Parameters(OUT) : value of enum type PORT_tenuLOC_u8ErrorStatus
 *******************************************************************************************/
PORT_tenuErrorStatus PORT_enuSetPinMode(PortPinType Copy_u8PinId,PortPinType Copy_u8PinMode  )
{
    27ac:	df 93       	push	r29
    27ae:	cf 93       	push	r28
    27b0:	cd b7       	in	r28, 0x3d	; 61
    27b2:	de b7       	in	r29, 0x3e	; 62
    27b4:	2f 97       	sbiw	r28, 0x0f	; 15
    27b6:	0f b6       	in	r0, 0x3f	; 63
    27b8:	f8 94       	cli
    27ba:	de bf       	out	0x3e, r29	; 62
    27bc:	0f be       	out	0x3f, r0	; 63
    27be:	cd bf       	out	0x3d, r28	; 61
    27c0:	8c 83       	std	Y+4, r24	; 0x04
    27c2:	6d 83       	std	Y+5, r22	; 0x05
	//local variable for Error status
	uint8 LOC_u8ErrorStatus=PORT_enuOK;
    27c4:	1b 82       	std	Y+3, r1	; 0x03
	//local variables for port and pin indexes
	uint8 PortIndex=0,PinIndex=0;
    27c6:	1a 82       	std	Y+2, r1	; 0x02
    27c8:	19 82       	std	Y+1, r1	; 0x01

	//get the port index from the pin id
	PortIndex=(Copy_u8PinId/8);
    27ca:	8c 81       	ldd	r24, Y+4	; 0x04
    27cc:	86 95       	lsr	r24
    27ce:	86 95       	lsr	r24
    27d0:	86 95       	lsr	r24
    27d2:	8a 83       	std	Y+2, r24	; 0x02

	//get the pin index from the pin id ---pin index 0---7
	PinIndex=Copy_u8PinId%8;
    27d4:	8c 81       	ldd	r24, Y+4	; 0x04
    27d6:	87 70       	andi	r24, 0x07	; 7
    27d8:	89 83       	std	Y+1, r24	; 0x01

	//check if pin id invalid
	if(Copy_u8PinId>PORT_NUMBER_OF_PINS)
    27da:	8c 81       	ldd	r24, Y+4	; 0x04
    27dc:	81 32       	cpi	r24, 0x21	; 33
    27de:	10 f0       	brcs	.+4      	; 0x27e4 <PORT_enuSetPinMode+0x38>
	{
		LOC_u8ErrorStatus=PORT_enuPinError;
    27e0:	81 e0       	ldi	r24, 0x01	; 1
    27e2:	8b 83       	std	Y+3, r24	; 0x03
	}

	//check if port id invalid
	if(PortIndex>PORT_NUMBER_OF_PORTS)
    27e4:	8a 81       	ldd	r24, Y+2	; 0x02
    27e6:	85 30       	cpi	r24, 0x05	; 5
    27e8:	10 f0       	brcs	.+4      	; 0x27ee <PORT_enuSetPinMode+0x42>
	{
		LOC_u8ErrorStatus=PORT_enuPortError;
    27ea:	82 e0       	ldi	r24, 0x02	; 2
    27ec:	8b 83       	std	Y+3, r24	; 0x03
	}

	//check if the mode invalid
	if(Copy_u8PinMode>5 ||Copy_u8PinMode<2)
    27ee:	8d 81       	ldd	r24, Y+5	; 0x05
    27f0:	86 30       	cpi	r24, 0x06	; 6
    27f2:	18 f4       	brcc	.+6      	; 0x27fa <PORT_enuSetPinMode+0x4e>
    27f4:	8d 81       	ldd	r24, Y+5	; 0x05
    27f6:	82 30       	cpi	r24, 0x02	; 2
    27f8:	10 f4       	brcc	.+4      	; 0x27fe <PORT_enuSetPinMode+0x52>
	{
		LOC_u8ErrorStatus=PORT_enuModeError;
    27fa:	83 e0       	ldi	r24, 0x03	; 3
    27fc:	8b 83       	std	Y+3, r24	; 0x03

	}

	//which Port
	switch(PortIndex)
    27fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2800:	28 2f       	mov	r18, r24
    2802:	30 e0       	ldi	r19, 0x00	; 0
    2804:	3f 87       	std	Y+15, r19	; 0x0f
    2806:	2e 87       	std	Y+14, r18	; 0x0e
    2808:	8e 85       	ldd	r24, Y+14	; 0x0e
    280a:	9f 85       	ldd	r25, Y+15	; 0x0f
    280c:	81 30       	cpi	r24, 0x01	; 1
    280e:	91 05       	cpc	r25, r1
    2810:	09 f4       	brne	.+2      	; 0x2814 <PORT_enuSetPinMode+0x68>
    2812:	d6 c0       	rjmp	.+428    	; 0x29c0 <PORT_enuSetPinMode+0x214>
    2814:	2e 85       	ldd	r18, Y+14	; 0x0e
    2816:	3f 85       	ldd	r19, Y+15	; 0x0f
    2818:	22 30       	cpi	r18, 0x02	; 2
    281a:	31 05       	cpc	r19, r1
    281c:	2c f4       	brge	.+10     	; 0x2828 <PORT_enuSetPinMode+0x7c>
    281e:	8e 85       	ldd	r24, Y+14	; 0x0e
    2820:	9f 85       	ldd	r25, Y+15	; 0x0f
    2822:	00 97       	sbiw	r24, 0x00	; 0
    2824:	71 f0       	breq	.+28     	; 0x2842 <PORT_enuSetPinMode+0x96>
    2826:	08 c3       	rjmp	.+1552   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
    2828:	2e 85       	ldd	r18, Y+14	; 0x0e
    282a:	3f 85       	ldd	r19, Y+15	; 0x0f
    282c:	22 30       	cpi	r18, 0x02	; 2
    282e:	31 05       	cpc	r19, r1
    2830:	09 f4       	brne	.+2      	; 0x2834 <PORT_enuSetPinMode+0x88>
    2832:	85 c1       	rjmp	.+778    	; 0x2b3e <PORT_enuSetPinMode+0x392>
    2834:	8e 85       	ldd	r24, Y+14	; 0x0e
    2836:	9f 85       	ldd	r25, Y+15	; 0x0f
    2838:	83 30       	cpi	r24, 0x03	; 3
    283a:	91 05       	cpc	r25, r1
    283c:	09 f4       	brne	.+2      	; 0x2840 <PORT_enuSetPinMode+0x94>
    283e:	3e c2       	rjmp	.+1148   	; 0x2cbc <PORT_enuSetPinMode+0x510>
    2840:	fb c2       	rjmp	.+1526   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
	{
	//if Port A
	case PORT_A:
		//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
		switch(Copy_u8PinMode)
    2842:	8d 81       	ldd	r24, Y+5	; 0x05
    2844:	28 2f       	mov	r18, r24
    2846:	30 e0       	ldi	r19, 0x00	; 0
    2848:	3d 87       	std	Y+13, r19	; 0x0d
    284a:	2c 87       	std	Y+12, r18	; 0x0c
    284c:	8c 85       	ldd	r24, Y+12	; 0x0c
    284e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2850:	83 30       	cpi	r24, 0x03	; 3
    2852:	91 05       	cpc	r25, r1
    2854:	09 f4       	brne	.+2      	; 0x2858 <PORT_enuSetPinMode+0xac>
    2856:	3e c0       	rjmp	.+124    	; 0x28d4 <PORT_enuSetPinMode+0x128>
    2858:	2c 85       	ldd	r18, Y+12	; 0x0c
    285a:	3d 85       	ldd	r19, Y+13	; 0x0d
    285c:	24 30       	cpi	r18, 0x04	; 4
    285e:	31 05       	cpc	r19, r1
    2860:	34 f4       	brge	.+12     	; 0x286e <PORT_enuSetPinMode+0xc2>
    2862:	8c 85       	ldd	r24, Y+12	; 0x0c
    2864:	9d 85       	ldd	r25, Y+13	; 0x0d
    2866:	82 30       	cpi	r24, 0x02	; 2
    2868:	91 05       	cpc	r25, r1
    286a:	71 f0       	breq	.+28     	; 0x2888 <PORT_enuSetPinMode+0xdc>
    286c:	e5 c2       	rjmp	.+1482   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
    286e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2870:	3d 85       	ldd	r19, Y+13	; 0x0d
    2872:	24 30       	cpi	r18, 0x04	; 4
    2874:	31 05       	cpc	r19, r1
    2876:	09 f4       	brne	.+2      	; 0x287a <PORT_enuSetPinMode+0xce>
    2878:	54 c0       	rjmp	.+168    	; 0x2922 <PORT_enuSetPinMode+0x176>
    287a:	8c 85       	ldd	r24, Y+12	; 0x0c
    287c:	9d 85       	ldd	r25, Y+13	; 0x0d
    287e:	85 30       	cpi	r24, 0x05	; 5
    2880:	91 05       	cpc	r25, r1
    2882:	09 f4       	brne	.+2      	; 0x2886 <PORT_enuSetPinMode+0xda>
    2884:	76 c0       	rjmp	.+236    	; 0x2972 <PORT_enuSetPinMode+0x1c6>
    2886:	d8 c2       	rjmp	.+1456   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
		{

		case PORT_OUTPUT_HIGH:
			//set output direction
			SET_BIT(DDRA,PinIndex);
    2888:	aa e3       	ldi	r26, 0x3A	; 58
    288a:	b0 e0       	ldi	r27, 0x00	; 0
    288c:	ea e3       	ldi	r30, 0x3A	; 58
    288e:	f0 e0       	ldi	r31, 0x00	; 0
    2890:	80 81       	ld	r24, Z
    2892:	48 2f       	mov	r20, r24
    2894:	89 81       	ldd	r24, Y+1	; 0x01
    2896:	28 2f       	mov	r18, r24
    2898:	30 e0       	ldi	r19, 0x00	; 0
    289a:	81 e0       	ldi	r24, 0x01	; 1
    289c:	90 e0       	ldi	r25, 0x00	; 0
    289e:	02 c0       	rjmp	.+4      	; 0x28a4 <PORT_enuSetPinMode+0xf8>
    28a0:	88 0f       	add	r24, r24
    28a2:	99 1f       	adc	r25, r25
    28a4:	2a 95       	dec	r18
    28a6:	e2 f7       	brpl	.-8      	; 0x28a0 <PORT_enuSetPinMode+0xf4>
    28a8:	84 2b       	or	r24, r20
    28aa:	8c 93       	st	X, r24
			//set high value
			SET_BIT(PORTA,PinIndex);
    28ac:	ab e3       	ldi	r26, 0x3B	; 59
    28ae:	b0 e0       	ldi	r27, 0x00	; 0
    28b0:	eb e3       	ldi	r30, 0x3B	; 59
    28b2:	f0 e0       	ldi	r31, 0x00	; 0
    28b4:	80 81       	ld	r24, Z
    28b6:	48 2f       	mov	r20, r24
    28b8:	89 81       	ldd	r24, Y+1	; 0x01
    28ba:	28 2f       	mov	r18, r24
    28bc:	30 e0       	ldi	r19, 0x00	; 0
    28be:	81 e0       	ldi	r24, 0x01	; 1
    28c0:	90 e0       	ldi	r25, 0x00	; 0
    28c2:	02 2e       	mov	r0, r18
    28c4:	02 c0       	rjmp	.+4      	; 0x28ca <PORT_enuSetPinMode+0x11e>
    28c6:	88 0f       	add	r24, r24
    28c8:	99 1f       	adc	r25, r25
    28ca:	0a 94       	dec	r0
    28cc:	e2 f7       	brpl	.-8      	; 0x28c6 <PORT_enuSetPinMode+0x11a>
    28ce:	84 2b       	or	r24, r20
    28d0:	8c 93       	st	X, r24
    28d2:	b2 c2       	rjmp	.+1380   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
			break;

		case PORT_OUTPUT_LOW:
			//set output direction
			SET_BIT(DDRA,PinIndex);
    28d4:	aa e3       	ldi	r26, 0x3A	; 58
    28d6:	b0 e0       	ldi	r27, 0x00	; 0
    28d8:	ea e3       	ldi	r30, 0x3A	; 58
    28da:	f0 e0       	ldi	r31, 0x00	; 0
    28dc:	80 81       	ld	r24, Z
    28de:	48 2f       	mov	r20, r24
    28e0:	89 81       	ldd	r24, Y+1	; 0x01
    28e2:	28 2f       	mov	r18, r24
    28e4:	30 e0       	ldi	r19, 0x00	; 0
    28e6:	81 e0       	ldi	r24, 0x01	; 1
    28e8:	90 e0       	ldi	r25, 0x00	; 0
    28ea:	02 c0       	rjmp	.+4      	; 0x28f0 <PORT_enuSetPinMode+0x144>
    28ec:	88 0f       	add	r24, r24
    28ee:	99 1f       	adc	r25, r25
    28f0:	2a 95       	dec	r18
    28f2:	e2 f7       	brpl	.-8      	; 0x28ec <PORT_enuSetPinMode+0x140>
    28f4:	84 2b       	or	r24, r20
    28f6:	8c 93       	st	X, r24
			//set LOW value
			CLEAR_BIT(PORTA,PinIndex);
    28f8:	ab e3       	ldi	r26, 0x3B	; 59
    28fa:	b0 e0       	ldi	r27, 0x00	; 0
    28fc:	eb e3       	ldi	r30, 0x3B	; 59
    28fe:	f0 e0       	ldi	r31, 0x00	; 0
    2900:	80 81       	ld	r24, Z
    2902:	48 2f       	mov	r20, r24
    2904:	89 81       	ldd	r24, Y+1	; 0x01
    2906:	28 2f       	mov	r18, r24
    2908:	30 e0       	ldi	r19, 0x00	; 0
    290a:	81 e0       	ldi	r24, 0x01	; 1
    290c:	90 e0       	ldi	r25, 0x00	; 0
    290e:	02 2e       	mov	r0, r18
    2910:	02 c0       	rjmp	.+4      	; 0x2916 <PORT_enuSetPinMode+0x16a>
    2912:	88 0f       	add	r24, r24
    2914:	99 1f       	adc	r25, r25
    2916:	0a 94       	dec	r0
    2918:	e2 f7       	brpl	.-8      	; 0x2912 <PORT_enuSetPinMode+0x166>
    291a:	80 95       	com	r24
    291c:	84 23       	and	r24, r20
    291e:	8c 93       	st	X, r24
    2920:	8b c2       	rjmp	.+1302   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
			break;

		case PORT_INPUT_FLOATING:
			//set input direction
			CLEAR_BIT(DDRA,PinIndex);
    2922:	aa e3       	ldi	r26, 0x3A	; 58
    2924:	b0 e0       	ldi	r27, 0x00	; 0
    2926:	ea e3       	ldi	r30, 0x3A	; 58
    2928:	f0 e0       	ldi	r31, 0x00	; 0
    292a:	80 81       	ld	r24, Z
    292c:	48 2f       	mov	r20, r24
    292e:	89 81       	ldd	r24, Y+1	; 0x01
    2930:	28 2f       	mov	r18, r24
    2932:	30 e0       	ldi	r19, 0x00	; 0
    2934:	81 e0       	ldi	r24, 0x01	; 1
    2936:	90 e0       	ldi	r25, 0x00	; 0
    2938:	02 c0       	rjmp	.+4      	; 0x293e <PORT_enuSetPinMode+0x192>
    293a:	88 0f       	add	r24, r24
    293c:	99 1f       	adc	r25, r25
    293e:	2a 95       	dec	r18
    2940:	e2 f7       	brpl	.-8      	; 0x293a <PORT_enuSetPinMode+0x18e>
    2942:	80 95       	com	r24
    2944:	84 23       	and	r24, r20
    2946:	8c 93       	st	X, r24
			//set Low value
			CLEAR_BIT(PORTA,PinIndex);
    2948:	ab e3       	ldi	r26, 0x3B	; 59
    294a:	b0 e0       	ldi	r27, 0x00	; 0
    294c:	eb e3       	ldi	r30, 0x3B	; 59
    294e:	f0 e0       	ldi	r31, 0x00	; 0
    2950:	80 81       	ld	r24, Z
    2952:	48 2f       	mov	r20, r24
    2954:	89 81       	ldd	r24, Y+1	; 0x01
    2956:	28 2f       	mov	r18, r24
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	81 e0       	ldi	r24, 0x01	; 1
    295c:	90 e0       	ldi	r25, 0x00	; 0
    295e:	02 2e       	mov	r0, r18
    2960:	02 c0       	rjmp	.+4      	; 0x2966 <PORT_enuSetPinMode+0x1ba>
    2962:	88 0f       	add	r24, r24
    2964:	99 1f       	adc	r25, r25
    2966:	0a 94       	dec	r0
    2968:	e2 f7       	brpl	.-8      	; 0x2962 <PORT_enuSetPinMode+0x1b6>
    296a:	80 95       	com	r24
    296c:	84 23       	and	r24, r20
    296e:	8c 93       	st	X, r24
    2970:	63 c2       	rjmp	.+1222   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
			break;

		case PORT_INPUT_PULLUP:
			//set input direction
			CLEAR_BIT(DDRA,PinIndex);
    2972:	aa e3       	ldi	r26, 0x3A	; 58
    2974:	b0 e0       	ldi	r27, 0x00	; 0
    2976:	ea e3       	ldi	r30, 0x3A	; 58
    2978:	f0 e0       	ldi	r31, 0x00	; 0
    297a:	80 81       	ld	r24, Z
    297c:	48 2f       	mov	r20, r24
    297e:	89 81       	ldd	r24, Y+1	; 0x01
    2980:	28 2f       	mov	r18, r24
    2982:	30 e0       	ldi	r19, 0x00	; 0
    2984:	81 e0       	ldi	r24, 0x01	; 1
    2986:	90 e0       	ldi	r25, 0x00	; 0
    2988:	02 c0       	rjmp	.+4      	; 0x298e <PORT_enuSetPinMode+0x1e2>
    298a:	88 0f       	add	r24, r24
    298c:	99 1f       	adc	r25, r25
    298e:	2a 95       	dec	r18
    2990:	e2 f7       	brpl	.-8      	; 0x298a <PORT_enuSetPinMode+0x1de>
    2992:	80 95       	com	r24
    2994:	84 23       	and	r24, r20
    2996:	8c 93       	st	X, r24
			//set pullup
			SET_BIT(PORTA,PinIndex);
    2998:	ab e3       	ldi	r26, 0x3B	; 59
    299a:	b0 e0       	ldi	r27, 0x00	; 0
    299c:	eb e3       	ldi	r30, 0x3B	; 59
    299e:	f0 e0       	ldi	r31, 0x00	; 0
    29a0:	80 81       	ld	r24, Z
    29a2:	48 2f       	mov	r20, r24
    29a4:	89 81       	ldd	r24, Y+1	; 0x01
    29a6:	28 2f       	mov	r18, r24
    29a8:	30 e0       	ldi	r19, 0x00	; 0
    29aa:	81 e0       	ldi	r24, 0x01	; 1
    29ac:	90 e0       	ldi	r25, 0x00	; 0
    29ae:	02 2e       	mov	r0, r18
    29b0:	02 c0       	rjmp	.+4      	; 0x29b6 <PORT_enuSetPinMode+0x20a>
    29b2:	88 0f       	add	r24, r24
    29b4:	99 1f       	adc	r25, r25
    29b6:	0a 94       	dec	r0
    29b8:	e2 f7       	brpl	.-8      	; 0x29b2 <PORT_enuSetPinMode+0x206>
    29ba:	84 2b       	or	r24, r20
    29bc:	8c 93       	st	X, r24
    29be:	3c c2       	rjmp	.+1144   	; 0x2e38 <PORT_enuSetPinMode+0x68c>

		//if port B
		case PORT_B:

			//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
			switch(Copy_u8PinMode)
    29c0:	8d 81       	ldd	r24, Y+5	; 0x05
    29c2:	28 2f       	mov	r18, r24
    29c4:	30 e0       	ldi	r19, 0x00	; 0
    29c6:	3b 87       	std	Y+11, r19	; 0x0b
    29c8:	2a 87       	std	Y+10, r18	; 0x0a
    29ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    29cc:	9b 85       	ldd	r25, Y+11	; 0x0b
    29ce:	83 30       	cpi	r24, 0x03	; 3
    29d0:	91 05       	cpc	r25, r1
    29d2:	09 f4       	brne	.+2      	; 0x29d6 <PORT_enuSetPinMode+0x22a>
    29d4:	3e c0       	rjmp	.+124    	; 0x2a52 <PORT_enuSetPinMode+0x2a6>
    29d6:	2a 85       	ldd	r18, Y+10	; 0x0a
    29d8:	3b 85       	ldd	r19, Y+11	; 0x0b
    29da:	24 30       	cpi	r18, 0x04	; 4
    29dc:	31 05       	cpc	r19, r1
    29de:	34 f4       	brge	.+12     	; 0x29ec <PORT_enuSetPinMode+0x240>
    29e0:	8a 85       	ldd	r24, Y+10	; 0x0a
    29e2:	9b 85       	ldd	r25, Y+11	; 0x0b
    29e4:	82 30       	cpi	r24, 0x02	; 2
    29e6:	91 05       	cpc	r25, r1
    29e8:	71 f0       	breq	.+28     	; 0x2a06 <PORT_enuSetPinMode+0x25a>
    29ea:	26 c2       	rjmp	.+1100   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
    29ec:	2a 85       	ldd	r18, Y+10	; 0x0a
    29ee:	3b 85       	ldd	r19, Y+11	; 0x0b
    29f0:	24 30       	cpi	r18, 0x04	; 4
    29f2:	31 05       	cpc	r19, r1
    29f4:	09 f4       	brne	.+2      	; 0x29f8 <PORT_enuSetPinMode+0x24c>
    29f6:	54 c0       	rjmp	.+168    	; 0x2aa0 <PORT_enuSetPinMode+0x2f4>
    29f8:	8a 85       	ldd	r24, Y+10	; 0x0a
    29fa:	9b 85       	ldd	r25, Y+11	; 0x0b
    29fc:	85 30       	cpi	r24, 0x05	; 5
    29fe:	91 05       	cpc	r25, r1
    2a00:	09 f4       	brne	.+2      	; 0x2a04 <PORT_enuSetPinMode+0x258>
    2a02:	76 c0       	rjmp	.+236    	; 0x2af0 <PORT_enuSetPinMode+0x344>
    2a04:	19 c2       	rjmp	.+1074   	; 0x2e38 <PORT_enuSetPinMode+0x68c>
			{
			case PORT_OUTPUT_HIGH:
				//set output direction
				SET_BIT(DDRB,PinIndex);
    2a06:	a7 e3       	ldi	r26, 0x37	; 55
    2a08:	b0 e0       	ldi	r27, 0x00	; 0
    2a0a:	e7 e3       	ldi	r30, 0x37	; 55
    2a0c:	f0 e0       	ldi	r31, 0x00	; 0
    2a0e:	80 81       	ld	r24, Z
    2a10:	48 2f       	mov	r20, r24
    2a12:	89 81       	ldd	r24, Y+1	; 0x01
    2a14:	28 2f       	mov	r18, r24
    2a16:	30 e0       	ldi	r19, 0x00	; 0
    2a18:	81 e0       	ldi	r24, 0x01	; 1
    2a1a:	90 e0       	ldi	r25, 0x00	; 0
    2a1c:	02 c0       	rjmp	.+4      	; 0x2a22 <PORT_enuSetPinMode+0x276>
    2a1e:	88 0f       	add	r24, r24
    2a20:	99 1f       	adc	r25, r25
    2a22:	2a 95       	dec	r18
    2a24:	e2 f7       	brpl	.-8      	; 0x2a1e <PORT_enuSetPinMode+0x272>
    2a26:	84 2b       	or	r24, r20
    2a28:	8c 93       	st	X, r24
				SET_BIT(PORTB,PinIndex);
    2a2a:	a8 e3       	ldi	r26, 0x38	; 56
    2a2c:	b0 e0       	ldi	r27, 0x00	; 0
    2a2e:	e8 e3       	ldi	r30, 0x38	; 56
    2a30:	f0 e0       	ldi	r31, 0x00	; 0
    2a32:	80 81       	ld	r24, Z
    2a34:	48 2f       	mov	r20, r24
    2a36:	89 81       	ldd	r24, Y+1	; 0x01
    2a38:	28 2f       	mov	r18, r24
    2a3a:	30 e0       	ldi	r19, 0x00	; 0
    2a3c:	81 e0       	ldi	r24, 0x01	; 1
    2a3e:	90 e0       	ldi	r25, 0x00	; 0
    2a40:	02 2e       	mov	r0, r18
    2a42:	02 c0       	rjmp	.+4      	; 0x2a48 <PORT_enuSetPinMode+0x29c>
    2a44:	88 0f       	add	r24, r24
    2a46:	99 1f       	adc	r25, r25
    2a48:	0a 94       	dec	r0
    2a4a:	e2 f7       	brpl	.-8      	; 0x2a44 <PORT_enuSetPinMode+0x298>
    2a4c:	84 2b       	or	r24, r20
    2a4e:	8c 93       	st	X, r24
    2a50:	f3 c1       	rjmp	.+998    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
				break;
			case PORT_OUTPUT_LOW:
				SET_BIT(DDRB,PinIndex);
    2a52:	a7 e3       	ldi	r26, 0x37	; 55
    2a54:	b0 e0       	ldi	r27, 0x00	; 0
    2a56:	e7 e3       	ldi	r30, 0x37	; 55
    2a58:	f0 e0       	ldi	r31, 0x00	; 0
    2a5a:	80 81       	ld	r24, Z
    2a5c:	48 2f       	mov	r20, r24
    2a5e:	89 81       	ldd	r24, Y+1	; 0x01
    2a60:	28 2f       	mov	r18, r24
    2a62:	30 e0       	ldi	r19, 0x00	; 0
    2a64:	81 e0       	ldi	r24, 0x01	; 1
    2a66:	90 e0       	ldi	r25, 0x00	; 0
    2a68:	02 c0       	rjmp	.+4      	; 0x2a6e <PORT_enuSetPinMode+0x2c2>
    2a6a:	88 0f       	add	r24, r24
    2a6c:	99 1f       	adc	r25, r25
    2a6e:	2a 95       	dec	r18
    2a70:	e2 f7       	brpl	.-8      	; 0x2a6a <PORT_enuSetPinMode+0x2be>
    2a72:	84 2b       	or	r24, r20
    2a74:	8c 93       	st	X, r24
				CLEAR_BIT(PORTB,PinIndex);
    2a76:	a8 e3       	ldi	r26, 0x38	; 56
    2a78:	b0 e0       	ldi	r27, 0x00	; 0
    2a7a:	e8 e3       	ldi	r30, 0x38	; 56
    2a7c:	f0 e0       	ldi	r31, 0x00	; 0
    2a7e:	80 81       	ld	r24, Z
    2a80:	48 2f       	mov	r20, r24
    2a82:	89 81       	ldd	r24, Y+1	; 0x01
    2a84:	28 2f       	mov	r18, r24
    2a86:	30 e0       	ldi	r19, 0x00	; 0
    2a88:	81 e0       	ldi	r24, 0x01	; 1
    2a8a:	90 e0       	ldi	r25, 0x00	; 0
    2a8c:	02 2e       	mov	r0, r18
    2a8e:	02 c0       	rjmp	.+4      	; 0x2a94 <PORT_enuSetPinMode+0x2e8>
    2a90:	88 0f       	add	r24, r24
    2a92:	99 1f       	adc	r25, r25
    2a94:	0a 94       	dec	r0
    2a96:	e2 f7       	brpl	.-8      	; 0x2a90 <PORT_enuSetPinMode+0x2e4>
    2a98:	80 95       	com	r24
    2a9a:	84 23       	and	r24, r20
    2a9c:	8c 93       	st	X, r24
    2a9e:	cc c1       	rjmp	.+920    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
				break;
			case PORT_INPUT_FLOATING:
				CLEAR_BIT(DDRB,PinIndex);
    2aa0:	a7 e3       	ldi	r26, 0x37	; 55
    2aa2:	b0 e0       	ldi	r27, 0x00	; 0
    2aa4:	e7 e3       	ldi	r30, 0x37	; 55
    2aa6:	f0 e0       	ldi	r31, 0x00	; 0
    2aa8:	80 81       	ld	r24, Z
    2aaa:	48 2f       	mov	r20, r24
    2aac:	89 81       	ldd	r24, Y+1	; 0x01
    2aae:	28 2f       	mov	r18, r24
    2ab0:	30 e0       	ldi	r19, 0x00	; 0
    2ab2:	81 e0       	ldi	r24, 0x01	; 1
    2ab4:	90 e0       	ldi	r25, 0x00	; 0
    2ab6:	02 c0       	rjmp	.+4      	; 0x2abc <PORT_enuSetPinMode+0x310>
    2ab8:	88 0f       	add	r24, r24
    2aba:	99 1f       	adc	r25, r25
    2abc:	2a 95       	dec	r18
    2abe:	e2 f7       	brpl	.-8      	; 0x2ab8 <PORT_enuSetPinMode+0x30c>
    2ac0:	80 95       	com	r24
    2ac2:	84 23       	and	r24, r20
    2ac4:	8c 93       	st	X, r24
				CLEAR_BIT(PORTB,PinIndex);
    2ac6:	a8 e3       	ldi	r26, 0x38	; 56
    2ac8:	b0 e0       	ldi	r27, 0x00	; 0
    2aca:	e8 e3       	ldi	r30, 0x38	; 56
    2acc:	f0 e0       	ldi	r31, 0x00	; 0
    2ace:	80 81       	ld	r24, Z
    2ad0:	48 2f       	mov	r20, r24
    2ad2:	89 81       	ldd	r24, Y+1	; 0x01
    2ad4:	28 2f       	mov	r18, r24
    2ad6:	30 e0       	ldi	r19, 0x00	; 0
    2ad8:	81 e0       	ldi	r24, 0x01	; 1
    2ada:	90 e0       	ldi	r25, 0x00	; 0
    2adc:	02 2e       	mov	r0, r18
    2ade:	02 c0       	rjmp	.+4      	; 0x2ae4 <PORT_enuSetPinMode+0x338>
    2ae0:	88 0f       	add	r24, r24
    2ae2:	99 1f       	adc	r25, r25
    2ae4:	0a 94       	dec	r0
    2ae6:	e2 f7       	brpl	.-8      	; 0x2ae0 <PORT_enuSetPinMode+0x334>
    2ae8:	80 95       	com	r24
    2aea:	84 23       	and	r24, r20
    2aec:	8c 93       	st	X, r24
    2aee:	a4 c1       	rjmp	.+840    	; 0x2e38 <PORT_enuSetPinMode+0x68c>

				break;
			case PORT_INPUT_PULLUP:
				CLEAR_BIT(DDRB,PinIndex);
    2af0:	a7 e3       	ldi	r26, 0x37	; 55
    2af2:	b0 e0       	ldi	r27, 0x00	; 0
    2af4:	e7 e3       	ldi	r30, 0x37	; 55
    2af6:	f0 e0       	ldi	r31, 0x00	; 0
    2af8:	80 81       	ld	r24, Z
    2afa:	48 2f       	mov	r20, r24
    2afc:	89 81       	ldd	r24, Y+1	; 0x01
    2afe:	28 2f       	mov	r18, r24
    2b00:	30 e0       	ldi	r19, 0x00	; 0
    2b02:	81 e0       	ldi	r24, 0x01	; 1
    2b04:	90 e0       	ldi	r25, 0x00	; 0
    2b06:	02 c0       	rjmp	.+4      	; 0x2b0c <PORT_enuSetPinMode+0x360>
    2b08:	88 0f       	add	r24, r24
    2b0a:	99 1f       	adc	r25, r25
    2b0c:	2a 95       	dec	r18
    2b0e:	e2 f7       	brpl	.-8      	; 0x2b08 <PORT_enuSetPinMode+0x35c>
    2b10:	80 95       	com	r24
    2b12:	84 23       	and	r24, r20
    2b14:	8c 93       	st	X, r24
				SET_BIT(PORTB,PinIndex);
    2b16:	a8 e3       	ldi	r26, 0x38	; 56
    2b18:	b0 e0       	ldi	r27, 0x00	; 0
    2b1a:	e8 e3       	ldi	r30, 0x38	; 56
    2b1c:	f0 e0       	ldi	r31, 0x00	; 0
    2b1e:	80 81       	ld	r24, Z
    2b20:	48 2f       	mov	r20, r24
    2b22:	89 81       	ldd	r24, Y+1	; 0x01
    2b24:	28 2f       	mov	r18, r24
    2b26:	30 e0       	ldi	r19, 0x00	; 0
    2b28:	81 e0       	ldi	r24, 0x01	; 1
    2b2a:	90 e0       	ldi	r25, 0x00	; 0
    2b2c:	02 2e       	mov	r0, r18
    2b2e:	02 c0       	rjmp	.+4      	; 0x2b34 <PORT_enuSetPinMode+0x388>
    2b30:	88 0f       	add	r24, r24
    2b32:	99 1f       	adc	r25, r25
    2b34:	0a 94       	dec	r0
    2b36:	e2 f7       	brpl	.-8      	; 0x2b30 <PORT_enuSetPinMode+0x384>
    2b38:	84 2b       	or	r24, r20
    2b3a:	8c 93       	st	X, r24
    2b3c:	7d c1       	rjmp	.+762    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
			}
			break;

			case PORT_C:
				//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
				switch(Copy_u8PinMode)
    2b3e:	8d 81       	ldd	r24, Y+5	; 0x05
    2b40:	28 2f       	mov	r18, r24
    2b42:	30 e0       	ldi	r19, 0x00	; 0
    2b44:	39 87       	std	Y+9, r19	; 0x09
    2b46:	28 87       	std	Y+8, r18	; 0x08
    2b48:	88 85       	ldd	r24, Y+8	; 0x08
    2b4a:	99 85       	ldd	r25, Y+9	; 0x09
    2b4c:	83 30       	cpi	r24, 0x03	; 3
    2b4e:	91 05       	cpc	r25, r1
    2b50:	09 f4       	brne	.+2      	; 0x2b54 <PORT_enuSetPinMode+0x3a8>
    2b52:	3e c0       	rjmp	.+124    	; 0x2bd0 <PORT_enuSetPinMode+0x424>
    2b54:	28 85       	ldd	r18, Y+8	; 0x08
    2b56:	39 85       	ldd	r19, Y+9	; 0x09
    2b58:	24 30       	cpi	r18, 0x04	; 4
    2b5a:	31 05       	cpc	r19, r1
    2b5c:	34 f4       	brge	.+12     	; 0x2b6a <PORT_enuSetPinMode+0x3be>
    2b5e:	88 85       	ldd	r24, Y+8	; 0x08
    2b60:	99 85       	ldd	r25, Y+9	; 0x09
    2b62:	82 30       	cpi	r24, 0x02	; 2
    2b64:	91 05       	cpc	r25, r1
    2b66:	71 f0       	breq	.+28     	; 0x2b84 <PORT_enuSetPinMode+0x3d8>
    2b68:	67 c1       	rjmp	.+718    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
    2b6a:	28 85       	ldd	r18, Y+8	; 0x08
    2b6c:	39 85       	ldd	r19, Y+9	; 0x09
    2b6e:	24 30       	cpi	r18, 0x04	; 4
    2b70:	31 05       	cpc	r19, r1
    2b72:	09 f4       	brne	.+2      	; 0x2b76 <PORT_enuSetPinMode+0x3ca>
    2b74:	54 c0       	rjmp	.+168    	; 0x2c1e <PORT_enuSetPinMode+0x472>
    2b76:	88 85       	ldd	r24, Y+8	; 0x08
    2b78:	99 85       	ldd	r25, Y+9	; 0x09
    2b7a:	85 30       	cpi	r24, 0x05	; 5
    2b7c:	91 05       	cpc	r25, r1
    2b7e:	09 f4       	brne	.+2      	; 0x2b82 <PORT_enuSetPinMode+0x3d6>
    2b80:	76 c0       	rjmp	.+236    	; 0x2c6e <PORT_enuSetPinMode+0x4c2>
    2b82:	5a c1       	rjmp	.+692    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
				{
				case PORT_OUTPUT_HIGH:
					//set output direction
					SET_BIT(DDRC,PinIndex);
    2b84:	a4 e3       	ldi	r26, 0x34	; 52
    2b86:	b0 e0       	ldi	r27, 0x00	; 0
    2b88:	e4 e3       	ldi	r30, 0x34	; 52
    2b8a:	f0 e0       	ldi	r31, 0x00	; 0
    2b8c:	80 81       	ld	r24, Z
    2b8e:	48 2f       	mov	r20, r24
    2b90:	89 81       	ldd	r24, Y+1	; 0x01
    2b92:	28 2f       	mov	r18, r24
    2b94:	30 e0       	ldi	r19, 0x00	; 0
    2b96:	81 e0       	ldi	r24, 0x01	; 1
    2b98:	90 e0       	ldi	r25, 0x00	; 0
    2b9a:	02 c0       	rjmp	.+4      	; 0x2ba0 <PORT_enuSetPinMode+0x3f4>
    2b9c:	88 0f       	add	r24, r24
    2b9e:	99 1f       	adc	r25, r25
    2ba0:	2a 95       	dec	r18
    2ba2:	e2 f7       	brpl	.-8      	; 0x2b9c <PORT_enuSetPinMode+0x3f0>
    2ba4:	84 2b       	or	r24, r20
    2ba6:	8c 93       	st	X, r24
					SET_BIT(PORTC,PinIndex);
    2ba8:	a5 e3       	ldi	r26, 0x35	; 53
    2baa:	b0 e0       	ldi	r27, 0x00	; 0
    2bac:	e5 e3       	ldi	r30, 0x35	; 53
    2bae:	f0 e0       	ldi	r31, 0x00	; 0
    2bb0:	80 81       	ld	r24, Z
    2bb2:	48 2f       	mov	r20, r24
    2bb4:	89 81       	ldd	r24, Y+1	; 0x01
    2bb6:	28 2f       	mov	r18, r24
    2bb8:	30 e0       	ldi	r19, 0x00	; 0
    2bba:	81 e0       	ldi	r24, 0x01	; 1
    2bbc:	90 e0       	ldi	r25, 0x00	; 0
    2bbe:	02 2e       	mov	r0, r18
    2bc0:	02 c0       	rjmp	.+4      	; 0x2bc6 <PORT_enuSetPinMode+0x41a>
    2bc2:	88 0f       	add	r24, r24
    2bc4:	99 1f       	adc	r25, r25
    2bc6:	0a 94       	dec	r0
    2bc8:	e2 f7       	brpl	.-8      	; 0x2bc2 <PORT_enuSetPinMode+0x416>
    2bca:	84 2b       	or	r24, r20
    2bcc:	8c 93       	st	X, r24
    2bce:	34 c1       	rjmp	.+616    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
					break;
				case PORT_OUTPUT_LOW:
					SET_BIT(DDRC,PinIndex);
    2bd0:	a4 e3       	ldi	r26, 0x34	; 52
    2bd2:	b0 e0       	ldi	r27, 0x00	; 0
    2bd4:	e4 e3       	ldi	r30, 0x34	; 52
    2bd6:	f0 e0       	ldi	r31, 0x00	; 0
    2bd8:	80 81       	ld	r24, Z
    2bda:	48 2f       	mov	r20, r24
    2bdc:	89 81       	ldd	r24, Y+1	; 0x01
    2bde:	28 2f       	mov	r18, r24
    2be0:	30 e0       	ldi	r19, 0x00	; 0
    2be2:	81 e0       	ldi	r24, 0x01	; 1
    2be4:	90 e0       	ldi	r25, 0x00	; 0
    2be6:	02 c0       	rjmp	.+4      	; 0x2bec <PORT_enuSetPinMode+0x440>
    2be8:	88 0f       	add	r24, r24
    2bea:	99 1f       	adc	r25, r25
    2bec:	2a 95       	dec	r18
    2bee:	e2 f7       	brpl	.-8      	; 0x2be8 <PORT_enuSetPinMode+0x43c>
    2bf0:	84 2b       	or	r24, r20
    2bf2:	8c 93       	st	X, r24
					CLEAR_BIT(PORTC,PinIndex);
    2bf4:	a5 e3       	ldi	r26, 0x35	; 53
    2bf6:	b0 e0       	ldi	r27, 0x00	; 0
    2bf8:	e5 e3       	ldi	r30, 0x35	; 53
    2bfa:	f0 e0       	ldi	r31, 0x00	; 0
    2bfc:	80 81       	ld	r24, Z
    2bfe:	48 2f       	mov	r20, r24
    2c00:	89 81       	ldd	r24, Y+1	; 0x01
    2c02:	28 2f       	mov	r18, r24
    2c04:	30 e0       	ldi	r19, 0x00	; 0
    2c06:	81 e0       	ldi	r24, 0x01	; 1
    2c08:	90 e0       	ldi	r25, 0x00	; 0
    2c0a:	02 2e       	mov	r0, r18
    2c0c:	02 c0       	rjmp	.+4      	; 0x2c12 <PORT_enuSetPinMode+0x466>
    2c0e:	88 0f       	add	r24, r24
    2c10:	99 1f       	adc	r25, r25
    2c12:	0a 94       	dec	r0
    2c14:	e2 f7       	brpl	.-8      	; 0x2c0e <PORT_enuSetPinMode+0x462>
    2c16:	80 95       	com	r24
    2c18:	84 23       	and	r24, r20
    2c1a:	8c 93       	st	X, r24
    2c1c:	0d c1       	rjmp	.+538    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
					break;
				case PORT_INPUT_FLOATING:
					CLEAR_BIT(DDRC,PinIndex);
    2c1e:	a4 e3       	ldi	r26, 0x34	; 52
    2c20:	b0 e0       	ldi	r27, 0x00	; 0
    2c22:	e4 e3       	ldi	r30, 0x34	; 52
    2c24:	f0 e0       	ldi	r31, 0x00	; 0
    2c26:	80 81       	ld	r24, Z
    2c28:	48 2f       	mov	r20, r24
    2c2a:	89 81       	ldd	r24, Y+1	; 0x01
    2c2c:	28 2f       	mov	r18, r24
    2c2e:	30 e0       	ldi	r19, 0x00	; 0
    2c30:	81 e0       	ldi	r24, 0x01	; 1
    2c32:	90 e0       	ldi	r25, 0x00	; 0
    2c34:	02 c0       	rjmp	.+4      	; 0x2c3a <PORT_enuSetPinMode+0x48e>
    2c36:	88 0f       	add	r24, r24
    2c38:	99 1f       	adc	r25, r25
    2c3a:	2a 95       	dec	r18
    2c3c:	e2 f7       	brpl	.-8      	; 0x2c36 <PORT_enuSetPinMode+0x48a>
    2c3e:	80 95       	com	r24
    2c40:	84 23       	and	r24, r20
    2c42:	8c 93       	st	X, r24
					CLEAR_BIT(PORTC,PinIndex);
    2c44:	a5 e3       	ldi	r26, 0x35	; 53
    2c46:	b0 e0       	ldi	r27, 0x00	; 0
    2c48:	e5 e3       	ldi	r30, 0x35	; 53
    2c4a:	f0 e0       	ldi	r31, 0x00	; 0
    2c4c:	80 81       	ld	r24, Z
    2c4e:	48 2f       	mov	r20, r24
    2c50:	89 81       	ldd	r24, Y+1	; 0x01
    2c52:	28 2f       	mov	r18, r24
    2c54:	30 e0       	ldi	r19, 0x00	; 0
    2c56:	81 e0       	ldi	r24, 0x01	; 1
    2c58:	90 e0       	ldi	r25, 0x00	; 0
    2c5a:	02 2e       	mov	r0, r18
    2c5c:	02 c0       	rjmp	.+4      	; 0x2c62 <PORT_enuSetPinMode+0x4b6>
    2c5e:	88 0f       	add	r24, r24
    2c60:	99 1f       	adc	r25, r25
    2c62:	0a 94       	dec	r0
    2c64:	e2 f7       	brpl	.-8      	; 0x2c5e <PORT_enuSetPinMode+0x4b2>
    2c66:	80 95       	com	r24
    2c68:	84 23       	and	r24, r20
    2c6a:	8c 93       	st	X, r24
    2c6c:	e5 c0       	rjmp	.+458    	; 0x2e38 <PORT_enuSetPinMode+0x68c>

					break;
				case PORT_INPUT_PULLUP:
					CLEAR_BIT(DDRC,PinIndex);
    2c6e:	a4 e3       	ldi	r26, 0x34	; 52
    2c70:	b0 e0       	ldi	r27, 0x00	; 0
    2c72:	e4 e3       	ldi	r30, 0x34	; 52
    2c74:	f0 e0       	ldi	r31, 0x00	; 0
    2c76:	80 81       	ld	r24, Z
    2c78:	48 2f       	mov	r20, r24
    2c7a:	89 81       	ldd	r24, Y+1	; 0x01
    2c7c:	28 2f       	mov	r18, r24
    2c7e:	30 e0       	ldi	r19, 0x00	; 0
    2c80:	81 e0       	ldi	r24, 0x01	; 1
    2c82:	90 e0       	ldi	r25, 0x00	; 0
    2c84:	02 c0       	rjmp	.+4      	; 0x2c8a <PORT_enuSetPinMode+0x4de>
    2c86:	88 0f       	add	r24, r24
    2c88:	99 1f       	adc	r25, r25
    2c8a:	2a 95       	dec	r18
    2c8c:	e2 f7       	brpl	.-8      	; 0x2c86 <PORT_enuSetPinMode+0x4da>
    2c8e:	80 95       	com	r24
    2c90:	84 23       	and	r24, r20
    2c92:	8c 93       	st	X, r24
					SET_BIT(PORTC,PinIndex);
    2c94:	a5 e3       	ldi	r26, 0x35	; 53
    2c96:	b0 e0       	ldi	r27, 0x00	; 0
    2c98:	e5 e3       	ldi	r30, 0x35	; 53
    2c9a:	f0 e0       	ldi	r31, 0x00	; 0
    2c9c:	80 81       	ld	r24, Z
    2c9e:	48 2f       	mov	r20, r24
    2ca0:	89 81       	ldd	r24, Y+1	; 0x01
    2ca2:	28 2f       	mov	r18, r24
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	81 e0       	ldi	r24, 0x01	; 1
    2ca8:	90 e0       	ldi	r25, 0x00	; 0
    2caa:	02 2e       	mov	r0, r18
    2cac:	02 c0       	rjmp	.+4      	; 0x2cb2 <PORT_enuSetPinMode+0x506>
    2cae:	88 0f       	add	r24, r24
    2cb0:	99 1f       	adc	r25, r25
    2cb2:	0a 94       	dec	r0
    2cb4:	e2 f7       	brpl	.-8      	; 0x2cae <PORT_enuSetPinMode+0x502>
    2cb6:	84 2b       	or	r24, r20
    2cb8:	8c 93       	st	X, r24
    2cba:	be c0       	rjmp	.+380    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
				}
				break;

				case PORT_D:
					//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
					switch(Copy_u8PinMode)
    2cbc:	8d 81       	ldd	r24, Y+5	; 0x05
    2cbe:	28 2f       	mov	r18, r24
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	3f 83       	std	Y+7, r19	; 0x07
    2cc4:	2e 83       	std	Y+6, r18	; 0x06
    2cc6:	8e 81       	ldd	r24, Y+6	; 0x06
    2cc8:	9f 81       	ldd	r25, Y+7	; 0x07
    2cca:	83 30       	cpi	r24, 0x03	; 3
    2ccc:	91 05       	cpc	r25, r1
    2cce:	09 f4       	brne	.+2      	; 0x2cd2 <PORT_enuSetPinMode+0x526>
    2cd0:	3e c0       	rjmp	.+124    	; 0x2d4e <PORT_enuSetPinMode+0x5a2>
    2cd2:	2e 81       	ldd	r18, Y+6	; 0x06
    2cd4:	3f 81       	ldd	r19, Y+7	; 0x07
    2cd6:	24 30       	cpi	r18, 0x04	; 4
    2cd8:	31 05       	cpc	r19, r1
    2cda:	34 f4       	brge	.+12     	; 0x2ce8 <PORT_enuSetPinMode+0x53c>
    2cdc:	8e 81       	ldd	r24, Y+6	; 0x06
    2cde:	9f 81       	ldd	r25, Y+7	; 0x07
    2ce0:	82 30       	cpi	r24, 0x02	; 2
    2ce2:	91 05       	cpc	r25, r1
    2ce4:	71 f0       	breq	.+28     	; 0x2d02 <PORT_enuSetPinMode+0x556>
    2ce6:	a8 c0       	rjmp	.+336    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
    2ce8:	2e 81       	ldd	r18, Y+6	; 0x06
    2cea:	3f 81       	ldd	r19, Y+7	; 0x07
    2cec:	24 30       	cpi	r18, 0x04	; 4
    2cee:	31 05       	cpc	r19, r1
    2cf0:	09 f4       	brne	.+2      	; 0x2cf4 <PORT_enuSetPinMode+0x548>
    2cf2:	54 c0       	rjmp	.+168    	; 0x2d9c <PORT_enuSetPinMode+0x5f0>
    2cf4:	8e 81       	ldd	r24, Y+6	; 0x06
    2cf6:	9f 81       	ldd	r25, Y+7	; 0x07
    2cf8:	85 30       	cpi	r24, 0x05	; 5
    2cfa:	91 05       	cpc	r25, r1
    2cfc:	09 f4       	brne	.+2      	; 0x2d00 <PORT_enuSetPinMode+0x554>
    2cfe:	76 c0       	rjmp	.+236    	; 0x2dec <PORT_enuSetPinMode+0x640>
    2d00:	9b c0       	rjmp	.+310    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
					{
					case PORT_OUTPUT_HIGH:
						//set output direction
						SET_BIT(DDRD,PinIndex);
    2d02:	a1 e3       	ldi	r26, 0x31	; 49
    2d04:	b0 e0       	ldi	r27, 0x00	; 0
    2d06:	e1 e3       	ldi	r30, 0x31	; 49
    2d08:	f0 e0       	ldi	r31, 0x00	; 0
    2d0a:	80 81       	ld	r24, Z
    2d0c:	48 2f       	mov	r20, r24
    2d0e:	89 81       	ldd	r24, Y+1	; 0x01
    2d10:	28 2f       	mov	r18, r24
    2d12:	30 e0       	ldi	r19, 0x00	; 0
    2d14:	81 e0       	ldi	r24, 0x01	; 1
    2d16:	90 e0       	ldi	r25, 0x00	; 0
    2d18:	02 c0       	rjmp	.+4      	; 0x2d1e <PORT_enuSetPinMode+0x572>
    2d1a:	88 0f       	add	r24, r24
    2d1c:	99 1f       	adc	r25, r25
    2d1e:	2a 95       	dec	r18
    2d20:	e2 f7       	brpl	.-8      	; 0x2d1a <PORT_enuSetPinMode+0x56e>
    2d22:	84 2b       	or	r24, r20
    2d24:	8c 93       	st	X, r24
						SET_BIT(PORTD,PinIndex);
    2d26:	a2 e3       	ldi	r26, 0x32	; 50
    2d28:	b0 e0       	ldi	r27, 0x00	; 0
    2d2a:	e2 e3       	ldi	r30, 0x32	; 50
    2d2c:	f0 e0       	ldi	r31, 0x00	; 0
    2d2e:	80 81       	ld	r24, Z
    2d30:	48 2f       	mov	r20, r24
    2d32:	89 81       	ldd	r24, Y+1	; 0x01
    2d34:	28 2f       	mov	r18, r24
    2d36:	30 e0       	ldi	r19, 0x00	; 0
    2d38:	81 e0       	ldi	r24, 0x01	; 1
    2d3a:	90 e0       	ldi	r25, 0x00	; 0
    2d3c:	02 2e       	mov	r0, r18
    2d3e:	02 c0       	rjmp	.+4      	; 0x2d44 <PORT_enuSetPinMode+0x598>
    2d40:	88 0f       	add	r24, r24
    2d42:	99 1f       	adc	r25, r25
    2d44:	0a 94       	dec	r0
    2d46:	e2 f7       	brpl	.-8      	; 0x2d40 <PORT_enuSetPinMode+0x594>
    2d48:	84 2b       	or	r24, r20
    2d4a:	8c 93       	st	X, r24
    2d4c:	75 c0       	rjmp	.+234    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
						break;
					case PORT_OUTPUT_LOW:
						SET_BIT(DDRD,PinIndex);
    2d4e:	a1 e3       	ldi	r26, 0x31	; 49
    2d50:	b0 e0       	ldi	r27, 0x00	; 0
    2d52:	e1 e3       	ldi	r30, 0x31	; 49
    2d54:	f0 e0       	ldi	r31, 0x00	; 0
    2d56:	80 81       	ld	r24, Z
    2d58:	48 2f       	mov	r20, r24
    2d5a:	89 81       	ldd	r24, Y+1	; 0x01
    2d5c:	28 2f       	mov	r18, r24
    2d5e:	30 e0       	ldi	r19, 0x00	; 0
    2d60:	81 e0       	ldi	r24, 0x01	; 1
    2d62:	90 e0       	ldi	r25, 0x00	; 0
    2d64:	02 c0       	rjmp	.+4      	; 0x2d6a <PORT_enuSetPinMode+0x5be>
    2d66:	88 0f       	add	r24, r24
    2d68:	99 1f       	adc	r25, r25
    2d6a:	2a 95       	dec	r18
    2d6c:	e2 f7       	brpl	.-8      	; 0x2d66 <PORT_enuSetPinMode+0x5ba>
    2d6e:	84 2b       	or	r24, r20
    2d70:	8c 93       	st	X, r24
						CLEAR_BIT(PORTD,PinIndex);
    2d72:	a2 e3       	ldi	r26, 0x32	; 50
    2d74:	b0 e0       	ldi	r27, 0x00	; 0
    2d76:	e2 e3       	ldi	r30, 0x32	; 50
    2d78:	f0 e0       	ldi	r31, 0x00	; 0
    2d7a:	80 81       	ld	r24, Z
    2d7c:	48 2f       	mov	r20, r24
    2d7e:	89 81       	ldd	r24, Y+1	; 0x01
    2d80:	28 2f       	mov	r18, r24
    2d82:	30 e0       	ldi	r19, 0x00	; 0
    2d84:	81 e0       	ldi	r24, 0x01	; 1
    2d86:	90 e0       	ldi	r25, 0x00	; 0
    2d88:	02 2e       	mov	r0, r18
    2d8a:	02 c0       	rjmp	.+4      	; 0x2d90 <PORT_enuSetPinMode+0x5e4>
    2d8c:	88 0f       	add	r24, r24
    2d8e:	99 1f       	adc	r25, r25
    2d90:	0a 94       	dec	r0
    2d92:	e2 f7       	brpl	.-8      	; 0x2d8c <PORT_enuSetPinMode+0x5e0>
    2d94:	80 95       	com	r24
    2d96:	84 23       	and	r24, r20
    2d98:	8c 93       	st	X, r24
    2d9a:	4e c0       	rjmp	.+156    	; 0x2e38 <PORT_enuSetPinMode+0x68c>
						break;
					case PORT_INPUT_FLOATING:
						CLEAR_BIT(DDRD,PinIndex);
    2d9c:	a1 e3       	ldi	r26, 0x31	; 49
    2d9e:	b0 e0       	ldi	r27, 0x00	; 0
    2da0:	e1 e3       	ldi	r30, 0x31	; 49
    2da2:	f0 e0       	ldi	r31, 0x00	; 0
    2da4:	80 81       	ld	r24, Z
    2da6:	48 2f       	mov	r20, r24
    2da8:	89 81       	ldd	r24, Y+1	; 0x01
    2daa:	28 2f       	mov	r18, r24
    2dac:	30 e0       	ldi	r19, 0x00	; 0
    2dae:	81 e0       	ldi	r24, 0x01	; 1
    2db0:	90 e0       	ldi	r25, 0x00	; 0
    2db2:	02 c0       	rjmp	.+4      	; 0x2db8 <PORT_enuSetPinMode+0x60c>
    2db4:	88 0f       	add	r24, r24
    2db6:	99 1f       	adc	r25, r25
    2db8:	2a 95       	dec	r18
    2dba:	e2 f7       	brpl	.-8      	; 0x2db4 <PORT_enuSetPinMode+0x608>
    2dbc:	80 95       	com	r24
    2dbe:	84 23       	and	r24, r20
    2dc0:	8c 93       	st	X, r24
						CLEAR_BIT(PORTD,PinIndex);
    2dc2:	a2 e3       	ldi	r26, 0x32	; 50
    2dc4:	b0 e0       	ldi	r27, 0x00	; 0
    2dc6:	e2 e3       	ldi	r30, 0x32	; 50
    2dc8:	f0 e0       	ldi	r31, 0x00	; 0
    2dca:	80 81       	ld	r24, Z
    2dcc:	48 2f       	mov	r20, r24
    2dce:	89 81       	ldd	r24, Y+1	; 0x01
    2dd0:	28 2f       	mov	r18, r24
    2dd2:	30 e0       	ldi	r19, 0x00	; 0
    2dd4:	81 e0       	ldi	r24, 0x01	; 1
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	02 2e       	mov	r0, r18
    2dda:	02 c0       	rjmp	.+4      	; 0x2de0 <PORT_enuSetPinMode+0x634>
    2ddc:	88 0f       	add	r24, r24
    2dde:	99 1f       	adc	r25, r25
    2de0:	0a 94       	dec	r0
    2de2:	e2 f7       	brpl	.-8      	; 0x2ddc <PORT_enuSetPinMode+0x630>
    2de4:	80 95       	com	r24
    2de6:	84 23       	and	r24, r20
    2de8:	8c 93       	st	X, r24
    2dea:	26 c0       	rjmp	.+76     	; 0x2e38 <PORT_enuSetPinMode+0x68c>

						break;
					case PORT_INPUT_PULLUP:
						CLEAR_BIT(DDRD,PinIndex);
    2dec:	a1 e3       	ldi	r26, 0x31	; 49
    2dee:	b0 e0       	ldi	r27, 0x00	; 0
    2df0:	e1 e3       	ldi	r30, 0x31	; 49
    2df2:	f0 e0       	ldi	r31, 0x00	; 0
    2df4:	80 81       	ld	r24, Z
    2df6:	48 2f       	mov	r20, r24
    2df8:	89 81       	ldd	r24, Y+1	; 0x01
    2dfa:	28 2f       	mov	r18, r24
    2dfc:	30 e0       	ldi	r19, 0x00	; 0
    2dfe:	81 e0       	ldi	r24, 0x01	; 1
    2e00:	90 e0       	ldi	r25, 0x00	; 0
    2e02:	02 c0       	rjmp	.+4      	; 0x2e08 <PORT_enuSetPinMode+0x65c>
    2e04:	88 0f       	add	r24, r24
    2e06:	99 1f       	adc	r25, r25
    2e08:	2a 95       	dec	r18
    2e0a:	e2 f7       	brpl	.-8      	; 0x2e04 <PORT_enuSetPinMode+0x658>
    2e0c:	80 95       	com	r24
    2e0e:	84 23       	and	r24, r20
    2e10:	8c 93       	st	X, r24
						SET_BIT(PORTD,PinIndex);
    2e12:	a2 e3       	ldi	r26, 0x32	; 50
    2e14:	b0 e0       	ldi	r27, 0x00	; 0
    2e16:	e2 e3       	ldi	r30, 0x32	; 50
    2e18:	f0 e0       	ldi	r31, 0x00	; 0
    2e1a:	80 81       	ld	r24, Z
    2e1c:	48 2f       	mov	r20, r24
    2e1e:	89 81       	ldd	r24, Y+1	; 0x01
    2e20:	28 2f       	mov	r18, r24
    2e22:	30 e0       	ldi	r19, 0x00	; 0
    2e24:	81 e0       	ldi	r24, 0x01	; 1
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	02 2e       	mov	r0, r18
    2e2a:	02 c0       	rjmp	.+4      	; 0x2e30 <PORT_enuSetPinMode+0x684>
    2e2c:	88 0f       	add	r24, r24
    2e2e:	99 1f       	adc	r25, r25
    2e30:	0a 94       	dec	r0
    2e32:	e2 f7       	brpl	.-8      	; 0x2e2c <PORT_enuSetPinMode+0x680>
    2e34:	84 2b       	or	r24, r20
    2e36:	8c 93       	st	X, r24
					}
					break;

	}
	//return Error Status
	return LOC_u8ErrorStatus;
    2e38:	8b 81       	ldd	r24, Y+3	; 0x03

}
    2e3a:	2f 96       	adiw	r28, 0x0f	; 15
    2e3c:	0f b6       	in	r0, 0x3f	; 63
    2e3e:	f8 94       	cli
    2e40:	de bf       	out	0x3e, r29	; 62
    2e42:	0f be       	out	0x3f, r0	; 63
    2e44:	cd bf       	out	0x3d, r28	; 61
    2e46:	cf 91       	pop	r28
    2e48:	df 91       	pop	r29
    2e4a:	08 95       	ret

00002e4c <PORT_enuSetDirection>:
 *                   2.Copy_u8PinDirection --> Direction
 * Parameters(OUT) : value of enum type PORT_tenuLOC_u8ErrorStatus
 *******************************************************************************************/

PORT_tenuErrorStatus PORT_enuSetDirection(PortPinType Copy_u8PinId,PortPinType Copy_u8PinDirection)
{
    2e4c:	df 93       	push	r29
    2e4e:	cf 93       	push	r28
    2e50:	cd b7       	in	r28, 0x3d	; 61
    2e52:	de b7       	in	r29, 0x3e	; 62
    2e54:	2f 97       	sbiw	r28, 0x0f	; 15
    2e56:	0f b6       	in	r0, 0x3f	; 63
    2e58:	f8 94       	cli
    2e5a:	de bf       	out	0x3e, r29	; 62
    2e5c:	0f be       	out	0x3f, r0	; 63
    2e5e:	cd bf       	out	0x3d, r28	; 61
    2e60:	8c 83       	std	Y+4, r24	; 0x04
    2e62:	6d 83       	std	Y+5, r22	; 0x05
	//local variable for Error status
	uint8 LOC_u8ErrorStatus=PORT_enuOK;
    2e64:	1b 82       	std	Y+3, r1	; 0x03

	uint8 PortIndex=0,PinIndex=0;
    2e66:	1a 82       	std	Y+2, r1	; 0x02
    2e68:	19 82       	std	Y+1, r1	; 0x01

	PortIndex=(Copy_u8PinId/8);
    2e6a:	8c 81       	ldd	r24, Y+4	; 0x04
    2e6c:	86 95       	lsr	r24
    2e6e:	86 95       	lsr	r24
    2e70:	86 95       	lsr	r24
    2e72:	8a 83       	std	Y+2, r24	; 0x02

	PinIndex=Copy_u8PinId%8;
    2e74:	8c 81       	ldd	r24, Y+4	; 0x04
    2e76:	87 70       	andi	r24, 0x07	; 7
    2e78:	89 83       	std	Y+1, r24	; 0x01


	if(Copy_u8PinId>PORT_NUMBER_OF_PINS)
    2e7a:	8c 81       	ldd	r24, Y+4	; 0x04
    2e7c:	81 32       	cpi	r24, 0x21	; 33
    2e7e:	10 f0       	brcs	.+4      	; 0x2e84 <PORT_enuSetDirection+0x38>
	{
		LOC_u8ErrorStatus=PORT_enuPinError;
    2e80:	81 e0       	ldi	r24, 0x01	; 1
    2e82:	8b 83       	std	Y+3, r24	; 0x03
	}

	if(PortIndex>PORT_NUMBER_OF_PORTS)
    2e84:	8a 81       	ldd	r24, Y+2	; 0x02
    2e86:	85 30       	cpi	r24, 0x05	; 5
    2e88:	10 f0       	brcs	.+4      	; 0x2e8e <PORT_enuSetDirection+0x42>
	{
		LOC_u8ErrorStatus=PORT_enuPortError;
    2e8a:	82 e0       	ldi	r24, 0x02	; 2
    2e8c:	8b 83       	std	Y+3, r24	; 0x03
	}

	if((Copy_u8PinDirection != PORT_INPUT_Direction) ||(Copy_u8PinDirection != PORT_OUTPUT_Direction))
    2e8e:	8d 81       	ldd	r24, Y+5	; 0x05
    2e90:	86 30       	cpi	r24, 0x06	; 6
    2e92:	19 f4       	brne	.+6      	; 0x2e9a <PORT_enuSetDirection+0x4e>
    2e94:	8d 81       	ldd	r24, Y+5	; 0x05
    2e96:	87 30       	cpi	r24, 0x07	; 7
    2e98:	11 f0       	breq	.+4      	; 0x2e9e <PORT_enuSetDirection+0x52>
	{
		LOC_u8ErrorStatus=Por_enuDirectionError;
    2e9a:	84 e0       	ldi	r24, 0x04	; 4
    2e9c:	8b 83       	std	Y+3, r24	; 0x03

	}


	switch(PortIndex)
    2e9e:	8a 81       	ldd	r24, Y+2	; 0x02
    2ea0:	28 2f       	mov	r18, r24
    2ea2:	30 e0       	ldi	r19, 0x00	; 0
    2ea4:	3f 87       	std	Y+15, r19	; 0x0f
    2ea6:	2e 87       	std	Y+14, r18	; 0x0e
    2ea8:	8e 85       	ldd	r24, Y+14	; 0x0e
    2eaa:	9f 85       	ldd	r25, Y+15	; 0x0f
    2eac:	81 30       	cpi	r24, 0x01	; 1
    2eae:	91 05       	cpc	r25, r1
    2eb0:	09 f4       	brne	.+2      	; 0x2eb4 <PORT_enuSetDirection+0x68>
    2eb2:	50 c0       	rjmp	.+160    	; 0x2f54 <PORT_enuSetDirection+0x108>
    2eb4:	2e 85       	ldd	r18, Y+14	; 0x0e
    2eb6:	3f 85       	ldd	r19, Y+15	; 0x0f
    2eb8:	22 30       	cpi	r18, 0x02	; 2
    2eba:	31 05       	cpc	r19, r1
    2ebc:	2c f4       	brge	.+10     	; 0x2ec8 <PORT_enuSetDirection+0x7c>
    2ebe:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ec0:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ec2:	00 97       	sbiw	r24, 0x00	; 0
    2ec4:	71 f0       	breq	.+28     	; 0x2ee2 <PORT_enuSetDirection+0x96>
    2ec6:	f0 c0       	rjmp	.+480    	; 0x30a8 <PORT_enuSetDirection+0x25c>
    2ec8:	2e 85       	ldd	r18, Y+14	; 0x0e
    2eca:	3f 85       	ldd	r19, Y+15	; 0x0f
    2ecc:	22 30       	cpi	r18, 0x02	; 2
    2ece:	31 05       	cpc	r19, r1
    2ed0:	09 f4       	brne	.+2      	; 0x2ed4 <PORT_enuSetDirection+0x88>
    2ed2:	79 c0       	rjmp	.+242    	; 0x2fc6 <PORT_enuSetDirection+0x17a>
    2ed4:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ed6:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ed8:	83 30       	cpi	r24, 0x03	; 3
    2eda:	91 05       	cpc	r25, r1
    2edc:	09 f4       	brne	.+2      	; 0x2ee0 <PORT_enuSetDirection+0x94>
    2ede:	ac c0       	rjmp	.+344    	; 0x3038 <PORT_enuSetDirection+0x1ec>
    2ee0:	e3 c0       	rjmp	.+454    	; 0x30a8 <PORT_enuSetDirection+0x25c>
	{

	case PORT_A:

		switch(Copy_u8PinDirection)
    2ee2:	8d 81       	ldd	r24, Y+5	; 0x05
    2ee4:	28 2f       	mov	r18, r24
    2ee6:	30 e0       	ldi	r19, 0x00	; 0
    2ee8:	3d 87       	std	Y+13, r19	; 0x0d
    2eea:	2c 87       	std	Y+12, r18	; 0x0c
    2eec:	8c 85       	ldd	r24, Y+12	; 0x0c
    2eee:	9d 85       	ldd	r25, Y+13	; 0x0d
    2ef0:	86 30       	cpi	r24, 0x06	; 6
    2ef2:	91 05       	cpc	r25, r1
    2ef4:	31 f0       	breq	.+12     	; 0x2f02 <PORT_enuSetDirection+0xb6>
    2ef6:	2c 85       	ldd	r18, Y+12	; 0x0c
    2ef8:	3d 85       	ldd	r19, Y+13	; 0x0d
    2efa:	27 30       	cpi	r18, 0x07	; 7
    2efc:	31 05       	cpc	r19, r1
    2efe:	b1 f0       	breq	.+44     	; 0x2f2c <PORT_enuSetDirection+0xe0>
    2f00:	d3 c0       	rjmp	.+422    	; 0x30a8 <PORT_enuSetDirection+0x25c>
		{
		case PORT_INPUT_Direction:
			CLEAR_BIT(DDRA,PinIndex);
    2f02:	aa e3       	ldi	r26, 0x3A	; 58
    2f04:	b0 e0       	ldi	r27, 0x00	; 0
    2f06:	ea e3       	ldi	r30, 0x3A	; 58
    2f08:	f0 e0       	ldi	r31, 0x00	; 0
    2f0a:	80 81       	ld	r24, Z
    2f0c:	48 2f       	mov	r20, r24
    2f0e:	89 81       	ldd	r24, Y+1	; 0x01
    2f10:	28 2f       	mov	r18, r24
    2f12:	30 e0       	ldi	r19, 0x00	; 0
    2f14:	81 e0       	ldi	r24, 0x01	; 1
    2f16:	90 e0       	ldi	r25, 0x00	; 0
    2f18:	02 2e       	mov	r0, r18
    2f1a:	02 c0       	rjmp	.+4      	; 0x2f20 <PORT_enuSetDirection+0xd4>
    2f1c:	88 0f       	add	r24, r24
    2f1e:	99 1f       	adc	r25, r25
    2f20:	0a 94       	dec	r0
    2f22:	e2 f7       	brpl	.-8      	; 0x2f1c <PORT_enuSetDirection+0xd0>
    2f24:	80 95       	com	r24
    2f26:	84 23       	and	r24, r20
    2f28:	8c 93       	st	X, r24
    2f2a:	be c0       	rjmp	.+380    	; 0x30a8 <PORT_enuSetDirection+0x25c>
			break;
		case PORT_OUTPUT_Direction:
			SET_BIT(PORTA,PinIndex);
    2f2c:	ab e3       	ldi	r26, 0x3B	; 59
    2f2e:	b0 e0       	ldi	r27, 0x00	; 0
    2f30:	eb e3       	ldi	r30, 0x3B	; 59
    2f32:	f0 e0       	ldi	r31, 0x00	; 0
    2f34:	80 81       	ld	r24, Z
    2f36:	48 2f       	mov	r20, r24
    2f38:	89 81       	ldd	r24, Y+1	; 0x01
    2f3a:	28 2f       	mov	r18, r24
    2f3c:	30 e0       	ldi	r19, 0x00	; 0
    2f3e:	81 e0       	ldi	r24, 0x01	; 1
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	02 2e       	mov	r0, r18
    2f44:	02 c0       	rjmp	.+4      	; 0x2f4a <PORT_enuSetDirection+0xfe>
    2f46:	88 0f       	add	r24, r24
    2f48:	99 1f       	adc	r25, r25
    2f4a:	0a 94       	dec	r0
    2f4c:	e2 f7       	brpl	.-8      	; 0x2f46 <PORT_enuSetDirection+0xfa>
    2f4e:	84 2b       	or	r24, r20
    2f50:	8c 93       	st	X, r24
    2f52:	aa c0       	rjmp	.+340    	; 0x30a8 <PORT_enuSetDirection+0x25c>
		}
		break;

		case PORT_B:

			switch(Copy_u8PinDirection)
    2f54:	8d 81       	ldd	r24, Y+5	; 0x05
    2f56:	28 2f       	mov	r18, r24
    2f58:	30 e0       	ldi	r19, 0x00	; 0
    2f5a:	3b 87       	std	Y+11, r19	; 0x0b
    2f5c:	2a 87       	std	Y+10, r18	; 0x0a
    2f5e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f60:	9b 85       	ldd	r25, Y+11	; 0x0b
    2f62:	86 30       	cpi	r24, 0x06	; 6
    2f64:	91 05       	cpc	r25, r1
    2f66:	31 f0       	breq	.+12     	; 0x2f74 <PORT_enuSetDirection+0x128>
    2f68:	2a 85       	ldd	r18, Y+10	; 0x0a
    2f6a:	3b 85       	ldd	r19, Y+11	; 0x0b
    2f6c:	27 30       	cpi	r18, 0x07	; 7
    2f6e:	31 05       	cpc	r19, r1
    2f70:	b1 f0       	breq	.+44     	; 0x2f9e <PORT_enuSetDirection+0x152>
    2f72:	9a c0       	rjmp	.+308    	; 0x30a8 <PORT_enuSetDirection+0x25c>
			{
			case PORT_INPUT_Direction:
				CLEAR_BIT(DDRB,PinIndex);
    2f74:	a7 e3       	ldi	r26, 0x37	; 55
    2f76:	b0 e0       	ldi	r27, 0x00	; 0
    2f78:	e7 e3       	ldi	r30, 0x37	; 55
    2f7a:	f0 e0       	ldi	r31, 0x00	; 0
    2f7c:	80 81       	ld	r24, Z
    2f7e:	48 2f       	mov	r20, r24
    2f80:	89 81       	ldd	r24, Y+1	; 0x01
    2f82:	28 2f       	mov	r18, r24
    2f84:	30 e0       	ldi	r19, 0x00	; 0
    2f86:	81 e0       	ldi	r24, 0x01	; 1
    2f88:	90 e0       	ldi	r25, 0x00	; 0
    2f8a:	02 2e       	mov	r0, r18
    2f8c:	02 c0       	rjmp	.+4      	; 0x2f92 <PORT_enuSetDirection+0x146>
    2f8e:	88 0f       	add	r24, r24
    2f90:	99 1f       	adc	r25, r25
    2f92:	0a 94       	dec	r0
    2f94:	e2 f7       	brpl	.-8      	; 0x2f8e <PORT_enuSetDirection+0x142>
    2f96:	80 95       	com	r24
    2f98:	84 23       	and	r24, r20
    2f9a:	8c 93       	st	X, r24
    2f9c:	85 c0       	rjmp	.+266    	; 0x30a8 <PORT_enuSetDirection+0x25c>
				break;
			case PORT_OUTPUT_Direction:
				SET_BIT(PORTB,PinIndex);
    2f9e:	a8 e3       	ldi	r26, 0x38	; 56
    2fa0:	b0 e0       	ldi	r27, 0x00	; 0
    2fa2:	e8 e3       	ldi	r30, 0x38	; 56
    2fa4:	f0 e0       	ldi	r31, 0x00	; 0
    2fa6:	80 81       	ld	r24, Z
    2fa8:	48 2f       	mov	r20, r24
    2faa:	89 81       	ldd	r24, Y+1	; 0x01
    2fac:	28 2f       	mov	r18, r24
    2fae:	30 e0       	ldi	r19, 0x00	; 0
    2fb0:	81 e0       	ldi	r24, 0x01	; 1
    2fb2:	90 e0       	ldi	r25, 0x00	; 0
    2fb4:	02 2e       	mov	r0, r18
    2fb6:	02 c0       	rjmp	.+4      	; 0x2fbc <PORT_enuSetDirection+0x170>
    2fb8:	88 0f       	add	r24, r24
    2fba:	99 1f       	adc	r25, r25
    2fbc:	0a 94       	dec	r0
    2fbe:	e2 f7       	brpl	.-8      	; 0x2fb8 <PORT_enuSetDirection+0x16c>
    2fc0:	84 2b       	or	r24, r20
    2fc2:	8c 93       	st	X, r24
    2fc4:	71 c0       	rjmp	.+226    	; 0x30a8 <PORT_enuSetDirection+0x25c>

			break;

			case PORT_C:

				switch(Copy_u8PinDirection)
    2fc6:	8d 81       	ldd	r24, Y+5	; 0x05
    2fc8:	28 2f       	mov	r18, r24
    2fca:	30 e0       	ldi	r19, 0x00	; 0
    2fcc:	39 87       	std	Y+9, r19	; 0x09
    2fce:	28 87       	std	Y+8, r18	; 0x08
    2fd0:	88 85       	ldd	r24, Y+8	; 0x08
    2fd2:	99 85       	ldd	r25, Y+9	; 0x09
    2fd4:	86 30       	cpi	r24, 0x06	; 6
    2fd6:	91 05       	cpc	r25, r1
    2fd8:	31 f0       	breq	.+12     	; 0x2fe6 <PORT_enuSetDirection+0x19a>
    2fda:	28 85       	ldd	r18, Y+8	; 0x08
    2fdc:	39 85       	ldd	r19, Y+9	; 0x09
    2fde:	27 30       	cpi	r18, 0x07	; 7
    2fe0:	31 05       	cpc	r19, r1
    2fe2:	b1 f0       	breq	.+44     	; 0x3010 <PORT_enuSetDirection+0x1c4>
    2fe4:	61 c0       	rjmp	.+194    	; 0x30a8 <PORT_enuSetDirection+0x25c>
				{
				case PORT_INPUT_Direction:
					CLEAR_BIT(DDRC,PinIndex);
    2fe6:	a4 e3       	ldi	r26, 0x34	; 52
    2fe8:	b0 e0       	ldi	r27, 0x00	; 0
    2fea:	e4 e3       	ldi	r30, 0x34	; 52
    2fec:	f0 e0       	ldi	r31, 0x00	; 0
    2fee:	80 81       	ld	r24, Z
    2ff0:	48 2f       	mov	r20, r24
    2ff2:	89 81       	ldd	r24, Y+1	; 0x01
    2ff4:	28 2f       	mov	r18, r24
    2ff6:	30 e0       	ldi	r19, 0x00	; 0
    2ff8:	81 e0       	ldi	r24, 0x01	; 1
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	02 2e       	mov	r0, r18
    2ffe:	02 c0       	rjmp	.+4      	; 0x3004 <PORT_enuSetDirection+0x1b8>
    3000:	88 0f       	add	r24, r24
    3002:	99 1f       	adc	r25, r25
    3004:	0a 94       	dec	r0
    3006:	e2 f7       	brpl	.-8      	; 0x3000 <PORT_enuSetDirection+0x1b4>
    3008:	80 95       	com	r24
    300a:	84 23       	and	r24, r20
    300c:	8c 93       	st	X, r24
    300e:	4c c0       	rjmp	.+152    	; 0x30a8 <PORT_enuSetDirection+0x25c>
					break;
				case PORT_OUTPUT_Direction:
					SET_BIT(PORTC,PinIndex);
    3010:	a5 e3       	ldi	r26, 0x35	; 53
    3012:	b0 e0       	ldi	r27, 0x00	; 0
    3014:	e5 e3       	ldi	r30, 0x35	; 53
    3016:	f0 e0       	ldi	r31, 0x00	; 0
    3018:	80 81       	ld	r24, Z
    301a:	48 2f       	mov	r20, r24
    301c:	89 81       	ldd	r24, Y+1	; 0x01
    301e:	28 2f       	mov	r18, r24
    3020:	30 e0       	ldi	r19, 0x00	; 0
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	90 e0       	ldi	r25, 0x00	; 0
    3026:	02 2e       	mov	r0, r18
    3028:	02 c0       	rjmp	.+4      	; 0x302e <PORT_enuSetDirection+0x1e2>
    302a:	88 0f       	add	r24, r24
    302c:	99 1f       	adc	r25, r25
    302e:	0a 94       	dec	r0
    3030:	e2 f7       	brpl	.-8      	; 0x302a <PORT_enuSetDirection+0x1de>
    3032:	84 2b       	or	r24, r20
    3034:	8c 93       	st	X, r24
    3036:	38 c0       	rjmp	.+112    	; 0x30a8 <PORT_enuSetDirection+0x25c>
				}
				break;

				case PORT_D:

					switch(Copy_u8PinDirection)
    3038:	8d 81       	ldd	r24, Y+5	; 0x05
    303a:	28 2f       	mov	r18, r24
    303c:	30 e0       	ldi	r19, 0x00	; 0
    303e:	3f 83       	std	Y+7, r19	; 0x07
    3040:	2e 83       	std	Y+6, r18	; 0x06
    3042:	8e 81       	ldd	r24, Y+6	; 0x06
    3044:	9f 81       	ldd	r25, Y+7	; 0x07
    3046:	86 30       	cpi	r24, 0x06	; 6
    3048:	91 05       	cpc	r25, r1
    304a:	31 f0       	breq	.+12     	; 0x3058 <PORT_enuSetDirection+0x20c>
    304c:	2e 81       	ldd	r18, Y+6	; 0x06
    304e:	3f 81       	ldd	r19, Y+7	; 0x07
    3050:	27 30       	cpi	r18, 0x07	; 7
    3052:	31 05       	cpc	r19, r1
    3054:	b1 f0       	breq	.+44     	; 0x3082 <PORT_enuSetDirection+0x236>
    3056:	28 c0       	rjmp	.+80     	; 0x30a8 <PORT_enuSetDirection+0x25c>
					{
					case PORT_INPUT_Direction:
						CLEAR_BIT(DDRD,PinIndex);
    3058:	a1 e3       	ldi	r26, 0x31	; 49
    305a:	b0 e0       	ldi	r27, 0x00	; 0
    305c:	e1 e3       	ldi	r30, 0x31	; 49
    305e:	f0 e0       	ldi	r31, 0x00	; 0
    3060:	80 81       	ld	r24, Z
    3062:	48 2f       	mov	r20, r24
    3064:	89 81       	ldd	r24, Y+1	; 0x01
    3066:	28 2f       	mov	r18, r24
    3068:	30 e0       	ldi	r19, 0x00	; 0
    306a:	81 e0       	ldi	r24, 0x01	; 1
    306c:	90 e0       	ldi	r25, 0x00	; 0
    306e:	02 2e       	mov	r0, r18
    3070:	02 c0       	rjmp	.+4      	; 0x3076 <PORT_enuSetDirection+0x22a>
    3072:	88 0f       	add	r24, r24
    3074:	99 1f       	adc	r25, r25
    3076:	0a 94       	dec	r0
    3078:	e2 f7       	brpl	.-8      	; 0x3072 <PORT_enuSetDirection+0x226>
    307a:	80 95       	com	r24
    307c:	84 23       	and	r24, r20
    307e:	8c 93       	st	X, r24
    3080:	13 c0       	rjmp	.+38     	; 0x30a8 <PORT_enuSetDirection+0x25c>
						break;
					case PORT_OUTPUT_Direction:
						SET_BIT(PORTD,PinIndex);
    3082:	a2 e3       	ldi	r26, 0x32	; 50
    3084:	b0 e0       	ldi	r27, 0x00	; 0
    3086:	e2 e3       	ldi	r30, 0x32	; 50
    3088:	f0 e0       	ldi	r31, 0x00	; 0
    308a:	80 81       	ld	r24, Z
    308c:	48 2f       	mov	r20, r24
    308e:	89 81       	ldd	r24, Y+1	; 0x01
    3090:	28 2f       	mov	r18, r24
    3092:	30 e0       	ldi	r19, 0x00	; 0
    3094:	81 e0       	ldi	r24, 0x01	; 1
    3096:	90 e0       	ldi	r25, 0x00	; 0
    3098:	02 2e       	mov	r0, r18
    309a:	02 c0       	rjmp	.+4      	; 0x30a0 <PORT_enuSetDirection+0x254>
    309c:	88 0f       	add	r24, r24
    309e:	99 1f       	adc	r25, r25
    30a0:	0a 94       	dec	r0
    30a2:	e2 f7       	brpl	.-8      	; 0x309c <PORT_enuSetDirection+0x250>
    30a4:	84 2b       	or	r24, r20
    30a6:	8c 93       	st	X, r24
					}
					break;

	}

	return LOC_u8ErrorStatus;
    30a8:	8b 81       	ldd	r24, Y+3	; 0x03
}
    30aa:	2f 96       	adiw	r28, 0x0f	; 15
    30ac:	0f b6       	in	r0, 0x3f	; 63
    30ae:	f8 94       	cli
    30b0:	de bf       	out	0x3e, r29	; 62
    30b2:	0f be       	out	0x3f, r0	; 63
    30b4:	cd bf       	out	0x3d, r28	; 61
    30b6:	cf 91       	pop	r28
    30b8:	df 91       	pop	r29
    30ba:	08 95       	ret

000030bc <GIE_enuInit>:
#include "../../../Services/Lib/common_macros.h"
#include "../Includes/GIE_Cfg.h"
#include "../Includes/GIE_Prv.h"

void  GIE_enuInit(void)
{
    30bc:	df 93       	push	r29
    30be:	cf 93       	push	r28
    30c0:	cd b7       	in	r28, 0x3d	; 61
    30c2:	de b7       	in	r29, 0x3e	; 62
#if(GIE_MODE==GIE_ENABLE)
	SET_BIT(SREG,GIE_BIT);
    30c4:	af e5       	ldi	r26, 0x5F	; 95
    30c6:	b0 e0       	ldi	r27, 0x00	; 0
    30c8:	ef e5       	ldi	r30, 0x5F	; 95
    30ca:	f0 e0       	ldi	r31, 0x00	; 0
    30cc:	80 81       	ld	r24, Z
    30ce:	80 68       	ori	r24, 0x80	; 128
    30d0:	8c 93       	st	X, r24
#elif(GIE_MODE==GIE_DISABLE)
	CLEAR_BIT(SREG,GIE_BIT);
#endif
}
    30d2:	cf 91       	pop	r28
    30d4:	df 91       	pop	r29
    30d6:	08 95       	ret

000030d8 <GIE_enuSetResetGie>:



GIE_tenuErrorStatus GIE_enuSetResetGie(uint8 Copy_u8GieStatus)
{
    30d8:	df 93       	push	r29
    30da:	cf 93       	push	r28
    30dc:	00 d0       	rcall	.+0      	; 0x30de <GIE_enuSetResetGie+0x6>
    30de:	00 d0       	rcall	.+0      	; 0x30e0 <GIE_enuSetResetGie+0x8>
    30e0:	cd b7       	in	r28, 0x3d	; 61
    30e2:	de b7       	in	r29, 0x3e	; 62
    30e4:	8a 83       	std	Y+2, r24	; 0x02
	uint8 ErrorStatus=GIE_enuOK;
    30e6:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8GieStatus)
    30e8:	8a 81       	ldd	r24, Y+2	; 0x02
    30ea:	28 2f       	mov	r18, r24
    30ec:	30 e0       	ldi	r19, 0x00	; 0
    30ee:	3c 83       	std	Y+4, r19	; 0x04
    30f0:	2b 83       	std	Y+3, r18	; 0x03
    30f2:	8b 81       	ldd	r24, Y+3	; 0x03
    30f4:	9c 81       	ldd	r25, Y+4	; 0x04
    30f6:	00 97       	sbiw	r24, 0x00	; 0
    30f8:	69 f0       	breq	.+26     	; 0x3114 <GIE_enuSetResetGie+0x3c>
    30fa:	2b 81       	ldd	r18, Y+3	; 0x03
    30fc:	3c 81       	ldd	r19, Y+4	; 0x04
    30fe:	21 30       	cpi	r18, 0x01	; 1
    3100:	31 05       	cpc	r19, r1
    3102:	81 f4       	brne	.+32     	; 0x3124 <GIE_enuSetResetGie+0x4c>
	{
	case GIE_ENABLE:
		SET_BIT(SREG,GIE_BIT);
    3104:	af e5       	ldi	r26, 0x5F	; 95
    3106:	b0 e0       	ldi	r27, 0x00	; 0
    3108:	ef e5       	ldi	r30, 0x5F	; 95
    310a:	f0 e0       	ldi	r31, 0x00	; 0
    310c:	80 81       	ld	r24, Z
    310e:	80 68       	ori	r24, 0x80	; 128
    3110:	8c 93       	st	X, r24
    3112:	0a c0       	rjmp	.+20     	; 0x3128 <GIE_enuSetResetGie+0x50>
		break;
	case GIE_DISABLE:
		CLEAR_BIT(SREG,GIE_BIT);
    3114:	af e5       	ldi	r26, 0x5F	; 95
    3116:	b0 e0       	ldi	r27, 0x00	; 0
    3118:	ef e5       	ldi	r30, 0x5F	; 95
    311a:	f0 e0       	ldi	r31, 0x00	; 0
    311c:	80 81       	ld	r24, Z
    311e:	8f 77       	andi	r24, 0x7F	; 127
    3120:	8c 93       	st	X, r24
    3122:	02 c0       	rjmp	.+4      	; 0x3128 <GIE_enuSetResetGie+0x50>
		break;
default:
	ErrorStatus=GIE_enuWrongStatus;
    3124:	81 e0       	ldi	r24, 0x01	; 1
    3126:	89 83       	std	Y+1, r24	; 0x01
	break;
	}
	return ErrorStatus;
    3128:	89 81       	ldd	r24, Y+1	; 0x01
}
    312a:	0f 90       	pop	r0
    312c:	0f 90       	pop	r0
    312e:	0f 90       	pop	r0
    3130:	0f 90       	pop	r0
    3132:	cf 91       	pop	r28
    3134:	df 91       	pop	r29
    3136:	08 95       	ret

00003138 <Dio_enuWriteChannel>:
 * Parameters(IN)  : 1.Copy_u8ChannelId -->channel number
 *                   2.Copy_u8Level     --> High or LOW
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuWriteChannel(DioPinType Copy_u8ChannelId,DioPinType Copy_u8Level)
{
    3138:	df 93       	push	r29
    313a:	cf 93       	push	r28
    313c:	cd b7       	in	r28, 0x3d	; 61
    313e:	de b7       	in	r29, 0x3e	; 62
    3140:	27 97       	sbiw	r28, 0x07	; 7
    3142:	0f b6       	in	r0, 0x3f	; 63
    3144:	f8 94       	cli
    3146:	de bf       	out	0x3e, r29	; 62
    3148:	0f be       	out	0x3f, r0	; 63
    314a:	cd bf       	out	0x3d, r28	; 61
    314c:	8c 83       	std	Y+4, r24	; 0x04
    314e:	6d 83       	std	Y+5, r22	; 0x05
	uint8 ErrorStatus=Dio_enuOK;
    3150:	1b 82       	std	Y+3, r1	; 0x03
	uint8 PortIndex=0,PinIndex=0;
    3152:	1a 82       	std	Y+2, r1	; 0x02
    3154:	19 82       	std	Y+1, r1	; 0x01
	PortIndex=(Copy_u8ChannelId/8);
    3156:	8c 81       	ldd	r24, Y+4	; 0x04
    3158:	86 95       	lsr	r24
    315a:	86 95       	lsr	r24
    315c:	86 95       	lsr	r24
    315e:	8a 83       	std	Y+2, r24	; 0x02
	PinIndex=Copy_u8ChannelId%8;
    3160:	8c 81       	ldd	r24, Y+4	; 0x04
    3162:	87 70       	andi	r24, 0x07	; 7
    3164:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8ChannelId>DIO_NUMBER_OF_PINS)
    3166:	8c 81       	ldd	r24, Y+4	; 0x04
    3168:	81 32       	cpi	r24, 0x21	; 33
    316a:	10 f0       	brcs	.+4      	; 0x3170 <Dio_enuWriteChannel+0x38>
	{
		ErrorStatus=Dio_enuPinError;
    316c:	81 e0       	ldi	r24, 0x01	; 1
    316e:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(PortIndex>DIO_NUMBER_OF_PORTS)
    3170:	8a 81       	ldd	r24, Y+2	; 0x02
    3172:	85 30       	cpi	r24, 0x05	; 5
    3174:	10 f0       	brcs	.+4      	; 0x317a <Dio_enuWriteChannel+0x42>
	{
		ErrorStatus=Dio_enuPortError;
    3176:	82 e0       	ldi	r24, 0x02	; 2
    3178:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(Copy_u8Level !=DIO_LOGIC_HIGH ||Copy_u8Level !=DIO_LOGIC_LOW )
    317a:	8d 81       	ldd	r24, Y+5	; 0x05
    317c:	81 30       	cpi	r24, 0x01	; 1
    317e:	19 f4       	brne	.+6      	; 0x3186 <Dio_enuWriteChannel+0x4e>
    3180:	8d 81       	ldd	r24, Y+5	; 0x05
    3182:	88 23       	and	r24, r24
    3184:	11 f0       	breq	.+4      	; 0x318a <Dio_enuWriteChannel+0x52>
	{
		ErrorStatus=DIO_enuDirectionError;
    3186:	83 e0       	ldi	r24, 0x03	; 3
    3188:	8b 83       	std	Y+3, r24	; 0x03
	}
	switch(PortIndex)
    318a:	8a 81       	ldd	r24, Y+2	; 0x02
    318c:	28 2f       	mov	r18, r24
    318e:	30 e0       	ldi	r19, 0x00	; 0
    3190:	3f 83       	std	Y+7, r19	; 0x07
    3192:	2e 83       	std	Y+6, r18	; 0x06
    3194:	4e 81       	ldd	r20, Y+6	; 0x06
    3196:	5f 81       	ldd	r21, Y+7	; 0x07
    3198:	41 30       	cpi	r20, 0x01	; 1
    319a:	51 05       	cpc	r21, r1
    319c:	09 f4       	brne	.+2      	; 0x31a0 <Dio_enuWriteChannel+0x68>
    319e:	69 c0       	rjmp	.+210    	; 0x3272 <Dio_enuWriteChannel+0x13a>
    31a0:	8e 81       	ldd	r24, Y+6	; 0x06
    31a2:	9f 81       	ldd	r25, Y+7	; 0x07
    31a4:	82 30       	cpi	r24, 0x02	; 2
    31a6:	91 05       	cpc	r25, r1
    31a8:	34 f4       	brge	.+12     	; 0x31b6 <Dio_enuWriteChannel+0x7e>
    31aa:	2e 81       	ldd	r18, Y+6	; 0x06
    31ac:	3f 81       	ldd	r19, Y+7	; 0x07
    31ae:	21 15       	cp	r18, r1
    31b0:	31 05       	cpc	r19, r1
    31b2:	71 f0       	breq	.+28     	; 0x31d0 <Dio_enuWriteChannel+0x98>
    31b4:	4f c1       	rjmp	.+670    	; 0x3454 <Dio_enuWriteChannel+0x31c>
    31b6:	4e 81       	ldd	r20, Y+6	; 0x06
    31b8:	5f 81       	ldd	r21, Y+7	; 0x07
    31ba:	42 30       	cpi	r20, 0x02	; 2
    31bc:	51 05       	cpc	r21, r1
    31be:	09 f4       	brne	.+2      	; 0x31c2 <Dio_enuWriteChannel+0x8a>
    31c0:	a9 c0       	rjmp	.+338    	; 0x3314 <Dio_enuWriteChannel+0x1dc>
    31c2:	8e 81       	ldd	r24, Y+6	; 0x06
    31c4:	9f 81       	ldd	r25, Y+7	; 0x07
    31c6:	83 30       	cpi	r24, 0x03	; 3
    31c8:	91 05       	cpc	r25, r1
    31ca:	09 f4       	brne	.+2      	; 0x31ce <Dio_enuWriteChannel+0x96>
    31cc:	f4 c0       	rjmp	.+488    	; 0x33b6 <Dio_enuWriteChannel+0x27e>
    31ce:	42 c1       	rjmp	.+644    	; 0x3454 <Dio_enuWriteChannel+0x31c>
	{
	case Dio_PORTA:
		if(GET_BIT(DDRA,PinIndex)==0)
    31d0:	ea e3       	ldi	r30, 0x3A	; 58
    31d2:	f0 e0       	ldi	r31, 0x00	; 0
    31d4:	80 81       	ld	r24, Z
    31d6:	48 2f       	mov	r20, r24
    31d8:	50 e0       	ldi	r21, 0x00	; 0
    31da:	89 81       	ldd	r24, Y+1	; 0x01
    31dc:	28 2f       	mov	r18, r24
    31de:	30 e0       	ldi	r19, 0x00	; 0
    31e0:	81 e0       	ldi	r24, 0x01	; 1
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	02 c0       	rjmp	.+4      	; 0x31ea <Dio_enuWriteChannel+0xb2>
    31e6:	88 0f       	add	r24, r24
    31e8:	99 1f       	adc	r25, r25
    31ea:	2a 95       	dec	r18
    31ec:	e2 f7       	brpl	.-8      	; 0x31e6 <Dio_enuWriteChannel+0xae>
    31ee:	9a 01       	movw	r18, r20
    31f0:	28 23       	and	r18, r24
    31f2:	39 23       	and	r19, r25
    31f4:	89 81       	ldd	r24, Y+1	; 0x01
    31f6:	88 2f       	mov	r24, r24
    31f8:	90 e0       	ldi	r25, 0x00	; 0
    31fa:	a9 01       	movw	r20, r18
    31fc:	02 c0       	rjmp	.+4      	; 0x3202 <Dio_enuWriteChannel+0xca>
    31fe:	55 95       	asr	r21
    3200:	47 95       	ror	r20
    3202:	8a 95       	dec	r24
    3204:	e2 f7       	brpl	.-8      	; 0x31fe <Dio_enuWriteChannel+0xc6>
    3206:	ca 01       	movw	r24, r20
    3208:	00 97       	sbiw	r24, 0x00	; 0
    320a:	19 f4       	brne	.+6      	; 0x3212 <Dio_enuWriteChannel+0xda>
			ErrorStatus=DIO_enuDirectionError;
    320c:	83 e0       	ldi	r24, 0x03	; 3
    320e:	8b 83       	std	Y+3, r24	; 0x03
    3210:	21 c1       	rjmp	.+578    	; 0x3454 <Dio_enuWriteChannel+0x31c>

		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    3212:	8d 81       	ldd	r24, Y+5	; 0x05
    3214:	81 30       	cpi	r24, 0x01	; 1
    3216:	a1 f4       	brne	.+40     	; 0x3240 <Dio_enuWriteChannel+0x108>
			SET_BIT(PORTA,PinIndex);
    3218:	ab e3       	ldi	r26, 0x3B	; 59
    321a:	b0 e0       	ldi	r27, 0x00	; 0
    321c:	eb e3       	ldi	r30, 0x3B	; 59
    321e:	f0 e0       	ldi	r31, 0x00	; 0
    3220:	80 81       	ld	r24, Z
    3222:	48 2f       	mov	r20, r24
    3224:	89 81       	ldd	r24, Y+1	; 0x01
    3226:	28 2f       	mov	r18, r24
    3228:	30 e0       	ldi	r19, 0x00	; 0
    322a:	81 e0       	ldi	r24, 0x01	; 1
    322c:	90 e0       	ldi	r25, 0x00	; 0
    322e:	02 2e       	mov	r0, r18
    3230:	02 c0       	rjmp	.+4      	; 0x3236 <Dio_enuWriteChannel+0xfe>
    3232:	88 0f       	add	r24, r24
    3234:	99 1f       	adc	r25, r25
    3236:	0a 94       	dec	r0
    3238:	e2 f7       	brpl	.-8      	; 0x3232 <Dio_enuWriteChannel+0xfa>
    323a:	84 2b       	or	r24, r20
    323c:	8c 93       	st	X, r24
    323e:	0a c1       	rjmp	.+532    	; 0x3454 <Dio_enuWriteChannel+0x31c>

		else if(Copy_u8Level==DIO_LOGIC_LOW)
    3240:	8d 81       	ldd	r24, Y+5	; 0x05
    3242:	88 23       	and	r24, r24
    3244:	09 f0       	breq	.+2      	; 0x3248 <Dio_enuWriteChannel+0x110>
    3246:	06 c1       	rjmp	.+524    	; 0x3454 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTA,PinIndex);
    3248:	ab e3       	ldi	r26, 0x3B	; 59
    324a:	b0 e0       	ldi	r27, 0x00	; 0
    324c:	eb e3       	ldi	r30, 0x3B	; 59
    324e:	f0 e0       	ldi	r31, 0x00	; 0
    3250:	80 81       	ld	r24, Z
    3252:	48 2f       	mov	r20, r24
    3254:	89 81       	ldd	r24, Y+1	; 0x01
    3256:	28 2f       	mov	r18, r24
    3258:	30 e0       	ldi	r19, 0x00	; 0
    325a:	81 e0       	ldi	r24, 0x01	; 1
    325c:	90 e0       	ldi	r25, 0x00	; 0
    325e:	02 2e       	mov	r0, r18
    3260:	02 c0       	rjmp	.+4      	; 0x3266 <Dio_enuWriteChannel+0x12e>
    3262:	88 0f       	add	r24, r24
    3264:	99 1f       	adc	r25, r25
    3266:	0a 94       	dec	r0
    3268:	e2 f7       	brpl	.-8      	; 0x3262 <Dio_enuWriteChannel+0x12a>
    326a:	80 95       	com	r24
    326c:	84 23       	and	r24, r20
    326e:	8c 93       	st	X, r24
    3270:	f1 c0       	rjmp	.+482    	; 0x3454 <Dio_enuWriteChannel+0x31c>
		break;
	case Dio_PORTB:
		 if(GET_BIT(DDRB,PinIndex)==0)
    3272:	e7 e3       	ldi	r30, 0x37	; 55
    3274:	f0 e0       	ldi	r31, 0x00	; 0
    3276:	80 81       	ld	r24, Z
    3278:	48 2f       	mov	r20, r24
    327a:	50 e0       	ldi	r21, 0x00	; 0
    327c:	89 81       	ldd	r24, Y+1	; 0x01
    327e:	28 2f       	mov	r18, r24
    3280:	30 e0       	ldi	r19, 0x00	; 0
    3282:	81 e0       	ldi	r24, 0x01	; 1
    3284:	90 e0       	ldi	r25, 0x00	; 0
    3286:	02 c0       	rjmp	.+4      	; 0x328c <Dio_enuWriteChannel+0x154>
    3288:	88 0f       	add	r24, r24
    328a:	99 1f       	adc	r25, r25
    328c:	2a 95       	dec	r18
    328e:	e2 f7       	brpl	.-8      	; 0x3288 <Dio_enuWriteChannel+0x150>
    3290:	9a 01       	movw	r18, r20
    3292:	28 23       	and	r18, r24
    3294:	39 23       	and	r19, r25
    3296:	89 81       	ldd	r24, Y+1	; 0x01
    3298:	88 2f       	mov	r24, r24
    329a:	90 e0       	ldi	r25, 0x00	; 0
    329c:	a9 01       	movw	r20, r18
    329e:	02 c0       	rjmp	.+4      	; 0x32a4 <Dio_enuWriteChannel+0x16c>
    32a0:	55 95       	asr	r21
    32a2:	47 95       	ror	r20
    32a4:	8a 95       	dec	r24
    32a6:	e2 f7       	brpl	.-8      	; 0x32a0 <Dio_enuWriteChannel+0x168>
    32a8:	ca 01       	movw	r24, r20
    32aa:	00 97       	sbiw	r24, 0x00	; 0
    32ac:	19 f4       	brne	.+6      	; 0x32b4 <Dio_enuWriteChannel+0x17c>
			ErrorStatus=DIO_enuDirectionError;
    32ae:	83 e0       	ldi	r24, 0x03	; 3
    32b0:	8b 83       	std	Y+3, r24	; 0x03
    32b2:	d0 c0       	rjmp	.+416    	; 0x3454 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    32b4:	8d 81       	ldd	r24, Y+5	; 0x05
    32b6:	81 30       	cpi	r24, 0x01	; 1
    32b8:	a1 f4       	brne	.+40     	; 0x32e2 <Dio_enuWriteChannel+0x1aa>
			SET_BIT(PORTB,PinIndex);
    32ba:	a8 e3       	ldi	r26, 0x38	; 56
    32bc:	b0 e0       	ldi	r27, 0x00	; 0
    32be:	e8 e3       	ldi	r30, 0x38	; 56
    32c0:	f0 e0       	ldi	r31, 0x00	; 0
    32c2:	80 81       	ld	r24, Z
    32c4:	48 2f       	mov	r20, r24
    32c6:	89 81       	ldd	r24, Y+1	; 0x01
    32c8:	28 2f       	mov	r18, r24
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	81 e0       	ldi	r24, 0x01	; 1
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	02 2e       	mov	r0, r18
    32d2:	02 c0       	rjmp	.+4      	; 0x32d8 <Dio_enuWriteChannel+0x1a0>
    32d4:	88 0f       	add	r24, r24
    32d6:	99 1f       	adc	r25, r25
    32d8:	0a 94       	dec	r0
    32da:	e2 f7       	brpl	.-8      	; 0x32d4 <Dio_enuWriteChannel+0x19c>
    32dc:	84 2b       	or	r24, r20
    32de:	8c 93       	st	X, r24
    32e0:	b9 c0       	rjmp	.+370    	; 0x3454 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_LOW)
    32e2:	8d 81       	ldd	r24, Y+5	; 0x05
    32e4:	88 23       	and	r24, r24
    32e6:	09 f0       	breq	.+2      	; 0x32ea <Dio_enuWriteChannel+0x1b2>
    32e8:	b5 c0       	rjmp	.+362    	; 0x3454 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTB,PinIndex);
    32ea:	a8 e3       	ldi	r26, 0x38	; 56
    32ec:	b0 e0       	ldi	r27, 0x00	; 0
    32ee:	e8 e3       	ldi	r30, 0x38	; 56
    32f0:	f0 e0       	ldi	r31, 0x00	; 0
    32f2:	80 81       	ld	r24, Z
    32f4:	48 2f       	mov	r20, r24
    32f6:	89 81       	ldd	r24, Y+1	; 0x01
    32f8:	28 2f       	mov	r18, r24
    32fa:	30 e0       	ldi	r19, 0x00	; 0
    32fc:	81 e0       	ldi	r24, 0x01	; 1
    32fe:	90 e0       	ldi	r25, 0x00	; 0
    3300:	02 2e       	mov	r0, r18
    3302:	02 c0       	rjmp	.+4      	; 0x3308 <Dio_enuWriteChannel+0x1d0>
    3304:	88 0f       	add	r24, r24
    3306:	99 1f       	adc	r25, r25
    3308:	0a 94       	dec	r0
    330a:	e2 f7       	brpl	.-8      	; 0x3304 <Dio_enuWriteChannel+0x1cc>
    330c:	80 95       	com	r24
    330e:	84 23       	and	r24, r20
    3310:	8c 93       	st	X, r24
    3312:	a0 c0       	rjmp	.+320    	; 0x3454 <Dio_enuWriteChannel+0x31c>
		break;
	case Dio_PORTC:
		if(GET_BIT(DDRC,PinIndex)==0)
    3314:	e4 e3       	ldi	r30, 0x34	; 52
    3316:	f0 e0       	ldi	r31, 0x00	; 0
    3318:	80 81       	ld	r24, Z
    331a:	48 2f       	mov	r20, r24
    331c:	50 e0       	ldi	r21, 0x00	; 0
    331e:	89 81       	ldd	r24, Y+1	; 0x01
    3320:	28 2f       	mov	r18, r24
    3322:	30 e0       	ldi	r19, 0x00	; 0
    3324:	81 e0       	ldi	r24, 0x01	; 1
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	02 c0       	rjmp	.+4      	; 0x332e <Dio_enuWriteChannel+0x1f6>
    332a:	88 0f       	add	r24, r24
    332c:	99 1f       	adc	r25, r25
    332e:	2a 95       	dec	r18
    3330:	e2 f7       	brpl	.-8      	; 0x332a <Dio_enuWriteChannel+0x1f2>
    3332:	9a 01       	movw	r18, r20
    3334:	28 23       	and	r18, r24
    3336:	39 23       	and	r19, r25
    3338:	89 81       	ldd	r24, Y+1	; 0x01
    333a:	88 2f       	mov	r24, r24
    333c:	90 e0       	ldi	r25, 0x00	; 0
    333e:	a9 01       	movw	r20, r18
    3340:	02 c0       	rjmp	.+4      	; 0x3346 <Dio_enuWriteChannel+0x20e>
    3342:	55 95       	asr	r21
    3344:	47 95       	ror	r20
    3346:	8a 95       	dec	r24
    3348:	e2 f7       	brpl	.-8      	; 0x3342 <Dio_enuWriteChannel+0x20a>
    334a:	ca 01       	movw	r24, r20
    334c:	00 97       	sbiw	r24, 0x00	; 0
    334e:	19 f4       	brne	.+6      	; 0x3356 <Dio_enuWriteChannel+0x21e>
			ErrorStatus=DIO_enuDirectionError;
    3350:	83 e0       	ldi	r24, 0x03	; 3
    3352:	8b 83       	std	Y+3, r24	; 0x03
    3354:	7f c0       	rjmp	.+254    	; 0x3454 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    3356:	8d 81       	ldd	r24, Y+5	; 0x05
    3358:	81 30       	cpi	r24, 0x01	; 1
    335a:	a1 f4       	brne	.+40     	; 0x3384 <Dio_enuWriteChannel+0x24c>
			SET_BIT(PORTC,PinIndex);
    335c:	a5 e3       	ldi	r26, 0x35	; 53
    335e:	b0 e0       	ldi	r27, 0x00	; 0
    3360:	e5 e3       	ldi	r30, 0x35	; 53
    3362:	f0 e0       	ldi	r31, 0x00	; 0
    3364:	80 81       	ld	r24, Z
    3366:	48 2f       	mov	r20, r24
    3368:	89 81       	ldd	r24, Y+1	; 0x01
    336a:	28 2f       	mov	r18, r24
    336c:	30 e0       	ldi	r19, 0x00	; 0
    336e:	81 e0       	ldi	r24, 0x01	; 1
    3370:	90 e0       	ldi	r25, 0x00	; 0
    3372:	02 2e       	mov	r0, r18
    3374:	02 c0       	rjmp	.+4      	; 0x337a <Dio_enuWriteChannel+0x242>
    3376:	88 0f       	add	r24, r24
    3378:	99 1f       	adc	r25, r25
    337a:	0a 94       	dec	r0
    337c:	e2 f7       	brpl	.-8      	; 0x3376 <Dio_enuWriteChannel+0x23e>
    337e:	84 2b       	or	r24, r20
    3380:	8c 93       	st	X, r24
    3382:	68 c0       	rjmp	.+208    	; 0x3454 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_LOW)
    3384:	8d 81       	ldd	r24, Y+5	; 0x05
    3386:	88 23       	and	r24, r24
    3388:	09 f0       	breq	.+2      	; 0x338c <Dio_enuWriteChannel+0x254>
    338a:	64 c0       	rjmp	.+200    	; 0x3454 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTC,PinIndex);
    338c:	a5 e3       	ldi	r26, 0x35	; 53
    338e:	b0 e0       	ldi	r27, 0x00	; 0
    3390:	e5 e3       	ldi	r30, 0x35	; 53
    3392:	f0 e0       	ldi	r31, 0x00	; 0
    3394:	80 81       	ld	r24, Z
    3396:	48 2f       	mov	r20, r24
    3398:	89 81       	ldd	r24, Y+1	; 0x01
    339a:	28 2f       	mov	r18, r24
    339c:	30 e0       	ldi	r19, 0x00	; 0
    339e:	81 e0       	ldi	r24, 0x01	; 1
    33a0:	90 e0       	ldi	r25, 0x00	; 0
    33a2:	02 2e       	mov	r0, r18
    33a4:	02 c0       	rjmp	.+4      	; 0x33aa <Dio_enuWriteChannel+0x272>
    33a6:	88 0f       	add	r24, r24
    33a8:	99 1f       	adc	r25, r25
    33aa:	0a 94       	dec	r0
    33ac:	e2 f7       	brpl	.-8      	; 0x33a6 <Dio_enuWriteChannel+0x26e>
    33ae:	80 95       	com	r24
    33b0:	84 23       	and	r24, r20
    33b2:	8c 93       	st	X, r24
    33b4:	4f c0       	rjmp	.+158    	; 0x3454 <Dio_enuWriteChannel+0x31c>
		break;
	case Dio_PORTD:
		if(GET_BIT(DDRD,PinIndex)==0)
    33b6:	e1 e3       	ldi	r30, 0x31	; 49
    33b8:	f0 e0       	ldi	r31, 0x00	; 0
    33ba:	80 81       	ld	r24, Z
    33bc:	48 2f       	mov	r20, r24
    33be:	50 e0       	ldi	r21, 0x00	; 0
    33c0:	89 81       	ldd	r24, Y+1	; 0x01
    33c2:	28 2f       	mov	r18, r24
    33c4:	30 e0       	ldi	r19, 0x00	; 0
    33c6:	81 e0       	ldi	r24, 0x01	; 1
    33c8:	90 e0       	ldi	r25, 0x00	; 0
    33ca:	02 c0       	rjmp	.+4      	; 0x33d0 <Dio_enuWriteChannel+0x298>
    33cc:	88 0f       	add	r24, r24
    33ce:	99 1f       	adc	r25, r25
    33d0:	2a 95       	dec	r18
    33d2:	e2 f7       	brpl	.-8      	; 0x33cc <Dio_enuWriteChannel+0x294>
    33d4:	9a 01       	movw	r18, r20
    33d6:	28 23       	and	r18, r24
    33d8:	39 23       	and	r19, r25
    33da:	89 81       	ldd	r24, Y+1	; 0x01
    33dc:	88 2f       	mov	r24, r24
    33de:	90 e0       	ldi	r25, 0x00	; 0
    33e0:	a9 01       	movw	r20, r18
    33e2:	02 c0       	rjmp	.+4      	; 0x33e8 <Dio_enuWriteChannel+0x2b0>
    33e4:	55 95       	asr	r21
    33e6:	47 95       	ror	r20
    33e8:	8a 95       	dec	r24
    33ea:	e2 f7       	brpl	.-8      	; 0x33e4 <Dio_enuWriteChannel+0x2ac>
    33ec:	ca 01       	movw	r24, r20
    33ee:	00 97       	sbiw	r24, 0x00	; 0
    33f0:	19 f4       	brne	.+6      	; 0x33f8 <Dio_enuWriteChannel+0x2c0>
			ErrorStatus=DIO_enuDirectionError;
    33f2:	83 e0       	ldi	r24, 0x03	; 3
    33f4:	8b 83       	std	Y+3, r24	; 0x03
    33f6:	2e c0       	rjmp	.+92     	; 0x3454 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    33f8:	8d 81       	ldd	r24, Y+5	; 0x05
    33fa:	81 30       	cpi	r24, 0x01	; 1
    33fc:	a1 f4       	brne	.+40     	; 0x3426 <Dio_enuWriteChannel+0x2ee>
			SET_BIT(PORTD,PinIndex);
    33fe:	a2 e3       	ldi	r26, 0x32	; 50
    3400:	b0 e0       	ldi	r27, 0x00	; 0
    3402:	e2 e3       	ldi	r30, 0x32	; 50
    3404:	f0 e0       	ldi	r31, 0x00	; 0
    3406:	80 81       	ld	r24, Z
    3408:	48 2f       	mov	r20, r24
    340a:	89 81       	ldd	r24, Y+1	; 0x01
    340c:	28 2f       	mov	r18, r24
    340e:	30 e0       	ldi	r19, 0x00	; 0
    3410:	81 e0       	ldi	r24, 0x01	; 1
    3412:	90 e0       	ldi	r25, 0x00	; 0
    3414:	02 2e       	mov	r0, r18
    3416:	02 c0       	rjmp	.+4      	; 0x341c <Dio_enuWriteChannel+0x2e4>
    3418:	88 0f       	add	r24, r24
    341a:	99 1f       	adc	r25, r25
    341c:	0a 94       	dec	r0
    341e:	e2 f7       	brpl	.-8      	; 0x3418 <Dio_enuWriteChannel+0x2e0>
    3420:	84 2b       	or	r24, r20
    3422:	8c 93       	st	X, r24
    3424:	17 c0       	rjmp	.+46     	; 0x3454 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_LOW)
    3426:	8d 81       	ldd	r24, Y+5	; 0x05
    3428:	88 23       	and	r24, r24
    342a:	a1 f4       	brne	.+40     	; 0x3454 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTD,PinIndex);
    342c:	a2 e3       	ldi	r26, 0x32	; 50
    342e:	b0 e0       	ldi	r27, 0x00	; 0
    3430:	e2 e3       	ldi	r30, 0x32	; 50
    3432:	f0 e0       	ldi	r31, 0x00	; 0
    3434:	80 81       	ld	r24, Z
    3436:	48 2f       	mov	r20, r24
    3438:	89 81       	ldd	r24, Y+1	; 0x01
    343a:	28 2f       	mov	r18, r24
    343c:	30 e0       	ldi	r19, 0x00	; 0
    343e:	81 e0       	ldi	r24, 0x01	; 1
    3440:	90 e0       	ldi	r25, 0x00	; 0
    3442:	02 2e       	mov	r0, r18
    3444:	02 c0       	rjmp	.+4      	; 0x344a <Dio_enuWriteChannel+0x312>
    3446:	88 0f       	add	r24, r24
    3448:	99 1f       	adc	r25, r25
    344a:	0a 94       	dec	r0
    344c:	e2 f7       	brpl	.-8      	; 0x3446 <Dio_enuWriteChannel+0x30e>
    344e:	80 95       	com	r24
    3450:	84 23       	and	r24, r20
    3452:	8c 93       	st	X, r24
		break;
	}
	return ErrorStatus;
    3454:	8b 81       	ldd	r24, Y+3	; 0x03
}
    3456:	27 96       	adiw	r28, 0x07	; 7
    3458:	0f b6       	in	r0, 0x3f	; 63
    345a:	f8 94       	cli
    345c:	de bf       	out	0x3e, r29	; 62
    345e:	0f be       	out	0x3f, r0	; 63
    3460:	cd bf       	out	0x3d, r28	; 61
    3462:	cf 91       	pop	r28
    3464:	df 91       	pop	r29
    3466:	08 95       	ret

00003468 <Dio_enuReadChannel>:
 * Parameters(IN)  : 1.Copy_u8ChannelId        -->channel number
 *                   2.Add_pu8ChannelLevel     --> pointer to address of value carry
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuReadChannel(DioPinType Copy_u8ChannelId,pu8 Add_pu8ChannelLevel)
{
    3468:	df 93       	push	r29
    346a:	cf 93       	push	r28
    346c:	cd b7       	in	r28, 0x3d	; 61
    346e:	de b7       	in	r29, 0x3e	; 62
    3470:	28 97       	sbiw	r28, 0x08	; 8
    3472:	0f b6       	in	r0, 0x3f	; 63
    3474:	f8 94       	cli
    3476:	de bf       	out	0x3e, r29	; 62
    3478:	0f be       	out	0x3f, r0	; 63
    347a:	cd bf       	out	0x3d, r28	; 61
    347c:	8c 83       	std	Y+4, r24	; 0x04
    347e:	7e 83       	std	Y+6, r23	; 0x06
    3480:	6d 83       	std	Y+5, r22	; 0x05
	uint8 ErrorStatus=Dio_enuOK;
    3482:	1b 82       	std	Y+3, r1	; 0x03
		uint8 PortIndex=0,PinIndex=0;
    3484:	1a 82       	std	Y+2, r1	; 0x02
    3486:	19 82       	std	Y+1, r1	; 0x01
		PortIndex=(Copy_u8ChannelId/8);
    3488:	8c 81       	ldd	r24, Y+4	; 0x04
    348a:	86 95       	lsr	r24
    348c:	86 95       	lsr	r24
    348e:	86 95       	lsr	r24
    3490:	8a 83       	std	Y+2, r24	; 0x02
		PinIndex=Copy_u8ChannelId%8;
    3492:	8c 81       	ldd	r24, Y+4	; 0x04
    3494:	87 70       	andi	r24, 0x07	; 7
    3496:	89 83       	std	Y+1, r24	; 0x01
		if(Copy_u8ChannelId>DIO_NUMBER_OF_PINS)
    3498:	8c 81       	ldd	r24, Y+4	; 0x04
    349a:	81 32       	cpi	r24, 0x21	; 33
    349c:	10 f0       	brcs	.+4      	; 0x34a2 <Dio_enuReadChannel+0x3a>
		{
			ErrorStatus=Dio_enuPinError;
    349e:	81 e0       	ldi	r24, 0x01	; 1
    34a0:	8b 83       	std	Y+3, r24	; 0x03
		}
		if(PortIndex>DIO_NUMBER_OF_PORTS)
    34a2:	8a 81       	ldd	r24, Y+2	; 0x02
    34a4:	85 30       	cpi	r24, 0x05	; 5
    34a6:	10 f0       	brcs	.+4      	; 0x34ac <Dio_enuReadChannel+0x44>
		{
			ErrorStatus=Dio_enuPortError;
    34a8:	82 e0       	ldi	r24, 0x02	; 2
    34aa:	8b 83       	std	Y+3, r24	; 0x03
		}
		if( Add_pu8ChannelLevel ==Null_ptr)
    34ac:	8d 81       	ldd	r24, Y+5	; 0x05
    34ae:	9e 81       	ldd	r25, Y+6	; 0x06
    34b0:	00 97       	sbiw	r24, 0x00	; 0
    34b2:	11 f4       	brne	.+4      	; 0x34b8 <Dio_enuReadChannel+0x50>
		{
			ErrorStatus=DIO_enuNullPtr;
    34b4:	84 e0       	ldi	r24, 0x04	; 4
    34b6:	8b 83       	std	Y+3, r24	; 0x03
		}
		switch(PortIndex)
    34b8:	8a 81       	ldd	r24, Y+2	; 0x02
    34ba:	28 2f       	mov	r18, r24
    34bc:	30 e0       	ldi	r19, 0x00	; 0
    34be:	38 87       	std	Y+8, r19	; 0x08
    34c0:	2f 83       	std	Y+7, r18	; 0x07
    34c2:	4f 81       	ldd	r20, Y+7	; 0x07
    34c4:	58 85       	ldd	r21, Y+8	; 0x08
    34c6:	41 30       	cpi	r20, 0x01	; 1
    34c8:	51 05       	cpc	r21, r1
    34ca:	09 f4       	brne	.+2      	; 0x34ce <Dio_enuReadChannel+0x66>
    34cc:	5a c0       	rjmp	.+180    	; 0x3582 <Dio_enuReadChannel+0x11a>
    34ce:	8f 81       	ldd	r24, Y+7	; 0x07
    34d0:	98 85       	ldd	r25, Y+8	; 0x08
    34d2:	82 30       	cpi	r24, 0x02	; 2
    34d4:	91 05       	cpc	r25, r1
    34d6:	34 f4       	brge	.+12     	; 0x34e4 <Dio_enuReadChannel+0x7c>
    34d8:	2f 81       	ldd	r18, Y+7	; 0x07
    34da:	38 85       	ldd	r19, Y+8	; 0x08
    34dc:	21 15       	cp	r18, r1
    34de:	31 05       	cpc	r19, r1
    34e0:	71 f0       	breq	.+28     	; 0x34fe <Dio_enuReadChannel+0x96>
    34e2:	14 c1       	rjmp	.+552    	; 0x370c <Dio_enuReadChannel+0x2a4>
    34e4:	4f 81       	ldd	r20, Y+7	; 0x07
    34e6:	58 85       	ldd	r21, Y+8	; 0x08
    34e8:	42 30       	cpi	r20, 0x02	; 2
    34ea:	51 05       	cpc	r21, r1
    34ec:	09 f4       	brne	.+2      	; 0x34f0 <Dio_enuReadChannel+0x88>
    34ee:	8b c0       	rjmp	.+278    	; 0x3606 <Dio_enuReadChannel+0x19e>
    34f0:	8f 81       	ldd	r24, Y+7	; 0x07
    34f2:	98 85       	ldd	r25, Y+8	; 0x08
    34f4:	83 30       	cpi	r24, 0x03	; 3
    34f6:	91 05       	cpc	r25, r1
    34f8:	09 f4       	brne	.+2      	; 0x34fc <Dio_enuReadChannel+0x94>
    34fa:	c7 c0       	rjmp	.+398    	; 0x368a <Dio_enuReadChannel+0x222>
    34fc:	07 c1       	rjmp	.+526    	; 0x370c <Dio_enuReadChannel+0x2a4>
		{
		case Dio_PORTA:
			if(GET_BIT(DDRA,PinIndex)==1)
    34fe:	ea e3       	ldi	r30, 0x3A	; 58
    3500:	f0 e0       	ldi	r31, 0x00	; 0
    3502:	80 81       	ld	r24, Z
    3504:	48 2f       	mov	r20, r24
    3506:	50 e0       	ldi	r21, 0x00	; 0
    3508:	89 81       	ldd	r24, Y+1	; 0x01
    350a:	28 2f       	mov	r18, r24
    350c:	30 e0       	ldi	r19, 0x00	; 0
    350e:	81 e0       	ldi	r24, 0x01	; 1
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	02 c0       	rjmp	.+4      	; 0x3518 <Dio_enuReadChannel+0xb0>
    3514:	88 0f       	add	r24, r24
    3516:	99 1f       	adc	r25, r25
    3518:	2a 95       	dec	r18
    351a:	e2 f7       	brpl	.-8      	; 0x3514 <Dio_enuReadChannel+0xac>
    351c:	9a 01       	movw	r18, r20
    351e:	28 23       	and	r18, r24
    3520:	39 23       	and	r19, r25
    3522:	89 81       	ldd	r24, Y+1	; 0x01
    3524:	88 2f       	mov	r24, r24
    3526:	90 e0       	ldi	r25, 0x00	; 0
    3528:	a9 01       	movw	r20, r18
    352a:	02 c0       	rjmp	.+4      	; 0x3530 <Dio_enuReadChannel+0xc8>
    352c:	55 95       	asr	r21
    352e:	47 95       	ror	r20
    3530:	8a 95       	dec	r24
    3532:	e2 f7       	brpl	.-8      	; 0x352c <Dio_enuReadChannel+0xc4>
    3534:	ca 01       	movw	r24, r20
    3536:	81 30       	cpi	r24, 0x01	; 1
    3538:	91 05       	cpc	r25, r1
    353a:	19 f4       	brne	.+6      	; 0x3542 <Dio_enuReadChannel+0xda>
				ErrorStatus=DIO_enuDirectionError;
    353c:	83 e0       	ldi	r24, 0x03	; 3
    353e:	8b 83       	std	Y+3, r24	; 0x03
    3540:	e5 c0       	rjmp	.+458    	; 0x370c <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PINA,PinIndex);
    3542:	e9 e3       	ldi	r30, 0x39	; 57
    3544:	f0 e0       	ldi	r31, 0x00	; 0
    3546:	80 81       	ld	r24, Z
    3548:	48 2f       	mov	r20, r24
    354a:	50 e0       	ldi	r21, 0x00	; 0
    354c:	89 81       	ldd	r24, Y+1	; 0x01
    354e:	28 2f       	mov	r18, r24
    3550:	30 e0       	ldi	r19, 0x00	; 0
    3552:	81 e0       	ldi	r24, 0x01	; 1
    3554:	90 e0       	ldi	r25, 0x00	; 0
    3556:	02 c0       	rjmp	.+4      	; 0x355c <Dio_enuReadChannel+0xf4>
    3558:	88 0f       	add	r24, r24
    355a:	99 1f       	adc	r25, r25
    355c:	2a 95       	dec	r18
    355e:	e2 f7       	brpl	.-8      	; 0x3558 <Dio_enuReadChannel+0xf0>
    3560:	9a 01       	movw	r18, r20
    3562:	28 23       	and	r18, r24
    3564:	39 23       	and	r19, r25
    3566:	89 81       	ldd	r24, Y+1	; 0x01
    3568:	88 2f       	mov	r24, r24
    356a:	90 e0       	ldi	r25, 0x00	; 0
    356c:	a9 01       	movw	r20, r18
    356e:	02 c0       	rjmp	.+4      	; 0x3574 <Dio_enuReadChannel+0x10c>
    3570:	55 95       	asr	r21
    3572:	47 95       	ror	r20
    3574:	8a 95       	dec	r24
    3576:	e2 f7       	brpl	.-8      	; 0x3570 <Dio_enuReadChannel+0x108>
    3578:	ca 01       	movw	r24, r20
    357a:	ed 81       	ldd	r30, Y+5	; 0x05
    357c:	fe 81       	ldd	r31, Y+6	; 0x06
    357e:	80 83       	st	Z, r24
    3580:	c5 c0       	rjmp	.+394    	; 0x370c <Dio_enuReadChannel+0x2a4>

			break;
		case Dio_PORTB:
			if(GET_BIT(DDRB,PinIndex)==1)
    3582:	e7 e3       	ldi	r30, 0x37	; 55
    3584:	f0 e0       	ldi	r31, 0x00	; 0
    3586:	80 81       	ld	r24, Z
    3588:	48 2f       	mov	r20, r24
    358a:	50 e0       	ldi	r21, 0x00	; 0
    358c:	89 81       	ldd	r24, Y+1	; 0x01
    358e:	28 2f       	mov	r18, r24
    3590:	30 e0       	ldi	r19, 0x00	; 0
    3592:	81 e0       	ldi	r24, 0x01	; 1
    3594:	90 e0       	ldi	r25, 0x00	; 0
    3596:	02 c0       	rjmp	.+4      	; 0x359c <Dio_enuReadChannel+0x134>
    3598:	88 0f       	add	r24, r24
    359a:	99 1f       	adc	r25, r25
    359c:	2a 95       	dec	r18
    359e:	e2 f7       	brpl	.-8      	; 0x3598 <Dio_enuReadChannel+0x130>
    35a0:	9a 01       	movw	r18, r20
    35a2:	28 23       	and	r18, r24
    35a4:	39 23       	and	r19, r25
    35a6:	89 81       	ldd	r24, Y+1	; 0x01
    35a8:	88 2f       	mov	r24, r24
    35aa:	90 e0       	ldi	r25, 0x00	; 0
    35ac:	a9 01       	movw	r20, r18
    35ae:	02 c0       	rjmp	.+4      	; 0x35b4 <Dio_enuReadChannel+0x14c>
    35b0:	55 95       	asr	r21
    35b2:	47 95       	ror	r20
    35b4:	8a 95       	dec	r24
    35b6:	e2 f7       	brpl	.-8      	; 0x35b0 <Dio_enuReadChannel+0x148>
    35b8:	ca 01       	movw	r24, r20
    35ba:	81 30       	cpi	r24, 0x01	; 1
    35bc:	91 05       	cpc	r25, r1
    35be:	19 f4       	brne	.+6      	; 0x35c6 <Dio_enuReadChannel+0x15e>
				ErrorStatus=DIO_enuDirectionError;
    35c0:	83 e0       	ldi	r24, 0x03	; 3
    35c2:	8b 83       	std	Y+3, r24	; 0x03
    35c4:	a3 c0       	rjmp	.+326    	; 0x370c <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PINB,PinIndex);
    35c6:	e6 e3       	ldi	r30, 0x36	; 54
    35c8:	f0 e0       	ldi	r31, 0x00	; 0
    35ca:	80 81       	ld	r24, Z
    35cc:	48 2f       	mov	r20, r24
    35ce:	50 e0       	ldi	r21, 0x00	; 0
    35d0:	89 81       	ldd	r24, Y+1	; 0x01
    35d2:	28 2f       	mov	r18, r24
    35d4:	30 e0       	ldi	r19, 0x00	; 0
    35d6:	81 e0       	ldi	r24, 0x01	; 1
    35d8:	90 e0       	ldi	r25, 0x00	; 0
    35da:	02 c0       	rjmp	.+4      	; 0x35e0 <Dio_enuReadChannel+0x178>
    35dc:	88 0f       	add	r24, r24
    35de:	99 1f       	adc	r25, r25
    35e0:	2a 95       	dec	r18
    35e2:	e2 f7       	brpl	.-8      	; 0x35dc <Dio_enuReadChannel+0x174>
    35e4:	9a 01       	movw	r18, r20
    35e6:	28 23       	and	r18, r24
    35e8:	39 23       	and	r19, r25
    35ea:	89 81       	ldd	r24, Y+1	; 0x01
    35ec:	88 2f       	mov	r24, r24
    35ee:	90 e0       	ldi	r25, 0x00	; 0
    35f0:	a9 01       	movw	r20, r18
    35f2:	02 c0       	rjmp	.+4      	; 0x35f8 <Dio_enuReadChannel+0x190>
    35f4:	55 95       	asr	r21
    35f6:	47 95       	ror	r20
    35f8:	8a 95       	dec	r24
    35fa:	e2 f7       	brpl	.-8      	; 0x35f4 <Dio_enuReadChannel+0x18c>
    35fc:	ca 01       	movw	r24, r20
    35fe:	ed 81       	ldd	r30, Y+5	; 0x05
    3600:	fe 81       	ldd	r31, Y+6	; 0x06
    3602:	80 83       	st	Z, r24
    3604:	83 c0       	rjmp	.+262    	; 0x370c <Dio_enuReadChannel+0x2a4>

			break;
		case Dio_PORTC:
			if(GET_BIT(DDRC,PinIndex)==1)
    3606:	e4 e3       	ldi	r30, 0x34	; 52
    3608:	f0 e0       	ldi	r31, 0x00	; 0
    360a:	80 81       	ld	r24, Z
    360c:	48 2f       	mov	r20, r24
    360e:	50 e0       	ldi	r21, 0x00	; 0
    3610:	89 81       	ldd	r24, Y+1	; 0x01
    3612:	28 2f       	mov	r18, r24
    3614:	30 e0       	ldi	r19, 0x00	; 0
    3616:	81 e0       	ldi	r24, 0x01	; 1
    3618:	90 e0       	ldi	r25, 0x00	; 0
    361a:	02 c0       	rjmp	.+4      	; 0x3620 <Dio_enuReadChannel+0x1b8>
    361c:	88 0f       	add	r24, r24
    361e:	99 1f       	adc	r25, r25
    3620:	2a 95       	dec	r18
    3622:	e2 f7       	brpl	.-8      	; 0x361c <Dio_enuReadChannel+0x1b4>
    3624:	9a 01       	movw	r18, r20
    3626:	28 23       	and	r18, r24
    3628:	39 23       	and	r19, r25
    362a:	89 81       	ldd	r24, Y+1	; 0x01
    362c:	88 2f       	mov	r24, r24
    362e:	90 e0       	ldi	r25, 0x00	; 0
    3630:	a9 01       	movw	r20, r18
    3632:	02 c0       	rjmp	.+4      	; 0x3638 <Dio_enuReadChannel+0x1d0>
    3634:	55 95       	asr	r21
    3636:	47 95       	ror	r20
    3638:	8a 95       	dec	r24
    363a:	e2 f7       	brpl	.-8      	; 0x3634 <Dio_enuReadChannel+0x1cc>
    363c:	ca 01       	movw	r24, r20
    363e:	81 30       	cpi	r24, 0x01	; 1
    3640:	91 05       	cpc	r25, r1
    3642:	19 f4       	brne	.+6      	; 0x364a <Dio_enuReadChannel+0x1e2>
				ErrorStatus=DIO_enuDirectionError;
    3644:	83 e0       	ldi	r24, 0x03	; 3
    3646:	8b 83       	std	Y+3, r24	; 0x03
    3648:	61 c0       	rjmp	.+194    	; 0x370c <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PINC,PinIndex);
    364a:	e3 e3       	ldi	r30, 0x33	; 51
    364c:	f0 e0       	ldi	r31, 0x00	; 0
    364e:	80 81       	ld	r24, Z
    3650:	48 2f       	mov	r20, r24
    3652:	50 e0       	ldi	r21, 0x00	; 0
    3654:	89 81       	ldd	r24, Y+1	; 0x01
    3656:	28 2f       	mov	r18, r24
    3658:	30 e0       	ldi	r19, 0x00	; 0
    365a:	81 e0       	ldi	r24, 0x01	; 1
    365c:	90 e0       	ldi	r25, 0x00	; 0
    365e:	02 c0       	rjmp	.+4      	; 0x3664 <Dio_enuReadChannel+0x1fc>
    3660:	88 0f       	add	r24, r24
    3662:	99 1f       	adc	r25, r25
    3664:	2a 95       	dec	r18
    3666:	e2 f7       	brpl	.-8      	; 0x3660 <Dio_enuReadChannel+0x1f8>
    3668:	9a 01       	movw	r18, r20
    366a:	28 23       	and	r18, r24
    366c:	39 23       	and	r19, r25
    366e:	89 81       	ldd	r24, Y+1	; 0x01
    3670:	88 2f       	mov	r24, r24
    3672:	90 e0       	ldi	r25, 0x00	; 0
    3674:	a9 01       	movw	r20, r18
    3676:	02 c0       	rjmp	.+4      	; 0x367c <Dio_enuReadChannel+0x214>
    3678:	55 95       	asr	r21
    367a:	47 95       	ror	r20
    367c:	8a 95       	dec	r24
    367e:	e2 f7       	brpl	.-8      	; 0x3678 <Dio_enuReadChannel+0x210>
    3680:	ca 01       	movw	r24, r20
    3682:	ed 81       	ldd	r30, Y+5	; 0x05
    3684:	fe 81       	ldd	r31, Y+6	; 0x06
    3686:	80 83       	st	Z, r24
    3688:	41 c0       	rjmp	.+130    	; 0x370c <Dio_enuReadChannel+0x2a4>

			break;
		case Dio_PORTD:
			if(GET_BIT(DDRD,PinIndex)==1)
    368a:	e1 e3       	ldi	r30, 0x31	; 49
    368c:	f0 e0       	ldi	r31, 0x00	; 0
    368e:	80 81       	ld	r24, Z
    3690:	48 2f       	mov	r20, r24
    3692:	50 e0       	ldi	r21, 0x00	; 0
    3694:	89 81       	ldd	r24, Y+1	; 0x01
    3696:	28 2f       	mov	r18, r24
    3698:	30 e0       	ldi	r19, 0x00	; 0
    369a:	81 e0       	ldi	r24, 0x01	; 1
    369c:	90 e0       	ldi	r25, 0x00	; 0
    369e:	02 c0       	rjmp	.+4      	; 0x36a4 <Dio_enuReadChannel+0x23c>
    36a0:	88 0f       	add	r24, r24
    36a2:	99 1f       	adc	r25, r25
    36a4:	2a 95       	dec	r18
    36a6:	e2 f7       	brpl	.-8      	; 0x36a0 <Dio_enuReadChannel+0x238>
    36a8:	9a 01       	movw	r18, r20
    36aa:	28 23       	and	r18, r24
    36ac:	39 23       	and	r19, r25
    36ae:	89 81       	ldd	r24, Y+1	; 0x01
    36b0:	88 2f       	mov	r24, r24
    36b2:	90 e0       	ldi	r25, 0x00	; 0
    36b4:	a9 01       	movw	r20, r18
    36b6:	02 c0       	rjmp	.+4      	; 0x36bc <Dio_enuReadChannel+0x254>
    36b8:	55 95       	asr	r21
    36ba:	47 95       	ror	r20
    36bc:	8a 95       	dec	r24
    36be:	e2 f7       	brpl	.-8      	; 0x36b8 <Dio_enuReadChannel+0x250>
    36c0:	ca 01       	movw	r24, r20
    36c2:	81 30       	cpi	r24, 0x01	; 1
    36c4:	91 05       	cpc	r25, r1
    36c6:	19 f4       	brne	.+6      	; 0x36ce <Dio_enuReadChannel+0x266>
				ErrorStatus=DIO_enuDirectionError;
    36c8:	83 e0       	ldi	r24, 0x03	; 3
    36ca:	8b 83       	std	Y+3, r24	; 0x03
    36cc:	1f c0       	rjmp	.+62     	; 0x370c <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PIND,PinIndex);
    36ce:	e0 e3       	ldi	r30, 0x30	; 48
    36d0:	f0 e0       	ldi	r31, 0x00	; 0
    36d2:	80 81       	ld	r24, Z
    36d4:	48 2f       	mov	r20, r24
    36d6:	50 e0       	ldi	r21, 0x00	; 0
    36d8:	89 81       	ldd	r24, Y+1	; 0x01
    36da:	28 2f       	mov	r18, r24
    36dc:	30 e0       	ldi	r19, 0x00	; 0
    36de:	81 e0       	ldi	r24, 0x01	; 1
    36e0:	90 e0       	ldi	r25, 0x00	; 0
    36e2:	02 c0       	rjmp	.+4      	; 0x36e8 <Dio_enuReadChannel+0x280>
    36e4:	88 0f       	add	r24, r24
    36e6:	99 1f       	adc	r25, r25
    36e8:	2a 95       	dec	r18
    36ea:	e2 f7       	brpl	.-8      	; 0x36e4 <Dio_enuReadChannel+0x27c>
    36ec:	9a 01       	movw	r18, r20
    36ee:	28 23       	and	r18, r24
    36f0:	39 23       	and	r19, r25
    36f2:	89 81       	ldd	r24, Y+1	; 0x01
    36f4:	88 2f       	mov	r24, r24
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	a9 01       	movw	r20, r18
    36fa:	02 c0       	rjmp	.+4      	; 0x3700 <Dio_enuReadChannel+0x298>
    36fc:	55 95       	asr	r21
    36fe:	47 95       	ror	r20
    3700:	8a 95       	dec	r24
    3702:	e2 f7       	brpl	.-8      	; 0x36fc <Dio_enuReadChannel+0x294>
    3704:	ca 01       	movw	r24, r20
    3706:	ed 81       	ldd	r30, Y+5	; 0x05
    3708:	fe 81       	ldd	r31, Y+6	; 0x06
    370a:	80 83       	st	Z, r24

			break;
		}
		return ErrorStatus;
    370c:	8b 81       	ldd	r24, Y+3	; 0x03

}
    370e:	28 96       	adiw	r28, 0x08	; 8
    3710:	0f b6       	in	r0, 0x3f	; 63
    3712:	f8 94       	cli
    3714:	de bf       	out	0x3e, r29	; 62
    3716:	0f be       	out	0x3f, r0	; 63
    3718:	cd bf       	out	0x3d, r28	; 61
    371a:	cf 91       	pop	r28
    371c:	df 91       	pop	r29
    371e:	08 95       	ret

00003720 <Dio_enuWritePort>:
 * Parameters(IN)  : 1.Copy_u8PortlId -->port number
 *                   2.Copy_u8Level     --> High or LOW
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuWritePort(DioPinType Copy_u8PortlId,DioPinType Copy_u8Level)
{
    3720:	df 93       	push	r29
    3722:	cf 93       	push	r28
    3724:	cd b7       	in	r28, 0x3d	; 61
    3726:	de b7       	in	r29, 0x3e	; 62
    3728:	29 97       	sbiw	r28, 0x09	; 9
    372a:	0f b6       	in	r0, 0x3f	; 63
    372c:	f8 94       	cli
    372e:	de bf       	out	0x3e, r29	; 62
    3730:	0f be       	out	0x3f, r0	; 63
    3732:	cd bf       	out	0x3d, r28	; 61
    3734:	8a 83       	std	Y+2, r24	; 0x02
    3736:	6b 83       	std	Y+3, r22	; 0x03
	uint8 ErrorStatus=Dio_enuOK;
    3738:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8PortlId>DIO_NUMBER_OF_PORTS)
    373a:	8a 81       	ldd	r24, Y+2	; 0x02
    373c:	85 30       	cpi	r24, 0x05	; 5
    373e:	10 f0       	brcs	.+4      	; 0x3744 <Dio_enuWritePort+0x24>
			{
				ErrorStatus=Dio_enuPortError;
    3740:	82 e0       	ldi	r24, 0x02	; 2
    3742:	89 83       	std	Y+1, r24	; 0x01
			}
	switch(Copy_u8PortlId)
    3744:	8a 81       	ldd	r24, Y+2	; 0x02
    3746:	28 2f       	mov	r18, r24
    3748:	30 e0       	ldi	r19, 0x00	; 0
    374a:	39 87       	std	Y+9, r19	; 0x09
    374c:	28 87       	std	Y+8, r18	; 0x08
    374e:	88 85       	ldd	r24, Y+8	; 0x08
    3750:	99 85       	ldd	r25, Y+9	; 0x09
    3752:	81 30       	cpi	r24, 0x01	; 1
    3754:	91 05       	cpc	r25, r1
    3756:	e9 f0       	breq	.+58     	; 0x3792 <Dio_enuWritePort+0x72>
    3758:	28 85       	ldd	r18, Y+8	; 0x08
    375a:	39 85       	ldd	r19, Y+9	; 0x09
    375c:	22 30       	cpi	r18, 0x02	; 2
    375e:	31 05       	cpc	r19, r1
    3760:	2c f4       	brge	.+10     	; 0x376c <Dio_enuWritePort+0x4c>
    3762:	88 85       	ldd	r24, Y+8	; 0x08
    3764:	99 85       	ldd	r25, Y+9	; 0x09
    3766:	00 97       	sbiw	r24, 0x00	; 0
    3768:	61 f0       	breq	.+24     	; 0x3782 <Dio_enuWritePort+0x62>
    376a:	2a c0       	rjmp	.+84     	; 0x37c0 <Dio_enuWritePort+0xa0>
    376c:	28 85       	ldd	r18, Y+8	; 0x08
    376e:	39 85       	ldd	r19, Y+9	; 0x09
    3770:	22 30       	cpi	r18, 0x02	; 2
    3772:	31 05       	cpc	r19, r1
    3774:	b1 f0       	breq	.+44     	; 0x37a2 <Dio_enuWritePort+0x82>
    3776:	88 85       	ldd	r24, Y+8	; 0x08
    3778:	99 85       	ldd	r25, Y+9	; 0x09
    377a:	83 30       	cpi	r24, 0x03	; 3
    377c:	91 05       	cpc	r25, r1
    377e:	c9 f0       	breq	.+50     	; 0x37b2 <Dio_enuWritePort+0x92>
    3780:	1f c0       	rjmp	.+62     	; 0x37c0 <Dio_enuWritePort+0xa0>
			{
			case Dio_PORTA:
				ASSIGN_REG(PORTA,Copy_u8Level);
    3782:	eb e3       	ldi	r30, 0x3B	; 59
    3784:	f0 e0       	ldi	r31, 0x00	; 0
    3786:	90 81       	ld	r25, Z
    3788:	eb e3       	ldi	r30, 0x3B	; 59
    378a:	f0 e0       	ldi	r31, 0x00	; 0
    378c:	8b 81       	ldd	r24, Y+3	; 0x03
    378e:	80 83       	st	Z, r24
    3790:	17 c0       	rjmp	.+46     	; 0x37c0 <Dio_enuWritePort+0xa0>

				break;
			case Dio_PORTB:
				ASSIGN_REG(PORTB,Copy_u8Level);
    3792:	e8 e3       	ldi	r30, 0x38	; 56
    3794:	f0 e0       	ldi	r31, 0x00	; 0
    3796:	20 81       	ld	r18, Z
    3798:	e8 e3       	ldi	r30, 0x38	; 56
    379a:	f0 e0       	ldi	r31, 0x00	; 0
    379c:	8b 81       	ldd	r24, Y+3	; 0x03
    379e:	80 83       	st	Z, r24
    37a0:	0f c0       	rjmp	.+30     	; 0x37c0 <Dio_enuWritePort+0xa0>

				break;
			case Dio_PORTC:
				ASSIGN_REG(PORTC,Copy_u8Level);
    37a2:	e5 e3       	ldi	r30, 0x35	; 53
    37a4:	f0 e0       	ldi	r31, 0x00	; 0
    37a6:	30 81       	ld	r19, Z
    37a8:	e5 e3       	ldi	r30, 0x35	; 53
    37aa:	f0 e0       	ldi	r31, 0x00	; 0
    37ac:	8b 81       	ldd	r24, Y+3	; 0x03
    37ae:	80 83       	st	Z, r24
    37b0:	07 c0       	rjmp	.+14     	; 0x37c0 <Dio_enuWritePort+0xa0>


				break;
			case Dio_PORTD:
				ASSIGN_REG(PORTD,Copy_u8Level);
    37b2:	e2 e3       	ldi	r30, 0x32	; 50
    37b4:	f0 e0       	ldi	r31, 0x00	; 0
    37b6:	80 81       	ld	r24, Z
    37b8:	e2 e3       	ldi	r30, 0x32	; 50
    37ba:	f0 e0       	ldi	r31, 0x00	; 0
    37bc:	8b 81       	ldd	r24, Y+3	; 0x03
    37be:	80 83       	st	Z, r24

				break;
			}
			return ErrorStatus;
    37c0:	89 81       	ldd	r24, Y+1	; 0x01
}
    37c2:	29 96       	adiw	r28, 0x09	; 9
    37c4:	0f b6       	in	r0, 0x3f	; 63
    37c6:	f8 94       	cli
    37c8:	de bf       	out	0x3e, r29	; 62
    37ca:	0f be       	out	0x3f, r0	; 63
    37cc:	cd bf       	out	0x3d, r28	; 61
    37ce:	cf 91       	pop	r28
    37d0:	df 91       	pop	r29
    37d2:	08 95       	ret

000037d4 <Dio_enuReadPort>:
 * Parameters(IN)  : 1.Copy_u8PortlId        -->port number
 *                   2.Add_pu8ChannelLevel     --> pointer to address of value carry
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuReadPort(DioPinType Copy_u8PortlId,pu8 Add_pu8PortLevel)
{
    37d4:	df 93       	push	r29
    37d6:	cf 93       	push	r28
    37d8:	00 d0       	rcall	.+0      	; 0x37da <Dio_enuReadPort+0x6>
    37da:	00 d0       	rcall	.+0      	; 0x37dc <Dio_enuReadPort+0x8>
    37dc:	00 d0       	rcall	.+0      	; 0x37de <Dio_enuReadPort+0xa>
    37de:	cd b7       	in	r28, 0x3d	; 61
    37e0:	de b7       	in	r29, 0x3e	; 62
    37e2:	8a 83       	std	Y+2, r24	; 0x02
    37e4:	7c 83       	std	Y+4, r23	; 0x04
    37e6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 ErrorStatus=Dio_enuOK;
    37e8:	19 82       	std	Y+1, r1	; 0x01
		if(Copy_u8PortlId>DIO_NUMBER_OF_PORTS)
    37ea:	8a 81       	ldd	r24, Y+2	; 0x02
    37ec:	85 30       	cpi	r24, 0x05	; 5
    37ee:	10 f0       	brcs	.+4      	; 0x37f4 <Dio_enuReadPort+0x20>
				{
					ErrorStatus=Dio_enuPortError;
    37f0:	82 e0       	ldi	r24, 0x02	; 2
    37f2:	89 83       	std	Y+1, r24	; 0x01
				}
		if( Add_pu8PortLevel ==Null_ptr)
    37f4:	8b 81       	ldd	r24, Y+3	; 0x03
    37f6:	9c 81       	ldd	r25, Y+4	; 0x04
    37f8:	00 97       	sbiw	r24, 0x00	; 0
    37fa:	11 f4       	brne	.+4      	; 0x3800 <Dio_enuReadPort+0x2c>
				{
					ErrorStatus=DIO_enuNullPtr;
    37fc:	84 e0       	ldi	r24, 0x04	; 4
    37fe:	89 83       	std	Y+1, r24	; 0x01
				}
		switch(Copy_u8PortlId)
    3800:	8a 81       	ldd	r24, Y+2	; 0x02
    3802:	28 2f       	mov	r18, r24
    3804:	30 e0       	ldi	r19, 0x00	; 0
    3806:	3e 83       	std	Y+6, r19	; 0x06
    3808:	2d 83       	std	Y+5, r18	; 0x05
    380a:	8d 81       	ldd	r24, Y+5	; 0x05
    380c:	9e 81       	ldd	r25, Y+6	; 0x06
    380e:	81 30       	cpi	r24, 0x01	; 1
    3810:	91 05       	cpc	r25, r1
    3812:	e1 f0       	breq	.+56     	; 0x384c <Dio_enuReadPort+0x78>
    3814:	2d 81       	ldd	r18, Y+5	; 0x05
    3816:	3e 81       	ldd	r19, Y+6	; 0x06
    3818:	22 30       	cpi	r18, 0x02	; 2
    381a:	31 05       	cpc	r19, r1
    381c:	2c f4       	brge	.+10     	; 0x3828 <Dio_enuReadPort+0x54>
    381e:	8d 81       	ldd	r24, Y+5	; 0x05
    3820:	9e 81       	ldd	r25, Y+6	; 0x06
    3822:	00 97       	sbiw	r24, 0x00	; 0
    3824:	61 f0       	breq	.+24     	; 0x383e <Dio_enuReadPort+0x6a>
    3826:	26 c0       	rjmp	.+76     	; 0x3874 <Dio_enuReadPort+0xa0>
    3828:	2d 81       	ldd	r18, Y+5	; 0x05
    382a:	3e 81       	ldd	r19, Y+6	; 0x06
    382c:	22 30       	cpi	r18, 0x02	; 2
    382e:	31 05       	cpc	r19, r1
    3830:	a1 f0       	breq	.+40     	; 0x385a <Dio_enuReadPort+0x86>
    3832:	8d 81       	ldd	r24, Y+5	; 0x05
    3834:	9e 81       	ldd	r25, Y+6	; 0x06
    3836:	83 30       	cpi	r24, 0x03	; 3
    3838:	91 05       	cpc	r25, r1
    383a:	b1 f0       	breq	.+44     	; 0x3868 <Dio_enuReadPort+0x94>
    383c:	1b c0       	rjmp	.+54     	; 0x3874 <Dio_enuReadPort+0xa0>
				{
				case Dio_PORTA:
					*Add_pu8PortLevel=PINA;
    383e:	e9 e3       	ldi	r30, 0x39	; 57
    3840:	f0 e0       	ldi	r31, 0x00	; 0
    3842:	80 81       	ld	r24, Z
    3844:	eb 81       	ldd	r30, Y+3	; 0x03
    3846:	fc 81       	ldd	r31, Y+4	; 0x04
    3848:	80 83       	st	Z, r24
    384a:	14 c0       	rjmp	.+40     	; 0x3874 <Dio_enuReadPort+0xa0>
					break;
				case Dio_PORTB:
					*Add_pu8PortLevel=PINB;
    384c:	e6 e3       	ldi	r30, 0x36	; 54
    384e:	f0 e0       	ldi	r31, 0x00	; 0
    3850:	80 81       	ld	r24, Z
    3852:	eb 81       	ldd	r30, Y+3	; 0x03
    3854:	fc 81       	ldd	r31, Y+4	; 0x04
    3856:	80 83       	st	Z, r24
    3858:	0d c0       	rjmp	.+26     	; 0x3874 <Dio_enuReadPort+0xa0>

					break;
				case Dio_PORTC:
					*Add_pu8PortLevel=PINC;
    385a:	e3 e3       	ldi	r30, 0x33	; 51
    385c:	f0 e0       	ldi	r31, 0x00	; 0
    385e:	80 81       	ld	r24, Z
    3860:	eb 81       	ldd	r30, Y+3	; 0x03
    3862:	fc 81       	ldd	r31, Y+4	; 0x04
    3864:	80 83       	st	Z, r24
    3866:	06 c0       	rjmp	.+12     	; 0x3874 <Dio_enuReadPort+0xa0>


					break;
				case Dio_PORTD:
					*Add_pu8PortLevel=PIND;
    3868:	e0 e3       	ldi	r30, 0x30	; 48
    386a:	f0 e0       	ldi	r31, 0x00	; 0
    386c:	80 81       	ld	r24, Z
    386e:	eb 81       	ldd	r30, Y+3	; 0x03
    3870:	fc 81       	ldd	r31, Y+4	; 0x04
    3872:	80 83       	st	Z, r24

					break;
				}
				return ErrorStatus;
    3874:	89 81       	ldd	r24, Y+1	; 0x01
}
    3876:	26 96       	adiw	r28, 0x06	; 6
    3878:	0f b6       	in	r0, 0x3f	; 63
    387a:	f8 94       	cli
    387c:	de bf       	out	0x3e, r29	; 62
    387e:	0f be       	out	0x3f, r0	; 63
    3880:	cd bf       	out	0x3d, r28	; 61
    3882:	cf 91       	pop	r28
    3884:	df 91       	pop	r29
    3886:	08 95       	ret

00003888 <Dio_eneFlipChannel>:
 * Description     : Function responsible for flip pin
 * Parameters(IN)  : 1.Copy_u8ChannelId -->pin number
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_eneFlipChannel(DioPinType Copy_u8ChannelId)
{
    3888:	df 93       	push	r29
    388a:	cf 93       	push	r28
    388c:	00 d0       	rcall	.+0      	; 0x388e <Dio_eneFlipChannel+0x6>
    388e:	00 d0       	rcall	.+0      	; 0x3890 <Dio_eneFlipChannel+0x8>
    3890:	00 d0       	rcall	.+0      	; 0x3892 <Dio_eneFlipChannel+0xa>
    3892:	cd b7       	in	r28, 0x3d	; 61
    3894:	de b7       	in	r29, 0x3e	; 62
    3896:	8c 83       	std	Y+4, r24	; 0x04
	uint8 ErrorStatus=Dio_enuOK;
    3898:	1b 82       	std	Y+3, r1	; 0x03
			uint8 PortIndex=0,PinIndex=0;
    389a:	1a 82       	std	Y+2, r1	; 0x02
    389c:	19 82       	std	Y+1, r1	; 0x01
			PortIndex=(Copy_u8ChannelId/8);
    389e:	8c 81       	ldd	r24, Y+4	; 0x04
    38a0:	86 95       	lsr	r24
    38a2:	86 95       	lsr	r24
    38a4:	86 95       	lsr	r24
    38a6:	8a 83       	std	Y+2, r24	; 0x02
			PinIndex=Copy_u8ChannelId%8;
    38a8:	8c 81       	ldd	r24, Y+4	; 0x04
    38aa:	87 70       	andi	r24, 0x07	; 7
    38ac:	89 83       	std	Y+1, r24	; 0x01
			if(Copy_u8ChannelId>DIO_NUMBER_OF_PINS)
    38ae:	8c 81       	ldd	r24, Y+4	; 0x04
    38b0:	81 32       	cpi	r24, 0x21	; 33
    38b2:	10 f0       	brcs	.+4      	; 0x38b8 <Dio_eneFlipChannel+0x30>
			{
				ErrorStatus=Dio_enuPinError;
    38b4:	81 e0       	ldi	r24, 0x01	; 1
    38b6:	8b 83       	std	Y+3, r24	; 0x03
			}
			if(PortIndex>DIO_NUMBER_OF_PORTS)
    38b8:	8a 81       	ldd	r24, Y+2	; 0x02
    38ba:	85 30       	cpi	r24, 0x05	; 5
    38bc:	10 f0       	brcs	.+4      	; 0x38c2 <Dio_eneFlipChannel+0x3a>
			{
				ErrorStatus=Dio_enuPortError;
    38be:	82 e0       	ldi	r24, 0x02	; 2
    38c0:	8b 83       	std	Y+3, r24	; 0x03
			}
			switch(PortIndex)
    38c2:	8a 81       	ldd	r24, Y+2	; 0x02
    38c4:	28 2f       	mov	r18, r24
    38c6:	30 e0       	ldi	r19, 0x00	; 0
    38c8:	3e 83       	std	Y+6, r19	; 0x06
    38ca:	2d 83       	std	Y+5, r18	; 0x05
    38cc:	8d 81       	ldd	r24, Y+5	; 0x05
    38ce:	9e 81       	ldd	r25, Y+6	; 0x06
    38d0:	81 30       	cpi	r24, 0x01	; 1
    38d2:	91 05       	cpc	r25, r1
    38d4:	49 f1       	breq	.+82     	; 0x3928 <Dio_eneFlipChannel+0xa0>
    38d6:	2d 81       	ldd	r18, Y+5	; 0x05
    38d8:	3e 81       	ldd	r19, Y+6	; 0x06
    38da:	22 30       	cpi	r18, 0x02	; 2
    38dc:	31 05       	cpc	r19, r1
    38de:	2c f4       	brge	.+10     	; 0x38ea <Dio_eneFlipChannel+0x62>
    38e0:	8d 81       	ldd	r24, Y+5	; 0x05
    38e2:	9e 81       	ldd	r25, Y+6	; 0x06
    38e4:	00 97       	sbiw	r24, 0x00	; 0
    38e6:	61 f0       	breq	.+24     	; 0x3900 <Dio_eneFlipChannel+0x78>
    38e8:	5a c0       	rjmp	.+180    	; 0x399e <Dio_eneFlipChannel+0x116>
    38ea:	2d 81       	ldd	r18, Y+5	; 0x05
    38ec:	3e 81       	ldd	r19, Y+6	; 0x06
    38ee:	22 30       	cpi	r18, 0x02	; 2
    38f0:	31 05       	cpc	r19, r1
    38f2:	71 f1       	breq	.+92     	; 0x3950 <Dio_eneFlipChannel+0xc8>
    38f4:	8d 81       	ldd	r24, Y+5	; 0x05
    38f6:	9e 81       	ldd	r25, Y+6	; 0x06
    38f8:	83 30       	cpi	r24, 0x03	; 3
    38fa:	91 05       	cpc	r25, r1
    38fc:	e9 f1       	breq	.+122    	; 0x3978 <Dio_eneFlipChannel+0xf0>
    38fe:	4f c0       	rjmp	.+158    	; 0x399e <Dio_eneFlipChannel+0x116>
					{
					case Dio_PORTA:
						TOGGLE_BIT(DDRA,PinIndex);
    3900:	aa e3       	ldi	r26, 0x3A	; 58
    3902:	b0 e0       	ldi	r27, 0x00	; 0
    3904:	ea e3       	ldi	r30, 0x3A	; 58
    3906:	f0 e0       	ldi	r31, 0x00	; 0
    3908:	80 81       	ld	r24, Z
    390a:	48 2f       	mov	r20, r24
    390c:	89 81       	ldd	r24, Y+1	; 0x01
    390e:	28 2f       	mov	r18, r24
    3910:	30 e0       	ldi	r19, 0x00	; 0
    3912:	81 e0       	ldi	r24, 0x01	; 1
    3914:	90 e0       	ldi	r25, 0x00	; 0
    3916:	02 2e       	mov	r0, r18
    3918:	02 c0       	rjmp	.+4      	; 0x391e <Dio_eneFlipChannel+0x96>
    391a:	88 0f       	add	r24, r24
    391c:	99 1f       	adc	r25, r25
    391e:	0a 94       	dec	r0
    3920:	e2 f7       	brpl	.-8      	; 0x391a <Dio_eneFlipChannel+0x92>
    3922:	84 27       	eor	r24, r20
    3924:	8c 93       	st	X, r24
    3926:	3b c0       	rjmp	.+118    	; 0x399e <Dio_eneFlipChannel+0x116>

						break;
					case Dio_PORTB:
						TOGGLE_BIT(DDRB,PinIndex);
    3928:	a7 e3       	ldi	r26, 0x37	; 55
    392a:	b0 e0       	ldi	r27, 0x00	; 0
    392c:	e7 e3       	ldi	r30, 0x37	; 55
    392e:	f0 e0       	ldi	r31, 0x00	; 0
    3930:	80 81       	ld	r24, Z
    3932:	48 2f       	mov	r20, r24
    3934:	89 81       	ldd	r24, Y+1	; 0x01
    3936:	28 2f       	mov	r18, r24
    3938:	30 e0       	ldi	r19, 0x00	; 0
    393a:	81 e0       	ldi	r24, 0x01	; 1
    393c:	90 e0       	ldi	r25, 0x00	; 0
    393e:	02 2e       	mov	r0, r18
    3940:	02 c0       	rjmp	.+4      	; 0x3946 <Dio_eneFlipChannel+0xbe>
    3942:	88 0f       	add	r24, r24
    3944:	99 1f       	adc	r25, r25
    3946:	0a 94       	dec	r0
    3948:	e2 f7       	brpl	.-8      	; 0x3942 <Dio_eneFlipChannel+0xba>
    394a:	84 27       	eor	r24, r20
    394c:	8c 93       	st	X, r24
    394e:	27 c0       	rjmp	.+78     	; 0x399e <Dio_eneFlipChannel+0x116>

						break;
					case Dio_PORTC:
						TOGGLE_BIT(DDRC,PinIndex);
    3950:	a4 e3       	ldi	r26, 0x34	; 52
    3952:	b0 e0       	ldi	r27, 0x00	; 0
    3954:	e4 e3       	ldi	r30, 0x34	; 52
    3956:	f0 e0       	ldi	r31, 0x00	; 0
    3958:	80 81       	ld	r24, Z
    395a:	48 2f       	mov	r20, r24
    395c:	89 81       	ldd	r24, Y+1	; 0x01
    395e:	28 2f       	mov	r18, r24
    3960:	30 e0       	ldi	r19, 0x00	; 0
    3962:	81 e0       	ldi	r24, 0x01	; 1
    3964:	90 e0       	ldi	r25, 0x00	; 0
    3966:	02 2e       	mov	r0, r18
    3968:	02 c0       	rjmp	.+4      	; 0x396e <Dio_eneFlipChannel+0xe6>
    396a:	88 0f       	add	r24, r24
    396c:	99 1f       	adc	r25, r25
    396e:	0a 94       	dec	r0
    3970:	e2 f7       	brpl	.-8      	; 0x396a <Dio_eneFlipChannel+0xe2>
    3972:	84 27       	eor	r24, r20
    3974:	8c 93       	st	X, r24
    3976:	13 c0       	rjmp	.+38     	; 0x399e <Dio_eneFlipChannel+0x116>

						break;
					case Dio_PORTD:
						TOGGLE_BIT(DDRD,PinIndex);
    3978:	a1 e3       	ldi	r26, 0x31	; 49
    397a:	b0 e0       	ldi	r27, 0x00	; 0
    397c:	e1 e3       	ldi	r30, 0x31	; 49
    397e:	f0 e0       	ldi	r31, 0x00	; 0
    3980:	80 81       	ld	r24, Z
    3982:	48 2f       	mov	r20, r24
    3984:	89 81       	ldd	r24, Y+1	; 0x01
    3986:	28 2f       	mov	r18, r24
    3988:	30 e0       	ldi	r19, 0x00	; 0
    398a:	81 e0       	ldi	r24, 0x01	; 1
    398c:	90 e0       	ldi	r25, 0x00	; 0
    398e:	02 2e       	mov	r0, r18
    3990:	02 c0       	rjmp	.+4      	; 0x3996 <Dio_eneFlipChannel+0x10e>
    3992:	88 0f       	add	r24, r24
    3994:	99 1f       	adc	r25, r25
    3996:	0a 94       	dec	r0
    3998:	e2 f7       	brpl	.-8      	; 0x3992 <Dio_eneFlipChannel+0x10a>
    399a:	84 27       	eor	r24, r20
    399c:	8c 93       	st	X, r24

						break;
					}
					return ErrorStatus;
    399e:	8b 81       	ldd	r24, Y+3	; 0x03
}
    39a0:	26 96       	adiw	r28, 0x06	; 6
    39a2:	0f b6       	in	r0, 0x3f	; 63
    39a4:	f8 94       	cli
    39a6:	de bf       	out	0x3e, r29	; 62
    39a8:	0f be       	out	0x3f, r0	; 63
    39aa:	cd bf       	out	0x3d, r28	; 61
    39ac:	cf 91       	pop	r28
    39ae:	df 91       	pop	r29
    39b0:	08 95       	ret

000039b2 <ADC_Init>:
#include "../Includes/ADC.h"
#include "../Includes/ADC_Cfg.h"
#include "../Includes/ADC_Prv.h"
  void(*G_Ptr)(uint16)=Null_ptr;
ADC_enuErrorStatus ADC_Init(const ADC_ConfigType* Config_Ptr)
{
    39b2:	df 93       	push	r29
    39b4:	cf 93       	push	r28
    39b6:	00 d0       	rcall	.+0      	; 0x39b8 <ADC_Init+0x6>
    39b8:	0f 92       	push	r0
    39ba:	cd b7       	in	r28, 0x3d	; 61
    39bc:	de b7       	in	r29, 0x3e	; 62
    39be:	9b 83       	std	Y+3, r25	; 0x03
    39c0:	8a 83       	std	Y+2, r24	; 0x02
	uint8 ErrorStatus=ADC_enuOK;
    39c2:	19 82       	std	Y+1, r1	; 0x01
	if(Config_Ptr==Null_ptr)
    39c4:	8a 81       	ldd	r24, Y+2	; 0x02
    39c6:	9b 81       	ldd	r25, Y+3	; 0x03
    39c8:	00 97       	sbiw	r24, 0x00	; 0
    39ca:	11 f4       	brne	.+4      	; 0x39d0 <ADC_Init+0x1e>
	{
		ErrorStatus=ADC_enuNullPtr;
    39cc:	81 e0       	ldi	r24, 0x01	; 1
    39ce:	89 83       	std	Y+1, r24	; 0x01
	}
	ADMUX=(ADMUX & 0x3F) | (Config_Ptr->Voltage<<6);
    39d0:	a7 e2       	ldi	r26, 0x27	; 39
    39d2:	b0 e0       	ldi	r27, 0x00	; 0
    39d4:	e7 e2       	ldi	r30, 0x27	; 39
    39d6:	f0 e0       	ldi	r31, 0x00	; 0
    39d8:	80 81       	ld	r24, Z
    39da:	28 2f       	mov	r18, r24
    39dc:	2f 73       	andi	r18, 0x3F	; 63
    39de:	ea 81       	ldd	r30, Y+2	; 0x02
    39e0:	fb 81       	ldd	r31, Y+3	; 0x03
    39e2:	80 81       	ld	r24, Z
    39e4:	88 2f       	mov	r24, r24
    39e6:	90 e0       	ldi	r25, 0x00	; 0
    39e8:	00 24       	eor	r0, r0
    39ea:	96 95       	lsr	r25
    39ec:	87 95       	ror	r24
    39ee:	07 94       	ror	r0
    39f0:	96 95       	lsr	r25
    39f2:	87 95       	ror	r24
    39f4:	07 94       	ror	r0
    39f6:	98 2f       	mov	r25, r24
    39f8:	80 2d       	mov	r24, r0
    39fa:	82 2b       	or	r24, r18
    39fc:	8c 93       	st	X, r24
	ADCSRA=(ADCSRA & 0xF8) |( Config_Ptr->Prescaler);
    39fe:	a6 e2       	ldi	r26, 0x26	; 38
    3a00:	b0 e0       	ldi	r27, 0x00	; 0
    3a02:	e6 e2       	ldi	r30, 0x26	; 38
    3a04:	f0 e0       	ldi	r31, 0x00	; 0
    3a06:	80 81       	ld	r24, Z
    3a08:	98 2f       	mov	r25, r24
    3a0a:	98 7f       	andi	r25, 0xF8	; 248
    3a0c:	ea 81       	ldd	r30, Y+2	; 0x02
    3a0e:	fb 81       	ldd	r31, Y+3	; 0x03
    3a10:	82 81       	ldd	r24, Z+2	; 0x02
    3a12:	89 2b       	or	r24, r25
    3a14:	8c 93       	st	X, r24

#if(ADC_ADJUST==ADC_ADJUST_ENBLE)
	SET_BIT(ADMUX,5);
#else
	CLEAR_BIT(ADMUX,5);
    3a16:	a7 e2       	ldi	r26, 0x27	; 39
    3a18:	b0 e0       	ldi	r27, 0x00	; 0
    3a1a:	e7 e2       	ldi	r30, 0x27	; 39
    3a1c:	f0 e0       	ldi	r31, 0x00	; 0
    3a1e:	80 81       	ld	r24, Z
    3a20:	8f 7d       	andi	r24, 0xDF	; 223
    3a22:	8c 93       	st	X, r24
#endif

#if(ADC_INTERRUPT==ADC_INTERRUPT_ENABL)
	SET_BIT(ADCSRA,3);
    3a24:	a6 e2       	ldi	r26, 0x26	; 38
    3a26:	b0 e0       	ldi	r27, 0x00	; 0
    3a28:	e6 e2       	ldi	r30, 0x26	; 38
    3a2a:	f0 e0       	ldi	r31, 0x00	; 0
    3a2c:	80 81       	ld	r24, Z
    3a2e:	88 60       	ori	r24, 0x08	; 8
    3a30:	8c 93       	st	X, r24
#else
	CLEAR_BIT(ADCSRA,3);
#endif
	SET_BIT(ADCSRA,7);
    3a32:	a6 e2       	ldi	r26, 0x26	; 38
    3a34:	b0 e0       	ldi	r27, 0x00	; 0
    3a36:	e6 e2       	ldi	r30, 0x26	; 38
    3a38:	f0 e0       	ldi	r31, 0x00	; 0
    3a3a:	80 81       	ld	r24, Z
    3a3c:	80 68       	ori	r24, 0x80	; 128
    3a3e:	8c 93       	st	X, r24

return ErrorStatus;
    3a40:	89 81       	ldd	r24, Y+1	; 0x01
}
    3a42:	0f 90       	pop	r0
    3a44:	0f 90       	pop	r0
    3a46:	0f 90       	pop	r0
    3a48:	cf 91       	pop	r28
    3a4a:	df 91       	pop	r29
    3a4c:	08 95       	ret

00003a4e <ADC_StartConcersion>:

void ADC_StartConcersion()
{
    3a4e:	df 93       	push	r29
    3a50:	cf 93       	push	r28
    3a52:	cd b7       	in	r28, 0x3d	; 61
    3a54:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ADCSRA,6);
    3a56:	a6 e2       	ldi	r26, 0x26	; 38
    3a58:	b0 e0       	ldi	r27, 0x00	; 0
    3a5a:	e6 e2       	ldi	r30, 0x26	; 38
    3a5c:	f0 e0       	ldi	r31, 0x00	; 0
    3a5e:	80 81       	ld	r24, Z
    3a60:	80 64       	ori	r24, 0x40	; 64
    3a62:	8c 93       	st	X, r24
}
    3a64:	cf 91       	pop	r28
    3a66:	df 91       	pop	r29
    3a68:	08 95       	ret

00003a6a <ADC_Disable>:

void ADC_Disable(void)
{
    3a6a:	df 93       	push	r29
    3a6c:	cf 93       	push	r28
    3a6e:	cd b7       	in	r28, 0x3d	; 61
    3a70:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(ADCSRA,7);
    3a72:	a6 e2       	ldi	r26, 0x26	; 38
    3a74:	b0 e0       	ldi	r27, 0x00	; 0
    3a76:	e6 e2       	ldi	r30, 0x26	; 38
    3a78:	f0 e0       	ldi	r31, 0x00	; 0
    3a7a:	80 81       	ld	r24, Z
    3a7c:	8f 77       	andi	r24, 0x7F	; 127
    3a7e:	8c 93       	st	X, r24

}
    3a80:	cf 91       	pop	r28
    3a82:	df 91       	pop	r29
    3a84:	08 95       	ret

00003a86 <ADC_enuReadChannel>:

ADC_enuErrorStatus ADC_enuReadChannel(ADC_Channel Copy_u8Channel )
{
    3a86:	df 93       	push	r29
    3a88:	cf 93       	push	r28
    3a8a:	00 d0       	rcall	.+0      	; 0x3a8c <ADC_enuReadChannel+0x6>
    3a8c:	cd b7       	in	r28, 0x3d	; 61
    3a8e:	de b7       	in	r29, 0x3e	; 62
    3a90:	8a 83       	std	Y+2, r24	; 0x02
	uint8 ErrorStatus=ADC_enuOK;
    3a92:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Channel>ADC7)
    3a94:	8a 81       	ldd	r24, Y+2	; 0x02
    3a96:	88 30       	cpi	r24, 0x08	; 8
    3a98:	10 f0       	brcs	.+4      	; 0x3a9e <ADC_enuReadChannel+0x18>
	{
		ErrorStatus=ADC_enuWrongChannel;
    3a9a:	82 e0       	ldi	r24, 0x02	; 2
    3a9c:	89 83       	std	Y+1, r24	; 0x01
	}

	ADMUX=(ADMUX & 0xE0) | (Copy_u8Channel &0x07);
    3a9e:	a7 e2       	ldi	r26, 0x27	; 39
    3aa0:	b0 e0       	ldi	r27, 0x00	; 0
    3aa2:	e7 e2       	ldi	r30, 0x27	; 39
    3aa4:	f0 e0       	ldi	r31, 0x00	; 0
    3aa6:	80 81       	ld	r24, Z
    3aa8:	98 2f       	mov	r25, r24
    3aaa:	90 7e       	andi	r25, 0xE0	; 224
    3aac:	8a 81       	ldd	r24, Y+2	; 0x02
    3aae:	87 70       	andi	r24, 0x07	; 7
    3ab0:	89 2b       	or	r24, r25
    3ab2:	8c 93       	st	X, r24
	ADC_StartConcersion();
    3ab4:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <ADC_StartConcersion>

	return ErrorStatus;
    3ab8:	89 81       	ldd	r24, Y+1	; 0x01
}
    3aba:	0f 90       	pop	r0
    3abc:	0f 90       	pop	r0
    3abe:	cf 91       	pop	r28
    3ac0:	df 91       	pop	r29
    3ac2:	08 95       	ret

00003ac4 <ADC_CallBack>:

void ADC_CallBack(void(*ADC_CallPtr)(uint16))
{
    3ac4:	df 93       	push	r29
    3ac6:	cf 93       	push	r28
    3ac8:	00 d0       	rcall	.+0      	; 0x3aca <ADC_CallBack+0x6>
    3aca:	cd b7       	in	r28, 0x3d	; 61
    3acc:	de b7       	in	r29, 0x3e	; 62
    3ace:	9a 83       	std	Y+2, r25	; 0x02
    3ad0:	89 83       	std	Y+1, r24	; 0x01
	G_Ptr=ADC_CallPtr;
    3ad2:	89 81       	ldd	r24, Y+1	; 0x01
    3ad4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ad6:	90 93 b9 01 	sts	0x01B9, r25
    3ada:	80 93 b8 01 	sts	0x01B8, r24
}
    3ade:	0f 90       	pop	r0
    3ae0:	0f 90       	pop	r0
    3ae2:	cf 91       	pop	r28
    3ae4:	df 91       	pop	r29
    3ae6:	08 95       	ret

00003ae8 <__vector_16>:
#include "../../../Services/Lib/std_types.h"
extern   void(*G_Ptr)(uint16 );
static uint16 x=0;
void __vector_16(void) __attribute__((signal));
void __vector_16(void)
{
    3ae8:	1f 92       	push	r1
    3aea:	0f 92       	push	r0
    3aec:	0f b6       	in	r0, 0x3f	; 63
    3aee:	0f 92       	push	r0
    3af0:	11 24       	eor	r1, r1
    3af2:	2f 93       	push	r18
    3af4:	3f 93       	push	r19
    3af6:	4f 93       	push	r20
    3af8:	5f 93       	push	r21
    3afa:	6f 93       	push	r22
    3afc:	7f 93       	push	r23
    3afe:	8f 93       	push	r24
    3b00:	9f 93       	push	r25
    3b02:	af 93       	push	r26
    3b04:	bf 93       	push	r27
    3b06:	ef 93       	push	r30
    3b08:	ff 93       	push	r31
    3b0a:	df 93       	push	r29
    3b0c:	cf 93       	push	r28
    3b0e:	cd b7       	in	r28, 0x3d	; 61
    3b10:	de b7       	in	r29, 0x3e	; 62
	x=(ADC & 0x0FFF);
    3b12:	e4 e2       	ldi	r30, 0x24	; 36
    3b14:	f0 e0       	ldi	r31, 0x00	; 0
    3b16:	80 81       	ld	r24, Z
    3b18:	91 81       	ldd	r25, Z+1	; 0x01
    3b1a:	9f 70       	andi	r25, 0x0F	; 15
    3b1c:	90 93 bb 01 	sts	0x01BB, r25
    3b20:	80 93 ba 01 	sts	0x01BA, r24
	(*G_Ptr)(x);
    3b24:	e0 91 b8 01 	lds	r30, 0x01B8
    3b28:	f0 91 b9 01 	lds	r31, 0x01B9
    3b2c:	80 91 ba 01 	lds	r24, 0x01BA
    3b30:	90 91 bb 01 	lds	r25, 0x01BB
    3b34:	09 95       	icall
}
    3b36:	cf 91       	pop	r28
    3b38:	df 91       	pop	r29
    3b3a:	ff 91       	pop	r31
    3b3c:	ef 91       	pop	r30
    3b3e:	bf 91       	pop	r27
    3b40:	af 91       	pop	r26
    3b42:	9f 91       	pop	r25
    3b44:	8f 91       	pop	r24
    3b46:	7f 91       	pop	r23
    3b48:	6f 91       	pop	r22
    3b4a:	5f 91       	pop	r21
    3b4c:	4f 91       	pop	r20
    3b4e:	3f 91       	pop	r19
    3b50:	2f 91       	pop	r18
    3b52:	0f 90       	pop	r0
    3b54:	0f be       	out	0x3f, r0	; 63
    3b56:	0f 90       	pop	r0
    3b58:	1f 90       	pop	r1
    3b5a:	18 95       	reti

00003b5c <Lcd_Init>:
#include "../Includes/LCD_Cfg.h"
#include "../Includes/LCD_Prv.h"


void Lcd_Init(void)
{
    3b5c:	df 93       	push	r29
    3b5e:	cf 93       	push	r28
    3b60:	cd b7       	in	r28, 0x3d	; 61
    3b62:	de b7       	in	r29, 0x3e	; 62
	//	_delay_ms(50);


#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
	Lcd_VidSendCommand(LCD_4_BIT_2_LINES_INIT1_COMMAND);
    3b64:	83 e3       	ldi	r24, 0x33	; 51
    3b66:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
	Lcd_VidSendCommand(LCD_4_BIT_2_LINES_INIT2_COMMAND);
    3b6a:	82 e3       	ldi	r24, 0x32	; 50
    3b6c:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
	Lcd_VidSendCommand(LCD_4_BIT_MODE_SELECTION);
    3b70:	88 e2       	ldi	r24, 0x28	; 40
    3b72:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
#elif(LCD_DATA_MODE==LCD_EIGHT_BIT_MODE)

	Lcd_VidSendCommand(LCD_8_BIT_MODE_SELECTION);

#endif
	Lcd_VidSendCommand(LCD_CURSOR_OFF_COMMAND);
    3b76:	8c e0       	ldi	r24, 0x0C	; 12
    3b78:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
	Lcd_VidSendCommand(LCD_CLEAR_SCREEN_COMMAND);
    3b7c:	81 e0       	ldi	r24, 0x01	; 1
    3b7e:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>

}
    3b82:	cf 91       	pop	r28
    3b84:	df 91       	pop	r29
    3b86:	08 95       	ret

00003b88 <Lcd_VidSendCommand>:

void Lcd_VidSendCommand(uint8 Copy_u8Command)
{
    3b88:	0f 93       	push	r16
    3b8a:	1f 93       	push	r17
    3b8c:	df 93       	push	r29
    3b8e:	cf 93       	push	r28
    3b90:	cd b7       	in	r28, 0x3d	; 61
    3b92:	de b7       	in	r29, 0x3e	; 62
    3b94:	c3 56       	subi	r28, 0x63	; 99
    3b96:	d0 40       	sbci	r29, 0x00	; 0
    3b98:	0f b6       	in	r0, 0x3f	; 63
    3b9a:	f8 94       	cli
    3b9c:	de bf       	out	0x3e, r29	; 62
    3b9e:	0f be       	out	0x3f, r0	; 63
    3ba0:	cd bf       	out	0x3d, r28	; 61
    3ba2:	fe 01       	movw	r30, r28
    3ba4:	ed 59       	subi	r30, 0x9D	; 157
    3ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba8:	80 83       	st	Z, r24
	Dio_enuWriteChannel(LCD_RS_PIN_NUM,DIO_LOGIC_LOW);
    3baa:	80 e1       	ldi	r24, 0x10	; 16
    3bac:	60 e0       	ldi	r22, 0x00	; 0
    3bae:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    3bb2:	fe 01       	movw	r30, r28
    3bb4:	e1 5a       	subi	r30, 0xA1	; 161
    3bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb8:	80 e0       	ldi	r24, 0x00	; 0
    3bba:	90 e0       	ldi	r25, 0x00	; 0
    3bbc:	a0 e8       	ldi	r26, 0x80	; 128
    3bbe:	bf e3       	ldi	r27, 0x3F	; 63
    3bc0:	80 83       	st	Z, r24
    3bc2:	91 83       	std	Z+1, r25	; 0x01
    3bc4:	a2 83       	std	Z+2, r26	; 0x02
    3bc6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bc8:	8e 01       	movw	r16, r28
    3bca:	05 5a       	subi	r16, 0xA5	; 165
    3bcc:	1f 4f       	sbci	r17, 0xFF	; 255
    3bce:	fe 01       	movw	r30, r28
    3bd0:	e1 5a       	subi	r30, 0xA1	; 161
    3bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd4:	60 81       	ld	r22, Z
    3bd6:	71 81       	ldd	r23, Z+1	; 0x01
    3bd8:	82 81       	ldd	r24, Z+2	; 0x02
    3bda:	93 81       	ldd	r25, Z+3	; 0x03
    3bdc:	20 e0       	ldi	r18, 0x00	; 0
    3bde:	30 e0       	ldi	r19, 0x00	; 0
    3be0:	4a e7       	ldi	r20, 0x7A	; 122
    3be2:	53 e4       	ldi	r21, 0x43	; 67
    3be4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3be8:	dc 01       	movw	r26, r24
    3bea:	cb 01       	movw	r24, r22
    3bec:	f8 01       	movw	r30, r16
    3bee:	80 83       	st	Z, r24
    3bf0:	91 83       	std	Z+1, r25	; 0x01
    3bf2:	a2 83       	std	Z+2, r26	; 0x02
    3bf4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bf6:	fe 01       	movw	r30, r28
    3bf8:	e5 5a       	subi	r30, 0xA5	; 165
    3bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    3bfc:	60 81       	ld	r22, Z
    3bfe:	71 81       	ldd	r23, Z+1	; 0x01
    3c00:	82 81       	ldd	r24, Z+2	; 0x02
    3c02:	93 81       	ldd	r25, Z+3	; 0x03
    3c04:	20 e0       	ldi	r18, 0x00	; 0
    3c06:	30 e0       	ldi	r19, 0x00	; 0
    3c08:	40 e8       	ldi	r20, 0x80	; 128
    3c0a:	5f e3       	ldi	r21, 0x3F	; 63
    3c0c:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    3c10:	88 23       	and	r24, r24
    3c12:	44 f4       	brge	.+16     	; 0x3c24 <Lcd_VidSendCommand+0x9c>
		__ticks = 1;
    3c14:	fe 01       	movw	r30, r28
    3c16:	e7 5a       	subi	r30, 0xA7	; 167
    3c18:	ff 4f       	sbci	r31, 0xFF	; 255
    3c1a:	81 e0       	ldi	r24, 0x01	; 1
    3c1c:	90 e0       	ldi	r25, 0x00	; 0
    3c1e:	91 83       	std	Z+1, r25	; 0x01
    3c20:	80 83       	st	Z, r24
    3c22:	64 c0       	rjmp	.+200    	; 0x3cec <Lcd_VidSendCommand+0x164>
	else if (__tmp > 65535)
    3c24:	fe 01       	movw	r30, r28
    3c26:	e5 5a       	subi	r30, 0xA5	; 165
    3c28:	ff 4f       	sbci	r31, 0xFF	; 255
    3c2a:	60 81       	ld	r22, Z
    3c2c:	71 81       	ldd	r23, Z+1	; 0x01
    3c2e:	82 81       	ldd	r24, Z+2	; 0x02
    3c30:	93 81       	ldd	r25, Z+3	; 0x03
    3c32:	20 e0       	ldi	r18, 0x00	; 0
    3c34:	3f ef       	ldi	r19, 0xFF	; 255
    3c36:	4f e7       	ldi	r20, 0x7F	; 127
    3c38:	57 e4       	ldi	r21, 0x47	; 71
    3c3a:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    3c3e:	18 16       	cp	r1, r24
    3c40:	0c f0       	brlt	.+2      	; 0x3c44 <Lcd_VidSendCommand+0xbc>
    3c42:	43 c0       	rjmp	.+134    	; 0x3cca <Lcd_VidSendCommand+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c44:	fe 01       	movw	r30, r28
    3c46:	e1 5a       	subi	r30, 0xA1	; 161
    3c48:	ff 4f       	sbci	r31, 0xFF	; 255
    3c4a:	60 81       	ld	r22, Z
    3c4c:	71 81       	ldd	r23, Z+1	; 0x01
    3c4e:	82 81       	ldd	r24, Z+2	; 0x02
    3c50:	93 81       	ldd	r25, Z+3	; 0x03
    3c52:	20 e0       	ldi	r18, 0x00	; 0
    3c54:	30 e0       	ldi	r19, 0x00	; 0
    3c56:	40 e2       	ldi	r20, 0x20	; 32
    3c58:	51 e4       	ldi	r21, 0x41	; 65
    3c5a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3c5e:	dc 01       	movw	r26, r24
    3c60:	cb 01       	movw	r24, r22
    3c62:	8e 01       	movw	r16, r28
    3c64:	07 5a       	subi	r16, 0xA7	; 167
    3c66:	1f 4f       	sbci	r17, 0xFF	; 255
    3c68:	bc 01       	movw	r22, r24
    3c6a:	cd 01       	movw	r24, r26
    3c6c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3c70:	dc 01       	movw	r26, r24
    3c72:	cb 01       	movw	r24, r22
    3c74:	f8 01       	movw	r30, r16
    3c76:	91 83       	std	Z+1, r25	; 0x01
    3c78:	80 83       	st	Z, r24
    3c7a:	1f c0       	rjmp	.+62     	; 0x3cba <Lcd_VidSendCommand+0x132>
    3c7c:	fe 01       	movw	r30, r28
    3c7e:	e9 5a       	subi	r30, 0xA9	; 169
    3c80:	ff 4f       	sbci	r31, 0xFF	; 255
    3c82:	89 e1       	ldi	r24, 0x19	; 25
    3c84:	90 e0       	ldi	r25, 0x00	; 0
    3c86:	91 83       	std	Z+1, r25	; 0x01
    3c88:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3c8a:	fe 01       	movw	r30, r28
    3c8c:	e9 5a       	subi	r30, 0xA9	; 169
    3c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c90:	80 81       	ld	r24, Z
    3c92:	91 81       	ldd	r25, Z+1	; 0x01
    3c94:	01 97       	sbiw	r24, 0x01	; 1
    3c96:	f1 f7       	brne	.-4      	; 0x3c94 <Lcd_VidSendCommand+0x10c>
    3c98:	fe 01       	movw	r30, r28
    3c9a:	e9 5a       	subi	r30, 0xA9	; 169
    3c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c9e:	91 83       	std	Z+1, r25	; 0x01
    3ca0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ca2:	de 01       	movw	r26, r28
    3ca4:	a7 5a       	subi	r26, 0xA7	; 167
    3ca6:	bf 4f       	sbci	r27, 0xFF	; 255
    3ca8:	fe 01       	movw	r30, r28
    3caa:	e7 5a       	subi	r30, 0xA7	; 167
    3cac:	ff 4f       	sbci	r31, 0xFF	; 255
    3cae:	80 81       	ld	r24, Z
    3cb0:	91 81       	ldd	r25, Z+1	; 0x01
    3cb2:	01 97       	sbiw	r24, 0x01	; 1
    3cb4:	11 96       	adiw	r26, 0x01	; 1
    3cb6:	9c 93       	st	X, r25
    3cb8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cba:	fe 01       	movw	r30, r28
    3cbc:	e7 5a       	subi	r30, 0xA7	; 167
    3cbe:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc0:	80 81       	ld	r24, Z
    3cc2:	91 81       	ldd	r25, Z+1	; 0x01
    3cc4:	00 97       	sbiw	r24, 0x00	; 0
    3cc6:	d1 f6       	brne	.-76     	; 0x3c7c <Lcd_VidSendCommand+0xf4>
    3cc8:	27 c0       	rjmp	.+78     	; 0x3d18 <Lcd_VidSendCommand+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cca:	8e 01       	movw	r16, r28
    3ccc:	07 5a       	subi	r16, 0xA7	; 167
    3cce:	1f 4f       	sbci	r17, 0xFF	; 255
    3cd0:	fe 01       	movw	r30, r28
    3cd2:	e5 5a       	subi	r30, 0xA5	; 165
    3cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd6:	60 81       	ld	r22, Z
    3cd8:	71 81       	ldd	r23, Z+1	; 0x01
    3cda:	82 81       	ldd	r24, Z+2	; 0x02
    3cdc:	93 81       	ldd	r25, Z+3	; 0x03
    3cde:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3ce2:	dc 01       	movw	r26, r24
    3ce4:	cb 01       	movw	r24, r22
    3ce6:	f8 01       	movw	r30, r16
    3ce8:	91 83       	std	Z+1, r25	; 0x01
    3cea:	80 83       	st	Z, r24
    3cec:	de 01       	movw	r26, r28
    3cee:	ab 5a       	subi	r26, 0xAB	; 171
    3cf0:	bf 4f       	sbci	r27, 0xFF	; 255
    3cf2:	fe 01       	movw	r30, r28
    3cf4:	e7 5a       	subi	r30, 0xA7	; 167
    3cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf8:	80 81       	ld	r24, Z
    3cfa:	91 81       	ldd	r25, Z+1	; 0x01
    3cfc:	8d 93       	st	X+, r24
    3cfe:	9c 93       	st	X, r25
    3d00:	fe 01       	movw	r30, r28
    3d02:	eb 5a       	subi	r30, 0xAB	; 171
    3d04:	ff 4f       	sbci	r31, 0xFF	; 255
    3d06:	80 81       	ld	r24, Z
    3d08:	91 81       	ldd	r25, Z+1	; 0x01
    3d0a:	01 97       	sbiw	r24, 0x01	; 1
    3d0c:	f1 f7       	brne	.-4      	; 0x3d0a <Lcd_VidSendCommand+0x182>
    3d0e:	fe 01       	movw	r30, r28
    3d10:	eb 5a       	subi	r30, 0xAB	; 171
    3d12:	ff 4f       	sbci	r31, 0xFF	; 255
    3d14:	91 83       	std	Z+1, r25	; 0x01
    3d16:	80 83       	st	Z, r24
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    3d18:	81 e1       	ldi	r24, 0x11	; 17
    3d1a:	61 e0       	ldi	r22, 0x01	; 1
    3d1c:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    3d20:	fe 01       	movw	r30, r28
    3d22:	ef 5a       	subi	r30, 0xAF	; 175
    3d24:	ff 4f       	sbci	r31, 0xFF	; 255
    3d26:	80 e0       	ldi	r24, 0x00	; 0
    3d28:	90 e0       	ldi	r25, 0x00	; 0
    3d2a:	a0 e8       	ldi	r26, 0x80	; 128
    3d2c:	bf e3       	ldi	r27, 0x3F	; 63
    3d2e:	80 83       	st	Z, r24
    3d30:	91 83       	std	Z+1, r25	; 0x01
    3d32:	a2 83       	std	Z+2, r26	; 0x02
    3d34:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d36:	8e 01       	movw	r16, r28
    3d38:	03 5b       	subi	r16, 0xB3	; 179
    3d3a:	1f 4f       	sbci	r17, 0xFF	; 255
    3d3c:	fe 01       	movw	r30, r28
    3d3e:	ef 5a       	subi	r30, 0xAF	; 175
    3d40:	ff 4f       	sbci	r31, 0xFF	; 255
    3d42:	60 81       	ld	r22, Z
    3d44:	71 81       	ldd	r23, Z+1	; 0x01
    3d46:	82 81       	ldd	r24, Z+2	; 0x02
    3d48:	93 81       	ldd	r25, Z+3	; 0x03
    3d4a:	20 e0       	ldi	r18, 0x00	; 0
    3d4c:	30 e0       	ldi	r19, 0x00	; 0
    3d4e:	4a e7       	ldi	r20, 0x7A	; 122
    3d50:	53 e4       	ldi	r21, 0x43	; 67
    3d52:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3d56:	dc 01       	movw	r26, r24
    3d58:	cb 01       	movw	r24, r22
    3d5a:	f8 01       	movw	r30, r16
    3d5c:	80 83       	st	Z, r24
    3d5e:	91 83       	std	Z+1, r25	; 0x01
    3d60:	a2 83       	std	Z+2, r26	; 0x02
    3d62:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d64:	fe 01       	movw	r30, r28
    3d66:	e3 5b       	subi	r30, 0xB3	; 179
    3d68:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6a:	60 81       	ld	r22, Z
    3d6c:	71 81       	ldd	r23, Z+1	; 0x01
    3d6e:	82 81       	ldd	r24, Z+2	; 0x02
    3d70:	93 81       	ldd	r25, Z+3	; 0x03
    3d72:	20 e0       	ldi	r18, 0x00	; 0
    3d74:	30 e0       	ldi	r19, 0x00	; 0
    3d76:	40 e8       	ldi	r20, 0x80	; 128
    3d78:	5f e3       	ldi	r21, 0x3F	; 63
    3d7a:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    3d7e:	88 23       	and	r24, r24
    3d80:	44 f4       	brge	.+16     	; 0x3d92 <Lcd_VidSendCommand+0x20a>
		__ticks = 1;
    3d82:	fe 01       	movw	r30, r28
    3d84:	e5 5b       	subi	r30, 0xB5	; 181
    3d86:	ff 4f       	sbci	r31, 0xFF	; 255
    3d88:	81 e0       	ldi	r24, 0x01	; 1
    3d8a:	90 e0       	ldi	r25, 0x00	; 0
    3d8c:	91 83       	std	Z+1, r25	; 0x01
    3d8e:	80 83       	st	Z, r24
    3d90:	64 c0       	rjmp	.+200    	; 0x3e5a <Lcd_VidSendCommand+0x2d2>
	else if (__tmp > 65535)
    3d92:	fe 01       	movw	r30, r28
    3d94:	e3 5b       	subi	r30, 0xB3	; 179
    3d96:	ff 4f       	sbci	r31, 0xFF	; 255
    3d98:	60 81       	ld	r22, Z
    3d9a:	71 81       	ldd	r23, Z+1	; 0x01
    3d9c:	82 81       	ldd	r24, Z+2	; 0x02
    3d9e:	93 81       	ldd	r25, Z+3	; 0x03
    3da0:	20 e0       	ldi	r18, 0x00	; 0
    3da2:	3f ef       	ldi	r19, 0xFF	; 255
    3da4:	4f e7       	ldi	r20, 0x7F	; 127
    3da6:	57 e4       	ldi	r21, 0x47	; 71
    3da8:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    3dac:	18 16       	cp	r1, r24
    3dae:	0c f0       	brlt	.+2      	; 0x3db2 <Lcd_VidSendCommand+0x22a>
    3db0:	43 c0       	rjmp	.+134    	; 0x3e38 <Lcd_VidSendCommand+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3db2:	fe 01       	movw	r30, r28
    3db4:	ef 5a       	subi	r30, 0xAF	; 175
    3db6:	ff 4f       	sbci	r31, 0xFF	; 255
    3db8:	60 81       	ld	r22, Z
    3dba:	71 81       	ldd	r23, Z+1	; 0x01
    3dbc:	82 81       	ldd	r24, Z+2	; 0x02
    3dbe:	93 81       	ldd	r25, Z+3	; 0x03
    3dc0:	20 e0       	ldi	r18, 0x00	; 0
    3dc2:	30 e0       	ldi	r19, 0x00	; 0
    3dc4:	40 e2       	ldi	r20, 0x20	; 32
    3dc6:	51 e4       	ldi	r21, 0x41	; 65
    3dc8:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3dcc:	dc 01       	movw	r26, r24
    3dce:	cb 01       	movw	r24, r22
    3dd0:	8e 01       	movw	r16, r28
    3dd2:	05 5b       	subi	r16, 0xB5	; 181
    3dd4:	1f 4f       	sbci	r17, 0xFF	; 255
    3dd6:	bc 01       	movw	r22, r24
    3dd8:	cd 01       	movw	r24, r26
    3dda:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3dde:	dc 01       	movw	r26, r24
    3de0:	cb 01       	movw	r24, r22
    3de2:	f8 01       	movw	r30, r16
    3de4:	91 83       	std	Z+1, r25	; 0x01
    3de6:	80 83       	st	Z, r24
    3de8:	1f c0       	rjmp	.+62     	; 0x3e28 <Lcd_VidSendCommand+0x2a0>
    3dea:	fe 01       	movw	r30, r28
    3dec:	e7 5b       	subi	r30, 0xB7	; 183
    3dee:	ff 4f       	sbci	r31, 0xFF	; 255
    3df0:	89 e1       	ldi	r24, 0x19	; 25
    3df2:	90 e0       	ldi	r25, 0x00	; 0
    3df4:	91 83       	std	Z+1, r25	; 0x01
    3df6:	80 83       	st	Z, r24
    3df8:	fe 01       	movw	r30, r28
    3dfa:	e7 5b       	subi	r30, 0xB7	; 183
    3dfc:	ff 4f       	sbci	r31, 0xFF	; 255
    3dfe:	80 81       	ld	r24, Z
    3e00:	91 81       	ldd	r25, Z+1	; 0x01
    3e02:	01 97       	sbiw	r24, 0x01	; 1
    3e04:	f1 f7       	brne	.-4      	; 0x3e02 <Lcd_VidSendCommand+0x27a>
    3e06:	fe 01       	movw	r30, r28
    3e08:	e7 5b       	subi	r30, 0xB7	; 183
    3e0a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e0c:	91 83       	std	Z+1, r25	; 0x01
    3e0e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e10:	de 01       	movw	r26, r28
    3e12:	a5 5b       	subi	r26, 0xB5	; 181
    3e14:	bf 4f       	sbci	r27, 0xFF	; 255
    3e16:	fe 01       	movw	r30, r28
    3e18:	e5 5b       	subi	r30, 0xB5	; 181
    3e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e1c:	80 81       	ld	r24, Z
    3e1e:	91 81       	ldd	r25, Z+1	; 0x01
    3e20:	01 97       	sbiw	r24, 0x01	; 1
    3e22:	11 96       	adiw	r26, 0x01	; 1
    3e24:	9c 93       	st	X, r25
    3e26:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e28:	fe 01       	movw	r30, r28
    3e2a:	e5 5b       	subi	r30, 0xB5	; 181
    3e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e2e:	80 81       	ld	r24, Z
    3e30:	91 81       	ldd	r25, Z+1	; 0x01
    3e32:	00 97       	sbiw	r24, 0x00	; 0
    3e34:	d1 f6       	brne	.-76     	; 0x3dea <Lcd_VidSendCommand+0x262>
    3e36:	27 c0       	rjmp	.+78     	; 0x3e86 <Lcd_VidSendCommand+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e38:	8e 01       	movw	r16, r28
    3e3a:	05 5b       	subi	r16, 0xB5	; 181
    3e3c:	1f 4f       	sbci	r17, 0xFF	; 255
    3e3e:	fe 01       	movw	r30, r28
    3e40:	e3 5b       	subi	r30, 0xB3	; 179
    3e42:	ff 4f       	sbci	r31, 0xFF	; 255
    3e44:	60 81       	ld	r22, Z
    3e46:	71 81       	ldd	r23, Z+1	; 0x01
    3e48:	82 81       	ldd	r24, Z+2	; 0x02
    3e4a:	93 81       	ldd	r25, Z+3	; 0x03
    3e4c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3e50:	dc 01       	movw	r26, r24
    3e52:	cb 01       	movw	r24, r22
    3e54:	f8 01       	movw	r30, r16
    3e56:	91 83       	std	Z+1, r25	; 0x01
    3e58:	80 83       	st	Z, r24
    3e5a:	de 01       	movw	r26, r28
    3e5c:	a9 5b       	subi	r26, 0xB9	; 185
    3e5e:	bf 4f       	sbci	r27, 0xFF	; 255
    3e60:	fe 01       	movw	r30, r28
    3e62:	e5 5b       	subi	r30, 0xB5	; 181
    3e64:	ff 4f       	sbci	r31, 0xFF	; 255
    3e66:	80 81       	ld	r24, Z
    3e68:	91 81       	ldd	r25, Z+1	; 0x01
    3e6a:	8d 93       	st	X+, r24
    3e6c:	9c 93       	st	X, r25
    3e6e:	fe 01       	movw	r30, r28
    3e70:	e9 5b       	subi	r30, 0xB9	; 185
    3e72:	ff 4f       	sbci	r31, 0xFF	; 255
    3e74:	80 81       	ld	r24, Z
    3e76:	91 81       	ldd	r25, Z+1	; 0x01
    3e78:	01 97       	sbiw	r24, 0x01	; 1
    3e7a:	f1 f7       	brne	.-4      	; 0x3e78 <Lcd_VidSendCommand+0x2f0>
    3e7c:	fe 01       	movw	r30, r28
    3e7e:	e9 5b       	subi	r30, 0xB9	; 185
    3e80:	ff 4f       	sbci	r31, 0xFF	; 255
    3e82:	91 83       	std	Z+1, r25	; 0x01
    3e84:	80 83       	st	Z, r24
	_delay_ms(1);
#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,4));
    3e86:	fe 01       	movw	r30, r28
    3e88:	ed 59       	subi	r30, 0x9D	; 157
    3e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e8c:	80 81       	ld	r24, Z
    3e8e:	88 2f       	mov	r24, r24
    3e90:	90 e0       	ldi	r25, 0x00	; 0
    3e92:	80 71       	andi	r24, 0x10	; 16
    3e94:	90 70       	andi	r25, 0x00	; 0
    3e96:	95 95       	asr	r25
    3e98:	87 95       	ror	r24
    3e9a:	95 95       	asr	r25
    3e9c:	87 95       	ror	r24
    3e9e:	95 95       	asr	r25
    3ea0:	87 95       	ror	r24
    3ea2:	95 95       	asr	r25
    3ea4:	87 95       	ror	r24
    3ea6:	98 2f       	mov	r25, r24
    3ea8:	82 e1       	ldi	r24, 0x12	; 18
    3eaa:	69 2f       	mov	r22, r25
    3eac:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,5));
    3eb0:	fe 01       	movw	r30, r28
    3eb2:	ed 59       	subi	r30, 0x9D	; 157
    3eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb6:	80 81       	ld	r24, Z
    3eb8:	88 2f       	mov	r24, r24
    3eba:	90 e0       	ldi	r25, 0x00	; 0
    3ebc:	80 72       	andi	r24, 0x20	; 32
    3ebe:	90 70       	andi	r25, 0x00	; 0
    3ec0:	95 95       	asr	r25
    3ec2:	87 95       	ror	r24
    3ec4:	95 95       	asr	r25
    3ec6:	87 95       	ror	r24
    3ec8:	95 95       	asr	r25
    3eca:	87 95       	ror	r24
    3ecc:	95 95       	asr	r25
    3ece:	87 95       	ror	r24
    3ed0:	95 95       	asr	r25
    3ed2:	87 95       	ror	r24
    3ed4:	98 2f       	mov	r25, r24
    3ed6:	83 e1       	ldi	r24, 0x13	; 19
    3ed8:	69 2f       	mov	r22, r25
    3eda:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,6));
    3ede:	fe 01       	movw	r30, r28
    3ee0:	ed 59       	subi	r30, 0x9D	; 157
    3ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee4:	80 81       	ld	r24, Z
    3ee6:	88 2f       	mov	r24, r24
    3ee8:	90 e0       	ldi	r25, 0x00	; 0
    3eea:	80 74       	andi	r24, 0x40	; 64
    3eec:	90 70       	andi	r25, 0x00	; 0
    3eee:	08 2e       	mov	r0, r24
    3ef0:	89 2f       	mov	r24, r25
    3ef2:	00 0c       	add	r0, r0
    3ef4:	88 1f       	adc	r24, r24
    3ef6:	99 0b       	sbc	r25, r25
    3ef8:	00 0c       	add	r0, r0
    3efa:	88 1f       	adc	r24, r24
    3efc:	99 1f       	adc	r25, r25
    3efe:	98 2f       	mov	r25, r24
    3f00:	84 e1       	ldi	r24, 0x14	; 20
    3f02:	69 2f       	mov	r22, r25
    3f04:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,7));
    3f08:	fe 01       	movw	r30, r28
    3f0a:	ed 59       	subi	r30, 0x9D	; 157
    3f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f0e:	80 81       	ld	r24, Z
    3f10:	98 2f       	mov	r25, r24
    3f12:	99 1f       	adc	r25, r25
    3f14:	99 27       	eor	r25, r25
    3f16:	99 1f       	adc	r25, r25
    3f18:	85 e1       	ldi	r24, 0x15	; 21
    3f1a:	69 2f       	mov	r22, r25
    3f1c:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    3f20:	fe 01       	movw	r30, r28
    3f22:	ed 5b       	subi	r30, 0xBD	; 189
    3f24:	ff 4f       	sbci	r31, 0xFF	; 255
    3f26:	80 e0       	ldi	r24, 0x00	; 0
    3f28:	90 e0       	ldi	r25, 0x00	; 0
    3f2a:	a0 e8       	ldi	r26, 0x80	; 128
    3f2c:	bf e3       	ldi	r27, 0x3F	; 63
    3f2e:	80 83       	st	Z, r24
    3f30:	91 83       	std	Z+1, r25	; 0x01
    3f32:	a2 83       	std	Z+2, r26	; 0x02
    3f34:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f36:	8e 01       	movw	r16, r28
    3f38:	01 5c       	subi	r16, 0xC1	; 193
    3f3a:	1f 4f       	sbci	r17, 0xFF	; 255
    3f3c:	fe 01       	movw	r30, r28
    3f3e:	ed 5b       	subi	r30, 0xBD	; 189
    3f40:	ff 4f       	sbci	r31, 0xFF	; 255
    3f42:	60 81       	ld	r22, Z
    3f44:	71 81       	ldd	r23, Z+1	; 0x01
    3f46:	82 81       	ldd	r24, Z+2	; 0x02
    3f48:	93 81       	ldd	r25, Z+3	; 0x03
    3f4a:	20 e0       	ldi	r18, 0x00	; 0
    3f4c:	30 e0       	ldi	r19, 0x00	; 0
    3f4e:	4a e7       	ldi	r20, 0x7A	; 122
    3f50:	53 e4       	ldi	r21, 0x43	; 67
    3f52:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3f56:	dc 01       	movw	r26, r24
    3f58:	cb 01       	movw	r24, r22
    3f5a:	f8 01       	movw	r30, r16
    3f5c:	80 83       	st	Z, r24
    3f5e:	91 83       	std	Z+1, r25	; 0x01
    3f60:	a2 83       	std	Z+2, r26	; 0x02
    3f62:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f64:	fe 01       	movw	r30, r28
    3f66:	ff 96       	adiw	r30, 0x3f	; 63
    3f68:	60 81       	ld	r22, Z
    3f6a:	71 81       	ldd	r23, Z+1	; 0x01
    3f6c:	82 81       	ldd	r24, Z+2	; 0x02
    3f6e:	93 81       	ldd	r25, Z+3	; 0x03
    3f70:	20 e0       	ldi	r18, 0x00	; 0
    3f72:	30 e0       	ldi	r19, 0x00	; 0
    3f74:	40 e8       	ldi	r20, 0x80	; 128
    3f76:	5f e3       	ldi	r21, 0x3F	; 63
    3f78:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    3f7c:	88 23       	and	r24, r24
    3f7e:	2c f4       	brge	.+10     	; 0x3f8a <Lcd_VidSendCommand+0x402>
		__ticks = 1;
    3f80:	81 e0       	ldi	r24, 0x01	; 1
    3f82:	90 e0       	ldi	r25, 0x00	; 0
    3f84:	9e af       	std	Y+62, r25	; 0x3e
    3f86:	8d af       	std	Y+61, r24	; 0x3d
    3f88:	46 c0       	rjmp	.+140    	; 0x4016 <Lcd_VidSendCommand+0x48e>
	else if (__tmp > 65535)
    3f8a:	fe 01       	movw	r30, r28
    3f8c:	ff 96       	adiw	r30, 0x3f	; 63
    3f8e:	60 81       	ld	r22, Z
    3f90:	71 81       	ldd	r23, Z+1	; 0x01
    3f92:	82 81       	ldd	r24, Z+2	; 0x02
    3f94:	93 81       	ldd	r25, Z+3	; 0x03
    3f96:	20 e0       	ldi	r18, 0x00	; 0
    3f98:	3f ef       	ldi	r19, 0xFF	; 255
    3f9a:	4f e7       	ldi	r20, 0x7F	; 127
    3f9c:	57 e4       	ldi	r21, 0x47	; 71
    3f9e:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    3fa2:	18 16       	cp	r1, r24
    3fa4:	64 f5       	brge	.+88     	; 0x3ffe <Lcd_VidSendCommand+0x476>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fa6:	fe 01       	movw	r30, r28
    3fa8:	ed 5b       	subi	r30, 0xBD	; 189
    3faa:	ff 4f       	sbci	r31, 0xFF	; 255
    3fac:	60 81       	ld	r22, Z
    3fae:	71 81       	ldd	r23, Z+1	; 0x01
    3fb0:	82 81       	ldd	r24, Z+2	; 0x02
    3fb2:	93 81       	ldd	r25, Z+3	; 0x03
    3fb4:	20 e0       	ldi	r18, 0x00	; 0
    3fb6:	30 e0       	ldi	r19, 0x00	; 0
    3fb8:	40 e2       	ldi	r20, 0x20	; 32
    3fba:	51 e4       	ldi	r21, 0x41	; 65
    3fbc:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3fc0:	dc 01       	movw	r26, r24
    3fc2:	cb 01       	movw	r24, r22
    3fc4:	bc 01       	movw	r22, r24
    3fc6:	cd 01       	movw	r24, r26
    3fc8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3fcc:	dc 01       	movw	r26, r24
    3fce:	cb 01       	movw	r24, r22
    3fd0:	9e af       	std	Y+62, r25	; 0x3e
    3fd2:	8d af       	std	Y+61, r24	; 0x3d
    3fd4:	0f c0       	rjmp	.+30     	; 0x3ff4 <Lcd_VidSendCommand+0x46c>
    3fd6:	89 e1       	ldi	r24, 0x19	; 25
    3fd8:	90 e0       	ldi	r25, 0x00	; 0
    3fda:	9c af       	std	Y+60, r25	; 0x3c
    3fdc:	8b af       	std	Y+59, r24	; 0x3b
    3fde:	8b ad       	ldd	r24, Y+59	; 0x3b
    3fe0:	9c ad       	ldd	r25, Y+60	; 0x3c
    3fe2:	01 97       	sbiw	r24, 0x01	; 1
    3fe4:	f1 f7       	brne	.-4      	; 0x3fe2 <Lcd_VidSendCommand+0x45a>
    3fe6:	9c af       	std	Y+60, r25	; 0x3c
    3fe8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fea:	8d ad       	ldd	r24, Y+61	; 0x3d
    3fec:	9e ad       	ldd	r25, Y+62	; 0x3e
    3fee:	01 97       	sbiw	r24, 0x01	; 1
    3ff0:	9e af       	std	Y+62, r25	; 0x3e
    3ff2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ff4:	8d ad       	ldd	r24, Y+61	; 0x3d
    3ff6:	9e ad       	ldd	r25, Y+62	; 0x3e
    3ff8:	00 97       	sbiw	r24, 0x00	; 0
    3ffa:	69 f7       	brne	.-38     	; 0x3fd6 <Lcd_VidSendCommand+0x44e>
    3ffc:	16 c0       	rjmp	.+44     	; 0x402a <Lcd_VidSendCommand+0x4a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ffe:	fe 01       	movw	r30, r28
    4000:	ff 96       	adiw	r30, 0x3f	; 63
    4002:	60 81       	ld	r22, Z
    4004:	71 81       	ldd	r23, Z+1	; 0x01
    4006:	82 81       	ldd	r24, Z+2	; 0x02
    4008:	93 81       	ldd	r25, Z+3	; 0x03
    400a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    400e:	dc 01       	movw	r26, r24
    4010:	cb 01       	movw	r24, r22
    4012:	9e af       	std	Y+62, r25	; 0x3e
    4014:	8d af       	std	Y+61, r24	; 0x3d
    4016:	8d ad       	ldd	r24, Y+61	; 0x3d
    4018:	9e ad       	ldd	r25, Y+62	; 0x3e
    401a:	9a af       	std	Y+58, r25	; 0x3a
    401c:	89 af       	std	Y+57, r24	; 0x39
    401e:	89 ad       	ldd	r24, Y+57	; 0x39
    4020:	9a ad       	ldd	r25, Y+58	; 0x3a
    4022:	01 97       	sbiw	r24, 0x01	; 1
    4024:	f1 f7       	brne	.-4      	; 0x4022 <Lcd_VidSendCommand+0x49a>
    4026:	9a af       	std	Y+58, r25	; 0x3a
    4028:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    402a:	81 e1       	ldi	r24, 0x11	; 17
    402c:	60 e0       	ldi	r22, 0x00	; 0
    402e:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    4032:	80 e0       	ldi	r24, 0x00	; 0
    4034:	90 e0       	ldi	r25, 0x00	; 0
    4036:	a0 e8       	ldi	r26, 0x80	; 128
    4038:	bf e3       	ldi	r27, 0x3F	; 63
    403a:	8d ab       	std	Y+53, r24	; 0x35
    403c:	9e ab       	std	Y+54, r25	; 0x36
    403e:	af ab       	std	Y+55, r26	; 0x37
    4040:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4042:	6d a9       	ldd	r22, Y+53	; 0x35
    4044:	7e a9       	ldd	r23, Y+54	; 0x36
    4046:	8f a9       	ldd	r24, Y+55	; 0x37
    4048:	98 ad       	ldd	r25, Y+56	; 0x38
    404a:	20 e0       	ldi	r18, 0x00	; 0
    404c:	30 e0       	ldi	r19, 0x00	; 0
    404e:	4a e7       	ldi	r20, 0x7A	; 122
    4050:	53 e4       	ldi	r21, 0x43	; 67
    4052:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4056:	dc 01       	movw	r26, r24
    4058:	cb 01       	movw	r24, r22
    405a:	89 ab       	std	Y+49, r24	; 0x31
    405c:	9a ab       	std	Y+50, r25	; 0x32
    405e:	ab ab       	std	Y+51, r26	; 0x33
    4060:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4062:	69 a9       	ldd	r22, Y+49	; 0x31
    4064:	7a a9       	ldd	r23, Y+50	; 0x32
    4066:	8b a9       	ldd	r24, Y+51	; 0x33
    4068:	9c a9       	ldd	r25, Y+52	; 0x34
    406a:	20 e0       	ldi	r18, 0x00	; 0
    406c:	30 e0       	ldi	r19, 0x00	; 0
    406e:	40 e8       	ldi	r20, 0x80	; 128
    4070:	5f e3       	ldi	r21, 0x3F	; 63
    4072:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4076:	88 23       	and	r24, r24
    4078:	2c f4       	brge	.+10     	; 0x4084 <Lcd_VidSendCommand+0x4fc>
		__ticks = 1;
    407a:	81 e0       	ldi	r24, 0x01	; 1
    407c:	90 e0       	ldi	r25, 0x00	; 0
    407e:	98 ab       	std	Y+48, r25	; 0x30
    4080:	8f a7       	std	Y+47, r24	; 0x2f
    4082:	3f c0       	rjmp	.+126    	; 0x4102 <Lcd_VidSendCommand+0x57a>
	else if (__tmp > 65535)
    4084:	69 a9       	ldd	r22, Y+49	; 0x31
    4086:	7a a9       	ldd	r23, Y+50	; 0x32
    4088:	8b a9       	ldd	r24, Y+51	; 0x33
    408a:	9c a9       	ldd	r25, Y+52	; 0x34
    408c:	20 e0       	ldi	r18, 0x00	; 0
    408e:	3f ef       	ldi	r19, 0xFF	; 255
    4090:	4f e7       	ldi	r20, 0x7F	; 127
    4092:	57 e4       	ldi	r21, 0x47	; 71
    4094:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4098:	18 16       	cp	r1, r24
    409a:	4c f5       	brge	.+82     	; 0x40ee <Lcd_VidSendCommand+0x566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    409c:	6d a9       	ldd	r22, Y+53	; 0x35
    409e:	7e a9       	ldd	r23, Y+54	; 0x36
    40a0:	8f a9       	ldd	r24, Y+55	; 0x37
    40a2:	98 ad       	ldd	r25, Y+56	; 0x38
    40a4:	20 e0       	ldi	r18, 0x00	; 0
    40a6:	30 e0       	ldi	r19, 0x00	; 0
    40a8:	40 e2       	ldi	r20, 0x20	; 32
    40aa:	51 e4       	ldi	r21, 0x41	; 65
    40ac:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    40b0:	dc 01       	movw	r26, r24
    40b2:	cb 01       	movw	r24, r22
    40b4:	bc 01       	movw	r22, r24
    40b6:	cd 01       	movw	r24, r26
    40b8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    40bc:	dc 01       	movw	r26, r24
    40be:	cb 01       	movw	r24, r22
    40c0:	98 ab       	std	Y+48, r25	; 0x30
    40c2:	8f a7       	std	Y+47, r24	; 0x2f
    40c4:	0f c0       	rjmp	.+30     	; 0x40e4 <Lcd_VidSendCommand+0x55c>
    40c6:	89 e1       	ldi	r24, 0x19	; 25
    40c8:	90 e0       	ldi	r25, 0x00	; 0
    40ca:	9e a7       	std	Y+46, r25	; 0x2e
    40cc:	8d a7       	std	Y+45, r24	; 0x2d
    40ce:	8d a5       	ldd	r24, Y+45	; 0x2d
    40d0:	9e a5       	ldd	r25, Y+46	; 0x2e
    40d2:	01 97       	sbiw	r24, 0x01	; 1
    40d4:	f1 f7       	brne	.-4      	; 0x40d2 <Lcd_VidSendCommand+0x54a>
    40d6:	9e a7       	std	Y+46, r25	; 0x2e
    40d8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40da:	8f a5       	ldd	r24, Y+47	; 0x2f
    40dc:	98 a9       	ldd	r25, Y+48	; 0x30
    40de:	01 97       	sbiw	r24, 0x01	; 1
    40e0:	98 ab       	std	Y+48, r25	; 0x30
    40e2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    40e6:	98 a9       	ldd	r25, Y+48	; 0x30
    40e8:	00 97       	sbiw	r24, 0x00	; 0
    40ea:	69 f7       	brne	.-38     	; 0x40c6 <Lcd_VidSendCommand+0x53e>
    40ec:	14 c0       	rjmp	.+40     	; 0x4116 <Lcd_VidSendCommand+0x58e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40ee:	69 a9       	ldd	r22, Y+49	; 0x31
    40f0:	7a a9       	ldd	r23, Y+50	; 0x32
    40f2:	8b a9       	ldd	r24, Y+51	; 0x33
    40f4:	9c a9       	ldd	r25, Y+52	; 0x34
    40f6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    40fa:	dc 01       	movw	r26, r24
    40fc:	cb 01       	movw	r24, r22
    40fe:	98 ab       	std	Y+48, r25	; 0x30
    4100:	8f a7       	std	Y+47, r24	; 0x2f
    4102:	8f a5       	ldd	r24, Y+47	; 0x2f
    4104:	98 a9       	ldd	r25, Y+48	; 0x30
    4106:	9c a7       	std	Y+44, r25	; 0x2c
    4108:	8b a7       	std	Y+43, r24	; 0x2b
    410a:	8b a5       	ldd	r24, Y+43	; 0x2b
    410c:	9c a5       	ldd	r25, Y+44	; 0x2c
    410e:	01 97       	sbiw	r24, 0x01	; 1
    4110:	f1 f7       	brne	.-4      	; 0x410e <Lcd_VidSendCommand+0x586>
    4112:	9c a7       	std	Y+44, r25	; 0x2c
    4114:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    4116:	81 e1       	ldi	r24, 0x11	; 17
    4118:	61 e0       	ldi	r22, 0x01	; 1
    411a:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    411e:	80 e0       	ldi	r24, 0x00	; 0
    4120:	90 e0       	ldi	r25, 0x00	; 0
    4122:	a0 e8       	ldi	r26, 0x80	; 128
    4124:	bf e3       	ldi	r27, 0x3F	; 63
    4126:	8f a3       	std	Y+39, r24	; 0x27
    4128:	98 a7       	std	Y+40, r25	; 0x28
    412a:	a9 a7       	std	Y+41, r26	; 0x29
    412c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    412e:	6f a1       	ldd	r22, Y+39	; 0x27
    4130:	78 a5       	ldd	r23, Y+40	; 0x28
    4132:	89 a5       	ldd	r24, Y+41	; 0x29
    4134:	9a a5       	ldd	r25, Y+42	; 0x2a
    4136:	20 e0       	ldi	r18, 0x00	; 0
    4138:	30 e0       	ldi	r19, 0x00	; 0
    413a:	4a e7       	ldi	r20, 0x7A	; 122
    413c:	53 e4       	ldi	r21, 0x43	; 67
    413e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4142:	dc 01       	movw	r26, r24
    4144:	cb 01       	movw	r24, r22
    4146:	8b a3       	std	Y+35, r24	; 0x23
    4148:	9c a3       	std	Y+36, r25	; 0x24
    414a:	ad a3       	std	Y+37, r26	; 0x25
    414c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    414e:	6b a1       	ldd	r22, Y+35	; 0x23
    4150:	7c a1       	ldd	r23, Y+36	; 0x24
    4152:	8d a1       	ldd	r24, Y+37	; 0x25
    4154:	9e a1       	ldd	r25, Y+38	; 0x26
    4156:	20 e0       	ldi	r18, 0x00	; 0
    4158:	30 e0       	ldi	r19, 0x00	; 0
    415a:	40 e8       	ldi	r20, 0x80	; 128
    415c:	5f e3       	ldi	r21, 0x3F	; 63
    415e:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4162:	88 23       	and	r24, r24
    4164:	2c f4       	brge	.+10     	; 0x4170 <Lcd_VidSendCommand+0x5e8>
		__ticks = 1;
    4166:	81 e0       	ldi	r24, 0x01	; 1
    4168:	90 e0       	ldi	r25, 0x00	; 0
    416a:	9a a3       	std	Y+34, r25	; 0x22
    416c:	89 a3       	std	Y+33, r24	; 0x21
    416e:	3f c0       	rjmp	.+126    	; 0x41ee <Lcd_VidSendCommand+0x666>
	else if (__tmp > 65535)
    4170:	6b a1       	ldd	r22, Y+35	; 0x23
    4172:	7c a1       	ldd	r23, Y+36	; 0x24
    4174:	8d a1       	ldd	r24, Y+37	; 0x25
    4176:	9e a1       	ldd	r25, Y+38	; 0x26
    4178:	20 e0       	ldi	r18, 0x00	; 0
    417a:	3f ef       	ldi	r19, 0xFF	; 255
    417c:	4f e7       	ldi	r20, 0x7F	; 127
    417e:	57 e4       	ldi	r21, 0x47	; 71
    4180:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4184:	18 16       	cp	r1, r24
    4186:	4c f5       	brge	.+82     	; 0x41da <Lcd_VidSendCommand+0x652>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4188:	6f a1       	ldd	r22, Y+39	; 0x27
    418a:	78 a5       	ldd	r23, Y+40	; 0x28
    418c:	89 a5       	ldd	r24, Y+41	; 0x29
    418e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4190:	20 e0       	ldi	r18, 0x00	; 0
    4192:	30 e0       	ldi	r19, 0x00	; 0
    4194:	40 e2       	ldi	r20, 0x20	; 32
    4196:	51 e4       	ldi	r21, 0x41	; 65
    4198:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    419c:	dc 01       	movw	r26, r24
    419e:	cb 01       	movw	r24, r22
    41a0:	bc 01       	movw	r22, r24
    41a2:	cd 01       	movw	r24, r26
    41a4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    41a8:	dc 01       	movw	r26, r24
    41aa:	cb 01       	movw	r24, r22
    41ac:	9a a3       	std	Y+34, r25	; 0x22
    41ae:	89 a3       	std	Y+33, r24	; 0x21
    41b0:	0f c0       	rjmp	.+30     	; 0x41d0 <Lcd_VidSendCommand+0x648>
    41b2:	89 e1       	ldi	r24, 0x19	; 25
    41b4:	90 e0       	ldi	r25, 0x00	; 0
    41b6:	98 a3       	std	Y+32, r25	; 0x20
    41b8:	8f 8f       	std	Y+31, r24	; 0x1f
    41ba:	8f 8d       	ldd	r24, Y+31	; 0x1f
    41bc:	98 a1       	ldd	r25, Y+32	; 0x20
    41be:	01 97       	sbiw	r24, 0x01	; 1
    41c0:	f1 f7       	brne	.-4      	; 0x41be <Lcd_VidSendCommand+0x636>
    41c2:	98 a3       	std	Y+32, r25	; 0x20
    41c4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41c6:	89 a1       	ldd	r24, Y+33	; 0x21
    41c8:	9a a1       	ldd	r25, Y+34	; 0x22
    41ca:	01 97       	sbiw	r24, 0x01	; 1
    41cc:	9a a3       	std	Y+34, r25	; 0x22
    41ce:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41d0:	89 a1       	ldd	r24, Y+33	; 0x21
    41d2:	9a a1       	ldd	r25, Y+34	; 0x22
    41d4:	00 97       	sbiw	r24, 0x00	; 0
    41d6:	69 f7       	brne	.-38     	; 0x41b2 <Lcd_VidSendCommand+0x62a>
    41d8:	14 c0       	rjmp	.+40     	; 0x4202 <Lcd_VidSendCommand+0x67a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41da:	6b a1       	ldd	r22, Y+35	; 0x23
    41dc:	7c a1       	ldd	r23, Y+36	; 0x24
    41de:	8d a1       	ldd	r24, Y+37	; 0x25
    41e0:	9e a1       	ldd	r25, Y+38	; 0x26
    41e2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    41e6:	dc 01       	movw	r26, r24
    41e8:	cb 01       	movw	r24, r22
    41ea:	9a a3       	std	Y+34, r25	; 0x22
    41ec:	89 a3       	std	Y+33, r24	; 0x21
    41ee:	89 a1       	ldd	r24, Y+33	; 0x21
    41f0:	9a a1       	ldd	r25, Y+34	; 0x22
    41f2:	9e 8f       	std	Y+30, r25	; 0x1e
    41f4:	8d 8f       	std	Y+29, r24	; 0x1d
    41f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    41f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    41fa:	01 97       	sbiw	r24, 0x01	; 1
    41fc:	f1 f7       	brne	.-4      	; 0x41fa <Lcd_VidSendCommand+0x672>
    41fe:	9e 8f       	std	Y+30, r25	; 0x1e
    4200:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,0));
    4202:	fe 01       	movw	r30, r28
    4204:	ed 59       	subi	r30, 0x9D	; 157
    4206:	ff 4f       	sbci	r31, 0xFF	; 255
    4208:	80 81       	ld	r24, Z
    420a:	98 2f       	mov	r25, r24
    420c:	91 70       	andi	r25, 0x01	; 1
    420e:	82 e1       	ldi	r24, 0x12	; 18
    4210:	69 2f       	mov	r22, r25
    4212:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,1));
    4216:	fe 01       	movw	r30, r28
    4218:	ed 59       	subi	r30, 0x9D	; 157
    421a:	ff 4f       	sbci	r31, 0xFF	; 255
    421c:	80 81       	ld	r24, Z
    421e:	88 2f       	mov	r24, r24
    4220:	90 e0       	ldi	r25, 0x00	; 0
    4222:	82 70       	andi	r24, 0x02	; 2
    4224:	90 70       	andi	r25, 0x00	; 0
    4226:	95 95       	asr	r25
    4228:	87 95       	ror	r24
    422a:	98 2f       	mov	r25, r24
    422c:	83 e1       	ldi	r24, 0x13	; 19
    422e:	69 2f       	mov	r22, r25
    4230:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,2));
    4234:	fe 01       	movw	r30, r28
    4236:	ed 59       	subi	r30, 0x9D	; 157
    4238:	ff 4f       	sbci	r31, 0xFF	; 255
    423a:	80 81       	ld	r24, Z
    423c:	88 2f       	mov	r24, r24
    423e:	90 e0       	ldi	r25, 0x00	; 0
    4240:	84 70       	andi	r24, 0x04	; 4
    4242:	90 70       	andi	r25, 0x00	; 0
    4244:	95 95       	asr	r25
    4246:	87 95       	ror	r24
    4248:	95 95       	asr	r25
    424a:	87 95       	ror	r24
    424c:	98 2f       	mov	r25, r24
    424e:	84 e1       	ldi	r24, 0x14	; 20
    4250:	69 2f       	mov	r22, r25
    4252:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,3));
    4256:	fe 01       	movw	r30, r28
    4258:	ed 59       	subi	r30, 0x9D	; 157
    425a:	ff 4f       	sbci	r31, 0xFF	; 255
    425c:	80 81       	ld	r24, Z
    425e:	88 2f       	mov	r24, r24
    4260:	90 e0       	ldi	r25, 0x00	; 0
    4262:	88 70       	andi	r24, 0x08	; 8
    4264:	90 70       	andi	r25, 0x00	; 0
    4266:	95 95       	asr	r25
    4268:	87 95       	ror	r24
    426a:	95 95       	asr	r25
    426c:	87 95       	ror	r24
    426e:	95 95       	asr	r25
    4270:	87 95       	ror	r24
    4272:	98 2f       	mov	r25, r24
    4274:	85 e1       	ldi	r24, 0x15	; 21
    4276:	69 2f       	mov	r22, r25
    4278:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    427c:	80 e0       	ldi	r24, 0x00	; 0
    427e:	90 e0       	ldi	r25, 0x00	; 0
    4280:	a0 e8       	ldi	r26, 0x80	; 128
    4282:	bf e3       	ldi	r27, 0x3F	; 63
    4284:	89 8f       	std	Y+25, r24	; 0x19
    4286:	9a 8f       	std	Y+26, r25	; 0x1a
    4288:	ab 8f       	std	Y+27, r26	; 0x1b
    428a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    428c:	69 8d       	ldd	r22, Y+25	; 0x19
    428e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4290:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4292:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4294:	20 e0       	ldi	r18, 0x00	; 0
    4296:	30 e0       	ldi	r19, 0x00	; 0
    4298:	4a e7       	ldi	r20, 0x7A	; 122
    429a:	53 e4       	ldi	r21, 0x43	; 67
    429c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    42a0:	dc 01       	movw	r26, r24
    42a2:	cb 01       	movw	r24, r22
    42a4:	8d 8b       	std	Y+21, r24	; 0x15
    42a6:	9e 8b       	std	Y+22, r25	; 0x16
    42a8:	af 8b       	std	Y+23, r26	; 0x17
    42aa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    42ac:	6d 89       	ldd	r22, Y+21	; 0x15
    42ae:	7e 89       	ldd	r23, Y+22	; 0x16
    42b0:	8f 89       	ldd	r24, Y+23	; 0x17
    42b2:	98 8d       	ldd	r25, Y+24	; 0x18
    42b4:	20 e0       	ldi	r18, 0x00	; 0
    42b6:	30 e0       	ldi	r19, 0x00	; 0
    42b8:	40 e8       	ldi	r20, 0x80	; 128
    42ba:	5f e3       	ldi	r21, 0x3F	; 63
    42bc:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    42c0:	88 23       	and	r24, r24
    42c2:	2c f4       	brge	.+10     	; 0x42ce <Lcd_VidSendCommand+0x746>
		__ticks = 1;
    42c4:	81 e0       	ldi	r24, 0x01	; 1
    42c6:	90 e0       	ldi	r25, 0x00	; 0
    42c8:	9c 8b       	std	Y+20, r25	; 0x14
    42ca:	8b 8b       	std	Y+19, r24	; 0x13
    42cc:	3f c0       	rjmp	.+126    	; 0x434c <Lcd_VidSendCommand+0x7c4>
	else if (__tmp > 65535)
    42ce:	6d 89       	ldd	r22, Y+21	; 0x15
    42d0:	7e 89       	ldd	r23, Y+22	; 0x16
    42d2:	8f 89       	ldd	r24, Y+23	; 0x17
    42d4:	98 8d       	ldd	r25, Y+24	; 0x18
    42d6:	20 e0       	ldi	r18, 0x00	; 0
    42d8:	3f ef       	ldi	r19, 0xFF	; 255
    42da:	4f e7       	ldi	r20, 0x7F	; 127
    42dc:	57 e4       	ldi	r21, 0x47	; 71
    42de:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    42e2:	18 16       	cp	r1, r24
    42e4:	4c f5       	brge	.+82     	; 0x4338 <Lcd_VidSendCommand+0x7b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42e6:	69 8d       	ldd	r22, Y+25	; 0x19
    42e8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    42ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    42ec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    42ee:	20 e0       	ldi	r18, 0x00	; 0
    42f0:	30 e0       	ldi	r19, 0x00	; 0
    42f2:	40 e2       	ldi	r20, 0x20	; 32
    42f4:	51 e4       	ldi	r21, 0x41	; 65
    42f6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    42fa:	dc 01       	movw	r26, r24
    42fc:	cb 01       	movw	r24, r22
    42fe:	bc 01       	movw	r22, r24
    4300:	cd 01       	movw	r24, r26
    4302:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4306:	dc 01       	movw	r26, r24
    4308:	cb 01       	movw	r24, r22
    430a:	9c 8b       	std	Y+20, r25	; 0x14
    430c:	8b 8b       	std	Y+19, r24	; 0x13
    430e:	0f c0       	rjmp	.+30     	; 0x432e <Lcd_VidSendCommand+0x7a6>
    4310:	89 e1       	ldi	r24, 0x19	; 25
    4312:	90 e0       	ldi	r25, 0x00	; 0
    4314:	9a 8b       	std	Y+18, r25	; 0x12
    4316:	89 8b       	std	Y+17, r24	; 0x11
    4318:	89 89       	ldd	r24, Y+17	; 0x11
    431a:	9a 89       	ldd	r25, Y+18	; 0x12
    431c:	01 97       	sbiw	r24, 0x01	; 1
    431e:	f1 f7       	brne	.-4      	; 0x431c <Lcd_VidSendCommand+0x794>
    4320:	9a 8b       	std	Y+18, r25	; 0x12
    4322:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4324:	8b 89       	ldd	r24, Y+19	; 0x13
    4326:	9c 89       	ldd	r25, Y+20	; 0x14
    4328:	01 97       	sbiw	r24, 0x01	; 1
    432a:	9c 8b       	std	Y+20, r25	; 0x14
    432c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    432e:	8b 89       	ldd	r24, Y+19	; 0x13
    4330:	9c 89       	ldd	r25, Y+20	; 0x14
    4332:	00 97       	sbiw	r24, 0x00	; 0
    4334:	69 f7       	brne	.-38     	; 0x4310 <Lcd_VidSendCommand+0x788>
    4336:	14 c0       	rjmp	.+40     	; 0x4360 <Lcd_VidSendCommand+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4338:	6d 89       	ldd	r22, Y+21	; 0x15
    433a:	7e 89       	ldd	r23, Y+22	; 0x16
    433c:	8f 89       	ldd	r24, Y+23	; 0x17
    433e:	98 8d       	ldd	r25, Y+24	; 0x18
    4340:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4344:	dc 01       	movw	r26, r24
    4346:	cb 01       	movw	r24, r22
    4348:	9c 8b       	std	Y+20, r25	; 0x14
    434a:	8b 8b       	std	Y+19, r24	; 0x13
    434c:	8b 89       	ldd	r24, Y+19	; 0x13
    434e:	9c 89       	ldd	r25, Y+20	; 0x14
    4350:	98 8b       	std	Y+16, r25	; 0x10
    4352:	8f 87       	std	Y+15, r24	; 0x0f
    4354:	8f 85       	ldd	r24, Y+15	; 0x0f
    4356:	98 89       	ldd	r25, Y+16	; 0x10
    4358:	01 97       	sbiw	r24, 0x01	; 1
    435a:	f1 f7       	brne	.-4      	; 0x4358 <Lcd_VidSendCommand+0x7d0>
    435c:	98 8b       	std	Y+16, r25	; 0x10
    435e:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    4360:	81 e1       	ldi	r24, 0x11	; 17
    4362:	60 e0       	ldi	r22, 0x00	; 0
    4364:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    4368:	80 e0       	ldi	r24, 0x00	; 0
    436a:	90 e0       	ldi	r25, 0x00	; 0
    436c:	a0 e8       	ldi	r26, 0x80	; 128
    436e:	bf e3       	ldi	r27, 0x3F	; 63
    4370:	8b 87       	std	Y+11, r24	; 0x0b
    4372:	9c 87       	std	Y+12, r25	; 0x0c
    4374:	ad 87       	std	Y+13, r26	; 0x0d
    4376:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4378:	6b 85       	ldd	r22, Y+11	; 0x0b
    437a:	7c 85       	ldd	r23, Y+12	; 0x0c
    437c:	8d 85       	ldd	r24, Y+13	; 0x0d
    437e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4380:	20 e0       	ldi	r18, 0x00	; 0
    4382:	30 e0       	ldi	r19, 0x00	; 0
    4384:	4a e7       	ldi	r20, 0x7A	; 122
    4386:	53 e4       	ldi	r21, 0x43	; 67
    4388:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    438c:	dc 01       	movw	r26, r24
    438e:	cb 01       	movw	r24, r22
    4390:	8f 83       	std	Y+7, r24	; 0x07
    4392:	98 87       	std	Y+8, r25	; 0x08
    4394:	a9 87       	std	Y+9, r26	; 0x09
    4396:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4398:	6f 81       	ldd	r22, Y+7	; 0x07
    439a:	78 85       	ldd	r23, Y+8	; 0x08
    439c:	89 85       	ldd	r24, Y+9	; 0x09
    439e:	9a 85       	ldd	r25, Y+10	; 0x0a
    43a0:	20 e0       	ldi	r18, 0x00	; 0
    43a2:	30 e0       	ldi	r19, 0x00	; 0
    43a4:	40 e8       	ldi	r20, 0x80	; 128
    43a6:	5f e3       	ldi	r21, 0x3F	; 63
    43a8:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    43ac:	88 23       	and	r24, r24
    43ae:	2c f4       	brge	.+10     	; 0x43ba <Lcd_VidSendCommand+0x832>
		__ticks = 1;
    43b0:	81 e0       	ldi	r24, 0x01	; 1
    43b2:	90 e0       	ldi	r25, 0x00	; 0
    43b4:	9e 83       	std	Y+6, r25	; 0x06
    43b6:	8d 83       	std	Y+5, r24	; 0x05
    43b8:	3f c0       	rjmp	.+126    	; 0x4438 <Lcd_VidSendCommand+0x8b0>
	else if (__tmp > 65535)
    43ba:	6f 81       	ldd	r22, Y+7	; 0x07
    43bc:	78 85       	ldd	r23, Y+8	; 0x08
    43be:	89 85       	ldd	r24, Y+9	; 0x09
    43c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    43c2:	20 e0       	ldi	r18, 0x00	; 0
    43c4:	3f ef       	ldi	r19, 0xFF	; 255
    43c6:	4f e7       	ldi	r20, 0x7F	; 127
    43c8:	57 e4       	ldi	r21, 0x47	; 71
    43ca:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    43ce:	18 16       	cp	r1, r24
    43d0:	4c f5       	brge	.+82     	; 0x4424 <Lcd_VidSendCommand+0x89c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    43d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    43d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    43d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    43da:	20 e0       	ldi	r18, 0x00	; 0
    43dc:	30 e0       	ldi	r19, 0x00	; 0
    43de:	40 e2       	ldi	r20, 0x20	; 32
    43e0:	51 e4       	ldi	r21, 0x41	; 65
    43e2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    43e6:	dc 01       	movw	r26, r24
    43e8:	cb 01       	movw	r24, r22
    43ea:	bc 01       	movw	r22, r24
    43ec:	cd 01       	movw	r24, r26
    43ee:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    43f2:	dc 01       	movw	r26, r24
    43f4:	cb 01       	movw	r24, r22
    43f6:	9e 83       	std	Y+6, r25	; 0x06
    43f8:	8d 83       	std	Y+5, r24	; 0x05
    43fa:	0f c0       	rjmp	.+30     	; 0x441a <Lcd_VidSendCommand+0x892>
    43fc:	89 e1       	ldi	r24, 0x19	; 25
    43fe:	90 e0       	ldi	r25, 0x00	; 0
    4400:	9c 83       	std	Y+4, r25	; 0x04
    4402:	8b 83       	std	Y+3, r24	; 0x03
    4404:	8b 81       	ldd	r24, Y+3	; 0x03
    4406:	9c 81       	ldd	r25, Y+4	; 0x04
    4408:	01 97       	sbiw	r24, 0x01	; 1
    440a:	f1 f7       	brne	.-4      	; 0x4408 <Lcd_VidSendCommand+0x880>
    440c:	9c 83       	std	Y+4, r25	; 0x04
    440e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4410:	8d 81       	ldd	r24, Y+5	; 0x05
    4412:	9e 81       	ldd	r25, Y+6	; 0x06
    4414:	01 97       	sbiw	r24, 0x01	; 1
    4416:	9e 83       	std	Y+6, r25	; 0x06
    4418:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    441a:	8d 81       	ldd	r24, Y+5	; 0x05
    441c:	9e 81       	ldd	r25, Y+6	; 0x06
    441e:	00 97       	sbiw	r24, 0x00	; 0
    4420:	69 f7       	brne	.-38     	; 0x43fc <Lcd_VidSendCommand+0x874>
    4422:	14 c0       	rjmp	.+40     	; 0x444c <Lcd_VidSendCommand+0x8c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4424:	6f 81       	ldd	r22, Y+7	; 0x07
    4426:	78 85       	ldd	r23, Y+8	; 0x08
    4428:	89 85       	ldd	r24, Y+9	; 0x09
    442a:	9a 85       	ldd	r25, Y+10	; 0x0a
    442c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4430:	dc 01       	movw	r26, r24
    4432:	cb 01       	movw	r24, r22
    4434:	9e 83       	std	Y+6, r25	; 0x06
    4436:	8d 83       	std	Y+5, r24	; 0x05
    4438:	8d 81       	ldd	r24, Y+5	; 0x05
    443a:	9e 81       	ldd	r25, Y+6	; 0x06
    443c:	9a 83       	std	Y+2, r25	; 0x02
    443e:	89 83       	std	Y+1, r24	; 0x01
    4440:	89 81       	ldd	r24, Y+1	; 0x01
    4442:	9a 81       	ldd	r25, Y+2	; 0x02
    4444:	01 97       	sbiw	r24, 0x01	; 1
    4446:	f1 f7       	brne	.-4      	; 0x4444 <Lcd_VidSendCommand+0x8bc>
    4448:	9a 83       	std	Y+2, r25	; 0x02
    444a:	89 83       	std	Y+1, r24	; 0x01
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
	LCD_Delay(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
	LCD_Delay(2);
#endif
}
    444c:	cd 59       	subi	r28, 0x9D	; 157
    444e:	df 4f       	sbci	r29, 0xFF	; 255
    4450:	0f b6       	in	r0, 0x3f	; 63
    4452:	f8 94       	cli
    4454:	de bf       	out	0x3e, r29	; 62
    4456:	0f be       	out	0x3f, r0	; 63
    4458:	cd bf       	out	0x3d, r28	; 61
    445a:	cf 91       	pop	r28
    445c:	df 91       	pop	r29
    445e:	1f 91       	pop	r17
    4460:	0f 91       	pop	r16
    4462:	08 95       	ret

00004464 <Lcd_VidDisplayChracter>:

void Lcd_VidDisplayChracter(uint8 Copy_u8Command)
{
    4464:	0f 93       	push	r16
    4466:	1f 93       	push	r17
    4468:	df 93       	push	r29
    446a:	cf 93       	push	r28
    446c:	cd b7       	in	r28, 0x3d	; 61
    446e:	de b7       	in	r29, 0x3e	; 62
    4470:	c3 56       	subi	r28, 0x63	; 99
    4472:	d0 40       	sbci	r29, 0x00	; 0
    4474:	0f b6       	in	r0, 0x3f	; 63
    4476:	f8 94       	cli
    4478:	de bf       	out	0x3e, r29	; 62
    447a:	0f be       	out	0x3f, r0	; 63
    447c:	cd bf       	out	0x3d, r28	; 61
    447e:	fe 01       	movw	r30, r28
    4480:	ed 59       	subi	r30, 0x9D	; 157
    4482:	ff 4f       	sbci	r31, 0xFF	; 255
    4484:	80 83       	st	Z, r24
	Dio_enuWriteChannel(LCD_RS_PIN_NUM,DIO_LOGIC_HIGH);
    4486:	80 e1       	ldi	r24, 0x10	; 16
    4488:	61 e0       	ldi	r22, 0x01	; 1
    448a:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    448e:	fe 01       	movw	r30, r28
    4490:	e1 5a       	subi	r30, 0xA1	; 161
    4492:	ff 4f       	sbci	r31, 0xFF	; 255
    4494:	80 e0       	ldi	r24, 0x00	; 0
    4496:	90 e0       	ldi	r25, 0x00	; 0
    4498:	a0 e8       	ldi	r26, 0x80	; 128
    449a:	bf e3       	ldi	r27, 0x3F	; 63
    449c:	80 83       	st	Z, r24
    449e:	91 83       	std	Z+1, r25	; 0x01
    44a0:	a2 83       	std	Z+2, r26	; 0x02
    44a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44a4:	8e 01       	movw	r16, r28
    44a6:	05 5a       	subi	r16, 0xA5	; 165
    44a8:	1f 4f       	sbci	r17, 0xFF	; 255
    44aa:	fe 01       	movw	r30, r28
    44ac:	e1 5a       	subi	r30, 0xA1	; 161
    44ae:	ff 4f       	sbci	r31, 0xFF	; 255
    44b0:	60 81       	ld	r22, Z
    44b2:	71 81       	ldd	r23, Z+1	; 0x01
    44b4:	82 81       	ldd	r24, Z+2	; 0x02
    44b6:	93 81       	ldd	r25, Z+3	; 0x03
    44b8:	20 e0       	ldi	r18, 0x00	; 0
    44ba:	30 e0       	ldi	r19, 0x00	; 0
    44bc:	4a e7       	ldi	r20, 0x7A	; 122
    44be:	53 e4       	ldi	r21, 0x43	; 67
    44c0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    44c4:	dc 01       	movw	r26, r24
    44c6:	cb 01       	movw	r24, r22
    44c8:	f8 01       	movw	r30, r16
    44ca:	80 83       	st	Z, r24
    44cc:	91 83       	std	Z+1, r25	; 0x01
    44ce:	a2 83       	std	Z+2, r26	; 0x02
    44d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    44d2:	fe 01       	movw	r30, r28
    44d4:	e5 5a       	subi	r30, 0xA5	; 165
    44d6:	ff 4f       	sbci	r31, 0xFF	; 255
    44d8:	60 81       	ld	r22, Z
    44da:	71 81       	ldd	r23, Z+1	; 0x01
    44dc:	82 81       	ldd	r24, Z+2	; 0x02
    44de:	93 81       	ldd	r25, Z+3	; 0x03
    44e0:	20 e0       	ldi	r18, 0x00	; 0
    44e2:	30 e0       	ldi	r19, 0x00	; 0
    44e4:	40 e8       	ldi	r20, 0x80	; 128
    44e6:	5f e3       	ldi	r21, 0x3F	; 63
    44e8:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    44ec:	88 23       	and	r24, r24
    44ee:	44 f4       	brge	.+16     	; 0x4500 <Lcd_VidDisplayChracter+0x9c>
		__ticks = 1;
    44f0:	fe 01       	movw	r30, r28
    44f2:	e7 5a       	subi	r30, 0xA7	; 167
    44f4:	ff 4f       	sbci	r31, 0xFF	; 255
    44f6:	81 e0       	ldi	r24, 0x01	; 1
    44f8:	90 e0       	ldi	r25, 0x00	; 0
    44fa:	91 83       	std	Z+1, r25	; 0x01
    44fc:	80 83       	st	Z, r24
    44fe:	64 c0       	rjmp	.+200    	; 0x45c8 <Lcd_VidDisplayChracter+0x164>
	else if (__tmp > 65535)
    4500:	fe 01       	movw	r30, r28
    4502:	e5 5a       	subi	r30, 0xA5	; 165
    4504:	ff 4f       	sbci	r31, 0xFF	; 255
    4506:	60 81       	ld	r22, Z
    4508:	71 81       	ldd	r23, Z+1	; 0x01
    450a:	82 81       	ldd	r24, Z+2	; 0x02
    450c:	93 81       	ldd	r25, Z+3	; 0x03
    450e:	20 e0       	ldi	r18, 0x00	; 0
    4510:	3f ef       	ldi	r19, 0xFF	; 255
    4512:	4f e7       	ldi	r20, 0x7F	; 127
    4514:	57 e4       	ldi	r21, 0x47	; 71
    4516:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    451a:	18 16       	cp	r1, r24
    451c:	0c f0       	brlt	.+2      	; 0x4520 <Lcd_VidDisplayChracter+0xbc>
    451e:	43 c0       	rjmp	.+134    	; 0x45a6 <Lcd_VidDisplayChracter+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4520:	fe 01       	movw	r30, r28
    4522:	e1 5a       	subi	r30, 0xA1	; 161
    4524:	ff 4f       	sbci	r31, 0xFF	; 255
    4526:	60 81       	ld	r22, Z
    4528:	71 81       	ldd	r23, Z+1	; 0x01
    452a:	82 81       	ldd	r24, Z+2	; 0x02
    452c:	93 81       	ldd	r25, Z+3	; 0x03
    452e:	20 e0       	ldi	r18, 0x00	; 0
    4530:	30 e0       	ldi	r19, 0x00	; 0
    4532:	40 e2       	ldi	r20, 0x20	; 32
    4534:	51 e4       	ldi	r21, 0x41	; 65
    4536:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    453a:	dc 01       	movw	r26, r24
    453c:	cb 01       	movw	r24, r22
    453e:	8e 01       	movw	r16, r28
    4540:	07 5a       	subi	r16, 0xA7	; 167
    4542:	1f 4f       	sbci	r17, 0xFF	; 255
    4544:	bc 01       	movw	r22, r24
    4546:	cd 01       	movw	r24, r26
    4548:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    454c:	dc 01       	movw	r26, r24
    454e:	cb 01       	movw	r24, r22
    4550:	f8 01       	movw	r30, r16
    4552:	91 83       	std	Z+1, r25	; 0x01
    4554:	80 83       	st	Z, r24
    4556:	1f c0       	rjmp	.+62     	; 0x4596 <Lcd_VidDisplayChracter+0x132>
    4558:	fe 01       	movw	r30, r28
    455a:	e9 5a       	subi	r30, 0xA9	; 169
    455c:	ff 4f       	sbci	r31, 0xFF	; 255
    455e:	89 e1       	ldi	r24, 0x19	; 25
    4560:	90 e0       	ldi	r25, 0x00	; 0
    4562:	91 83       	std	Z+1, r25	; 0x01
    4564:	80 83       	st	Z, r24
    4566:	fe 01       	movw	r30, r28
    4568:	e9 5a       	subi	r30, 0xA9	; 169
    456a:	ff 4f       	sbci	r31, 0xFF	; 255
    456c:	80 81       	ld	r24, Z
    456e:	91 81       	ldd	r25, Z+1	; 0x01
    4570:	01 97       	sbiw	r24, 0x01	; 1
    4572:	f1 f7       	brne	.-4      	; 0x4570 <Lcd_VidDisplayChracter+0x10c>
    4574:	fe 01       	movw	r30, r28
    4576:	e9 5a       	subi	r30, 0xA9	; 169
    4578:	ff 4f       	sbci	r31, 0xFF	; 255
    457a:	91 83       	std	Z+1, r25	; 0x01
    457c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    457e:	de 01       	movw	r26, r28
    4580:	a7 5a       	subi	r26, 0xA7	; 167
    4582:	bf 4f       	sbci	r27, 0xFF	; 255
    4584:	fe 01       	movw	r30, r28
    4586:	e7 5a       	subi	r30, 0xA7	; 167
    4588:	ff 4f       	sbci	r31, 0xFF	; 255
    458a:	80 81       	ld	r24, Z
    458c:	91 81       	ldd	r25, Z+1	; 0x01
    458e:	01 97       	sbiw	r24, 0x01	; 1
    4590:	11 96       	adiw	r26, 0x01	; 1
    4592:	9c 93       	st	X, r25
    4594:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4596:	fe 01       	movw	r30, r28
    4598:	e7 5a       	subi	r30, 0xA7	; 167
    459a:	ff 4f       	sbci	r31, 0xFF	; 255
    459c:	80 81       	ld	r24, Z
    459e:	91 81       	ldd	r25, Z+1	; 0x01
    45a0:	00 97       	sbiw	r24, 0x00	; 0
    45a2:	d1 f6       	brne	.-76     	; 0x4558 <Lcd_VidDisplayChracter+0xf4>
    45a4:	27 c0       	rjmp	.+78     	; 0x45f4 <Lcd_VidDisplayChracter+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45a6:	8e 01       	movw	r16, r28
    45a8:	07 5a       	subi	r16, 0xA7	; 167
    45aa:	1f 4f       	sbci	r17, 0xFF	; 255
    45ac:	fe 01       	movw	r30, r28
    45ae:	e5 5a       	subi	r30, 0xA5	; 165
    45b0:	ff 4f       	sbci	r31, 0xFF	; 255
    45b2:	60 81       	ld	r22, Z
    45b4:	71 81       	ldd	r23, Z+1	; 0x01
    45b6:	82 81       	ldd	r24, Z+2	; 0x02
    45b8:	93 81       	ldd	r25, Z+3	; 0x03
    45ba:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    45be:	dc 01       	movw	r26, r24
    45c0:	cb 01       	movw	r24, r22
    45c2:	f8 01       	movw	r30, r16
    45c4:	91 83       	std	Z+1, r25	; 0x01
    45c6:	80 83       	st	Z, r24
    45c8:	de 01       	movw	r26, r28
    45ca:	ab 5a       	subi	r26, 0xAB	; 171
    45cc:	bf 4f       	sbci	r27, 0xFF	; 255
    45ce:	fe 01       	movw	r30, r28
    45d0:	e7 5a       	subi	r30, 0xA7	; 167
    45d2:	ff 4f       	sbci	r31, 0xFF	; 255
    45d4:	80 81       	ld	r24, Z
    45d6:	91 81       	ldd	r25, Z+1	; 0x01
    45d8:	8d 93       	st	X+, r24
    45da:	9c 93       	st	X, r25
    45dc:	fe 01       	movw	r30, r28
    45de:	eb 5a       	subi	r30, 0xAB	; 171
    45e0:	ff 4f       	sbci	r31, 0xFF	; 255
    45e2:	80 81       	ld	r24, Z
    45e4:	91 81       	ldd	r25, Z+1	; 0x01
    45e6:	01 97       	sbiw	r24, 0x01	; 1
    45e8:	f1 f7       	brne	.-4      	; 0x45e6 <Lcd_VidDisplayChracter+0x182>
    45ea:	fe 01       	movw	r30, r28
    45ec:	eb 5a       	subi	r30, 0xAB	; 171
    45ee:	ff 4f       	sbci	r31, 0xFF	; 255
    45f0:	91 83       	std	Z+1, r25	; 0x01
    45f2:	80 83       	st	Z, r24
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    45f4:	81 e1       	ldi	r24, 0x11	; 17
    45f6:	61 e0       	ldi	r22, 0x01	; 1
    45f8:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    45fc:	fe 01       	movw	r30, r28
    45fe:	ef 5a       	subi	r30, 0xAF	; 175
    4600:	ff 4f       	sbci	r31, 0xFF	; 255
    4602:	80 e0       	ldi	r24, 0x00	; 0
    4604:	90 e0       	ldi	r25, 0x00	; 0
    4606:	a0 e8       	ldi	r26, 0x80	; 128
    4608:	bf e3       	ldi	r27, 0x3F	; 63
    460a:	80 83       	st	Z, r24
    460c:	91 83       	std	Z+1, r25	; 0x01
    460e:	a2 83       	std	Z+2, r26	; 0x02
    4610:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4612:	8e 01       	movw	r16, r28
    4614:	03 5b       	subi	r16, 0xB3	; 179
    4616:	1f 4f       	sbci	r17, 0xFF	; 255
    4618:	fe 01       	movw	r30, r28
    461a:	ef 5a       	subi	r30, 0xAF	; 175
    461c:	ff 4f       	sbci	r31, 0xFF	; 255
    461e:	60 81       	ld	r22, Z
    4620:	71 81       	ldd	r23, Z+1	; 0x01
    4622:	82 81       	ldd	r24, Z+2	; 0x02
    4624:	93 81       	ldd	r25, Z+3	; 0x03
    4626:	20 e0       	ldi	r18, 0x00	; 0
    4628:	30 e0       	ldi	r19, 0x00	; 0
    462a:	4a e7       	ldi	r20, 0x7A	; 122
    462c:	53 e4       	ldi	r21, 0x43	; 67
    462e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4632:	dc 01       	movw	r26, r24
    4634:	cb 01       	movw	r24, r22
    4636:	f8 01       	movw	r30, r16
    4638:	80 83       	st	Z, r24
    463a:	91 83       	std	Z+1, r25	; 0x01
    463c:	a2 83       	std	Z+2, r26	; 0x02
    463e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4640:	fe 01       	movw	r30, r28
    4642:	e3 5b       	subi	r30, 0xB3	; 179
    4644:	ff 4f       	sbci	r31, 0xFF	; 255
    4646:	60 81       	ld	r22, Z
    4648:	71 81       	ldd	r23, Z+1	; 0x01
    464a:	82 81       	ldd	r24, Z+2	; 0x02
    464c:	93 81       	ldd	r25, Z+3	; 0x03
    464e:	20 e0       	ldi	r18, 0x00	; 0
    4650:	30 e0       	ldi	r19, 0x00	; 0
    4652:	40 e8       	ldi	r20, 0x80	; 128
    4654:	5f e3       	ldi	r21, 0x3F	; 63
    4656:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    465a:	88 23       	and	r24, r24
    465c:	44 f4       	brge	.+16     	; 0x466e <Lcd_VidDisplayChracter+0x20a>
		__ticks = 1;
    465e:	fe 01       	movw	r30, r28
    4660:	e5 5b       	subi	r30, 0xB5	; 181
    4662:	ff 4f       	sbci	r31, 0xFF	; 255
    4664:	81 e0       	ldi	r24, 0x01	; 1
    4666:	90 e0       	ldi	r25, 0x00	; 0
    4668:	91 83       	std	Z+1, r25	; 0x01
    466a:	80 83       	st	Z, r24
    466c:	64 c0       	rjmp	.+200    	; 0x4736 <Lcd_VidDisplayChracter+0x2d2>
	else if (__tmp > 65535)
    466e:	fe 01       	movw	r30, r28
    4670:	e3 5b       	subi	r30, 0xB3	; 179
    4672:	ff 4f       	sbci	r31, 0xFF	; 255
    4674:	60 81       	ld	r22, Z
    4676:	71 81       	ldd	r23, Z+1	; 0x01
    4678:	82 81       	ldd	r24, Z+2	; 0x02
    467a:	93 81       	ldd	r25, Z+3	; 0x03
    467c:	20 e0       	ldi	r18, 0x00	; 0
    467e:	3f ef       	ldi	r19, 0xFF	; 255
    4680:	4f e7       	ldi	r20, 0x7F	; 127
    4682:	57 e4       	ldi	r21, 0x47	; 71
    4684:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4688:	18 16       	cp	r1, r24
    468a:	0c f0       	brlt	.+2      	; 0x468e <Lcd_VidDisplayChracter+0x22a>
    468c:	43 c0       	rjmp	.+134    	; 0x4714 <Lcd_VidDisplayChracter+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    468e:	fe 01       	movw	r30, r28
    4690:	ef 5a       	subi	r30, 0xAF	; 175
    4692:	ff 4f       	sbci	r31, 0xFF	; 255
    4694:	60 81       	ld	r22, Z
    4696:	71 81       	ldd	r23, Z+1	; 0x01
    4698:	82 81       	ldd	r24, Z+2	; 0x02
    469a:	93 81       	ldd	r25, Z+3	; 0x03
    469c:	20 e0       	ldi	r18, 0x00	; 0
    469e:	30 e0       	ldi	r19, 0x00	; 0
    46a0:	40 e2       	ldi	r20, 0x20	; 32
    46a2:	51 e4       	ldi	r21, 0x41	; 65
    46a4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    46a8:	dc 01       	movw	r26, r24
    46aa:	cb 01       	movw	r24, r22
    46ac:	8e 01       	movw	r16, r28
    46ae:	05 5b       	subi	r16, 0xB5	; 181
    46b0:	1f 4f       	sbci	r17, 0xFF	; 255
    46b2:	bc 01       	movw	r22, r24
    46b4:	cd 01       	movw	r24, r26
    46b6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    46ba:	dc 01       	movw	r26, r24
    46bc:	cb 01       	movw	r24, r22
    46be:	f8 01       	movw	r30, r16
    46c0:	91 83       	std	Z+1, r25	; 0x01
    46c2:	80 83       	st	Z, r24
    46c4:	1f c0       	rjmp	.+62     	; 0x4704 <Lcd_VidDisplayChracter+0x2a0>
    46c6:	fe 01       	movw	r30, r28
    46c8:	e7 5b       	subi	r30, 0xB7	; 183
    46ca:	ff 4f       	sbci	r31, 0xFF	; 255
    46cc:	89 e1       	ldi	r24, 0x19	; 25
    46ce:	90 e0       	ldi	r25, 0x00	; 0
    46d0:	91 83       	std	Z+1, r25	; 0x01
    46d2:	80 83       	st	Z, r24
    46d4:	fe 01       	movw	r30, r28
    46d6:	e7 5b       	subi	r30, 0xB7	; 183
    46d8:	ff 4f       	sbci	r31, 0xFF	; 255
    46da:	80 81       	ld	r24, Z
    46dc:	91 81       	ldd	r25, Z+1	; 0x01
    46de:	01 97       	sbiw	r24, 0x01	; 1
    46e0:	f1 f7       	brne	.-4      	; 0x46de <Lcd_VidDisplayChracter+0x27a>
    46e2:	fe 01       	movw	r30, r28
    46e4:	e7 5b       	subi	r30, 0xB7	; 183
    46e6:	ff 4f       	sbci	r31, 0xFF	; 255
    46e8:	91 83       	std	Z+1, r25	; 0x01
    46ea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46ec:	de 01       	movw	r26, r28
    46ee:	a5 5b       	subi	r26, 0xB5	; 181
    46f0:	bf 4f       	sbci	r27, 0xFF	; 255
    46f2:	fe 01       	movw	r30, r28
    46f4:	e5 5b       	subi	r30, 0xB5	; 181
    46f6:	ff 4f       	sbci	r31, 0xFF	; 255
    46f8:	80 81       	ld	r24, Z
    46fa:	91 81       	ldd	r25, Z+1	; 0x01
    46fc:	01 97       	sbiw	r24, 0x01	; 1
    46fe:	11 96       	adiw	r26, 0x01	; 1
    4700:	9c 93       	st	X, r25
    4702:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4704:	fe 01       	movw	r30, r28
    4706:	e5 5b       	subi	r30, 0xB5	; 181
    4708:	ff 4f       	sbci	r31, 0xFF	; 255
    470a:	80 81       	ld	r24, Z
    470c:	91 81       	ldd	r25, Z+1	; 0x01
    470e:	00 97       	sbiw	r24, 0x00	; 0
    4710:	d1 f6       	brne	.-76     	; 0x46c6 <Lcd_VidDisplayChracter+0x262>
    4712:	27 c0       	rjmp	.+78     	; 0x4762 <Lcd_VidDisplayChracter+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4714:	8e 01       	movw	r16, r28
    4716:	05 5b       	subi	r16, 0xB5	; 181
    4718:	1f 4f       	sbci	r17, 0xFF	; 255
    471a:	fe 01       	movw	r30, r28
    471c:	e3 5b       	subi	r30, 0xB3	; 179
    471e:	ff 4f       	sbci	r31, 0xFF	; 255
    4720:	60 81       	ld	r22, Z
    4722:	71 81       	ldd	r23, Z+1	; 0x01
    4724:	82 81       	ldd	r24, Z+2	; 0x02
    4726:	93 81       	ldd	r25, Z+3	; 0x03
    4728:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    472c:	dc 01       	movw	r26, r24
    472e:	cb 01       	movw	r24, r22
    4730:	f8 01       	movw	r30, r16
    4732:	91 83       	std	Z+1, r25	; 0x01
    4734:	80 83       	st	Z, r24
    4736:	de 01       	movw	r26, r28
    4738:	a9 5b       	subi	r26, 0xB9	; 185
    473a:	bf 4f       	sbci	r27, 0xFF	; 255
    473c:	fe 01       	movw	r30, r28
    473e:	e5 5b       	subi	r30, 0xB5	; 181
    4740:	ff 4f       	sbci	r31, 0xFF	; 255
    4742:	80 81       	ld	r24, Z
    4744:	91 81       	ldd	r25, Z+1	; 0x01
    4746:	8d 93       	st	X+, r24
    4748:	9c 93       	st	X, r25
    474a:	fe 01       	movw	r30, r28
    474c:	e9 5b       	subi	r30, 0xB9	; 185
    474e:	ff 4f       	sbci	r31, 0xFF	; 255
    4750:	80 81       	ld	r24, Z
    4752:	91 81       	ldd	r25, Z+1	; 0x01
    4754:	01 97       	sbiw	r24, 0x01	; 1
    4756:	f1 f7       	brne	.-4      	; 0x4754 <Lcd_VidDisplayChracter+0x2f0>
    4758:	fe 01       	movw	r30, r28
    475a:	e9 5b       	subi	r30, 0xB9	; 185
    475c:	ff 4f       	sbci	r31, 0xFF	; 255
    475e:	91 83       	std	Z+1, r25	; 0x01
    4760:	80 83       	st	Z, r24
	_delay_ms(1);
#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,4));
    4762:	fe 01       	movw	r30, r28
    4764:	ed 59       	subi	r30, 0x9D	; 157
    4766:	ff 4f       	sbci	r31, 0xFF	; 255
    4768:	80 81       	ld	r24, Z
    476a:	88 2f       	mov	r24, r24
    476c:	90 e0       	ldi	r25, 0x00	; 0
    476e:	80 71       	andi	r24, 0x10	; 16
    4770:	90 70       	andi	r25, 0x00	; 0
    4772:	95 95       	asr	r25
    4774:	87 95       	ror	r24
    4776:	95 95       	asr	r25
    4778:	87 95       	ror	r24
    477a:	95 95       	asr	r25
    477c:	87 95       	ror	r24
    477e:	95 95       	asr	r25
    4780:	87 95       	ror	r24
    4782:	98 2f       	mov	r25, r24
    4784:	82 e1       	ldi	r24, 0x12	; 18
    4786:	69 2f       	mov	r22, r25
    4788:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,5));
    478c:	fe 01       	movw	r30, r28
    478e:	ed 59       	subi	r30, 0x9D	; 157
    4790:	ff 4f       	sbci	r31, 0xFF	; 255
    4792:	80 81       	ld	r24, Z
    4794:	88 2f       	mov	r24, r24
    4796:	90 e0       	ldi	r25, 0x00	; 0
    4798:	80 72       	andi	r24, 0x20	; 32
    479a:	90 70       	andi	r25, 0x00	; 0
    479c:	95 95       	asr	r25
    479e:	87 95       	ror	r24
    47a0:	95 95       	asr	r25
    47a2:	87 95       	ror	r24
    47a4:	95 95       	asr	r25
    47a6:	87 95       	ror	r24
    47a8:	95 95       	asr	r25
    47aa:	87 95       	ror	r24
    47ac:	95 95       	asr	r25
    47ae:	87 95       	ror	r24
    47b0:	98 2f       	mov	r25, r24
    47b2:	83 e1       	ldi	r24, 0x13	; 19
    47b4:	69 2f       	mov	r22, r25
    47b6:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,6));
    47ba:	fe 01       	movw	r30, r28
    47bc:	ed 59       	subi	r30, 0x9D	; 157
    47be:	ff 4f       	sbci	r31, 0xFF	; 255
    47c0:	80 81       	ld	r24, Z
    47c2:	88 2f       	mov	r24, r24
    47c4:	90 e0       	ldi	r25, 0x00	; 0
    47c6:	80 74       	andi	r24, 0x40	; 64
    47c8:	90 70       	andi	r25, 0x00	; 0
    47ca:	08 2e       	mov	r0, r24
    47cc:	89 2f       	mov	r24, r25
    47ce:	00 0c       	add	r0, r0
    47d0:	88 1f       	adc	r24, r24
    47d2:	99 0b       	sbc	r25, r25
    47d4:	00 0c       	add	r0, r0
    47d6:	88 1f       	adc	r24, r24
    47d8:	99 1f       	adc	r25, r25
    47da:	98 2f       	mov	r25, r24
    47dc:	84 e1       	ldi	r24, 0x14	; 20
    47de:	69 2f       	mov	r22, r25
    47e0:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,7));
    47e4:	fe 01       	movw	r30, r28
    47e6:	ed 59       	subi	r30, 0x9D	; 157
    47e8:	ff 4f       	sbci	r31, 0xFF	; 255
    47ea:	80 81       	ld	r24, Z
    47ec:	98 2f       	mov	r25, r24
    47ee:	99 1f       	adc	r25, r25
    47f0:	99 27       	eor	r25, r25
    47f2:	99 1f       	adc	r25, r25
    47f4:	85 e1       	ldi	r24, 0x15	; 21
    47f6:	69 2f       	mov	r22, r25
    47f8:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    47fc:	fe 01       	movw	r30, r28
    47fe:	ed 5b       	subi	r30, 0xBD	; 189
    4800:	ff 4f       	sbci	r31, 0xFF	; 255
    4802:	80 e0       	ldi	r24, 0x00	; 0
    4804:	90 e0       	ldi	r25, 0x00	; 0
    4806:	a0 e8       	ldi	r26, 0x80	; 128
    4808:	bf e3       	ldi	r27, 0x3F	; 63
    480a:	80 83       	st	Z, r24
    480c:	91 83       	std	Z+1, r25	; 0x01
    480e:	a2 83       	std	Z+2, r26	; 0x02
    4810:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4812:	8e 01       	movw	r16, r28
    4814:	01 5c       	subi	r16, 0xC1	; 193
    4816:	1f 4f       	sbci	r17, 0xFF	; 255
    4818:	fe 01       	movw	r30, r28
    481a:	ed 5b       	subi	r30, 0xBD	; 189
    481c:	ff 4f       	sbci	r31, 0xFF	; 255
    481e:	60 81       	ld	r22, Z
    4820:	71 81       	ldd	r23, Z+1	; 0x01
    4822:	82 81       	ldd	r24, Z+2	; 0x02
    4824:	93 81       	ldd	r25, Z+3	; 0x03
    4826:	20 e0       	ldi	r18, 0x00	; 0
    4828:	30 e0       	ldi	r19, 0x00	; 0
    482a:	4a e7       	ldi	r20, 0x7A	; 122
    482c:	53 e4       	ldi	r21, 0x43	; 67
    482e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4832:	dc 01       	movw	r26, r24
    4834:	cb 01       	movw	r24, r22
    4836:	f8 01       	movw	r30, r16
    4838:	80 83       	st	Z, r24
    483a:	91 83       	std	Z+1, r25	; 0x01
    483c:	a2 83       	std	Z+2, r26	; 0x02
    483e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4840:	fe 01       	movw	r30, r28
    4842:	ff 96       	adiw	r30, 0x3f	; 63
    4844:	60 81       	ld	r22, Z
    4846:	71 81       	ldd	r23, Z+1	; 0x01
    4848:	82 81       	ldd	r24, Z+2	; 0x02
    484a:	93 81       	ldd	r25, Z+3	; 0x03
    484c:	20 e0       	ldi	r18, 0x00	; 0
    484e:	30 e0       	ldi	r19, 0x00	; 0
    4850:	40 e8       	ldi	r20, 0x80	; 128
    4852:	5f e3       	ldi	r21, 0x3F	; 63
    4854:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4858:	88 23       	and	r24, r24
    485a:	2c f4       	brge	.+10     	; 0x4866 <Lcd_VidDisplayChracter+0x402>
		__ticks = 1;
    485c:	81 e0       	ldi	r24, 0x01	; 1
    485e:	90 e0       	ldi	r25, 0x00	; 0
    4860:	9e af       	std	Y+62, r25	; 0x3e
    4862:	8d af       	std	Y+61, r24	; 0x3d
    4864:	46 c0       	rjmp	.+140    	; 0x48f2 <Lcd_VidDisplayChracter+0x48e>
	else if (__tmp > 65535)
    4866:	fe 01       	movw	r30, r28
    4868:	ff 96       	adiw	r30, 0x3f	; 63
    486a:	60 81       	ld	r22, Z
    486c:	71 81       	ldd	r23, Z+1	; 0x01
    486e:	82 81       	ldd	r24, Z+2	; 0x02
    4870:	93 81       	ldd	r25, Z+3	; 0x03
    4872:	20 e0       	ldi	r18, 0x00	; 0
    4874:	3f ef       	ldi	r19, 0xFF	; 255
    4876:	4f e7       	ldi	r20, 0x7F	; 127
    4878:	57 e4       	ldi	r21, 0x47	; 71
    487a:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    487e:	18 16       	cp	r1, r24
    4880:	64 f5       	brge	.+88     	; 0x48da <Lcd_VidDisplayChracter+0x476>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4882:	fe 01       	movw	r30, r28
    4884:	ed 5b       	subi	r30, 0xBD	; 189
    4886:	ff 4f       	sbci	r31, 0xFF	; 255
    4888:	60 81       	ld	r22, Z
    488a:	71 81       	ldd	r23, Z+1	; 0x01
    488c:	82 81       	ldd	r24, Z+2	; 0x02
    488e:	93 81       	ldd	r25, Z+3	; 0x03
    4890:	20 e0       	ldi	r18, 0x00	; 0
    4892:	30 e0       	ldi	r19, 0x00	; 0
    4894:	40 e2       	ldi	r20, 0x20	; 32
    4896:	51 e4       	ldi	r21, 0x41	; 65
    4898:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    489c:	dc 01       	movw	r26, r24
    489e:	cb 01       	movw	r24, r22
    48a0:	bc 01       	movw	r22, r24
    48a2:	cd 01       	movw	r24, r26
    48a4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    48a8:	dc 01       	movw	r26, r24
    48aa:	cb 01       	movw	r24, r22
    48ac:	9e af       	std	Y+62, r25	; 0x3e
    48ae:	8d af       	std	Y+61, r24	; 0x3d
    48b0:	0f c0       	rjmp	.+30     	; 0x48d0 <Lcd_VidDisplayChracter+0x46c>
    48b2:	89 e1       	ldi	r24, 0x19	; 25
    48b4:	90 e0       	ldi	r25, 0x00	; 0
    48b6:	9c af       	std	Y+60, r25	; 0x3c
    48b8:	8b af       	std	Y+59, r24	; 0x3b
    48ba:	8b ad       	ldd	r24, Y+59	; 0x3b
    48bc:	9c ad       	ldd	r25, Y+60	; 0x3c
    48be:	01 97       	sbiw	r24, 0x01	; 1
    48c0:	f1 f7       	brne	.-4      	; 0x48be <Lcd_VidDisplayChracter+0x45a>
    48c2:	9c af       	std	Y+60, r25	; 0x3c
    48c4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48c6:	8d ad       	ldd	r24, Y+61	; 0x3d
    48c8:	9e ad       	ldd	r25, Y+62	; 0x3e
    48ca:	01 97       	sbiw	r24, 0x01	; 1
    48cc:	9e af       	std	Y+62, r25	; 0x3e
    48ce:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48d0:	8d ad       	ldd	r24, Y+61	; 0x3d
    48d2:	9e ad       	ldd	r25, Y+62	; 0x3e
    48d4:	00 97       	sbiw	r24, 0x00	; 0
    48d6:	69 f7       	brne	.-38     	; 0x48b2 <Lcd_VidDisplayChracter+0x44e>
    48d8:	16 c0       	rjmp	.+44     	; 0x4906 <Lcd_VidDisplayChracter+0x4a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48da:	fe 01       	movw	r30, r28
    48dc:	ff 96       	adiw	r30, 0x3f	; 63
    48de:	60 81       	ld	r22, Z
    48e0:	71 81       	ldd	r23, Z+1	; 0x01
    48e2:	82 81       	ldd	r24, Z+2	; 0x02
    48e4:	93 81       	ldd	r25, Z+3	; 0x03
    48e6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    48ea:	dc 01       	movw	r26, r24
    48ec:	cb 01       	movw	r24, r22
    48ee:	9e af       	std	Y+62, r25	; 0x3e
    48f0:	8d af       	std	Y+61, r24	; 0x3d
    48f2:	8d ad       	ldd	r24, Y+61	; 0x3d
    48f4:	9e ad       	ldd	r25, Y+62	; 0x3e
    48f6:	9a af       	std	Y+58, r25	; 0x3a
    48f8:	89 af       	std	Y+57, r24	; 0x39
    48fa:	89 ad       	ldd	r24, Y+57	; 0x39
    48fc:	9a ad       	ldd	r25, Y+58	; 0x3a
    48fe:	01 97       	sbiw	r24, 0x01	; 1
    4900:	f1 f7       	brne	.-4      	; 0x48fe <Lcd_VidDisplayChracter+0x49a>
    4902:	9a af       	std	Y+58, r25	; 0x3a
    4904:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    4906:	81 e1       	ldi	r24, 0x11	; 17
    4908:	60 e0       	ldi	r22, 0x00	; 0
    490a:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    490e:	80 e0       	ldi	r24, 0x00	; 0
    4910:	90 e0       	ldi	r25, 0x00	; 0
    4912:	a0 e8       	ldi	r26, 0x80	; 128
    4914:	bf e3       	ldi	r27, 0x3F	; 63
    4916:	8d ab       	std	Y+53, r24	; 0x35
    4918:	9e ab       	std	Y+54, r25	; 0x36
    491a:	af ab       	std	Y+55, r26	; 0x37
    491c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    491e:	6d a9       	ldd	r22, Y+53	; 0x35
    4920:	7e a9       	ldd	r23, Y+54	; 0x36
    4922:	8f a9       	ldd	r24, Y+55	; 0x37
    4924:	98 ad       	ldd	r25, Y+56	; 0x38
    4926:	20 e0       	ldi	r18, 0x00	; 0
    4928:	30 e0       	ldi	r19, 0x00	; 0
    492a:	4a e7       	ldi	r20, 0x7A	; 122
    492c:	53 e4       	ldi	r21, 0x43	; 67
    492e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4932:	dc 01       	movw	r26, r24
    4934:	cb 01       	movw	r24, r22
    4936:	89 ab       	std	Y+49, r24	; 0x31
    4938:	9a ab       	std	Y+50, r25	; 0x32
    493a:	ab ab       	std	Y+51, r26	; 0x33
    493c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    493e:	69 a9       	ldd	r22, Y+49	; 0x31
    4940:	7a a9       	ldd	r23, Y+50	; 0x32
    4942:	8b a9       	ldd	r24, Y+51	; 0x33
    4944:	9c a9       	ldd	r25, Y+52	; 0x34
    4946:	20 e0       	ldi	r18, 0x00	; 0
    4948:	30 e0       	ldi	r19, 0x00	; 0
    494a:	40 e8       	ldi	r20, 0x80	; 128
    494c:	5f e3       	ldi	r21, 0x3F	; 63
    494e:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4952:	88 23       	and	r24, r24
    4954:	2c f4       	brge	.+10     	; 0x4960 <Lcd_VidDisplayChracter+0x4fc>
		__ticks = 1;
    4956:	81 e0       	ldi	r24, 0x01	; 1
    4958:	90 e0       	ldi	r25, 0x00	; 0
    495a:	98 ab       	std	Y+48, r25	; 0x30
    495c:	8f a7       	std	Y+47, r24	; 0x2f
    495e:	3f c0       	rjmp	.+126    	; 0x49de <Lcd_VidDisplayChracter+0x57a>
	else if (__tmp > 65535)
    4960:	69 a9       	ldd	r22, Y+49	; 0x31
    4962:	7a a9       	ldd	r23, Y+50	; 0x32
    4964:	8b a9       	ldd	r24, Y+51	; 0x33
    4966:	9c a9       	ldd	r25, Y+52	; 0x34
    4968:	20 e0       	ldi	r18, 0x00	; 0
    496a:	3f ef       	ldi	r19, 0xFF	; 255
    496c:	4f e7       	ldi	r20, 0x7F	; 127
    496e:	57 e4       	ldi	r21, 0x47	; 71
    4970:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4974:	18 16       	cp	r1, r24
    4976:	4c f5       	brge	.+82     	; 0x49ca <Lcd_VidDisplayChracter+0x566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4978:	6d a9       	ldd	r22, Y+53	; 0x35
    497a:	7e a9       	ldd	r23, Y+54	; 0x36
    497c:	8f a9       	ldd	r24, Y+55	; 0x37
    497e:	98 ad       	ldd	r25, Y+56	; 0x38
    4980:	20 e0       	ldi	r18, 0x00	; 0
    4982:	30 e0       	ldi	r19, 0x00	; 0
    4984:	40 e2       	ldi	r20, 0x20	; 32
    4986:	51 e4       	ldi	r21, 0x41	; 65
    4988:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    498c:	dc 01       	movw	r26, r24
    498e:	cb 01       	movw	r24, r22
    4990:	bc 01       	movw	r22, r24
    4992:	cd 01       	movw	r24, r26
    4994:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4998:	dc 01       	movw	r26, r24
    499a:	cb 01       	movw	r24, r22
    499c:	98 ab       	std	Y+48, r25	; 0x30
    499e:	8f a7       	std	Y+47, r24	; 0x2f
    49a0:	0f c0       	rjmp	.+30     	; 0x49c0 <Lcd_VidDisplayChracter+0x55c>
    49a2:	89 e1       	ldi	r24, 0x19	; 25
    49a4:	90 e0       	ldi	r25, 0x00	; 0
    49a6:	9e a7       	std	Y+46, r25	; 0x2e
    49a8:	8d a7       	std	Y+45, r24	; 0x2d
    49aa:	8d a5       	ldd	r24, Y+45	; 0x2d
    49ac:	9e a5       	ldd	r25, Y+46	; 0x2e
    49ae:	01 97       	sbiw	r24, 0x01	; 1
    49b0:	f1 f7       	brne	.-4      	; 0x49ae <Lcd_VidDisplayChracter+0x54a>
    49b2:	9e a7       	std	Y+46, r25	; 0x2e
    49b4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49b6:	8f a5       	ldd	r24, Y+47	; 0x2f
    49b8:	98 a9       	ldd	r25, Y+48	; 0x30
    49ba:	01 97       	sbiw	r24, 0x01	; 1
    49bc:	98 ab       	std	Y+48, r25	; 0x30
    49be:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    49c2:	98 a9       	ldd	r25, Y+48	; 0x30
    49c4:	00 97       	sbiw	r24, 0x00	; 0
    49c6:	69 f7       	brne	.-38     	; 0x49a2 <Lcd_VidDisplayChracter+0x53e>
    49c8:	14 c0       	rjmp	.+40     	; 0x49f2 <Lcd_VidDisplayChracter+0x58e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49ca:	69 a9       	ldd	r22, Y+49	; 0x31
    49cc:	7a a9       	ldd	r23, Y+50	; 0x32
    49ce:	8b a9       	ldd	r24, Y+51	; 0x33
    49d0:	9c a9       	ldd	r25, Y+52	; 0x34
    49d2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    49d6:	dc 01       	movw	r26, r24
    49d8:	cb 01       	movw	r24, r22
    49da:	98 ab       	std	Y+48, r25	; 0x30
    49dc:	8f a7       	std	Y+47, r24	; 0x2f
    49de:	8f a5       	ldd	r24, Y+47	; 0x2f
    49e0:	98 a9       	ldd	r25, Y+48	; 0x30
    49e2:	9c a7       	std	Y+44, r25	; 0x2c
    49e4:	8b a7       	std	Y+43, r24	; 0x2b
    49e6:	8b a5       	ldd	r24, Y+43	; 0x2b
    49e8:	9c a5       	ldd	r25, Y+44	; 0x2c
    49ea:	01 97       	sbiw	r24, 0x01	; 1
    49ec:	f1 f7       	brne	.-4      	; 0x49ea <Lcd_VidDisplayChracter+0x586>
    49ee:	9c a7       	std	Y+44, r25	; 0x2c
    49f0:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    49f2:	81 e1       	ldi	r24, 0x11	; 17
    49f4:	61 e0       	ldi	r22, 0x01	; 1
    49f6:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    49fa:	80 e0       	ldi	r24, 0x00	; 0
    49fc:	90 e0       	ldi	r25, 0x00	; 0
    49fe:	a0 e8       	ldi	r26, 0x80	; 128
    4a00:	bf e3       	ldi	r27, 0x3F	; 63
    4a02:	8f a3       	std	Y+39, r24	; 0x27
    4a04:	98 a7       	std	Y+40, r25	; 0x28
    4a06:	a9 a7       	std	Y+41, r26	; 0x29
    4a08:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a0a:	6f a1       	ldd	r22, Y+39	; 0x27
    4a0c:	78 a5       	ldd	r23, Y+40	; 0x28
    4a0e:	89 a5       	ldd	r24, Y+41	; 0x29
    4a10:	9a a5       	ldd	r25, Y+42	; 0x2a
    4a12:	20 e0       	ldi	r18, 0x00	; 0
    4a14:	30 e0       	ldi	r19, 0x00	; 0
    4a16:	4a e7       	ldi	r20, 0x7A	; 122
    4a18:	53 e4       	ldi	r21, 0x43	; 67
    4a1a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4a1e:	dc 01       	movw	r26, r24
    4a20:	cb 01       	movw	r24, r22
    4a22:	8b a3       	std	Y+35, r24	; 0x23
    4a24:	9c a3       	std	Y+36, r25	; 0x24
    4a26:	ad a3       	std	Y+37, r26	; 0x25
    4a28:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4a2a:	6b a1       	ldd	r22, Y+35	; 0x23
    4a2c:	7c a1       	ldd	r23, Y+36	; 0x24
    4a2e:	8d a1       	ldd	r24, Y+37	; 0x25
    4a30:	9e a1       	ldd	r25, Y+38	; 0x26
    4a32:	20 e0       	ldi	r18, 0x00	; 0
    4a34:	30 e0       	ldi	r19, 0x00	; 0
    4a36:	40 e8       	ldi	r20, 0x80	; 128
    4a38:	5f e3       	ldi	r21, 0x3F	; 63
    4a3a:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4a3e:	88 23       	and	r24, r24
    4a40:	2c f4       	brge	.+10     	; 0x4a4c <Lcd_VidDisplayChracter+0x5e8>
		__ticks = 1;
    4a42:	81 e0       	ldi	r24, 0x01	; 1
    4a44:	90 e0       	ldi	r25, 0x00	; 0
    4a46:	9a a3       	std	Y+34, r25	; 0x22
    4a48:	89 a3       	std	Y+33, r24	; 0x21
    4a4a:	3f c0       	rjmp	.+126    	; 0x4aca <Lcd_VidDisplayChracter+0x666>
	else if (__tmp > 65535)
    4a4c:	6b a1       	ldd	r22, Y+35	; 0x23
    4a4e:	7c a1       	ldd	r23, Y+36	; 0x24
    4a50:	8d a1       	ldd	r24, Y+37	; 0x25
    4a52:	9e a1       	ldd	r25, Y+38	; 0x26
    4a54:	20 e0       	ldi	r18, 0x00	; 0
    4a56:	3f ef       	ldi	r19, 0xFF	; 255
    4a58:	4f e7       	ldi	r20, 0x7F	; 127
    4a5a:	57 e4       	ldi	r21, 0x47	; 71
    4a5c:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4a60:	18 16       	cp	r1, r24
    4a62:	4c f5       	brge	.+82     	; 0x4ab6 <Lcd_VidDisplayChracter+0x652>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a64:	6f a1       	ldd	r22, Y+39	; 0x27
    4a66:	78 a5       	ldd	r23, Y+40	; 0x28
    4a68:	89 a5       	ldd	r24, Y+41	; 0x29
    4a6a:	9a a5       	ldd	r25, Y+42	; 0x2a
    4a6c:	20 e0       	ldi	r18, 0x00	; 0
    4a6e:	30 e0       	ldi	r19, 0x00	; 0
    4a70:	40 e2       	ldi	r20, 0x20	; 32
    4a72:	51 e4       	ldi	r21, 0x41	; 65
    4a74:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4a78:	dc 01       	movw	r26, r24
    4a7a:	cb 01       	movw	r24, r22
    4a7c:	bc 01       	movw	r22, r24
    4a7e:	cd 01       	movw	r24, r26
    4a80:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4a84:	dc 01       	movw	r26, r24
    4a86:	cb 01       	movw	r24, r22
    4a88:	9a a3       	std	Y+34, r25	; 0x22
    4a8a:	89 a3       	std	Y+33, r24	; 0x21
    4a8c:	0f c0       	rjmp	.+30     	; 0x4aac <Lcd_VidDisplayChracter+0x648>
    4a8e:	89 e1       	ldi	r24, 0x19	; 25
    4a90:	90 e0       	ldi	r25, 0x00	; 0
    4a92:	98 a3       	std	Y+32, r25	; 0x20
    4a94:	8f 8f       	std	Y+31, r24	; 0x1f
    4a96:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4a98:	98 a1       	ldd	r25, Y+32	; 0x20
    4a9a:	01 97       	sbiw	r24, 0x01	; 1
    4a9c:	f1 f7       	brne	.-4      	; 0x4a9a <Lcd_VidDisplayChracter+0x636>
    4a9e:	98 a3       	std	Y+32, r25	; 0x20
    4aa0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4aa2:	89 a1       	ldd	r24, Y+33	; 0x21
    4aa4:	9a a1       	ldd	r25, Y+34	; 0x22
    4aa6:	01 97       	sbiw	r24, 0x01	; 1
    4aa8:	9a a3       	std	Y+34, r25	; 0x22
    4aaa:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4aac:	89 a1       	ldd	r24, Y+33	; 0x21
    4aae:	9a a1       	ldd	r25, Y+34	; 0x22
    4ab0:	00 97       	sbiw	r24, 0x00	; 0
    4ab2:	69 f7       	brne	.-38     	; 0x4a8e <Lcd_VidDisplayChracter+0x62a>
    4ab4:	14 c0       	rjmp	.+40     	; 0x4ade <Lcd_VidDisplayChracter+0x67a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ab6:	6b a1       	ldd	r22, Y+35	; 0x23
    4ab8:	7c a1       	ldd	r23, Y+36	; 0x24
    4aba:	8d a1       	ldd	r24, Y+37	; 0x25
    4abc:	9e a1       	ldd	r25, Y+38	; 0x26
    4abe:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4ac2:	dc 01       	movw	r26, r24
    4ac4:	cb 01       	movw	r24, r22
    4ac6:	9a a3       	std	Y+34, r25	; 0x22
    4ac8:	89 a3       	std	Y+33, r24	; 0x21
    4aca:	89 a1       	ldd	r24, Y+33	; 0x21
    4acc:	9a a1       	ldd	r25, Y+34	; 0x22
    4ace:	9e 8f       	std	Y+30, r25	; 0x1e
    4ad0:	8d 8f       	std	Y+29, r24	; 0x1d
    4ad2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4ad4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4ad6:	01 97       	sbiw	r24, 0x01	; 1
    4ad8:	f1 f7       	brne	.-4      	; 0x4ad6 <Lcd_VidDisplayChracter+0x672>
    4ada:	9e 8f       	std	Y+30, r25	; 0x1e
    4adc:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);


	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,0));
    4ade:	fe 01       	movw	r30, r28
    4ae0:	ed 59       	subi	r30, 0x9D	; 157
    4ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ae4:	80 81       	ld	r24, Z
    4ae6:	98 2f       	mov	r25, r24
    4ae8:	91 70       	andi	r25, 0x01	; 1
    4aea:	82 e1       	ldi	r24, 0x12	; 18
    4aec:	69 2f       	mov	r22, r25
    4aee:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,1));
    4af2:	fe 01       	movw	r30, r28
    4af4:	ed 59       	subi	r30, 0x9D	; 157
    4af6:	ff 4f       	sbci	r31, 0xFF	; 255
    4af8:	80 81       	ld	r24, Z
    4afa:	88 2f       	mov	r24, r24
    4afc:	90 e0       	ldi	r25, 0x00	; 0
    4afe:	82 70       	andi	r24, 0x02	; 2
    4b00:	90 70       	andi	r25, 0x00	; 0
    4b02:	95 95       	asr	r25
    4b04:	87 95       	ror	r24
    4b06:	98 2f       	mov	r25, r24
    4b08:	83 e1       	ldi	r24, 0x13	; 19
    4b0a:	69 2f       	mov	r22, r25
    4b0c:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,2));
    4b10:	fe 01       	movw	r30, r28
    4b12:	ed 59       	subi	r30, 0x9D	; 157
    4b14:	ff 4f       	sbci	r31, 0xFF	; 255
    4b16:	80 81       	ld	r24, Z
    4b18:	88 2f       	mov	r24, r24
    4b1a:	90 e0       	ldi	r25, 0x00	; 0
    4b1c:	84 70       	andi	r24, 0x04	; 4
    4b1e:	90 70       	andi	r25, 0x00	; 0
    4b20:	95 95       	asr	r25
    4b22:	87 95       	ror	r24
    4b24:	95 95       	asr	r25
    4b26:	87 95       	ror	r24
    4b28:	98 2f       	mov	r25, r24
    4b2a:	84 e1       	ldi	r24, 0x14	; 20
    4b2c:	69 2f       	mov	r22, r25
    4b2e:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,3));
    4b32:	fe 01       	movw	r30, r28
    4b34:	ed 59       	subi	r30, 0x9D	; 157
    4b36:	ff 4f       	sbci	r31, 0xFF	; 255
    4b38:	80 81       	ld	r24, Z
    4b3a:	88 2f       	mov	r24, r24
    4b3c:	90 e0       	ldi	r25, 0x00	; 0
    4b3e:	88 70       	andi	r24, 0x08	; 8
    4b40:	90 70       	andi	r25, 0x00	; 0
    4b42:	95 95       	asr	r25
    4b44:	87 95       	ror	r24
    4b46:	95 95       	asr	r25
    4b48:	87 95       	ror	r24
    4b4a:	95 95       	asr	r25
    4b4c:	87 95       	ror	r24
    4b4e:	98 2f       	mov	r25, r24
    4b50:	85 e1       	ldi	r24, 0x15	; 21
    4b52:	69 2f       	mov	r22, r25
    4b54:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    4b58:	80 e0       	ldi	r24, 0x00	; 0
    4b5a:	90 e0       	ldi	r25, 0x00	; 0
    4b5c:	a0 e8       	ldi	r26, 0x80	; 128
    4b5e:	bf e3       	ldi	r27, 0x3F	; 63
    4b60:	89 8f       	std	Y+25, r24	; 0x19
    4b62:	9a 8f       	std	Y+26, r25	; 0x1a
    4b64:	ab 8f       	std	Y+27, r26	; 0x1b
    4b66:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b68:	69 8d       	ldd	r22, Y+25	; 0x19
    4b6a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4b6c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4b6e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4b70:	20 e0       	ldi	r18, 0x00	; 0
    4b72:	30 e0       	ldi	r19, 0x00	; 0
    4b74:	4a e7       	ldi	r20, 0x7A	; 122
    4b76:	53 e4       	ldi	r21, 0x43	; 67
    4b78:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4b7c:	dc 01       	movw	r26, r24
    4b7e:	cb 01       	movw	r24, r22
    4b80:	8d 8b       	std	Y+21, r24	; 0x15
    4b82:	9e 8b       	std	Y+22, r25	; 0x16
    4b84:	af 8b       	std	Y+23, r26	; 0x17
    4b86:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4b88:	6d 89       	ldd	r22, Y+21	; 0x15
    4b8a:	7e 89       	ldd	r23, Y+22	; 0x16
    4b8c:	8f 89       	ldd	r24, Y+23	; 0x17
    4b8e:	98 8d       	ldd	r25, Y+24	; 0x18
    4b90:	20 e0       	ldi	r18, 0x00	; 0
    4b92:	30 e0       	ldi	r19, 0x00	; 0
    4b94:	40 e8       	ldi	r20, 0x80	; 128
    4b96:	5f e3       	ldi	r21, 0x3F	; 63
    4b98:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4b9c:	88 23       	and	r24, r24
    4b9e:	2c f4       	brge	.+10     	; 0x4baa <Lcd_VidDisplayChracter+0x746>
		__ticks = 1;
    4ba0:	81 e0       	ldi	r24, 0x01	; 1
    4ba2:	90 e0       	ldi	r25, 0x00	; 0
    4ba4:	9c 8b       	std	Y+20, r25	; 0x14
    4ba6:	8b 8b       	std	Y+19, r24	; 0x13
    4ba8:	3f c0       	rjmp	.+126    	; 0x4c28 <Lcd_VidDisplayChracter+0x7c4>
	else if (__tmp > 65535)
    4baa:	6d 89       	ldd	r22, Y+21	; 0x15
    4bac:	7e 89       	ldd	r23, Y+22	; 0x16
    4bae:	8f 89       	ldd	r24, Y+23	; 0x17
    4bb0:	98 8d       	ldd	r25, Y+24	; 0x18
    4bb2:	20 e0       	ldi	r18, 0x00	; 0
    4bb4:	3f ef       	ldi	r19, 0xFF	; 255
    4bb6:	4f e7       	ldi	r20, 0x7F	; 127
    4bb8:	57 e4       	ldi	r21, 0x47	; 71
    4bba:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4bbe:	18 16       	cp	r1, r24
    4bc0:	4c f5       	brge	.+82     	; 0x4c14 <Lcd_VidDisplayChracter+0x7b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bc2:	69 8d       	ldd	r22, Y+25	; 0x19
    4bc4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4bc6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4bc8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4bca:	20 e0       	ldi	r18, 0x00	; 0
    4bcc:	30 e0       	ldi	r19, 0x00	; 0
    4bce:	40 e2       	ldi	r20, 0x20	; 32
    4bd0:	51 e4       	ldi	r21, 0x41	; 65
    4bd2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4bd6:	dc 01       	movw	r26, r24
    4bd8:	cb 01       	movw	r24, r22
    4bda:	bc 01       	movw	r22, r24
    4bdc:	cd 01       	movw	r24, r26
    4bde:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4be2:	dc 01       	movw	r26, r24
    4be4:	cb 01       	movw	r24, r22
    4be6:	9c 8b       	std	Y+20, r25	; 0x14
    4be8:	8b 8b       	std	Y+19, r24	; 0x13
    4bea:	0f c0       	rjmp	.+30     	; 0x4c0a <Lcd_VidDisplayChracter+0x7a6>
    4bec:	89 e1       	ldi	r24, 0x19	; 25
    4bee:	90 e0       	ldi	r25, 0x00	; 0
    4bf0:	9a 8b       	std	Y+18, r25	; 0x12
    4bf2:	89 8b       	std	Y+17, r24	; 0x11
    4bf4:	89 89       	ldd	r24, Y+17	; 0x11
    4bf6:	9a 89       	ldd	r25, Y+18	; 0x12
    4bf8:	01 97       	sbiw	r24, 0x01	; 1
    4bfa:	f1 f7       	brne	.-4      	; 0x4bf8 <Lcd_VidDisplayChracter+0x794>
    4bfc:	9a 8b       	std	Y+18, r25	; 0x12
    4bfe:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c00:	8b 89       	ldd	r24, Y+19	; 0x13
    4c02:	9c 89       	ldd	r25, Y+20	; 0x14
    4c04:	01 97       	sbiw	r24, 0x01	; 1
    4c06:	9c 8b       	std	Y+20, r25	; 0x14
    4c08:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c0a:	8b 89       	ldd	r24, Y+19	; 0x13
    4c0c:	9c 89       	ldd	r25, Y+20	; 0x14
    4c0e:	00 97       	sbiw	r24, 0x00	; 0
    4c10:	69 f7       	brne	.-38     	; 0x4bec <Lcd_VidDisplayChracter+0x788>
    4c12:	14 c0       	rjmp	.+40     	; 0x4c3c <Lcd_VidDisplayChracter+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c14:	6d 89       	ldd	r22, Y+21	; 0x15
    4c16:	7e 89       	ldd	r23, Y+22	; 0x16
    4c18:	8f 89       	ldd	r24, Y+23	; 0x17
    4c1a:	98 8d       	ldd	r25, Y+24	; 0x18
    4c1c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4c20:	dc 01       	movw	r26, r24
    4c22:	cb 01       	movw	r24, r22
    4c24:	9c 8b       	std	Y+20, r25	; 0x14
    4c26:	8b 8b       	std	Y+19, r24	; 0x13
    4c28:	8b 89       	ldd	r24, Y+19	; 0x13
    4c2a:	9c 89       	ldd	r25, Y+20	; 0x14
    4c2c:	98 8b       	std	Y+16, r25	; 0x10
    4c2e:	8f 87       	std	Y+15, r24	; 0x0f
    4c30:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c32:	98 89       	ldd	r25, Y+16	; 0x10
    4c34:	01 97       	sbiw	r24, 0x01	; 1
    4c36:	f1 f7       	brne	.-4      	; 0x4c34 <Lcd_VidDisplayChracter+0x7d0>
    4c38:	98 8b       	std	Y+16, r25	; 0x10
    4c3a:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    4c3c:	81 e1       	ldi	r24, 0x11	; 17
    4c3e:	60 e0       	ldi	r22, 0x00	; 0
    4c40:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    4c44:	80 e0       	ldi	r24, 0x00	; 0
    4c46:	90 e0       	ldi	r25, 0x00	; 0
    4c48:	a0 e8       	ldi	r26, 0x80	; 128
    4c4a:	bf e3       	ldi	r27, 0x3F	; 63
    4c4c:	8b 87       	std	Y+11, r24	; 0x0b
    4c4e:	9c 87       	std	Y+12, r25	; 0x0c
    4c50:	ad 87       	std	Y+13, r26	; 0x0d
    4c52:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c54:	6b 85       	ldd	r22, Y+11	; 0x0b
    4c56:	7c 85       	ldd	r23, Y+12	; 0x0c
    4c58:	8d 85       	ldd	r24, Y+13	; 0x0d
    4c5a:	9e 85       	ldd	r25, Y+14	; 0x0e
    4c5c:	20 e0       	ldi	r18, 0x00	; 0
    4c5e:	30 e0       	ldi	r19, 0x00	; 0
    4c60:	4a e7       	ldi	r20, 0x7A	; 122
    4c62:	53 e4       	ldi	r21, 0x43	; 67
    4c64:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4c68:	dc 01       	movw	r26, r24
    4c6a:	cb 01       	movw	r24, r22
    4c6c:	8f 83       	std	Y+7, r24	; 0x07
    4c6e:	98 87       	std	Y+8, r25	; 0x08
    4c70:	a9 87       	std	Y+9, r26	; 0x09
    4c72:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4c74:	6f 81       	ldd	r22, Y+7	; 0x07
    4c76:	78 85       	ldd	r23, Y+8	; 0x08
    4c78:	89 85       	ldd	r24, Y+9	; 0x09
    4c7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c7c:	20 e0       	ldi	r18, 0x00	; 0
    4c7e:	30 e0       	ldi	r19, 0x00	; 0
    4c80:	40 e8       	ldi	r20, 0x80	; 128
    4c82:	5f e3       	ldi	r21, 0x3F	; 63
    4c84:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4c88:	88 23       	and	r24, r24
    4c8a:	2c f4       	brge	.+10     	; 0x4c96 <Lcd_VidDisplayChracter+0x832>
		__ticks = 1;
    4c8c:	81 e0       	ldi	r24, 0x01	; 1
    4c8e:	90 e0       	ldi	r25, 0x00	; 0
    4c90:	9e 83       	std	Y+6, r25	; 0x06
    4c92:	8d 83       	std	Y+5, r24	; 0x05
    4c94:	3f c0       	rjmp	.+126    	; 0x4d14 <Lcd_VidDisplayChracter+0x8b0>
	else if (__tmp > 65535)
    4c96:	6f 81       	ldd	r22, Y+7	; 0x07
    4c98:	78 85       	ldd	r23, Y+8	; 0x08
    4c9a:	89 85       	ldd	r24, Y+9	; 0x09
    4c9c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c9e:	20 e0       	ldi	r18, 0x00	; 0
    4ca0:	3f ef       	ldi	r19, 0xFF	; 255
    4ca2:	4f e7       	ldi	r20, 0x7F	; 127
    4ca4:	57 e4       	ldi	r21, 0x47	; 71
    4ca6:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4caa:	18 16       	cp	r1, r24
    4cac:	4c f5       	brge	.+82     	; 0x4d00 <Lcd_VidDisplayChracter+0x89c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4cae:	6b 85       	ldd	r22, Y+11	; 0x0b
    4cb0:	7c 85       	ldd	r23, Y+12	; 0x0c
    4cb2:	8d 85       	ldd	r24, Y+13	; 0x0d
    4cb4:	9e 85       	ldd	r25, Y+14	; 0x0e
    4cb6:	20 e0       	ldi	r18, 0x00	; 0
    4cb8:	30 e0       	ldi	r19, 0x00	; 0
    4cba:	40 e2       	ldi	r20, 0x20	; 32
    4cbc:	51 e4       	ldi	r21, 0x41	; 65
    4cbe:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4cc2:	dc 01       	movw	r26, r24
    4cc4:	cb 01       	movw	r24, r22
    4cc6:	bc 01       	movw	r22, r24
    4cc8:	cd 01       	movw	r24, r26
    4cca:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4cce:	dc 01       	movw	r26, r24
    4cd0:	cb 01       	movw	r24, r22
    4cd2:	9e 83       	std	Y+6, r25	; 0x06
    4cd4:	8d 83       	std	Y+5, r24	; 0x05
    4cd6:	0f c0       	rjmp	.+30     	; 0x4cf6 <Lcd_VidDisplayChracter+0x892>
    4cd8:	89 e1       	ldi	r24, 0x19	; 25
    4cda:	90 e0       	ldi	r25, 0x00	; 0
    4cdc:	9c 83       	std	Y+4, r25	; 0x04
    4cde:	8b 83       	std	Y+3, r24	; 0x03
    4ce0:	8b 81       	ldd	r24, Y+3	; 0x03
    4ce2:	9c 81       	ldd	r25, Y+4	; 0x04
    4ce4:	01 97       	sbiw	r24, 0x01	; 1
    4ce6:	f1 f7       	brne	.-4      	; 0x4ce4 <Lcd_VidDisplayChracter+0x880>
    4ce8:	9c 83       	std	Y+4, r25	; 0x04
    4cea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4cec:	8d 81       	ldd	r24, Y+5	; 0x05
    4cee:	9e 81       	ldd	r25, Y+6	; 0x06
    4cf0:	01 97       	sbiw	r24, 0x01	; 1
    4cf2:	9e 83       	std	Y+6, r25	; 0x06
    4cf4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4cf6:	8d 81       	ldd	r24, Y+5	; 0x05
    4cf8:	9e 81       	ldd	r25, Y+6	; 0x06
    4cfa:	00 97       	sbiw	r24, 0x00	; 0
    4cfc:	69 f7       	brne	.-38     	; 0x4cd8 <Lcd_VidDisplayChracter+0x874>
    4cfe:	14 c0       	rjmp	.+40     	; 0x4d28 <Lcd_VidDisplayChracter+0x8c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d00:	6f 81       	ldd	r22, Y+7	; 0x07
    4d02:	78 85       	ldd	r23, Y+8	; 0x08
    4d04:	89 85       	ldd	r24, Y+9	; 0x09
    4d06:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d08:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4d0c:	dc 01       	movw	r26, r24
    4d0e:	cb 01       	movw	r24, r22
    4d10:	9e 83       	std	Y+6, r25	; 0x06
    4d12:	8d 83       	std	Y+5, r24	; 0x05
    4d14:	8d 81       	ldd	r24, Y+5	; 0x05
    4d16:	9e 81       	ldd	r25, Y+6	; 0x06
    4d18:	9a 83       	std	Y+2, r25	; 0x02
    4d1a:	89 83       	std	Y+1, r24	; 0x01
    4d1c:	89 81       	ldd	r24, Y+1	; 0x01
    4d1e:	9a 81       	ldd	r25, Y+2	; 0x02
    4d20:	01 97       	sbiw	r24, 0x01	; 1
    4d22:	f1 f7       	brne	.-4      	; 0x4d20 <Lcd_VidDisplayChracter+0x8bc>
    4d24:	9a 83       	std	Y+2, r25	; 0x02
    4d26:	89 83       	std	Y+1, r24	; 0x01
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
	_delay_ms(2);
#endif
}
    4d28:	cd 59       	subi	r28, 0x9D	; 157
    4d2a:	df 4f       	sbci	r29, 0xFF	; 255
    4d2c:	0f b6       	in	r0, 0x3f	; 63
    4d2e:	f8 94       	cli
    4d30:	de bf       	out	0x3e, r29	; 62
    4d32:	0f be       	out	0x3f, r0	; 63
    4d34:	cd bf       	out	0x3d, r28	; 61
    4d36:	cf 91       	pop	r28
    4d38:	df 91       	pop	r29
    4d3a:	1f 91       	pop	r17
    4d3c:	0f 91       	pop	r16
    4d3e:	08 95       	ret

00004d40 <Lcd_VidCreateCustomCharacter>:



void Lcd_VidCreateCustomCharacter(pu8 Add_Pu8CustomCharcter,uint8 Index)
{
    4d40:	df 93       	push	r29
    4d42:	cf 93       	push	r28
    4d44:	cd b7       	in	r28, 0x3d	; 61
    4d46:	de b7       	in	r29, 0x3e	; 62
    4d48:	62 97       	sbiw	r28, 0x12	; 18
    4d4a:	0f b6       	in	r0, 0x3f	; 63
    4d4c:	f8 94       	cli
    4d4e:	de bf       	out	0x3e, r29	; 62
    4d50:	0f be       	out	0x3f, r0	; 63
    4d52:	cd bf       	out	0x3d, r28	; 61
    4d54:	99 8b       	std	Y+17, r25	; 0x11
    4d56:	88 8b       	std	Y+16, r24	; 0x10
    4d58:	6a 8b       	std	Y+18, r22	; 0x12
	uint8 LOC_u8Iterator=0;
    4d5a:	1f 86       	std	Y+15, r1	; 0x0f
	if(Index<8)
    4d5c:	8a 89       	ldd	r24, Y+18	; 0x12
    4d5e:	88 30       	cpi	r24, 0x08	; 8
    4d60:	08 f0       	brcs	.+2      	; 0x4d64 <Lcd_VidCreateCustomCharacter+0x24>
    4d62:	94 c0       	rjmp	.+296    	; 0x4e8c <Lcd_VidCreateCustomCharacter+0x14c>
	{
		Lcd_VidSendCommand(0x40+(Index*8));
    4d64:	8a 89       	ldd	r24, Y+18	; 0x12
    4d66:	88 2f       	mov	r24, r24
    4d68:	90 e0       	ldi	r25, 0x00	; 0
    4d6a:	08 96       	adiw	r24, 0x08	; 8
    4d6c:	88 0f       	add	r24, r24
    4d6e:	99 1f       	adc	r25, r25
    4d70:	88 0f       	add	r24, r24
    4d72:	99 1f       	adc	r25, r25
    4d74:	88 0f       	add	r24, r24
    4d76:	99 1f       	adc	r25, r25
    4d78:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
    4d7c:	80 e0       	ldi	r24, 0x00	; 0
    4d7e:	90 e0       	ldi	r25, 0x00	; 0
    4d80:	a0 e8       	ldi	r26, 0x80	; 128
    4d82:	bf e3       	ldi	r27, 0x3F	; 63
    4d84:	8b 87       	std	Y+11, r24	; 0x0b
    4d86:	9c 87       	std	Y+12, r25	; 0x0c
    4d88:	ad 87       	std	Y+13, r26	; 0x0d
    4d8a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d8c:	6b 85       	ldd	r22, Y+11	; 0x0b
    4d8e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4d90:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d92:	9e 85       	ldd	r25, Y+14	; 0x0e
    4d94:	20 e0       	ldi	r18, 0x00	; 0
    4d96:	30 e0       	ldi	r19, 0x00	; 0
    4d98:	4a e7       	ldi	r20, 0x7A	; 122
    4d9a:	53 e4       	ldi	r21, 0x43	; 67
    4d9c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4da0:	dc 01       	movw	r26, r24
    4da2:	cb 01       	movw	r24, r22
    4da4:	8f 83       	std	Y+7, r24	; 0x07
    4da6:	98 87       	std	Y+8, r25	; 0x08
    4da8:	a9 87       	std	Y+9, r26	; 0x09
    4daa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4dac:	6f 81       	ldd	r22, Y+7	; 0x07
    4dae:	78 85       	ldd	r23, Y+8	; 0x08
    4db0:	89 85       	ldd	r24, Y+9	; 0x09
    4db2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4db4:	20 e0       	ldi	r18, 0x00	; 0
    4db6:	30 e0       	ldi	r19, 0x00	; 0
    4db8:	40 e8       	ldi	r20, 0x80	; 128
    4dba:	5f e3       	ldi	r21, 0x3F	; 63
    4dbc:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    4dc0:	88 23       	and	r24, r24
    4dc2:	2c f4       	brge	.+10     	; 0x4dce <Lcd_VidCreateCustomCharacter+0x8e>
		__ticks = 1;
    4dc4:	81 e0       	ldi	r24, 0x01	; 1
    4dc6:	90 e0       	ldi	r25, 0x00	; 0
    4dc8:	9e 83       	std	Y+6, r25	; 0x06
    4dca:	8d 83       	std	Y+5, r24	; 0x05
    4dcc:	3f c0       	rjmp	.+126    	; 0x4e4c <Lcd_VidCreateCustomCharacter+0x10c>
	else if (__tmp > 65535)
    4dce:	6f 81       	ldd	r22, Y+7	; 0x07
    4dd0:	78 85       	ldd	r23, Y+8	; 0x08
    4dd2:	89 85       	ldd	r24, Y+9	; 0x09
    4dd4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dd6:	20 e0       	ldi	r18, 0x00	; 0
    4dd8:	3f ef       	ldi	r19, 0xFF	; 255
    4dda:	4f e7       	ldi	r20, 0x7F	; 127
    4ddc:	57 e4       	ldi	r21, 0x47	; 71
    4dde:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    4de2:	18 16       	cp	r1, r24
    4de4:	4c f5       	brge	.+82     	; 0x4e38 <Lcd_VidCreateCustomCharacter+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4de6:	6b 85       	ldd	r22, Y+11	; 0x0b
    4de8:	7c 85       	ldd	r23, Y+12	; 0x0c
    4dea:	8d 85       	ldd	r24, Y+13	; 0x0d
    4dec:	9e 85       	ldd	r25, Y+14	; 0x0e
    4dee:	20 e0       	ldi	r18, 0x00	; 0
    4df0:	30 e0       	ldi	r19, 0x00	; 0
    4df2:	40 e2       	ldi	r20, 0x20	; 32
    4df4:	51 e4       	ldi	r21, 0x41	; 65
    4df6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4dfa:	dc 01       	movw	r26, r24
    4dfc:	cb 01       	movw	r24, r22
    4dfe:	bc 01       	movw	r22, r24
    4e00:	cd 01       	movw	r24, r26
    4e02:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4e06:	dc 01       	movw	r26, r24
    4e08:	cb 01       	movw	r24, r22
    4e0a:	9e 83       	std	Y+6, r25	; 0x06
    4e0c:	8d 83       	std	Y+5, r24	; 0x05
    4e0e:	0f c0       	rjmp	.+30     	; 0x4e2e <Lcd_VidCreateCustomCharacter+0xee>
    4e10:	89 e1       	ldi	r24, 0x19	; 25
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	9c 83       	std	Y+4, r25	; 0x04
    4e16:	8b 83       	std	Y+3, r24	; 0x03
    4e18:	8b 81       	ldd	r24, Y+3	; 0x03
    4e1a:	9c 81       	ldd	r25, Y+4	; 0x04
    4e1c:	01 97       	sbiw	r24, 0x01	; 1
    4e1e:	f1 f7       	brne	.-4      	; 0x4e1c <Lcd_VidCreateCustomCharacter+0xdc>
    4e20:	9c 83       	std	Y+4, r25	; 0x04
    4e22:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e24:	8d 81       	ldd	r24, Y+5	; 0x05
    4e26:	9e 81       	ldd	r25, Y+6	; 0x06
    4e28:	01 97       	sbiw	r24, 0x01	; 1
    4e2a:	9e 83       	std	Y+6, r25	; 0x06
    4e2c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e2e:	8d 81       	ldd	r24, Y+5	; 0x05
    4e30:	9e 81       	ldd	r25, Y+6	; 0x06
    4e32:	00 97       	sbiw	r24, 0x00	; 0
    4e34:	69 f7       	brne	.-38     	; 0x4e10 <Lcd_VidCreateCustomCharacter+0xd0>
    4e36:	14 c0       	rjmp	.+40     	; 0x4e60 <Lcd_VidCreateCustomCharacter+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e38:	6f 81       	ldd	r22, Y+7	; 0x07
    4e3a:	78 85       	ldd	r23, Y+8	; 0x08
    4e3c:	89 85       	ldd	r24, Y+9	; 0x09
    4e3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e40:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4e44:	dc 01       	movw	r26, r24
    4e46:	cb 01       	movw	r24, r22
    4e48:	9e 83       	std	Y+6, r25	; 0x06
    4e4a:	8d 83       	std	Y+5, r24	; 0x05
    4e4c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e4e:	9e 81       	ldd	r25, Y+6	; 0x06
    4e50:	9a 83       	std	Y+2, r25	; 0x02
    4e52:	89 83       	std	Y+1, r24	; 0x01
    4e54:	89 81       	ldd	r24, Y+1	; 0x01
    4e56:	9a 81       	ldd	r25, Y+2	; 0x02
    4e58:	01 97       	sbiw	r24, 0x01	; 1
    4e5a:	f1 f7       	brne	.-4      	; 0x4e58 <Lcd_VidCreateCustomCharacter+0x118>
    4e5c:	9a 83       	std	Y+2, r25	; 0x02
    4e5e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);
		for(LOC_u8Iterator=0;LOC_u8Iterator<8;LOC_u8Iterator++)
    4e60:	1f 86       	std	Y+15, r1	; 0x0f
    4e62:	0e c0       	rjmp	.+28     	; 0x4e80 <Lcd_VidCreateCustomCharacter+0x140>
		{
			Lcd_VidDisplayChracter(Add_Pu8CustomCharcter[LOC_u8Iterator]);
    4e64:	8f 85       	ldd	r24, Y+15	; 0x0f
    4e66:	28 2f       	mov	r18, r24
    4e68:	30 e0       	ldi	r19, 0x00	; 0
    4e6a:	88 89       	ldd	r24, Y+16	; 0x10
    4e6c:	99 89       	ldd	r25, Y+17	; 0x11
    4e6e:	fc 01       	movw	r30, r24
    4e70:	e2 0f       	add	r30, r18
    4e72:	f3 1f       	adc	r31, r19
    4e74:	80 81       	ld	r24, Z
    4e76:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
	uint8 LOC_u8Iterator=0;
	if(Index<8)
	{
		Lcd_VidSendCommand(0x40+(Index*8));
		_delay_ms(1);
		for(LOC_u8Iterator=0;LOC_u8Iterator<8;LOC_u8Iterator++)
    4e7a:	8f 85       	ldd	r24, Y+15	; 0x0f
    4e7c:	8f 5f       	subi	r24, 0xFF	; 255
    4e7e:	8f 87       	std	Y+15, r24	; 0x0f
    4e80:	8f 85       	ldd	r24, Y+15	; 0x0f
    4e82:	88 30       	cpi	r24, 0x08	; 8
    4e84:	78 f3       	brcs	.-34     	; 0x4e64 <Lcd_VidCreateCustomCharacter+0x124>
		{
			Lcd_VidDisplayChracter(Add_Pu8CustomCharcter[LOC_u8Iterator]);
		}
		Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD);
    4e86:	80 e8       	ldi	r24, 0x80	; 128
    4e88:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>



	}
}
    4e8c:	62 96       	adiw	r28, 0x12	; 18
    4e8e:	0f b6       	in	r0, 0x3f	; 63
    4e90:	f8 94       	cli
    4e92:	de bf       	out	0x3e, r29	; 62
    4e94:	0f be       	out	0x3f, r0	; 63
    4e96:	cd bf       	out	0x3d, r28	; 61
    4e98:	cf 91       	pop	r28
    4e9a:	df 91       	pop	r29
    4e9c:	08 95       	ret

00004e9e <Lcd_VidGoToXY>:



void Lcd_VidGoToXY(uint8 Copy_u8Row,uint8 Copy_u8Column)
{if(Copy_u8Row == 0)
    4e9e:	df 93       	push	r29
    4ea0:	cf 93       	push	r28
    4ea2:	00 d0       	rcall	.+0      	; 0x4ea4 <Lcd_VidGoToXY+0x6>
    4ea4:	cd b7       	in	r28, 0x3d	; 61
    4ea6:	de b7       	in	r29, 0x3e	; 62
    4ea8:	89 83       	std	Y+1, r24	; 0x01
    4eaa:	6a 83       	std	Y+2, r22	; 0x02
    4eac:	89 81       	ldd	r24, Y+1	; 0x01
    4eae:	88 23       	and	r24, r24
    4eb0:	29 f4       	brne	.+10     	; 0x4ebc <Lcd_VidGoToXY+0x1e>
{
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0 + Copy_u8Column);
    4eb2:	8a 81       	ldd	r24, Y+2	; 0x02
    4eb4:	80 58       	subi	r24, 0x80	; 128
    4eb6:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
    4eba:	17 c0       	rjmp	.+46     	; 0x4eea <Lcd_VidGoToXY+0x4c>
}
else if (Copy_u8Row == 1)
    4ebc:	89 81       	ldd	r24, Y+1	; 0x01
    4ebe:	81 30       	cpi	r24, 0x01	; 1
    4ec0:	29 f4       	brne	.+10     	; 0x4ecc <Lcd_VidGoToXY+0x2e>
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0x40 + Copy_u8Column);
    4ec2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ec4:	80 54       	subi	r24, 0x40	; 64
    4ec6:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
    4eca:	0f c0       	rjmp	.+30     	; 0x4eea <Lcd_VidGoToXY+0x4c>
else if (Copy_u8Row == 2)
    4ecc:	89 81       	ldd	r24, Y+1	; 0x01
    4ece:	82 30       	cpi	r24, 0x02	; 2
    4ed0:	29 f4       	brne	.+10     	; 0x4edc <Lcd_VidGoToXY+0x3e>
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0x14 + Copy_u8Column);
    4ed2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ed4:	8c 56       	subi	r24, 0x6C	; 108
    4ed6:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
    4eda:	07 c0       	rjmp	.+14     	; 0x4eea <Lcd_VidGoToXY+0x4c>
else if (Copy_u8Row == 3)
    4edc:	89 81       	ldd	r24, Y+1	; 0x01
    4ede:	83 30       	cpi	r24, 0x03	; 3
    4ee0:	21 f4       	brne	.+8      	; 0x4eea <Lcd_VidGoToXY+0x4c>
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0x54 + Copy_u8Column);
    4ee2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ee4:	8c 52       	subi	r24, 0x2C	; 44
    4ee6:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
}
    4eea:	0f 90       	pop	r0
    4eec:	0f 90       	pop	r0
    4eee:	cf 91       	pop	r28
    4ef0:	df 91       	pop	r29
    4ef2:	08 95       	ret

00004ef4 <Lcd_VidDisplayString>:


void Lcd_VidDisplayString(const pu8 Add_pu8String )
{
    4ef4:	df 93       	push	r29
    4ef6:	cf 93       	push	r28
    4ef8:	00 d0       	rcall	.+0      	; 0x4efa <Lcd_VidDisplayString+0x6>
    4efa:	0f 92       	push	r0
    4efc:	cd b7       	in	r28, 0x3d	; 61
    4efe:	de b7       	in	r29, 0x3e	; 62
    4f00:	9b 83       	std	Y+3, r25	; 0x03
    4f02:	8a 83       	std	Y+2, r24	; 0x02
	uint8 LOC_u8Iterator=0;
    4f04:	19 82       	std	Y+1, r1	; 0x01
    4f06:	0e c0       	rjmp	.+28     	; 0x4f24 <Lcd_VidDisplayString+0x30>
	while(Add_pu8String[LOC_u8Iterator] != '\0')
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
    4f08:	89 81       	ldd	r24, Y+1	; 0x01
    4f0a:	28 2f       	mov	r18, r24
    4f0c:	30 e0       	ldi	r19, 0x00	; 0
    4f0e:	8a 81       	ldd	r24, Y+2	; 0x02
    4f10:	9b 81       	ldd	r25, Y+3	; 0x03
    4f12:	fc 01       	movw	r30, r24
    4f14:	e2 0f       	add	r30, r18
    4f16:	f3 1f       	adc	r31, r19
    4f18:	80 81       	ld	r24, Z
    4f1a:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
		LOC_u8Iterator++;
    4f1e:	89 81       	ldd	r24, Y+1	; 0x01
    4f20:	8f 5f       	subi	r24, 0xFF	; 255
    4f22:	89 83       	std	Y+1, r24	; 0x01


void Lcd_VidDisplayString(const pu8 Add_pu8String )
{
	uint8 LOC_u8Iterator=0;
	while(Add_pu8String[LOC_u8Iterator] != '\0')
    4f24:	89 81       	ldd	r24, Y+1	; 0x01
    4f26:	28 2f       	mov	r18, r24
    4f28:	30 e0       	ldi	r19, 0x00	; 0
    4f2a:	8a 81       	ldd	r24, Y+2	; 0x02
    4f2c:	9b 81       	ldd	r25, Y+3	; 0x03
    4f2e:	fc 01       	movw	r30, r24
    4f30:	e2 0f       	add	r30, r18
    4f32:	f3 1f       	adc	r31, r19
    4f34:	80 81       	ld	r24, Z
    4f36:	88 23       	and	r24, r24
    4f38:	39 f7       	brne	.-50     	; 0x4f08 <Lcd_VidDisplayString+0x14>
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
		LOC_u8Iterator++;
	}
}
    4f3a:	0f 90       	pop	r0
    4f3c:	0f 90       	pop	r0
    4f3e:	0f 90       	pop	r0
    4f40:	cf 91       	pop	r28
    4f42:	df 91       	pop	r29
    4f44:	08 95       	ret

00004f46 <Lcd_VidDisplayNumber>:

void Lcd_VidDisplayNumber(uint64 Copy_u64Num )
{
    4f46:	af 92       	push	r10
    4f48:	bf 92       	push	r11
    4f4a:	cf 92       	push	r12
    4f4c:	df 92       	push	r13
    4f4e:	ef 92       	push	r14
    4f50:	ff 92       	push	r15
    4f52:	0f 93       	push	r16
    4f54:	1f 93       	push	r17
    4f56:	df 93       	push	r29
    4f58:	cf 93       	push	r28
    4f5a:	cd b7       	in	r28, 0x3d	; 61
    4f5c:	de b7       	in	r29, 0x3e	; 62
    4f5e:	c6 56       	subi	r28, 0x66	; 102
    4f60:	d0 40       	sbci	r29, 0x00	; 0
    4f62:	0f b6       	in	r0, 0x3f	; 63
    4f64:	f8 94       	cli
    4f66:	de bf       	out	0x3e, r29	; 62
    4f68:	0f be       	out	0x3f, r0	; 63
    4f6a:	cd bf       	out	0x3d, r28	; 61
    4f6c:	29 87       	std	Y+9, r18	; 0x09
    4f6e:	3a 87       	std	Y+10, r19	; 0x0a
    4f70:	4b 87       	std	Y+11, r20	; 0x0b
    4f72:	5c 87       	std	Y+12, r21	; 0x0c
    4f74:	6d 87       	std	Y+13, r22	; 0x0d
    4f76:	7e 87       	std	Y+14, r23	; 0x0e
    4f78:	8f 87       	std	Y+15, r24	; 0x0f
    4f7a:	98 8b       	std	Y+16, r25	; 0x10
	uint64 LOC_u8Inverse=1;
    4f7c:	81 e0       	ldi	r24, 0x01	; 1
    4f7e:	89 83       	std	Y+1, r24	; 0x01
    4f80:	1a 82       	std	Y+2, r1	; 0x02
    4f82:	1b 82       	std	Y+3, r1	; 0x03
    4f84:	1c 82       	std	Y+4, r1	; 0x04
    4f86:	1d 82       	std	Y+5, r1	; 0x05
    4f88:	1e 82       	std	Y+6, r1	; 0x06
    4f8a:	1f 82       	std	Y+7, r1	; 0x07
    4f8c:	18 86       	std	Y+8, r1	; 0x08
	if(Copy_u64Num==0)
    4f8e:	89 85       	ldd	r24, Y+9	; 0x09
    4f90:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f92:	89 2b       	or	r24, r25
    4f94:	9b 85       	ldd	r25, Y+11	; 0x0b
    4f96:	89 2b       	or	r24, r25
    4f98:	9c 85       	ldd	r25, Y+12	; 0x0c
    4f9a:	89 2b       	or	r24, r25
    4f9c:	9d 85       	ldd	r25, Y+13	; 0x0d
    4f9e:	89 2b       	or	r24, r25
    4fa0:	9e 85       	ldd	r25, Y+14	; 0x0e
    4fa2:	89 2b       	or	r24, r25
    4fa4:	9f 85       	ldd	r25, Y+15	; 0x0f
    4fa6:	89 2b       	or	r24, r25
    4fa8:	98 89       	ldd	r25, Y+16	; 0x10
    4faa:	89 2b       	or	r24, r25
    4fac:	88 23       	and	r24, r24
    4fae:	09 f0       	breq	.+2      	; 0x4fb2 <Lcd_VidDisplayNumber+0x6c>
    4fb0:	62 c3       	rjmp	.+1732   	; 0x5676 <Lcd_VidDisplayNumber+0x730>
	{
		Lcd_VidDisplayChracter('0');
    4fb2:	80 e3       	ldi	r24, 0x30	; 48
    4fb4:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
    4fb8:	5e c3       	rjmp	.+1724   	; 0x5676 <Lcd_VidDisplayNumber+0x730>
	}
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
    4fba:	29 81       	ldd	r18, Y+1	; 0x01
    4fbc:	3a 81       	ldd	r19, Y+2	; 0x02
    4fbe:	4b 81       	ldd	r20, Y+3	; 0x03
    4fc0:	5c 81       	ldd	r21, Y+4	; 0x04
    4fc2:	6d 81       	ldd	r22, Y+5	; 0x05
    4fc4:	7e 81       	ldd	r23, Y+6	; 0x06
    4fc6:	8f 81       	ldd	r24, Y+7	; 0x07
    4fc8:	98 85       	ldd	r25, Y+8	; 0x08
    4fca:	a2 2e       	mov	r10, r18
    4fcc:	b3 2e       	mov	r11, r19
    4fce:	c4 2e       	mov	r12, r20
    4fd0:	d5 2e       	mov	r13, r21
    4fd2:	e6 2e       	mov	r14, r22
    4fd4:	f7 2e       	mov	r15, r23
    4fd6:	08 2f       	mov	r16, r24
    4fd8:	19 2f       	mov	r17, r25
    4fda:	2a 2d       	mov	r18, r10
    4fdc:	3b 2d       	mov	r19, r11
    4fde:	4c 2d       	mov	r20, r12
    4fe0:	5d 2d       	mov	r21, r13
    4fe2:	6e 2d       	mov	r22, r14
    4fe4:	7f 2d       	mov	r23, r15
    4fe6:	80 2f       	mov	r24, r16
    4fe8:	91 2f       	mov	r25, r17
    4fea:	01 e0       	ldi	r16, 0x01	; 1
    4fec:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    4ff0:	29 a3       	std	Y+33, r18	; 0x21
    4ff2:	3a a3       	std	Y+34, r19	; 0x22
    4ff4:	4b a3       	std	Y+35, r20	; 0x23
    4ff6:	5c a3       	std	Y+36, r21	; 0x24
    4ff8:	6d a3       	std	Y+37, r22	; 0x25
    4ffa:	7e a3       	std	Y+38, r23	; 0x26
    4ffc:	8f a3       	std	Y+39, r24	; 0x27
    4ffe:	98 a7       	std	Y+40, r25	; 0x28
    5000:	29 a1       	ldd	r18, Y+33	; 0x21
    5002:	3a a1       	ldd	r19, Y+34	; 0x22
    5004:	4b a1       	ldd	r20, Y+35	; 0x23
    5006:	5c a1       	ldd	r21, Y+36	; 0x24
    5008:	6d a1       	ldd	r22, Y+37	; 0x25
    500a:	7e a1       	ldd	r23, Y+38	; 0x26
    500c:	8f a1       	ldd	r24, Y+39	; 0x27
    500e:	98 a5       	ldd	r25, Y+40	; 0x28
    5010:	02 e0       	ldi	r16, 0x02	; 2
    5012:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    5016:	29 a7       	std	Y+41, r18	; 0x29
    5018:	3a a7       	std	Y+42, r19	; 0x2a
    501a:	4b a7       	std	Y+43, r20	; 0x2b
    501c:	5c a7       	std	Y+44, r21	; 0x2c
    501e:	6d a7       	std	Y+45, r22	; 0x2d
    5020:	7e a7       	std	Y+46, r23	; 0x2e
    5022:	8f a7       	std	Y+47, r24	; 0x2f
    5024:	98 ab       	std	Y+48, r25	; 0x30
    5026:	89 a1       	ldd	r24, Y+33	; 0x21
    5028:	99 a5       	ldd	r25, Y+41	; 0x29
    502a:	89 0f       	add	r24, r25
    502c:	89 ab       	std	Y+49, r24	; 0x31
    502e:	81 e0       	ldi	r24, 0x01	; 1
    5030:	89 af       	std	Y+57, r24	; 0x39
    5032:	99 a9       	ldd	r25, Y+49	; 0x31
    5034:	89 a1       	ldd	r24, Y+33	; 0x21
    5036:	98 17       	cp	r25, r24
    5038:	08 f0       	brcs	.+2      	; 0x503c <Lcd_VidDisplayNumber+0xf6>
    503a:	19 ae       	std	Y+57, r1	; 0x39
    503c:	9a a1       	ldd	r25, Y+34	; 0x22
    503e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5040:	98 0f       	add	r25, r24
    5042:	9a ab       	std	Y+50, r25	; 0x32
    5044:	91 e0       	ldi	r25, 0x01	; 1
    5046:	9a af       	std	Y+58, r25	; 0x3a
    5048:	8a a9       	ldd	r24, Y+50	; 0x32
    504a:	9a a1       	ldd	r25, Y+34	; 0x22
    504c:	89 17       	cp	r24, r25
    504e:	08 f0       	brcs	.+2      	; 0x5052 <Lcd_VidDisplayNumber+0x10c>
    5050:	1a ae       	std	Y+58, r1	; 0x3a
    5052:	89 ad       	ldd	r24, Y+57	; 0x39
    5054:	9a a9       	ldd	r25, Y+50	; 0x32
    5056:	89 0f       	add	r24, r25
    5058:	8b af       	std	Y+59, r24	; 0x3b
    505a:	81 e0       	ldi	r24, 0x01	; 1
    505c:	8c af       	std	Y+60, r24	; 0x3c
    505e:	9b ad       	ldd	r25, Y+59	; 0x3b
    5060:	8a a9       	ldd	r24, Y+50	; 0x32
    5062:	98 17       	cp	r25, r24
    5064:	08 f0       	brcs	.+2      	; 0x5068 <Lcd_VidDisplayNumber+0x122>
    5066:	1c ae       	std	Y+60, r1	; 0x3c
    5068:	9a ad       	ldd	r25, Y+58	; 0x3a
    506a:	8c ad       	ldd	r24, Y+60	; 0x3c
    506c:	98 2b       	or	r25, r24
    506e:	9a af       	std	Y+58, r25	; 0x3a
    5070:	9b ad       	ldd	r25, Y+59	; 0x3b
    5072:	9a ab       	std	Y+50, r25	; 0x32
    5074:	8b a1       	ldd	r24, Y+35	; 0x23
    5076:	9b a5       	ldd	r25, Y+43	; 0x2b
    5078:	89 0f       	add	r24, r25
    507a:	8b ab       	std	Y+51, r24	; 0x33
    507c:	81 e0       	ldi	r24, 0x01	; 1
    507e:	8d af       	std	Y+61, r24	; 0x3d
    5080:	9b a9       	ldd	r25, Y+51	; 0x33
    5082:	8b a1       	ldd	r24, Y+35	; 0x23
    5084:	98 17       	cp	r25, r24
    5086:	08 f0       	brcs	.+2      	; 0x508a <Lcd_VidDisplayNumber+0x144>
    5088:	1d ae       	std	Y+61, r1	; 0x3d
    508a:	9a ad       	ldd	r25, Y+58	; 0x3a
    508c:	8b a9       	ldd	r24, Y+51	; 0x33
    508e:	98 0f       	add	r25, r24
    5090:	9e af       	std	Y+62, r25	; 0x3e
    5092:	91 e0       	ldi	r25, 0x01	; 1
    5094:	9f af       	std	Y+63, r25	; 0x3f
    5096:	8e ad       	ldd	r24, Y+62	; 0x3e
    5098:	9b a9       	ldd	r25, Y+51	; 0x33
    509a:	89 17       	cp	r24, r25
    509c:	08 f0       	brcs	.+2      	; 0x50a0 <Lcd_VidDisplayNumber+0x15a>
    509e:	1f ae       	std	Y+63, r1	; 0x3f
    50a0:	8d ad       	ldd	r24, Y+61	; 0x3d
    50a2:	9f ad       	ldd	r25, Y+63	; 0x3f
    50a4:	89 2b       	or	r24, r25
    50a6:	8d af       	std	Y+61, r24	; 0x3d
    50a8:	8e ad       	ldd	r24, Y+62	; 0x3e
    50aa:	8b ab       	std	Y+51, r24	; 0x33
    50ac:	9c a1       	ldd	r25, Y+36	; 0x24
    50ae:	8c a5       	ldd	r24, Y+44	; 0x2c
    50b0:	98 0f       	add	r25, r24
    50b2:	9c ab       	std	Y+52, r25	; 0x34
    50b4:	91 e0       	ldi	r25, 0x01	; 1
    50b6:	21 96       	adiw	r28, 0x01	; 1
    50b8:	9f af       	std	Y+63, r25	; 0x3f
    50ba:	21 97       	sbiw	r28, 0x01	; 1
    50bc:	8c a9       	ldd	r24, Y+52	; 0x34
    50be:	9c a1       	ldd	r25, Y+36	; 0x24
    50c0:	89 17       	cp	r24, r25
    50c2:	18 f0       	brcs	.+6      	; 0x50ca <Lcd_VidDisplayNumber+0x184>
    50c4:	21 96       	adiw	r28, 0x01	; 1
    50c6:	1f ae       	std	Y+63, r1	; 0x3f
    50c8:	21 97       	sbiw	r28, 0x01	; 1
    50ca:	8d ad       	ldd	r24, Y+61	; 0x3d
    50cc:	9c a9       	ldd	r25, Y+52	; 0x34
    50ce:	89 0f       	add	r24, r25
    50d0:	22 96       	adiw	r28, 0x02	; 2
    50d2:	8f af       	std	Y+63, r24	; 0x3f
    50d4:	22 97       	sbiw	r28, 0x02	; 2
    50d6:	81 e0       	ldi	r24, 0x01	; 1
    50d8:	23 96       	adiw	r28, 0x03	; 3
    50da:	8f af       	std	Y+63, r24	; 0x3f
    50dc:	23 97       	sbiw	r28, 0x03	; 3
    50de:	22 96       	adiw	r28, 0x02	; 2
    50e0:	9f ad       	ldd	r25, Y+63	; 0x3f
    50e2:	22 97       	sbiw	r28, 0x02	; 2
    50e4:	8c a9       	ldd	r24, Y+52	; 0x34
    50e6:	98 17       	cp	r25, r24
    50e8:	18 f0       	brcs	.+6      	; 0x50f0 <Lcd_VidDisplayNumber+0x1aa>
    50ea:	23 96       	adiw	r28, 0x03	; 3
    50ec:	1f ae       	std	Y+63, r1	; 0x3f
    50ee:	23 97       	sbiw	r28, 0x03	; 3
    50f0:	21 96       	adiw	r28, 0x01	; 1
    50f2:	9f ad       	ldd	r25, Y+63	; 0x3f
    50f4:	21 97       	sbiw	r28, 0x01	; 1
    50f6:	23 96       	adiw	r28, 0x03	; 3
    50f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    50fa:	23 97       	sbiw	r28, 0x03	; 3
    50fc:	98 2b       	or	r25, r24
    50fe:	21 96       	adiw	r28, 0x01	; 1
    5100:	9f af       	std	Y+63, r25	; 0x3f
    5102:	21 97       	sbiw	r28, 0x01	; 1
    5104:	22 96       	adiw	r28, 0x02	; 2
    5106:	9f ad       	ldd	r25, Y+63	; 0x3f
    5108:	22 97       	sbiw	r28, 0x02	; 2
    510a:	9c ab       	std	Y+52, r25	; 0x34
    510c:	8d a1       	ldd	r24, Y+37	; 0x25
    510e:	9d a5       	ldd	r25, Y+45	; 0x2d
    5110:	89 0f       	add	r24, r25
    5112:	8d ab       	std	Y+53, r24	; 0x35
    5114:	81 e0       	ldi	r24, 0x01	; 1
    5116:	24 96       	adiw	r28, 0x04	; 4
    5118:	8f af       	std	Y+63, r24	; 0x3f
    511a:	24 97       	sbiw	r28, 0x04	; 4
    511c:	9d a9       	ldd	r25, Y+53	; 0x35
    511e:	8d a1       	ldd	r24, Y+37	; 0x25
    5120:	98 17       	cp	r25, r24
    5122:	18 f0       	brcs	.+6      	; 0x512a <Lcd_VidDisplayNumber+0x1e4>
    5124:	24 96       	adiw	r28, 0x04	; 4
    5126:	1f ae       	std	Y+63, r1	; 0x3f
    5128:	24 97       	sbiw	r28, 0x04	; 4
    512a:	21 96       	adiw	r28, 0x01	; 1
    512c:	9f ad       	ldd	r25, Y+63	; 0x3f
    512e:	21 97       	sbiw	r28, 0x01	; 1
    5130:	8d a9       	ldd	r24, Y+53	; 0x35
    5132:	98 0f       	add	r25, r24
    5134:	25 96       	adiw	r28, 0x05	; 5
    5136:	9f af       	std	Y+63, r25	; 0x3f
    5138:	25 97       	sbiw	r28, 0x05	; 5
    513a:	91 e0       	ldi	r25, 0x01	; 1
    513c:	26 96       	adiw	r28, 0x06	; 6
    513e:	9f af       	std	Y+63, r25	; 0x3f
    5140:	26 97       	sbiw	r28, 0x06	; 6
    5142:	25 96       	adiw	r28, 0x05	; 5
    5144:	8f ad       	ldd	r24, Y+63	; 0x3f
    5146:	25 97       	sbiw	r28, 0x05	; 5
    5148:	9d a9       	ldd	r25, Y+53	; 0x35
    514a:	89 17       	cp	r24, r25
    514c:	18 f0       	brcs	.+6      	; 0x5154 <Lcd_VidDisplayNumber+0x20e>
    514e:	26 96       	adiw	r28, 0x06	; 6
    5150:	1f ae       	std	Y+63, r1	; 0x3f
    5152:	26 97       	sbiw	r28, 0x06	; 6
    5154:	24 96       	adiw	r28, 0x04	; 4
    5156:	8f ad       	ldd	r24, Y+63	; 0x3f
    5158:	24 97       	sbiw	r28, 0x04	; 4
    515a:	26 96       	adiw	r28, 0x06	; 6
    515c:	9f ad       	ldd	r25, Y+63	; 0x3f
    515e:	26 97       	sbiw	r28, 0x06	; 6
    5160:	89 2b       	or	r24, r25
    5162:	24 96       	adiw	r28, 0x04	; 4
    5164:	8f af       	std	Y+63, r24	; 0x3f
    5166:	24 97       	sbiw	r28, 0x04	; 4
    5168:	25 96       	adiw	r28, 0x05	; 5
    516a:	8f ad       	ldd	r24, Y+63	; 0x3f
    516c:	25 97       	sbiw	r28, 0x05	; 5
    516e:	8d ab       	std	Y+53, r24	; 0x35
    5170:	9e a1       	ldd	r25, Y+38	; 0x26
    5172:	8e a5       	ldd	r24, Y+46	; 0x2e
    5174:	98 0f       	add	r25, r24
    5176:	9e ab       	std	Y+54, r25	; 0x36
    5178:	91 e0       	ldi	r25, 0x01	; 1
    517a:	27 96       	adiw	r28, 0x07	; 7
    517c:	9f af       	std	Y+63, r25	; 0x3f
    517e:	27 97       	sbiw	r28, 0x07	; 7
    5180:	8e a9       	ldd	r24, Y+54	; 0x36
    5182:	9e a1       	ldd	r25, Y+38	; 0x26
    5184:	89 17       	cp	r24, r25
    5186:	18 f0       	brcs	.+6      	; 0x518e <Lcd_VidDisplayNumber+0x248>
    5188:	27 96       	adiw	r28, 0x07	; 7
    518a:	1f ae       	std	Y+63, r1	; 0x3f
    518c:	27 97       	sbiw	r28, 0x07	; 7
    518e:	24 96       	adiw	r28, 0x04	; 4
    5190:	8f ad       	ldd	r24, Y+63	; 0x3f
    5192:	24 97       	sbiw	r28, 0x04	; 4
    5194:	9e a9       	ldd	r25, Y+54	; 0x36
    5196:	89 0f       	add	r24, r25
    5198:	28 96       	adiw	r28, 0x08	; 8
    519a:	8f af       	std	Y+63, r24	; 0x3f
    519c:	28 97       	sbiw	r28, 0x08	; 8
    519e:	81 e0       	ldi	r24, 0x01	; 1
    51a0:	29 96       	adiw	r28, 0x09	; 9
    51a2:	8f af       	std	Y+63, r24	; 0x3f
    51a4:	29 97       	sbiw	r28, 0x09	; 9
    51a6:	28 96       	adiw	r28, 0x08	; 8
    51a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    51aa:	28 97       	sbiw	r28, 0x08	; 8
    51ac:	8e a9       	ldd	r24, Y+54	; 0x36
    51ae:	98 17       	cp	r25, r24
    51b0:	18 f0       	brcs	.+6      	; 0x51b8 <Lcd_VidDisplayNumber+0x272>
    51b2:	29 96       	adiw	r28, 0x09	; 9
    51b4:	1f ae       	std	Y+63, r1	; 0x3f
    51b6:	29 97       	sbiw	r28, 0x09	; 9
    51b8:	27 96       	adiw	r28, 0x07	; 7
    51ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    51bc:	27 97       	sbiw	r28, 0x07	; 7
    51be:	29 96       	adiw	r28, 0x09	; 9
    51c0:	8f ad       	ldd	r24, Y+63	; 0x3f
    51c2:	29 97       	sbiw	r28, 0x09	; 9
    51c4:	98 2b       	or	r25, r24
    51c6:	27 96       	adiw	r28, 0x07	; 7
    51c8:	9f af       	std	Y+63, r25	; 0x3f
    51ca:	27 97       	sbiw	r28, 0x07	; 7
    51cc:	28 96       	adiw	r28, 0x08	; 8
    51ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    51d0:	28 97       	sbiw	r28, 0x08	; 8
    51d2:	9e ab       	std	Y+54, r25	; 0x36
    51d4:	8f a1       	ldd	r24, Y+39	; 0x27
    51d6:	9f a5       	ldd	r25, Y+47	; 0x2f
    51d8:	89 0f       	add	r24, r25
    51da:	8f ab       	std	Y+55, r24	; 0x37
    51dc:	81 e0       	ldi	r24, 0x01	; 1
    51de:	2a 96       	adiw	r28, 0x0a	; 10
    51e0:	8f af       	std	Y+63, r24	; 0x3f
    51e2:	2a 97       	sbiw	r28, 0x0a	; 10
    51e4:	9f a9       	ldd	r25, Y+55	; 0x37
    51e6:	8f a1       	ldd	r24, Y+39	; 0x27
    51e8:	98 17       	cp	r25, r24
    51ea:	18 f0       	brcs	.+6      	; 0x51f2 <Lcd_VidDisplayNumber+0x2ac>
    51ec:	2a 96       	adiw	r28, 0x0a	; 10
    51ee:	1f ae       	std	Y+63, r1	; 0x3f
    51f0:	2a 97       	sbiw	r28, 0x0a	; 10
    51f2:	27 96       	adiw	r28, 0x07	; 7
    51f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    51f6:	27 97       	sbiw	r28, 0x07	; 7
    51f8:	8f a9       	ldd	r24, Y+55	; 0x37
    51fa:	98 0f       	add	r25, r24
    51fc:	2b 96       	adiw	r28, 0x0b	; 11
    51fe:	9f af       	std	Y+63, r25	; 0x3f
    5200:	2b 97       	sbiw	r28, 0x0b	; 11
    5202:	91 e0       	ldi	r25, 0x01	; 1
    5204:	2c 96       	adiw	r28, 0x0c	; 12
    5206:	9f af       	std	Y+63, r25	; 0x3f
    5208:	2c 97       	sbiw	r28, 0x0c	; 12
    520a:	2b 96       	adiw	r28, 0x0b	; 11
    520c:	8f ad       	ldd	r24, Y+63	; 0x3f
    520e:	2b 97       	sbiw	r28, 0x0b	; 11
    5210:	9f a9       	ldd	r25, Y+55	; 0x37
    5212:	89 17       	cp	r24, r25
    5214:	18 f0       	brcs	.+6      	; 0x521c <Lcd_VidDisplayNumber+0x2d6>
    5216:	2c 96       	adiw	r28, 0x0c	; 12
    5218:	1f ae       	std	Y+63, r1	; 0x3f
    521a:	2c 97       	sbiw	r28, 0x0c	; 12
    521c:	2a 96       	adiw	r28, 0x0a	; 10
    521e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5220:	2a 97       	sbiw	r28, 0x0a	; 10
    5222:	2c 96       	adiw	r28, 0x0c	; 12
    5224:	9f ad       	ldd	r25, Y+63	; 0x3f
    5226:	2c 97       	sbiw	r28, 0x0c	; 12
    5228:	89 2b       	or	r24, r25
    522a:	2a 96       	adiw	r28, 0x0a	; 10
    522c:	8f af       	std	Y+63, r24	; 0x3f
    522e:	2a 97       	sbiw	r28, 0x0a	; 10
    5230:	2b 96       	adiw	r28, 0x0b	; 11
    5232:	8f ad       	ldd	r24, Y+63	; 0x3f
    5234:	2b 97       	sbiw	r28, 0x0b	; 11
    5236:	8f ab       	std	Y+55, r24	; 0x37
    5238:	98 a5       	ldd	r25, Y+40	; 0x28
    523a:	88 a9       	ldd	r24, Y+48	; 0x30
    523c:	98 0f       	add	r25, r24
    523e:	98 af       	std	Y+56, r25	; 0x38
    5240:	2a 96       	adiw	r28, 0x0a	; 10
    5242:	8f ad       	ldd	r24, Y+63	; 0x3f
    5244:	2a 97       	sbiw	r28, 0x0a	; 10
    5246:	98 ad       	ldd	r25, Y+56	; 0x38
    5248:	89 0f       	add	r24, r25
    524a:	88 af       	std	Y+56, r24	; 0x38
    524c:	89 a9       	ldd	r24, Y+49	; 0x31
    524e:	89 8f       	std	Y+25, r24	; 0x19
    5250:	9a a9       	ldd	r25, Y+50	; 0x32
    5252:	9a 8f       	std	Y+26, r25	; 0x1a
    5254:	8b a9       	ldd	r24, Y+51	; 0x33
    5256:	8b 8f       	std	Y+27, r24	; 0x1b
    5258:	9c a9       	ldd	r25, Y+52	; 0x34
    525a:	9c 8f       	std	Y+28, r25	; 0x1c
    525c:	8d a9       	ldd	r24, Y+53	; 0x35
    525e:	8d 8f       	std	Y+29, r24	; 0x1d
    5260:	9e a9       	ldd	r25, Y+54	; 0x36
    5262:	9e 8f       	std	Y+30, r25	; 0x1e
    5264:	8f a9       	ldd	r24, Y+55	; 0x37
    5266:	8f 8f       	std	Y+31, r24	; 0x1f
    5268:	98 ad       	ldd	r25, Y+56	; 0x38
    526a:	98 a3       	std	Y+32, r25	; 0x20
    526c:	a9 84       	ldd	r10, Y+9	; 0x09
    526e:	ba 84       	ldd	r11, Y+10	; 0x0a
    5270:	cb 84       	ldd	r12, Y+11	; 0x0b
    5272:	dc 84       	ldd	r13, Y+12	; 0x0c
    5274:	ed 84       	ldd	r14, Y+13	; 0x0d
    5276:	fe 84       	ldd	r15, Y+14	; 0x0e
    5278:	0f 85       	ldd	r16, Y+15	; 0x0f
    527a:	18 89       	ldd	r17, Y+16	; 0x10
    527c:	2a 2d       	mov	r18, r10
    527e:	3b 2d       	mov	r19, r11
    5280:	4c 2d       	mov	r20, r12
    5282:	5d 2d       	mov	r21, r13
    5284:	6e 2d       	mov	r22, r14
    5286:	7f 2d       	mov	r23, r15
    5288:	80 2f       	mov	r24, r16
    528a:	91 2f       	mov	r25, r17
    528c:	0f 2e       	mov	r0, r31
    528e:	fa e0       	ldi	r31, 0x0A	; 10
    5290:	af 2e       	mov	r10, r31
    5292:	f0 2d       	mov	r31, r0
    5294:	bb 24       	eor	r11, r11
    5296:	cc 24       	eor	r12, r12
    5298:	dd 24       	eor	r13, r13
    529a:	ee 24       	eor	r14, r14
    529c:	ff 24       	eor	r15, r15
    529e:	00 e0       	ldi	r16, 0x00	; 0
    52a0:	10 e0       	ldi	r17, 0x00	; 0
    52a2:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    52a6:	a2 2e       	mov	r10, r18
    52a8:	b3 2e       	mov	r11, r19
    52aa:	c4 2e       	mov	r12, r20
    52ac:	d5 2e       	mov	r13, r21
    52ae:	e6 2e       	mov	r14, r22
    52b0:	f7 2e       	mov	r15, r23
    52b2:	08 2f       	mov	r16, r24
    52b4:	19 2f       	mov	r17, r25
    52b6:	a9 8a       	std	Y+17, r10	; 0x11
    52b8:	ba 8a       	std	Y+18, r11	; 0x12
    52ba:	cb 8a       	std	Y+19, r12	; 0x13
    52bc:	dc 8a       	std	Y+20, r13	; 0x14
    52be:	ed 8a       	std	Y+21, r14	; 0x15
    52c0:	fe 8a       	std	Y+22, r15	; 0x16
    52c2:	0f 8b       	std	Y+23, r16	; 0x17
    52c4:	18 8f       	std	Y+24, r17	; 0x18
    52c6:	89 8d       	ldd	r24, Y+25	; 0x19
    52c8:	99 89       	ldd	r25, Y+17	; 0x11
    52ca:	89 0f       	add	r24, r25
    52cc:	2d 96       	adiw	r28, 0x0d	; 13
    52ce:	8f af       	std	Y+63, r24	; 0x3f
    52d0:	2d 97       	sbiw	r28, 0x0d	; 13
    52d2:	81 e0       	ldi	r24, 0x01	; 1
    52d4:	65 96       	adiw	r28, 0x15	; 21
    52d6:	8f af       	std	Y+63, r24	; 0x3f
    52d8:	65 97       	sbiw	r28, 0x15	; 21
    52da:	2d 96       	adiw	r28, 0x0d	; 13
    52dc:	9f ad       	ldd	r25, Y+63	; 0x3f
    52de:	2d 97       	sbiw	r28, 0x0d	; 13
    52e0:	89 8d       	ldd	r24, Y+25	; 0x19
    52e2:	98 17       	cp	r25, r24
    52e4:	18 f0       	brcs	.+6      	; 0x52ec <Lcd_VidDisplayNumber+0x3a6>
    52e6:	65 96       	adiw	r28, 0x15	; 21
    52e8:	1f ae       	std	Y+63, r1	; 0x3f
    52ea:	65 97       	sbiw	r28, 0x15	; 21
    52ec:	9a 8d       	ldd	r25, Y+26	; 0x1a
    52ee:	8a 89       	ldd	r24, Y+18	; 0x12
    52f0:	98 0f       	add	r25, r24
    52f2:	2e 96       	adiw	r28, 0x0e	; 14
    52f4:	9f af       	std	Y+63, r25	; 0x3f
    52f6:	2e 97       	sbiw	r28, 0x0e	; 14
    52f8:	91 e0       	ldi	r25, 0x01	; 1
    52fa:	66 96       	adiw	r28, 0x16	; 22
    52fc:	9f af       	std	Y+63, r25	; 0x3f
    52fe:	66 97       	sbiw	r28, 0x16	; 22
    5300:	2e 96       	adiw	r28, 0x0e	; 14
    5302:	8f ad       	ldd	r24, Y+63	; 0x3f
    5304:	2e 97       	sbiw	r28, 0x0e	; 14
    5306:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5308:	89 17       	cp	r24, r25
    530a:	18 f0       	brcs	.+6      	; 0x5312 <Lcd_VidDisplayNumber+0x3cc>
    530c:	66 96       	adiw	r28, 0x16	; 22
    530e:	1f ae       	std	Y+63, r1	; 0x3f
    5310:	66 97       	sbiw	r28, 0x16	; 22
    5312:	65 96       	adiw	r28, 0x15	; 21
    5314:	8f ad       	ldd	r24, Y+63	; 0x3f
    5316:	65 97       	sbiw	r28, 0x15	; 21
    5318:	2e 96       	adiw	r28, 0x0e	; 14
    531a:	9f ad       	ldd	r25, Y+63	; 0x3f
    531c:	2e 97       	sbiw	r28, 0x0e	; 14
    531e:	89 0f       	add	r24, r25
    5320:	67 96       	adiw	r28, 0x17	; 23
    5322:	8f af       	std	Y+63, r24	; 0x3f
    5324:	67 97       	sbiw	r28, 0x17	; 23
    5326:	81 e0       	ldi	r24, 0x01	; 1
    5328:	68 96       	adiw	r28, 0x18	; 24
    532a:	8f af       	std	Y+63, r24	; 0x3f
    532c:	68 97       	sbiw	r28, 0x18	; 24
    532e:	67 96       	adiw	r28, 0x17	; 23
    5330:	9f ad       	ldd	r25, Y+63	; 0x3f
    5332:	67 97       	sbiw	r28, 0x17	; 23
    5334:	2e 96       	adiw	r28, 0x0e	; 14
    5336:	8f ad       	ldd	r24, Y+63	; 0x3f
    5338:	2e 97       	sbiw	r28, 0x0e	; 14
    533a:	98 17       	cp	r25, r24
    533c:	18 f0       	brcs	.+6      	; 0x5344 <Lcd_VidDisplayNumber+0x3fe>
    533e:	68 96       	adiw	r28, 0x18	; 24
    5340:	1f ae       	std	Y+63, r1	; 0x3f
    5342:	68 97       	sbiw	r28, 0x18	; 24
    5344:	66 96       	adiw	r28, 0x16	; 22
    5346:	9f ad       	ldd	r25, Y+63	; 0x3f
    5348:	66 97       	sbiw	r28, 0x16	; 22
    534a:	68 96       	adiw	r28, 0x18	; 24
    534c:	8f ad       	ldd	r24, Y+63	; 0x3f
    534e:	68 97       	sbiw	r28, 0x18	; 24
    5350:	98 2b       	or	r25, r24
    5352:	66 96       	adiw	r28, 0x16	; 22
    5354:	9f af       	std	Y+63, r25	; 0x3f
    5356:	66 97       	sbiw	r28, 0x16	; 22
    5358:	67 96       	adiw	r28, 0x17	; 23
    535a:	9f ad       	ldd	r25, Y+63	; 0x3f
    535c:	67 97       	sbiw	r28, 0x17	; 23
    535e:	2e 96       	adiw	r28, 0x0e	; 14
    5360:	9f af       	std	Y+63, r25	; 0x3f
    5362:	2e 97       	sbiw	r28, 0x0e	; 14
    5364:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5366:	9b 89       	ldd	r25, Y+19	; 0x13
    5368:	89 0f       	add	r24, r25
    536a:	2f 96       	adiw	r28, 0x0f	; 15
    536c:	8f af       	std	Y+63, r24	; 0x3f
    536e:	2f 97       	sbiw	r28, 0x0f	; 15
    5370:	81 e0       	ldi	r24, 0x01	; 1
    5372:	69 96       	adiw	r28, 0x19	; 25
    5374:	8f af       	std	Y+63, r24	; 0x3f
    5376:	69 97       	sbiw	r28, 0x19	; 25
    5378:	2f 96       	adiw	r28, 0x0f	; 15
    537a:	9f ad       	ldd	r25, Y+63	; 0x3f
    537c:	2f 97       	sbiw	r28, 0x0f	; 15
    537e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5380:	98 17       	cp	r25, r24
    5382:	18 f0       	brcs	.+6      	; 0x538a <Lcd_VidDisplayNumber+0x444>
    5384:	69 96       	adiw	r28, 0x19	; 25
    5386:	1f ae       	std	Y+63, r1	; 0x3f
    5388:	69 97       	sbiw	r28, 0x19	; 25
    538a:	66 96       	adiw	r28, 0x16	; 22
    538c:	9f ad       	ldd	r25, Y+63	; 0x3f
    538e:	66 97       	sbiw	r28, 0x16	; 22
    5390:	2f 96       	adiw	r28, 0x0f	; 15
    5392:	8f ad       	ldd	r24, Y+63	; 0x3f
    5394:	2f 97       	sbiw	r28, 0x0f	; 15
    5396:	98 0f       	add	r25, r24
    5398:	6a 96       	adiw	r28, 0x1a	; 26
    539a:	9f af       	std	Y+63, r25	; 0x3f
    539c:	6a 97       	sbiw	r28, 0x1a	; 26
    539e:	91 e0       	ldi	r25, 0x01	; 1
    53a0:	6b 96       	adiw	r28, 0x1b	; 27
    53a2:	9f af       	std	Y+63, r25	; 0x3f
    53a4:	6b 97       	sbiw	r28, 0x1b	; 27
    53a6:	6a 96       	adiw	r28, 0x1a	; 26
    53a8:	8f ad       	ldd	r24, Y+63	; 0x3f
    53aa:	6a 97       	sbiw	r28, 0x1a	; 26
    53ac:	2f 96       	adiw	r28, 0x0f	; 15
    53ae:	9f ad       	ldd	r25, Y+63	; 0x3f
    53b0:	2f 97       	sbiw	r28, 0x0f	; 15
    53b2:	89 17       	cp	r24, r25
    53b4:	18 f0       	brcs	.+6      	; 0x53bc <Lcd_VidDisplayNumber+0x476>
    53b6:	6b 96       	adiw	r28, 0x1b	; 27
    53b8:	1f ae       	std	Y+63, r1	; 0x3f
    53ba:	6b 97       	sbiw	r28, 0x1b	; 27
    53bc:	69 96       	adiw	r28, 0x19	; 25
    53be:	8f ad       	ldd	r24, Y+63	; 0x3f
    53c0:	69 97       	sbiw	r28, 0x19	; 25
    53c2:	6b 96       	adiw	r28, 0x1b	; 27
    53c4:	9f ad       	ldd	r25, Y+63	; 0x3f
    53c6:	6b 97       	sbiw	r28, 0x1b	; 27
    53c8:	89 2b       	or	r24, r25
    53ca:	69 96       	adiw	r28, 0x19	; 25
    53cc:	8f af       	std	Y+63, r24	; 0x3f
    53ce:	69 97       	sbiw	r28, 0x19	; 25
    53d0:	6a 96       	adiw	r28, 0x1a	; 26
    53d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    53d4:	6a 97       	sbiw	r28, 0x1a	; 26
    53d6:	2f 96       	adiw	r28, 0x0f	; 15
    53d8:	8f af       	std	Y+63, r24	; 0x3f
    53da:	2f 97       	sbiw	r28, 0x0f	; 15
    53dc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    53de:	8c 89       	ldd	r24, Y+20	; 0x14
    53e0:	98 0f       	add	r25, r24
    53e2:	60 96       	adiw	r28, 0x10	; 16
    53e4:	9f af       	std	Y+63, r25	; 0x3f
    53e6:	60 97       	sbiw	r28, 0x10	; 16
    53e8:	91 e0       	ldi	r25, 0x01	; 1
    53ea:	6c 96       	adiw	r28, 0x1c	; 28
    53ec:	9f af       	std	Y+63, r25	; 0x3f
    53ee:	6c 97       	sbiw	r28, 0x1c	; 28
    53f0:	60 96       	adiw	r28, 0x10	; 16
    53f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    53f4:	60 97       	sbiw	r28, 0x10	; 16
    53f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    53f8:	89 17       	cp	r24, r25
    53fa:	18 f0       	brcs	.+6      	; 0x5402 <Lcd_VidDisplayNumber+0x4bc>
    53fc:	6c 96       	adiw	r28, 0x1c	; 28
    53fe:	1f ae       	std	Y+63, r1	; 0x3f
    5400:	6c 97       	sbiw	r28, 0x1c	; 28
    5402:	69 96       	adiw	r28, 0x19	; 25
    5404:	8f ad       	ldd	r24, Y+63	; 0x3f
    5406:	69 97       	sbiw	r28, 0x19	; 25
    5408:	60 96       	adiw	r28, 0x10	; 16
    540a:	9f ad       	ldd	r25, Y+63	; 0x3f
    540c:	60 97       	sbiw	r28, 0x10	; 16
    540e:	89 0f       	add	r24, r25
    5410:	6d 96       	adiw	r28, 0x1d	; 29
    5412:	8f af       	std	Y+63, r24	; 0x3f
    5414:	6d 97       	sbiw	r28, 0x1d	; 29
    5416:	81 e0       	ldi	r24, 0x01	; 1
    5418:	6e 96       	adiw	r28, 0x1e	; 30
    541a:	8f af       	std	Y+63, r24	; 0x3f
    541c:	6e 97       	sbiw	r28, 0x1e	; 30
    541e:	6d 96       	adiw	r28, 0x1d	; 29
    5420:	9f ad       	ldd	r25, Y+63	; 0x3f
    5422:	6d 97       	sbiw	r28, 0x1d	; 29
    5424:	60 96       	adiw	r28, 0x10	; 16
    5426:	8f ad       	ldd	r24, Y+63	; 0x3f
    5428:	60 97       	sbiw	r28, 0x10	; 16
    542a:	98 17       	cp	r25, r24
    542c:	18 f0       	brcs	.+6      	; 0x5434 <Lcd_VidDisplayNumber+0x4ee>
    542e:	6e 96       	adiw	r28, 0x1e	; 30
    5430:	1f ae       	std	Y+63, r1	; 0x3f
    5432:	6e 97       	sbiw	r28, 0x1e	; 30
    5434:	6c 96       	adiw	r28, 0x1c	; 28
    5436:	9f ad       	ldd	r25, Y+63	; 0x3f
    5438:	6c 97       	sbiw	r28, 0x1c	; 28
    543a:	6e 96       	adiw	r28, 0x1e	; 30
    543c:	8f ad       	ldd	r24, Y+63	; 0x3f
    543e:	6e 97       	sbiw	r28, 0x1e	; 30
    5440:	98 2b       	or	r25, r24
    5442:	6c 96       	adiw	r28, 0x1c	; 28
    5444:	9f af       	std	Y+63, r25	; 0x3f
    5446:	6c 97       	sbiw	r28, 0x1c	; 28
    5448:	6d 96       	adiw	r28, 0x1d	; 29
    544a:	9f ad       	ldd	r25, Y+63	; 0x3f
    544c:	6d 97       	sbiw	r28, 0x1d	; 29
    544e:	60 96       	adiw	r28, 0x10	; 16
    5450:	9f af       	std	Y+63, r25	; 0x3f
    5452:	60 97       	sbiw	r28, 0x10	; 16
    5454:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5456:	9d 89       	ldd	r25, Y+21	; 0x15
    5458:	89 0f       	add	r24, r25
    545a:	61 96       	adiw	r28, 0x11	; 17
    545c:	8f af       	std	Y+63, r24	; 0x3f
    545e:	61 97       	sbiw	r28, 0x11	; 17
    5460:	81 e0       	ldi	r24, 0x01	; 1
    5462:	6f 96       	adiw	r28, 0x1f	; 31
    5464:	8f af       	std	Y+63, r24	; 0x3f
    5466:	6f 97       	sbiw	r28, 0x1f	; 31
    5468:	61 96       	adiw	r28, 0x11	; 17
    546a:	9f ad       	ldd	r25, Y+63	; 0x3f
    546c:	61 97       	sbiw	r28, 0x11	; 17
    546e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5470:	98 17       	cp	r25, r24
    5472:	18 f0       	brcs	.+6      	; 0x547a <Lcd_VidDisplayNumber+0x534>
    5474:	6f 96       	adiw	r28, 0x1f	; 31
    5476:	1f ae       	std	Y+63, r1	; 0x3f
    5478:	6f 97       	sbiw	r28, 0x1f	; 31
    547a:	6c 96       	adiw	r28, 0x1c	; 28
    547c:	9f ad       	ldd	r25, Y+63	; 0x3f
    547e:	6c 97       	sbiw	r28, 0x1c	; 28
    5480:	61 96       	adiw	r28, 0x11	; 17
    5482:	8f ad       	ldd	r24, Y+63	; 0x3f
    5484:	61 97       	sbiw	r28, 0x11	; 17
    5486:	98 0f       	add	r25, r24
    5488:	a0 96       	adiw	r28, 0x20	; 32
    548a:	9f af       	std	Y+63, r25	; 0x3f
    548c:	a0 97       	sbiw	r28, 0x20	; 32
    548e:	91 e0       	ldi	r25, 0x01	; 1
    5490:	a1 96       	adiw	r28, 0x21	; 33
    5492:	9f af       	std	Y+63, r25	; 0x3f
    5494:	a1 97       	sbiw	r28, 0x21	; 33
    5496:	a0 96       	adiw	r28, 0x20	; 32
    5498:	8f ad       	ldd	r24, Y+63	; 0x3f
    549a:	a0 97       	sbiw	r28, 0x20	; 32
    549c:	61 96       	adiw	r28, 0x11	; 17
    549e:	9f ad       	ldd	r25, Y+63	; 0x3f
    54a0:	61 97       	sbiw	r28, 0x11	; 17
    54a2:	89 17       	cp	r24, r25
    54a4:	18 f0       	brcs	.+6      	; 0x54ac <Lcd_VidDisplayNumber+0x566>
    54a6:	a1 96       	adiw	r28, 0x21	; 33
    54a8:	1f ae       	std	Y+63, r1	; 0x3f
    54aa:	a1 97       	sbiw	r28, 0x21	; 33
    54ac:	6f 96       	adiw	r28, 0x1f	; 31
    54ae:	8f ad       	ldd	r24, Y+63	; 0x3f
    54b0:	6f 97       	sbiw	r28, 0x1f	; 31
    54b2:	a1 96       	adiw	r28, 0x21	; 33
    54b4:	9f ad       	ldd	r25, Y+63	; 0x3f
    54b6:	a1 97       	sbiw	r28, 0x21	; 33
    54b8:	89 2b       	or	r24, r25
    54ba:	6f 96       	adiw	r28, 0x1f	; 31
    54bc:	8f af       	std	Y+63, r24	; 0x3f
    54be:	6f 97       	sbiw	r28, 0x1f	; 31
    54c0:	a0 96       	adiw	r28, 0x20	; 32
    54c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    54c4:	a0 97       	sbiw	r28, 0x20	; 32
    54c6:	61 96       	adiw	r28, 0x11	; 17
    54c8:	8f af       	std	Y+63, r24	; 0x3f
    54ca:	61 97       	sbiw	r28, 0x11	; 17
    54cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    54ce:	8e 89       	ldd	r24, Y+22	; 0x16
    54d0:	98 0f       	add	r25, r24
    54d2:	62 96       	adiw	r28, 0x12	; 18
    54d4:	9f af       	std	Y+63, r25	; 0x3f
    54d6:	62 97       	sbiw	r28, 0x12	; 18
    54d8:	91 e0       	ldi	r25, 0x01	; 1
    54da:	a2 96       	adiw	r28, 0x22	; 34
    54dc:	9f af       	std	Y+63, r25	; 0x3f
    54de:	a2 97       	sbiw	r28, 0x22	; 34
    54e0:	62 96       	adiw	r28, 0x12	; 18
    54e2:	8f ad       	ldd	r24, Y+63	; 0x3f
    54e4:	62 97       	sbiw	r28, 0x12	; 18
    54e6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    54e8:	89 17       	cp	r24, r25
    54ea:	18 f0       	brcs	.+6      	; 0x54f2 <Lcd_VidDisplayNumber+0x5ac>
    54ec:	a2 96       	adiw	r28, 0x22	; 34
    54ee:	1f ae       	std	Y+63, r1	; 0x3f
    54f0:	a2 97       	sbiw	r28, 0x22	; 34
    54f2:	6f 96       	adiw	r28, 0x1f	; 31
    54f4:	8f ad       	ldd	r24, Y+63	; 0x3f
    54f6:	6f 97       	sbiw	r28, 0x1f	; 31
    54f8:	62 96       	adiw	r28, 0x12	; 18
    54fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    54fc:	62 97       	sbiw	r28, 0x12	; 18
    54fe:	89 0f       	add	r24, r25
    5500:	a3 96       	adiw	r28, 0x23	; 35
    5502:	8f af       	std	Y+63, r24	; 0x3f
    5504:	a3 97       	sbiw	r28, 0x23	; 35
    5506:	81 e0       	ldi	r24, 0x01	; 1
    5508:	a4 96       	adiw	r28, 0x24	; 36
    550a:	8f af       	std	Y+63, r24	; 0x3f
    550c:	a4 97       	sbiw	r28, 0x24	; 36
    550e:	a3 96       	adiw	r28, 0x23	; 35
    5510:	9f ad       	ldd	r25, Y+63	; 0x3f
    5512:	a3 97       	sbiw	r28, 0x23	; 35
    5514:	62 96       	adiw	r28, 0x12	; 18
    5516:	8f ad       	ldd	r24, Y+63	; 0x3f
    5518:	62 97       	sbiw	r28, 0x12	; 18
    551a:	98 17       	cp	r25, r24
    551c:	18 f0       	brcs	.+6      	; 0x5524 <Lcd_VidDisplayNumber+0x5de>
    551e:	a4 96       	adiw	r28, 0x24	; 36
    5520:	1f ae       	std	Y+63, r1	; 0x3f
    5522:	a4 97       	sbiw	r28, 0x24	; 36
    5524:	a2 96       	adiw	r28, 0x22	; 34
    5526:	9f ad       	ldd	r25, Y+63	; 0x3f
    5528:	a2 97       	sbiw	r28, 0x22	; 34
    552a:	a4 96       	adiw	r28, 0x24	; 36
    552c:	8f ad       	ldd	r24, Y+63	; 0x3f
    552e:	a4 97       	sbiw	r28, 0x24	; 36
    5530:	98 2b       	or	r25, r24
    5532:	a2 96       	adiw	r28, 0x22	; 34
    5534:	9f af       	std	Y+63, r25	; 0x3f
    5536:	a2 97       	sbiw	r28, 0x22	; 34
    5538:	a3 96       	adiw	r28, 0x23	; 35
    553a:	9f ad       	ldd	r25, Y+63	; 0x3f
    553c:	a3 97       	sbiw	r28, 0x23	; 35
    553e:	62 96       	adiw	r28, 0x12	; 18
    5540:	9f af       	std	Y+63, r25	; 0x3f
    5542:	62 97       	sbiw	r28, 0x12	; 18
    5544:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5546:	9f 89       	ldd	r25, Y+23	; 0x17
    5548:	89 0f       	add	r24, r25
    554a:	63 96       	adiw	r28, 0x13	; 19
    554c:	8f af       	std	Y+63, r24	; 0x3f
    554e:	63 97       	sbiw	r28, 0x13	; 19
    5550:	81 e0       	ldi	r24, 0x01	; 1
    5552:	a5 96       	adiw	r28, 0x25	; 37
    5554:	8f af       	std	Y+63, r24	; 0x3f
    5556:	a5 97       	sbiw	r28, 0x25	; 37
    5558:	63 96       	adiw	r28, 0x13	; 19
    555a:	9f ad       	ldd	r25, Y+63	; 0x3f
    555c:	63 97       	sbiw	r28, 0x13	; 19
    555e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5560:	98 17       	cp	r25, r24
    5562:	18 f0       	brcs	.+6      	; 0x556a <Lcd_VidDisplayNumber+0x624>
    5564:	a5 96       	adiw	r28, 0x25	; 37
    5566:	1f ae       	std	Y+63, r1	; 0x3f
    5568:	a5 97       	sbiw	r28, 0x25	; 37
    556a:	a2 96       	adiw	r28, 0x22	; 34
    556c:	9f ad       	ldd	r25, Y+63	; 0x3f
    556e:	a2 97       	sbiw	r28, 0x22	; 34
    5570:	63 96       	adiw	r28, 0x13	; 19
    5572:	8f ad       	ldd	r24, Y+63	; 0x3f
    5574:	63 97       	sbiw	r28, 0x13	; 19
    5576:	98 0f       	add	r25, r24
    5578:	a6 96       	adiw	r28, 0x26	; 38
    557a:	9f af       	std	Y+63, r25	; 0x3f
    557c:	a6 97       	sbiw	r28, 0x26	; 38
    557e:	91 e0       	ldi	r25, 0x01	; 1
    5580:	a7 96       	adiw	r28, 0x27	; 39
    5582:	9f af       	std	Y+63, r25	; 0x3f
    5584:	a7 97       	sbiw	r28, 0x27	; 39
    5586:	a6 96       	adiw	r28, 0x26	; 38
    5588:	8f ad       	ldd	r24, Y+63	; 0x3f
    558a:	a6 97       	sbiw	r28, 0x26	; 38
    558c:	63 96       	adiw	r28, 0x13	; 19
    558e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5590:	63 97       	sbiw	r28, 0x13	; 19
    5592:	89 17       	cp	r24, r25
    5594:	18 f0       	brcs	.+6      	; 0x559c <Lcd_VidDisplayNumber+0x656>
    5596:	a7 96       	adiw	r28, 0x27	; 39
    5598:	1f ae       	std	Y+63, r1	; 0x3f
    559a:	a7 97       	sbiw	r28, 0x27	; 39
    559c:	a5 96       	adiw	r28, 0x25	; 37
    559e:	8f ad       	ldd	r24, Y+63	; 0x3f
    55a0:	a5 97       	sbiw	r28, 0x25	; 37
    55a2:	a7 96       	adiw	r28, 0x27	; 39
    55a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    55a6:	a7 97       	sbiw	r28, 0x27	; 39
    55a8:	89 2b       	or	r24, r25
    55aa:	a5 96       	adiw	r28, 0x25	; 37
    55ac:	8f af       	std	Y+63, r24	; 0x3f
    55ae:	a5 97       	sbiw	r28, 0x25	; 37
    55b0:	a6 96       	adiw	r28, 0x26	; 38
    55b2:	8f ad       	ldd	r24, Y+63	; 0x3f
    55b4:	a6 97       	sbiw	r28, 0x26	; 38
    55b6:	63 96       	adiw	r28, 0x13	; 19
    55b8:	8f af       	std	Y+63, r24	; 0x3f
    55ba:	63 97       	sbiw	r28, 0x13	; 19
    55bc:	98 a1       	ldd	r25, Y+32	; 0x20
    55be:	88 8d       	ldd	r24, Y+24	; 0x18
    55c0:	98 0f       	add	r25, r24
    55c2:	64 96       	adiw	r28, 0x14	; 20
    55c4:	9f af       	std	Y+63, r25	; 0x3f
    55c6:	64 97       	sbiw	r28, 0x14	; 20
    55c8:	a5 96       	adiw	r28, 0x25	; 37
    55ca:	8f ad       	ldd	r24, Y+63	; 0x3f
    55cc:	a5 97       	sbiw	r28, 0x25	; 37
    55ce:	64 96       	adiw	r28, 0x14	; 20
    55d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    55d2:	64 97       	sbiw	r28, 0x14	; 20
    55d4:	89 0f       	add	r24, r25
    55d6:	64 96       	adiw	r28, 0x14	; 20
    55d8:	8f af       	std	Y+63, r24	; 0x3f
    55da:	64 97       	sbiw	r28, 0x14	; 20
    55dc:	2d 96       	adiw	r28, 0x0d	; 13
    55de:	8f ad       	ldd	r24, Y+63	; 0x3f
    55e0:	2d 97       	sbiw	r28, 0x0d	; 13
    55e2:	89 83       	std	Y+1, r24	; 0x01
    55e4:	2e 96       	adiw	r28, 0x0e	; 14
    55e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    55e8:	2e 97       	sbiw	r28, 0x0e	; 14
    55ea:	9a 83       	std	Y+2, r25	; 0x02
    55ec:	2f 96       	adiw	r28, 0x0f	; 15
    55ee:	8f ad       	ldd	r24, Y+63	; 0x3f
    55f0:	2f 97       	sbiw	r28, 0x0f	; 15
    55f2:	8b 83       	std	Y+3, r24	; 0x03
    55f4:	60 96       	adiw	r28, 0x10	; 16
    55f6:	9f ad       	ldd	r25, Y+63	; 0x3f
    55f8:	60 97       	sbiw	r28, 0x10	; 16
    55fa:	9c 83       	std	Y+4, r25	; 0x04
    55fc:	61 96       	adiw	r28, 0x11	; 17
    55fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    5600:	61 97       	sbiw	r28, 0x11	; 17
    5602:	8d 83       	std	Y+5, r24	; 0x05
    5604:	62 96       	adiw	r28, 0x12	; 18
    5606:	9f ad       	ldd	r25, Y+63	; 0x3f
    5608:	62 97       	sbiw	r28, 0x12	; 18
    560a:	9e 83       	std	Y+6, r25	; 0x06
    560c:	63 96       	adiw	r28, 0x13	; 19
    560e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5610:	63 97       	sbiw	r28, 0x13	; 19
    5612:	8f 83       	std	Y+7, r24	; 0x07
    5614:	64 96       	adiw	r28, 0x14	; 20
    5616:	9f ad       	ldd	r25, Y+63	; 0x3f
    5618:	64 97       	sbiw	r28, 0x14	; 20
    561a:	98 87       	std	Y+8, r25	; 0x08
		Copy_u64Num /=10;
    561c:	a9 84       	ldd	r10, Y+9	; 0x09
    561e:	ba 84       	ldd	r11, Y+10	; 0x0a
    5620:	cb 84       	ldd	r12, Y+11	; 0x0b
    5622:	dc 84       	ldd	r13, Y+12	; 0x0c
    5624:	ed 84       	ldd	r14, Y+13	; 0x0d
    5626:	fe 84       	ldd	r15, Y+14	; 0x0e
    5628:	0f 85       	ldd	r16, Y+15	; 0x0f
    562a:	18 89       	ldd	r17, Y+16	; 0x10
    562c:	2a 2d       	mov	r18, r10
    562e:	3b 2d       	mov	r19, r11
    5630:	4c 2d       	mov	r20, r12
    5632:	5d 2d       	mov	r21, r13
    5634:	6e 2d       	mov	r22, r14
    5636:	7f 2d       	mov	r23, r15
    5638:	80 2f       	mov	r24, r16
    563a:	91 2f       	mov	r25, r17
    563c:	0f 2e       	mov	r0, r31
    563e:	fa e0       	ldi	r31, 0x0A	; 10
    5640:	af 2e       	mov	r10, r31
    5642:	f0 2d       	mov	r31, r0
    5644:	bb 24       	eor	r11, r11
    5646:	cc 24       	eor	r12, r12
    5648:	dd 24       	eor	r13, r13
    564a:	ee 24       	eor	r14, r14
    564c:	ff 24       	eor	r15, r15
    564e:	00 e0       	ldi	r16, 0x00	; 0
    5650:	10 e0       	ldi	r17, 0x00	; 0
    5652:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    5656:	a2 2e       	mov	r10, r18
    5658:	b3 2e       	mov	r11, r19
    565a:	c4 2e       	mov	r12, r20
    565c:	d5 2e       	mov	r13, r21
    565e:	e6 2e       	mov	r14, r22
    5660:	f7 2e       	mov	r15, r23
    5662:	08 2f       	mov	r16, r24
    5664:	19 2f       	mov	r17, r25
    5666:	a9 86       	std	Y+9, r10	; 0x09
    5668:	ba 86       	std	Y+10, r11	; 0x0a
    566a:	cb 86       	std	Y+11, r12	; 0x0b
    566c:	dc 86       	std	Y+12, r13	; 0x0c
    566e:	ed 86       	std	Y+13, r14	; 0x0d
    5670:	fe 86       	std	Y+14, r15	; 0x0e
    5672:	0f 87       	std	Y+15, r16	; 0x0f
    5674:	18 8b       	std	Y+16, r17	; 0x10
	uint64 LOC_u8Inverse=1;
	if(Copy_u64Num==0)
	{
		Lcd_VidDisplayChracter('0');
	}
	while(Copy_u64Num != 0)
    5676:	89 85       	ldd	r24, Y+9	; 0x09
    5678:	9a 85       	ldd	r25, Y+10	; 0x0a
    567a:	89 2b       	or	r24, r25
    567c:	9b 85       	ldd	r25, Y+11	; 0x0b
    567e:	89 2b       	or	r24, r25
    5680:	9c 85       	ldd	r25, Y+12	; 0x0c
    5682:	89 2b       	or	r24, r25
    5684:	9d 85       	ldd	r25, Y+13	; 0x0d
    5686:	89 2b       	or	r24, r25
    5688:	9e 85       	ldd	r25, Y+14	; 0x0e
    568a:	89 2b       	or	r24, r25
    568c:	9f 85       	ldd	r25, Y+15	; 0x0f
    568e:	89 2b       	or	r24, r25
    5690:	98 89       	ldd	r25, Y+16	; 0x10
    5692:	89 2b       	or	r24, r25
    5694:	88 23       	and	r24, r24
    5696:	09 f0       	breq	.+2      	; 0x569a <Lcd_VidDisplayNumber+0x754>
    5698:	90 cc       	rjmp	.-1760   	; 0x4fba <Lcd_VidDisplayNumber+0x74>
    569a:	5e c0       	rjmp	.+188    	; 0x5758 <Lcd_VidDisplayNumber+0x812>
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
    569c:	a9 80       	ldd	r10, Y+1	; 0x01
    569e:	ba 80       	ldd	r11, Y+2	; 0x02
    56a0:	cb 80       	ldd	r12, Y+3	; 0x03
    56a2:	dc 80       	ldd	r13, Y+4	; 0x04
    56a4:	ed 80       	ldd	r14, Y+5	; 0x05
    56a6:	fe 80       	ldd	r15, Y+6	; 0x06
    56a8:	0f 81       	ldd	r16, Y+7	; 0x07
    56aa:	18 85       	ldd	r17, Y+8	; 0x08
    56ac:	2a 2d       	mov	r18, r10
    56ae:	3b 2d       	mov	r19, r11
    56b0:	4c 2d       	mov	r20, r12
    56b2:	5d 2d       	mov	r21, r13
    56b4:	6e 2d       	mov	r22, r14
    56b6:	7f 2d       	mov	r23, r15
    56b8:	80 2f       	mov	r24, r16
    56ba:	91 2f       	mov	r25, r17
    56bc:	0f 2e       	mov	r0, r31
    56be:	fa e0       	ldi	r31, 0x0A	; 10
    56c0:	af 2e       	mov	r10, r31
    56c2:	f0 2d       	mov	r31, r0
    56c4:	bb 24       	eor	r11, r11
    56c6:	cc 24       	eor	r12, r12
    56c8:	dd 24       	eor	r13, r13
    56ca:	ee 24       	eor	r14, r14
    56cc:	ff 24       	eor	r15, r15
    56ce:	00 e0       	ldi	r16, 0x00	; 0
    56d0:	10 e0       	ldi	r17, 0x00	; 0
    56d2:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    56d6:	a2 2e       	mov	r10, r18
    56d8:	b3 2e       	mov	r11, r19
    56da:	c4 2e       	mov	r12, r20
    56dc:	d5 2e       	mov	r13, r21
    56de:	e6 2e       	mov	r14, r22
    56e0:	f7 2e       	mov	r15, r23
    56e2:	08 2f       	mov	r16, r24
    56e4:	19 2f       	mov	r17, r25
    56e6:	2a 2d       	mov	r18, r10
    56e8:	3b 2d       	mov	r19, r11
    56ea:	4c 2d       	mov	r20, r12
    56ec:	5d 2d       	mov	r21, r13
    56ee:	6e 2d       	mov	r22, r14
    56f0:	7f 2d       	mov	r23, r15
    56f2:	80 2f       	mov	r24, r16
    56f4:	91 2f       	mov	r25, r17
    56f6:	82 2f       	mov	r24, r18
    56f8:	80 5d       	subi	r24, 0xD0	; 208
    56fa:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
		LOC_u8Inverse /=10;
    56fe:	a9 80       	ldd	r10, Y+1	; 0x01
    5700:	ba 80       	ldd	r11, Y+2	; 0x02
    5702:	cb 80       	ldd	r12, Y+3	; 0x03
    5704:	dc 80       	ldd	r13, Y+4	; 0x04
    5706:	ed 80       	ldd	r14, Y+5	; 0x05
    5708:	fe 80       	ldd	r15, Y+6	; 0x06
    570a:	0f 81       	ldd	r16, Y+7	; 0x07
    570c:	18 85       	ldd	r17, Y+8	; 0x08
    570e:	2a 2d       	mov	r18, r10
    5710:	3b 2d       	mov	r19, r11
    5712:	4c 2d       	mov	r20, r12
    5714:	5d 2d       	mov	r21, r13
    5716:	6e 2d       	mov	r22, r14
    5718:	7f 2d       	mov	r23, r15
    571a:	80 2f       	mov	r24, r16
    571c:	91 2f       	mov	r25, r17
    571e:	0f 2e       	mov	r0, r31
    5720:	fa e0       	ldi	r31, 0x0A	; 10
    5722:	af 2e       	mov	r10, r31
    5724:	f0 2d       	mov	r31, r0
    5726:	bb 24       	eor	r11, r11
    5728:	cc 24       	eor	r12, r12
    572a:	dd 24       	eor	r13, r13
    572c:	ee 24       	eor	r14, r14
    572e:	ff 24       	eor	r15, r15
    5730:	00 e0       	ldi	r16, 0x00	; 0
    5732:	10 e0       	ldi	r17, 0x00	; 0
    5734:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    5738:	a2 2e       	mov	r10, r18
    573a:	b3 2e       	mov	r11, r19
    573c:	c4 2e       	mov	r12, r20
    573e:	d5 2e       	mov	r13, r21
    5740:	e6 2e       	mov	r14, r22
    5742:	f7 2e       	mov	r15, r23
    5744:	08 2f       	mov	r16, r24
    5746:	19 2f       	mov	r17, r25
    5748:	a9 82       	std	Y+1, r10	; 0x01
    574a:	ba 82       	std	Y+2, r11	; 0x02
    574c:	cb 82       	std	Y+3, r12	; 0x03
    574e:	dc 82       	std	Y+4, r13	; 0x04
    5750:	ed 82       	std	Y+5, r14	; 0x05
    5752:	fe 82       	std	Y+6, r15	; 0x06
    5754:	0f 83       	std	Y+7, r16	; 0x07
    5756:	18 87       	std	Y+8, r17	; 0x08
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
    5758:	89 81       	ldd	r24, Y+1	; 0x01
    575a:	81 30       	cpi	r24, 0x01	; 1
    575c:	09 f0       	breq	.+2      	; 0x5760 <Lcd_VidDisplayNumber+0x81a>
    575e:	9e cf       	rjmp	.-196    	; 0x569c <Lcd_VidDisplayNumber+0x756>
    5760:	8a 81       	ldd	r24, Y+2	; 0x02
    5762:	88 23       	and	r24, r24
    5764:	09 f0       	breq	.+2      	; 0x5768 <Lcd_VidDisplayNumber+0x822>
    5766:	9a cf       	rjmp	.-204    	; 0x569c <Lcd_VidDisplayNumber+0x756>
    5768:	8b 81       	ldd	r24, Y+3	; 0x03
    576a:	88 23       	and	r24, r24
    576c:	09 f0       	breq	.+2      	; 0x5770 <Lcd_VidDisplayNumber+0x82a>
    576e:	96 cf       	rjmp	.-212    	; 0x569c <Lcd_VidDisplayNumber+0x756>
    5770:	8c 81       	ldd	r24, Y+4	; 0x04
    5772:	88 23       	and	r24, r24
    5774:	09 f0       	breq	.+2      	; 0x5778 <Lcd_VidDisplayNumber+0x832>
    5776:	92 cf       	rjmp	.-220    	; 0x569c <Lcd_VidDisplayNumber+0x756>
    5778:	8d 81       	ldd	r24, Y+5	; 0x05
    577a:	88 23       	and	r24, r24
    577c:	09 f0       	breq	.+2      	; 0x5780 <Lcd_VidDisplayNumber+0x83a>
    577e:	8e cf       	rjmp	.-228    	; 0x569c <Lcd_VidDisplayNumber+0x756>
    5780:	8e 81       	ldd	r24, Y+6	; 0x06
    5782:	88 23       	and	r24, r24
    5784:	09 f0       	breq	.+2      	; 0x5788 <Lcd_VidDisplayNumber+0x842>
    5786:	8a cf       	rjmp	.-236    	; 0x569c <Lcd_VidDisplayNumber+0x756>
    5788:	8f 81       	ldd	r24, Y+7	; 0x07
    578a:	88 23       	and	r24, r24
    578c:	09 f0       	breq	.+2      	; 0x5790 <Lcd_VidDisplayNumber+0x84a>
    578e:	86 cf       	rjmp	.-244    	; 0x569c <Lcd_VidDisplayNumber+0x756>
    5790:	88 85       	ldd	r24, Y+8	; 0x08
    5792:	88 23       	and	r24, r24
    5794:	09 f0       	breq	.+2      	; 0x5798 <Lcd_VidDisplayNumber+0x852>
    5796:	82 cf       	rjmp	.-252    	; 0x569c <Lcd_VidDisplayNumber+0x756>
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
		LOC_u8Inverse /=10;
	}
}
    5798:	ca 59       	subi	r28, 0x9A	; 154
    579a:	df 4f       	sbci	r29, 0xFF	; 255
    579c:	0f b6       	in	r0, 0x3f	; 63
    579e:	f8 94       	cli
    57a0:	de bf       	out	0x3e, r29	; 62
    57a2:	0f be       	out	0x3f, r0	; 63
    57a4:	cd bf       	out	0x3d, r28	; 61
    57a6:	cf 91       	pop	r28
    57a8:	df 91       	pop	r29
    57aa:	1f 91       	pop	r17
    57ac:	0f 91       	pop	r16
    57ae:	ff 90       	pop	r15
    57b0:	ef 90       	pop	r14
    57b2:	df 90       	pop	r13
    57b4:	cf 90       	pop	r12
    57b6:	bf 90       	pop	r11
    57b8:	af 90       	pop	r10
    57ba:	08 95       	ret

000057bc <LCD_vidClrDisplay>:

void LCD_vidClrDisplay(void)
{
    57bc:	df 93       	push	r29
    57be:	cf 93       	push	r28
    57c0:	cd b7       	in	r28, 0x3d	; 61
    57c2:	de b7       	in	r29, 0x3e	; 62
    57c4:	6c 97       	sbiw	r28, 0x1c	; 28
    57c6:	0f b6       	in	r0, 0x3f	; 63
    57c8:	f8 94       	cli
    57ca:	de bf       	out	0x3e, r29	; 62
    57cc:	0f be       	out	0x3f, r0	; 63
    57ce:	cd bf       	out	0x3d, r28	; 61
	Lcd_VidSendCommand(LCD_CLEAR_DISPLAY);
    57d0:	81 e0       	ldi	r24, 0x01	; 1
    57d2:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
    57d6:	80 e0       	ldi	r24, 0x00	; 0
    57d8:	90 e0       	ldi	r25, 0x00	; 0
    57da:	a0 e8       	ldi	r26, 0x80	; 128
    57dc:	b0 e4       	ldi	r27, 0x40	; 64
    57de:	89 8f       	std	Y+25, r24	; 0x19
    57e0:	9a 8f       	std	Y+26, r25	; 0x1a
    57e2:	ab 8f       	std	Y+27, r26	; 0x1b
    57e4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    57e6:	69 8d       	ldd	r22, Y+25	; 0x19
    57e8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    57ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    57ec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    57ee:	20 e0       	ldi	r18, 0x00	; 0
    57f0:	30 e0       	ldi	r19, 0x00	; 0
    57f2:	4a e7       	ldi	r20, 0x7A	; 122
    57f4:	53 e4       	ldi	r21, 0x43	; 67
    57f6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    57fa:	dc 01       	movw	r26, r24
    57fc:	cb 01       	movw	r24, r22
    57fe:	8d 8b       	std	Y+21, r24	; 0x15
    5800:	9e 8b       	std	Y+22, r25	; 0x16
    5802:	af 8b       	std	Y+23, r26	; 0x17
    5804:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5806:	6d 89       	ldd	r22, Y+21	; 0x15
    5808:	7e 89       	ldd	r23, Y+22	; 0x16
    580a:	8f 89       	ldd	r24, Y+23	; 0x17
    580c:	98 8d       	ldd	r25, Y+24	; 0x18
    580e:	20 e0       	ldi	r18, 0x00	; 0
    5810:	30 e0       	ldi	r19, 0x00	; 0
    5812:	40 e8       	ldi	r20, 0x80	; 128
    5814:	5f e3       	ldi	r21, 0x3F	; 63
    5816:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    581a:	88 23       	and	r24, r24
    581c:	2c f4       	brge	.+10     	; 0x5828 <LCD_vidClrDisplay+0x6c>
		__ticks = 1;
    581e:	81 e0       	ldi	r24, 0x01	; 1
    5820:	90 e0       	ldi	r25, 0x00	; 0
    5822:	9c 8b       	std	Y+20, r25	; 0x14
    5824:	8b 8b       	std	Y+19, r24	; 0x13
    5826:	3f c0       	rjmp	.+126    	; 0x58a6 <LCD_vidClrDisplay+0xea>
	else if (__tmp > 65535)
    5828:	6d 89       	ldd	r22, Y+21	; 0x15
    582a:	7e 89       	ldd	r23, Y+22	; 0x16
    582c:	8f 89       	ldd	r24, Y+23	; 0x17
    582e:	98 8d       	ldd	r25, Y+24	; 0x18
    5830:	20 e0       	ldi	r18, 0x00	; 0
    5832:	3f ef       	ldi	r19, 0xFF	; 255
    5834:	4f e7       	ldi	r20, 0x7F	; 127
    5836:	57 e4       	ldi	r21, 0x47	; 71
    5838:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    583c:	18 16       	cp	r1, r24
    583e:	4c f5       	brge	.+82     	; 0x5892 <LCD_vidClrDisplay+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5840:	69 8d       	ldd	r22, Y+25	; 0x19
    5842:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5844:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5846:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5848:	20 e0       	ldi	r18, 0x00	; 0
    584a:	30 e0       	ldi	r19, 0x00	; 0
    584c:	40 e2       	ldi	r20, 0x20	; 32
    584e:	51 e4       	ldi	r21, 0x41	; 65
    5850:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5854:	dc 01       	movw	r26, r24
    5856:	cb 01       	movw	r24, r22
    5858:	bc 01       	movw	r22, r24
    585a:	cd 01       	movw	r24, r26
    585c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5860:	dc 01       	movw	r26, r24
    5862:	cb 01       	movw	r24, r22
    5864:	9c 8b       	std	Y+20, r25	; 0x14
    5866:	8b 8b       	std	Y+19, r24	; 0x13
    5868:	0f c0       	rjmp	.+30     	; 0x5888 <LCD_vidClrDisplay+0xcc>
    586a:	89 e1       	ldi	r24, 0x19	; 25
    586c:	90 e0       	ldi	r25, 0x00	; 0
    586e:	9a 8b       	std	Y+18, r25	; 0x12
    5870:	89 8b       	std	Y+17, r24	; 0x11
    5872:	89 89       	ldd	r24, Y+17	; 0x11
    5874:	9a 89       	ldd	r25, Y+18	; 0x12
    5876:	01 97       	sbiw	r24, 0x01	; 1
    5878:	f1 f7       	brne	.-4      	; 0x5876 <LCD_vidClrDisplay+0xba>
    587a:	9a 8b       	std	Y+18, r25	; 0x12
    587c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    587e:	8b 89       	ldd	r24, Y+19	; 0x13
    5880:	9c 89       	ldd	r25, Y+20	; 0x14
    5882:	01 97       	sbiw	r24, 0x01	; 1
    5884:	9c 8b       	std	Y+20, r25	; 0x14
    5886:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5888:	8b 89       	ldd	r24, Y+19	; 0x13
    588a:	9c 89       	ldd	r25, Y+20	; 0x14
    588c:	00 97       	sbiw	r24, 0x00	; 0
    588e:	69 f7       	brne	.-38     	; 0x586a <LCD_vidClrDisplay+0xae>
    5890:	14 c0       	rjmp	.+40     	; 0x58ba <LCD_vidClrDisplay+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5892:	6d 89       	ldd	r22, Y+21	; 0x15
    5894:	7e 89       	ldd	r23, Y+22	; 0x16
    5896:	8f 89       	ldd	r24, Y+23	; 0x17
    5898:	98 8d       	ldd	r25, Y+24	; 0x18
    589a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    589e:	dc 01       	movw	r26, r24
    58a0:	cb 01       	movw	r24, r22
    58a2:	9c 8b       	std	Y+20, r25	; 0x14
    58a4:	8b 8b       	std	Y+19, r24	; 0x13
    58a6:	8b 89       	ldd	r24, Y+19	; 0x13
    58a8:	9c 89       	ldd	r25, Y+20	; 0x14
    58aa:	98 8b       	std	Y+16, r25	; 0x10
    58ac:	8f 87       	std	Y+15, r24	; 0x0f
    58ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    58b0:	98 89       	ldd	r25, Y+16	; 0x10
    58b2:	01 97       	sbiw	r24, 0x01	; 1
    58b4:	f1 f7       	brne	.-4      	; 0x58b2 <LCD_vidClrDisplay+0xf6>
    58b6:	98 8b       	std	Y+16, r25	; 0x10
    58b8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(4);
	Lcd_VidSendCommand(LCD_CURSOR_HOME);
    58ba:	82 e0       	ldi	r24, 0x02	; 2
    58bc:	0e 94 c4 1d 	call	0x3b88	; 0x3b88 <Lcd_VidSendCommand>
    58c0:	80 e0       	ldi	r24, 0x00	; 0
    58c2:	90 e0       	ldi	r25, 0x00	; 0
    58c4:	a0 e8       	ldi	r26, 0x80	; 128
    58c6:	b0 e4       	ldi	r27, 0x40	; 64
    58c8:	8b 87       	std	Y+11, r24	; 0x0b
    58ca:	9c 87       	std	Y+12, r25	; 0x0c
    58cc:	ad 87       	std	Y+13, r26	; 0x0d
    58ce:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    58d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    58d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    58d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    58d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    58d8:	20 e0       	ldi	r18, 0x00	; 0
    58da:	30 e0       	ldi	r19, 0x00	; 0
    58dc:	4a e7       	ldi	r20, 0x7A	; 122
    58de:	53 e4       	ldi	r21, 0x43	; 67
    58e0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    58e4:	dc 01       	movw	r26, r24
    58e6:	cb 01       	movw	r24, r22
    58e8:	8f 83       	std	Y+7, r24	; 0x07
    58ea:	98 87       	std	Y+8, r25	; 0x08
    58ec:	a9 87       	std	Y+9, r26	; 0x09
    58ee:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    58f0:	6f 81       	ldd	r22, Y+7	; 0x07
    58f2:	78 85       	ldd	r23, Y+8	; 0x08
    58f4:	89 85       	ldd	r24, Y+9	; 0x09
    58f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    58f8:	20 e0       	ldi	r18, 0x00	; 0
    58fa:	30 e0       	ldi	r19, 0x00	; 0
    58fc:	40 e8       	ldi	r20, 0x80	; 128
    58fe:	5f e3       	ldi	r21, 0x3F	; 63
    5900:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    5904:	88 23       	and	r24, r24
    5906:	2c f4       	brge	.+10     	; 0x5912 <LCD_vidClrDisplay+0x156>
		__ticks = 1;
    5908:	81 e0       	ldi	r24, 0x01	; 1
    590a:	90 e0       	ldi	r25, 0x00	; 0
    590c:	9e 83       	std	Y+6, r25	; 0x06
    590e:	8d 83       	std	Y+5, r24	; 0x05
    5910:	3f c0       	rjmp	.+126    	; 0x5990 <LCD_vidClrDisplay+0x1d4>
	else if (__tmp > 65535)
    5912:	6f 81       	ldd	r22, Y+7	; 0x07
    5914:	78 85       	ldd	r23, Y+8	; 0x08
    5916:	89 85       	ldd	r24, Y+9	; 0x09
    5918:	9a 85       	ldd	r25, Y+10	; 0x0a
    591a:	20 e0       	ldi	r18, 0x00	; 0
    591c:	3f ef       	ldi	r19, 0xFF	; 255
    591e:	4f e7       	ldi	r20, 0x7F	; 127
    5920:	57 e4       	ldi	r21, 0x47	; 71
    5922:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    5926:	18 16       	cp	r1, r24
    5928:	4c f5       	brge	.+82     	; 0x597c <LCD_vidClrDisplay+0x1c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    592a:	6b 85       	ldd	r22, Y+11	; 0x0b
    592c:	7c 85       	ldd	r23, Y+12	; 0x0c
    592e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5930:	9e 85       	ldd	r25, Y+14	; 0x0e
    5932:	20 e0       	ldi	r18, 0x00	; 0
    5934:	30 e0       	ldi	r19, 0x00	; 0
    5936:	40 e2       	ldi	r20, 0x20	; 32
    5938:	51 e4       	ldi	r21, 0x41	; 65
    593a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    593e:	dc 01       	movw	r26, r24
    5940:	cb 01       	movw	r24, r22
    5942:	bc 01       	movw	r22, r24
    5944:	cd 01       	movw	r24, r26
    5946:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    594a:	dc 01       	movw	r26, r24
    594c:	cb 01       	movw	r24, r22
    594e:	9e 83       	std	Y+6, r25	; 0x06
    5950:	8d 83       	std	Y+5, r24	; 0x05
    5952:	0f c0       	rjmp	.+30     	; 0x5972 <LCD_vidClrDisplay+0x1b6>
    5954:	89 e1       	ldi	r24, 0x19	; 25
    5956:	90 e0       	ldi	r25, 0x00	; 0
    5958:	9c 83       	std	Y+4, r25	; 0x04
    595a:	8b 83       	std	Y+3, r24	; 0x03
    595c:	8b 81       	ldd	r24, Y+3	; 0x03
    595e:	9c 81       	ldd	r25, Y+4	; 0x04
    5960:	01 97       	sbiw	r24, 0x01	; 1
    5962:	f1 f7       	brne	.-4      	; 0x5960 <LCD_vidClrDisplay+0x1a4>
    5964:	9c 83       	std	Y+4, r25	; 0x04
    5966:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5968:	8d 81       	ldd	r24, Y+5	; 0x05
    596a:	9e 81       	ldd	r25, Y+6	; 0x06
    596c:	01 97       	sbiw	r24, 0x01	; 1
    596e:	9e 83       	std	Y+6, r25	; 0x06
    5970:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5972:	8d 81       	ldd	r24, Y+5	; 0x05
    5974:	9e 81       	ldd	r25, Y+6	; 0x06
    5976:	00 97       	sbiw	r24, 0x00	; 0
    5978:	69 f7       	brne	.-38     	; 0x5954 <LCD_vidClrDisplay+0x198>
    597a:	14 c0       	rjmp	.+40     	; 0x59a4 <LCD_vidClrDisplay+0x1e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    597c:	6f 81       	ldd	r22, Y+7	; 0x07
    597e:	78 85       	ldd	r23, Y+8	; 0x08
    5980:	89 85       	ldd	r24, Y+9	; 0x09
    5982:	9a 85       	ldd	r25, Y+10	; 0x0a
    5984:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    5988:	dc 01       	movw	r26, r24
    598a:	cb 01       	movw	r24, r22
    598c:	9e 83       	std	Y+6, r25	; 0x06
    598e:	8d 83       	std	Y+5, r24	; 0x05
    5990:	8d 81       	ldd	r24, Y+5	; 0x05
    5992:	9e 81       	ldd	r25, Y+6	; 0x06
    5994:	9a 83       	std	Y+2, r25	; 0x02
    5996:	89 83       	std	Y+1, r24	; 0x01
    5998:	89 81       	ldd	r24, Y+1	; 0x01
    599a:	9a 81       	ldd	r25, Y+2	; 0x02
    599c:	01 97       	sbiw	r24, 0x01	; 1
    599e:	f1 f7       	brne	.-4      	; 0x599c <LCD_vidClrDisplay+0x1e0>
    59a0:	9a 83       	std	Y+2, r25	; 0x02
    59a2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(4);

}
    59a4:	6c 96       	adiw	r28, 0x1c	; 28
    59a6:	0f b6       	in	r0, 0x3f	; 63
    59a8:	f8 94       	cli
    59aa:	de bf       	out	0x3e, r29	; 62
    59ac:	0f be       	out	0x3f, r0	; 63
    59ae:	cd bf       	out	0x3d, r28	; 61
    59b0:	cf 91       	pop	r28
    59b2:	df 91       	pop	r29
    59b4:	08 95       	ret

000059b6 <LCD_DisplayStringXY>:

void LCD_DisplayStringXY(uint8 Copy_u8Row,uint8 Copy_u8Column,const char* Add_pu8String)
{
    59b6:	df 93       	push	r29
    59b8:	cf 93       	push	r28
    59ba:	00 d0       	rcall	.+0      	; 0x59bc <LCD_DisplayStringXY+0x6>
    59bc:	00 d0       	rcall	.+0      	; 0x59be <LCD_DisplayStringXY+0x8>
    59be:	0f 92       	push	r0
    59c0:	cd b7       	in	r28, 0x3d	; 61
    59c2:	de b7       	in	r29, 0x3e	; 62
    59c4:	8a 83       	std	Y+2, r24	; 0x02
    59c6:	6b 83       	std	Y+3, r22	; 0x03
    59c8:	5d 83       	std	Y+5, r21	; 0x05
    59ca:	4c 83       	std	Y+4, r20	; 0x04
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
    59cc:	8a 81       	ldd	r24, Y+2	; 0x02
    59ce:	6b 81       	ldd	r22, Y+3	; 0x03
    59d0:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <Lcd_VidGoToXY>
	uint8 LOC_u8Iterator=0;
    59d4:	19 82       	std	Y+1, r1	; 0x01
    59d6:	0e c0       	rjmp	.+28     	; 0x59f4 <LCD_DisplayStringXY+0x3e>
	while(Add_pu8String[LOC_u8Iterator] != '\0')
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
    59d8:	89 81       	ldd	r24, Y+1	; 0x01
    59da:	28 2f       	mov	r18, r24
    59dc:	30 e0       	ldi	r19, 0x00	; 0
    59de:	8c 81       	ldd	r24, Y+4	; 0x04
    59e0:	9d 81       	ldd	r25, Y+5	; 0x05
    59e2:	fc 01       	movw	r30, r24
    59e4:	e2 0f       	add	r30, r18
    59e6:	f3 1f       	adc	r31, r19
    59e8:	80 81       	ld	r24, Z
    59ea:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
		LOC_u8Iterator++;
    59ee:	89 81       	ldd	r24, Y+1	; 0x01
    59f0:	8f 5f       	subi	r24, 0xFF	; 255
    59f2:	89 83       	std	Y+1, r24	; 0x01

void LCD_DisplayStringXY(uint8 Copy_u8Row,uint8 Copy_u8Column,const char* Add_pu8String)
{
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
	uint8 LOC_u8Iterator=0;
	while(Add_pu8String[LOC_u8Iterator] != '\0')
    59f4:	89 81       	ldd	r24, Y+1	; 0x01
    59f6:	28 2f       	mov	r18, r24
    59f8:	30 e0       	ldi	r19, 0x00	; 0
    59fa:	8c 81       	ldd	r24, Y+4	; 0x04
    59fc:	9d 81       	ldd	r25, Y+5	; 0x05
    59fe:	fc 01       	movw	r30, r24
    5a00:	e2 0f       	add	r30, r18
    5a02:	f3 1f       	adc	r31, r19
    5a04:	80 81       	ld	r24, Z
    5a06:	88 23       	and	r24, r24
    5a08:	39 f7       	brne	.-50     	; 0x59d8 <LCD_DisplayStringXY+0x22>
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
		LOC_u8Iterator++;
	}
}
    5a0a:	0f 90       	pop	r0
    5a0c:	0f 90       	pop	r0
    5a0e:	0f 90       	pop	r0
    5a10:	0f 90       	pop	r0
    5a12:	0f 90       	pop	r0
    5a14:	cf 91       	pop	r28
    5a16:	df 91       	pop	r29
    5a18:	08 95       	ret

00005a1a <Lcd_VidDisplayNumberXY>:


void Lcd_VidDisplayNumberXY(uint8 Copy_u8Row,uint8 Copy_u8Column,uint64 Copy_u64Num )
{
    5a1a:	af 92       	push	r10
    5a1c:	bf 92       	push	r11
    5a1e:	cf 92       	push	r12
    5a20:	df 92       	push	r13
    5a22:	ef 92       	push	r14
    5a24:	ff 92       	push	r15
    5a26:	0f 93       	push	r16
    5a28:	1f 93       	push	r17
    5a2a:	df 93       	push	r29
    5a2c:	cf 93       	push	r28
    5a2e:	cd b7       	in	r28, 0x3d	; 61
    5a30:	de b7       	in	r29, 0x3e	; 62
    5a32:	c8 56       	subi	r28, 0x68	; 104
    5a34:	d0 40       	sbci	r29, 0x00	; 0
    5a36:	0f b6       	in	r0, 0x3f	; 63
    5a38:	f8 94       	cli
    5a3a:	de bf       	out	0x3e, r29	; 62
    5a3c:	0f be       	out	0x3f, r0	; 63
    5a3e:	cd bf       	out	0x3d, r28	; 61
    5a40:	89 87       	std	Y+9, r24	; 0x09
    5a42:	6a 87       	std	Y+10, r22	; 0x0a
    5a44:	eb 86       	std	Y+11, r14	; 0x0b
    5a46:	fc 86       	std	Y+12, r15	; 0x0c
    5a48:	0d 87       	std	Y+13, r16	; 0x0d
    5a4a:	1e 87       	std	Y+14, r17	; 0x0e
    5a4c:	2f 87       	std	Y+15, r18	; 0x0f
    5a4e:	38 8b       	std	Y+16, r19	; 0x10
    5a50:	49 8b       	std	Y+17, r20	; 0x11
    5a52:	5a 8b       	std	Y+18, r21	; 0x12
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
    5a54:	89 85       	ldd	r24, Y+9	; 0x09
    5a56:	6a 85       	ldd	r22, Y+10	; 0x0a
    5a58:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <Lcd_VidGoToXY>
	uint64 LOC_u8Inverse=1;
    5a5c:	81 e0       	ldi	r24, 0x01	; 1
    5a5e:	89 83       	std	Y+1, r24	; 0x01
    5a60:	1a 82       	std	Y+2, r1	; 0x02
    5a62:	1b 82       	std	Y+3, r1	; 0x03
    5a64:	1c 82       	std	Y+4, r1	; 0x04
    5a66:	1d 82       	std	Y+5, r1	; 0x05
    5a68:	1e 82       	std	Y+6, r1	; 0x06
    5a6a:	1f 82       	std	Y+7, r1	; 0x07
    5a6c:	18 86       	std	Y+8, r1	; 0x08
	if(Copy_u64Num==0)
    5a6e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5a70:	9c 85       	ldd	r25, Y+12	; 0x0c
    5a72:	89 2b       	or	r24, r25
    5a74:	9d 85       	ldd	r25, Y+13	; 0x0d
    5a76:	89 2b       	or	r24, r25
    5a78:	9e 85       	ldd	r25, Y+14	; 0x0e
    5a7a:	89 2b       	or	r24, r25
    5a7c:	9f 85       	ldd	r25, Y+15	; 0x0f
    5a7e:	89 2b       	or	r24, r25
    5a80:	98 89       	ldd	r25, Y+16	; 0x10
    5a82:	89 2b       	or	r24, r25
    5a84:	99 89       	ldd	r25, Y+17	; 0x11
    5a86:	89 2b       	or	r24, r25
    5a88:	9a 89       	ldd	r25, Y+18	; 0x12
    5a8a:	89 2b       	or	r24, r25
    5a8c:	88 23       	and	r24, r24
    5a8e:	09 f0       	breq	.+2      	; 0x5a92 <Lcd_VidDisplayNumberXY+0x78>
    5a90:	6e c3       	rjmp	.+1756   	; 0x616e <Lcd_VidDisplayNumberXY+0x754>
	{
		Lcd_VidDisplayChracter('0');
    5a92:	80 e3       	ldi	r24, 0x30	; 48
    5a94:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
    5a98:	6a c3       	rjmp	.+1748   	; 0x616e <Lcd_VidDisplayNumberXY+0x754>
	}
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
    5a9a:	29 81       	ldd	r18, Y+1	; 0x01
    5a9c:	3a 81       	ldd	r19, Y+2	; 0x02
    5a9e:	4b 81       	ldd	r20, Y+3	; 0x03
    5aa0:	5c 81       	ldd	r21, Y+4	; 0x04
    5aa2:	6d 81       	ldd	r22, Y+5	; 0x05
    5aa4:	7e 81       	ldd	r23, Y+6	; 0x06
    5aa6:	8f 81       	ldd	r24, Y+7	; 0x07
    5aa8:	98 85       	ldd	r25, Y+8	; 0x08
    5aaa:	a2 2e       	mov	r10, r18
    5aac:	b3 2e       	mov	r11, r19
    5aae:	c4 2e       	mov	r12, r20
    5ab0:	d5 2e       	mov	r13, r21
    5ab2:	e6 2e       	mov	r14, r22
    5ab4:	f7 2e       	mov	r15, r23
    5ab6:	08 2f       	mov	r16, r24
    5ab8:	19 2f       	mov	r17, r25
    5aba:	2a 2d       	mov	r18, r10
    5abc:	3b 2d       	mov	r19, r11
    5abe:	4c 2d       	mov	r20, r12
    5ac0:	5d 2d       	mov	r21, r13
    5ac2:	6e 2d       	mov	r22, r14
    5ac4:	7f 2d       	mov	r23, r15
    5ac6:	80 2f       	mov	r24, r16
    5ac8:	91 2f       	mov	r25, r17
    5aca:	01 e0       	ldi	r16, 0x01	; 1
    5acc:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    5ad0:	2b a3       	std	Y+35, r18	; 0x23
    5ad2:	3c a3       	std	Y+36, r19	; 0x24
    5ad4:	4d a3       	std	Y+37, r20	; 0x25
    5ad6:	5e a3       	std	Y+38, r21	; 0x26
    5ad8:	6f a3       	std	Y+39, r22	; 0x27
    5ada:	78 a7       	std	Y+40, r23	; 0x28
    5adc:	89 a7       	std	Y+41, r24	; 0x29
    5ade:	9a a7       	std	Y+42, r25	; 0x2a
    5ae0:	2b a1       	ldd	r18, Y+35	; 0x23
    5ae2:	3c a1       	ldd	r19, Y+36	; 0x24
    5ae4:	4d a1       	ldd	r20, Y+37	; 0x25
    5ae6:	5e a1       	ldd	r21, Y+38	; 0x26
    5ae8:	6f a1       	ldd	r22, Y+39	; 0x27
    5aea:	78 a5       	ldd	r23, Y+40	; 0x28
    5aec:	89 a5       	ldd	r24, Y+41	; 0x29
    5aee:	9a a5       	ldd	r25, Y+42	; 0x2a
    5af0:	02 e0       	ldi	r16, 0x02	; 2
    5af2:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    5af6:	2b a7       	std	Y+43, r18	; 0x2b
    5af8:	3c a7       	std	Y+44, r19	; 0x2c
    5afa:	4d a7       	std	Y+45, r20	; 0x2d
    5afc:	5e a7       	std	Y+46, r21	; 0x2e
    5afe:	6f a7       	std	Y+47, r22	; 0x2f
    5b00:	78 ab       	std	Y+48, r23	; 0x30
    5b02:	89 ab       	std	Y+49, r24	; 0x31
    5b04:	9a ab       	std	Y+50, r25	; 0x32
    5b06:	8b a1       	ldd	r24, Y+35	; 0x23
    5b08:	9b a5       	ldd	r25, Y+43	; 0x2b
    5b0a:	89 0f       	add	r24, r25
    5b0c:	8b ab       	std	Y+51, r24	; 0x33
    5b0e:	81 e0       	ldi	r24, 0x01	; 1
    5b10:	8b af       	std	Y+59, r24	; 0x3b
    5b12:	9b a9       	ldd	r25, Y+51	; 0x33
    5b14:	8b a1       	ldd	r24, Y+35	; 0x23
    5b16:	98 17       	cp	r25, r24
    5b18:	08 f0       	brcs	.+2      	; 0x5b1c <Lcd_VidDisplayNumberXY+0x102>
    5b1a:	1b ae       	std	Y+59, r1	; 0x3b
    5b1c:	9c a1       	ldd	r25, Y+36	; 0x24
    5b1e:	8c a5       	ldd	r24, Y+44	; 0x2c
    5b20:	98 0f       	add	r25, r24
    5b22:	9c ab       	std	Y+52, r25	; 0x34
    5b24:	91 e0       	ldi	r25, 0x01	; 1
    5b26:	9c af       	std	Y+60, r25	; 0x3c
    5b28:	8c a9       	ldd	r24, Y+52	; 0x34
    5b2a:	9c a1       	ldd	r25, Y+36	; 0x24
    5b2c:	89 17       	cp	r24, r25
    5b2e:	08 f0       	brcs	.+2      	; 0x5b32 <Lcd_VidDisplayNumberXY+0x118>
    5b30:	1c ae       	std	Y+60, r1	; 0x3c
    5b32:	8b ad       	ldd	r24, Y+59	; 0x3b
    5b34:	9c a9       	ldd	r25, Y+52	; 0x34
    5b36:	89 0f       	add	r24, r25
    5b38:	8d af       	std	Y+61, r24	; 0x3d
    5b3a:	81 e0       	ldi	r24, 0x01	; 1
    5b3c:	8e af       	std	Y+62, r24	; 0x3e
    5b3e:	9d ad       	ldd	r25, Y+61	; 0x3d
    5b40:	8c a9       	ldd	r24, Y+52	; 0x34
    5b42:	98 17       	cp	r25, r24
    5b44:	08 f0       	brcs	.+2      	; 0x5b48 <Lcd_VidDisplayNumberXY+0x12e>
    5b46:	1e ae       	std	Y+62, r1	; 0x3e
    5b48:	9c ad       	ldd	r25, Y+60	; 0x3c
    5b4a:	8e ad       	ldd	r24, Y+62	; 0x3e
    5b4c:	98 2b       	or	r25, r24
    5b4e:	9c af       	std	Y+60, r25	; 0x3c
    5b50:	9d ad       	ldd	r25, Y+61	; 0x3d
    5b52:	9c ab       	std	Y+52, r25	; 0x34
    5b54:	8d a1       	ldd	r24, Y+37	; 0x25
    5b56:	9d a5       	ldd	r25, Y+45	; 0x2d
    5b58:	89 0f       	add	r24, r25
    5b5a:	8d ab       	std	Y+53, r24	; 0x35
    5b5c:	81 e0       	ldi	r24, 0x01	; 1
    5b5e:	8f af       	std	Y+63, r24	; 0x3f
    5b60:	9d a9       	ldd	r25, Y+53	; 0x35
    5b62:	8d a1       	ldd	r24, Y+37	; 0x25
    5b64:	98 17       	cp	r25, r24
    5b66:	08 f0       	brcs	.+2      	; 0x5b6a <Lcd_VidDisplayNumberXY+0x150>
    5b68:	1f ae       	std	Y+63, r1	; 0x3f
    5b6a:	9c ad       	ldd	r25, Y+60	; 0x3c
    5b6c:	8d a9       	ldd	r24, Y+53	; 0x35
    5b6e:	98 0f       	add	r25, r24
    5b70:	21 96       	adiw	r28, 0x01	; 1
    5b72:	9f af       	std	Y+63, r25	; 0x3f
    5b74:	21 97       	sbiw	r28, 0x01	; 1
    5b76:	91 e0       	ldi	r25, 0x01	; 1
    5b78:	22 96       	adiw	r28, 0x02	; 2
    5b7a:	9f af       	std	Y+63, r25	; 0x3f
    5b7c:	22 97       	sbiw	r28, 0x02	; 2
    5b7e:	21 96       	adiw	r28, 0x01	; 1
    5b80:	8f ad       	ldd	r24, Y+63	; 0x3f
    5b82:	21 97       	sbiw	r28, 0x01	; 1
    5b84:	9d a9       	ldd	r25, Y+53	; 0x35
    5b86:	89 17       	cp	r24, r25
    5b88:	18 f0       	brcs	.+6      	; 0x5b90 <Lcd_VidDisplayNumberXY+0x176>
    5b8a:	22 96       	adiw	r28, 0x02	; 2
    5b8c:	1f ae       	std	Y+63, r1	; 0x3f
    5b8e:	22 97       	sbiw	r28, 0x02	; 2
    5b90:	8f ad       	ldd	r24, Y+63	; 0x3f
    5b92:	22 96       	adiw	r28, 0x02	; 2
    5b94:	9f ad       	ldd	r25, Y+63	; 0x3f
    5b96:	22 97       	sbiw	r28, 0x02	; 2
    5b98:	89 2b       	or	r24, r25
    5b9a:	8f af       	std	Y+63, r24	; 0x3f
    5b9c:	21 96       	adiw	r28, 0x01	; 1
    5b9e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ba0:	21 97       	sbiw	r28, 0x01	; 1
    5ba2:	8d ab       	std	Y+53, r24	; 0x35
    5ba4:	9e a1       	ldd	r25, Y+38	; 0x26
    5ba6:	8e a5       	ldd	r24, Y+46	; 0x2e
    5ba8:	98 0f       	add	r25, r24
    5baa:	9e ab       	std	Y+54, r25	; 0x36
    5bac:	91 e0       	ldi	r25, 0x01	; 1
    5bae:	23 96       	adiw	r28, 0x03	; 3
    5bb0:	9f af       	std	Y+63, r25	; 0x3f
    5bb2:	23 97       	sbiw	r28, 0x03	; 3
    5bb4:	8e a9       	ldd	r24, Y+54	; 0x36
    5bb6:	9e a1       	ldd	r25, Y+38	; 0x26
    5bb8:	89 17       	cp	r24, r25
    5bba:	18 f0       	brcs	.+6      	; 0x5bc2 <Lcd_VidDisplayNumberXY+0x1a8>
    5bbc:	23 96       	adiw	r28, 0x03	; 3
    5bbe:	1f ae       	std	Y+63, r1	; 0x3f
    5bc0:	23 97       	sbiw	r28, 0x03	; 3
    5bc2:	8f ad       	ldd	r24, Y+63	; 0x3f
    5bc4:	9e a9       	ldd	r25, Y+54	; 0x36
    5bc6:	89 0f       	add	r24, r25
    5bc8:	24 96       	adiw	r28, 0x04	; 4
    5bca:	8f af       	std	Y+63, r24	; 0x3f
    5bcc:	24 97       	sbiw	r28, 0x04	; 4
    5bce:	81 e0       	ldi	r24, 0x01	; 1
    5bd0:	25 96       	adiw	r28, 0x05	; 5
    5bd2:	8f af       	std	Y+63, r24	; 0x3f
    5bd4:	25 97       	sbiw	r28, 0x05	; 5
    5bd6:	24 96       	adiw	r28, 0x04	; 4
    5bd8:	9f ad       	ldd	r25, Y+63	; 0x3f
    5bda:	24 97       	sbiw	r28, 0x04	; 4
    5bdc:	8e a9       	ldd	r24, Y+54	; 0x36
    5bde:	98 17       	cp	r25, r24
    5be0:	18 f0       	brcs	.+6      	; 0x5be8 <Lcd_VidDisplayNumberXY+0x1ce>
    5be2:	25 96       	adiw	r28, 0x05	; 5
    5be4:	1f ae       	std	Y+63, r1	; 0x3f
    5be6:	25 97       	sbiw	r28, 0x05	; 5
    5be8:	23 96       	adiw	r28, 0x03	; 3
    5bea:	9f ad       	ldd	r25, Y+63	; 0x3f
    5bec:	23 97       	sbiw	r28, 0x03	; 3
    5bee:	25 96       	adiw	r28, 0x05	; 5
    5bf0:	8f ad       	ldd	r24, Y+63	; 0x3f
    5bf2:	25 97       	sbiw	r28, 0x05	; 5
    5bf4:	98 2b       	or	r25, r24
    5bf6:	23 96       	adiw	r28, 0x03	; 3
    5bf8:	9f af       	std	Y+63, r25	; 0x3f
    5bfa:	23 97       	sbiw	r28, 0x03	; 3
    5bfc:	24 96       	adiw	r28, 0x04	; 4
    5bfe:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c00:	24 97       	sbiw	r28, 0x04	; 4
    5c02:	9e ab       	std	Y+54, r25	; 0x36
    5c04:	8f a1       	ldd	r24, Y+39	; 0x27
    5c06:	9f a5       	ldd	r25, Y+47	; 0x2f
    5c08:	89 0f       	add	r24, r25
    5c0a:	8f ab       	std	Y+55, r24	; 0x37
    5c0c:	81 e0       	ldi	r24, 0x01	; 1
    5c0e:	26 96       	adiw	r28, 0x06	; 6
    5c10:	8f af       	std	Y+63, r24	; 0x3f
    5c12:	26 97       	sbiw	r28, 0x06	; 6
    5c14:	9f a9       	ldd	r25, Y+55	; 0x37
    5c16:	8f a1       	ldd	r24, Y+39	; 0x27
    5c18:	98 17       	cp	r25, r24
    5c1a:	18 f0       	brcs	.+6      	; 0x5c22 <Lcd_VidDisplayNumberXY+0x208>
    5c1c:	26 96       	adiw	r28, 0x06	; 6
    5c1e:	1f ae       	std	Y+63, r1	; 0x3f
    5c20:	26 97       	sbiw	r28, 0x06	; 6
    5c22:	23 96       	adiw	r28, 0x03	; 3
    5c24:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c26:	23 97       	sbiw	r28, 0x03	; 3
    5c28:	8f a9       	ldd	r24, Y+55	; 0x37
    5c2a:	98 0f       	add	r25, r24
    5c2c:	27 96       	adiw	r28, 0x07	; 7
    5c2e:	9f af       	std	Y+63, r25	; 0x3f
    5c30:	27 97       	sbiw	r28, 0x07	; 7
    5c32:	91 e0       	ldi	r25, 0x01	; 1
    5c34:	28 96       	adiw	r28, 0x08	; 8
    5c36:	9f af       	std	Y+63, r25	; 0x3f
    5c38:	28 97       	sbiw	r28, 0x08	; 8
    5c3a:	27 96       	adiw	r28, 0x07	; 7
    5c3c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c3e:	27 97       	sbiw	r28, 0x07	; 7
    5c40:	9f a9       	ldd	r25, Y+55	; 0x37
    5c42:	89 17       	cp	r24, r25
    5c44:	18 f0       	brcs	.+6      	; 0x5c4c <Lcd_VidDisplayNumberXY+0x232>
    5c46:	28 96       	adiw	r28, 0x08	; 8
    5c48:	1f ae       	std	Y+63, r1	; 0x3f
    5c4a:	28 97       	sbiw	r28, 0x08	; 8
    5c4c:	26 96       	adiw	r28, 0x06	; 6
    5c4e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c50:	26 97       	sbiw	r28, 0x06	; 6
    5c52:	28 96       	adiw	r28, 0x08	; 8
    5c54:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c56:	28 97       	sbiw	r28, 0x08	; 8
    5c58:	89 2b       	or	r24, r25
    5c5a:	26 96       	adiw	r28, 0x06	; 6
    5c5c:	8f af       	std	Y+63, r24	; 0x3f
    5c5e:	26 97       	sbiw	r28, 0x06	; 6
    5c60:	27 96       	adiw	r28, 0x07	; 7
    5c62:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c64:	27 97       	sbiw	r28, 0x07	; 7
    5c66:	8f ab       	std	Y+55, r24	; 0x37
    5c68:	98 a5       	ldd	r25, Y+40	; 0x28
    5c6a:	88 a9       	ldd	r24, Y+48	; 0x30
    5c6c:	98 0f       	add	r25, r24
    5c6e:	98 af       	std	Y+56, r25	; 0x38
    5c70:	91 e0       	ldi	r25, 0x01	; 1
    5c72:	29 96       	adiw	r28, 0x09	; 9
    5c74:	9f af       	std	Y+63, r25	; 0x3f
    5c76:	29 97       	sbiw	r28, 0x09	; 9
    5c78:	88 ad       	ldd	r24, Y+56	; 0x38
    5c7a:	98 a5       	ldd	r25, Y+40	; 0x28
    5c7c:	89 17       	cp	r24, r25
    5c7e:	18 f0       	brcs	.+6      	; 0x5c86 <Lcd_VidDisplayNumberXY+0x26c>
    5c80:	29 96       	adiw	r28, 0x09	; 9
    5c82:	1f ae       	std	Y+63, r1	; 0x3f
    5c84:	29 97       	sbiw	r28, 0x09	; 9
    5c86:	26 96       	adiw	r28, 0x06	; 6
    5c88:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c8a:	26 97       	sbiw	r28, 0x06	; 6
    5c8c:	98 ad       	ldd	r25, Y+56	; 0x38
    5c8e:	89 0f       	add	r24, r25
    5c90:	2a 96       	adiw	r28, 0x0a	; 10
    5c92:	8f af       	std	Y+63, r24	; 0x3f
    5c94:	2a 97       	sbiw	r28, 0x0a	; 10
    5c96:	81 e0       	ldi	r24, 0x01	; 1
    5c98:	2b 96       	adiw	r28, 0x0b	; 11
    5c9a:	8f af       	std	Y+63, r24	; 0x3f
    5c9c:	2b 97       	sbiw	r28, 0x0b	; 11
    5c9e:	2a 96       	adiw	r28, 0x0a	; 10
    5ca0:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ca2:	2a 97       	sbiw	r28, 0x0a	; 10
    5ca4:	88 ad       	ldd	r24, Y+56	; 0x38
    5ca6:	98 17       	cp	r25, r24
    5ca8:	18 f0       	brcs	.+6      	; 0x5cb0 <Lcd_VidDisplayNumberXY+0x296>
    5caa:	2b 96       	adiw	r28, 0x0b	; 11
    5cac:	1f ae       	std	Y+63, r1	; 0x3f
    5cae:	2b 97       	sbiw	r28, 0x0b	; 11
    5cb0:	29 96       	adiw	r28, 0x09	; 9
    5cb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cb4:	29 97       	sbiw	r28, 0x09	; 9
    5cb6:	2b 96       	adiw	r28, 0x0b	; 11
    5cb8:	8f ad       	ldd	r24, Y+63	; 0x3f
    5cba:	2b 97       	sbiw	r28, 0x0b	; 11
    5cbc:	98 2b       	or	r25, r24
    5cbe:	29 96       	adiw	r28, 0x09	; 9
    5cc0:	9f af       	std	Y+63, r25	; 0x3f
    5cc2:	29 97       	sbiw	r28, 0x09	; 9
    5cc4:	2a 96       	adiw	r28, 0x0a	; 10
    5cc6:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cc8:	2a 97       	sbiw	r28, 0x0a	; 10
    5cca:	98 af       	std	Y+56, r25	; 0x38
    5ccc:	89 a5       	ldd	r24, Y+41	; 0x29
    5cce:	99 a9       	ldd	r25, Y+49	; 0x31
    5cd0:	89 0f       	add	r24, r25
    5cd2:	89 af       	std	Y+57, r24	; 0x39
    5cd4:	81 e0       	ldi	r24, 0x01	; 1
    5cd6:	2c 96       	adiw	r28, 0x0c	; 12
    5cd8:	8f af       	std	Y+63, r24	; 0x3f
    5cda:	2c 97       	sbiw	r28, 0x0c	; 12
    5cdc:	99 ad       	ldd	r25, Y+57	; 0x39
    5cde:	89 a5       	ldd	r24, Y+41	; 0x29
    5ce0:	98 17       	cp	r25, r24
    5ce2:	18 f0       	brcs	.+6      	; 0x5cea <Lcd_VidDisplayNumberXY+0x2d0>
    5ce4:	2c 96       	adiw	r28, 0x0c	; 12
    5ce6:	1f ae       	std	Y+63, r1	; 0x3f
    5ce8:	2c 97       	sbiw	r28, 0x0c	; 12
    5cea:	29 96       	adiw	r28, 0x09	; 9
    5cec:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cee:	29 97       	sbiw	r28, 0x09	; 9
    5cf0:	89 ad       	ldd	r24, Y+57	; 0x39
    5cf2:	98 0f       	add	r25, r24
    5cf4:	2d 96       	adiw	r28, 0x0d	; 13
    5cf6:	9f af       	std	Y+63, r25	; 0x3f
    5cf8:	2d 97       	sbiw	r28, 0x0d	; 13
    5cfa:	91 e0       	ldi	r25, 0x01	; 1
    5cfc:	2e 96       	adiw	r28, 0x0e	; 14
    5cfe:	9f af       	std	Y+63, r25	; 0x3f
    5d00:	2e 97       	sbiw	r28, 0x0e	; 14
    5d02:	2d 96       	adiw	r28, 0x0d	; 13
    5d04:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d06:	2d 97       	sbiw	r28, 0x0d	; 13
    5d08:	99 ad       	ldd	r25, Y+57	; 0x39
    5d0a:	89 17       	cp	r24, r25
    5d0c:	18 f0       	brcs	.+6      	; 0x5d14 <Lcd_VidDisplayNumberXY+0x2fa>
    5d0e:	2e 96       	adiw	r28, 0x0e	; 14
    5d10:	1f ae       	std	Y+63, r1	; 0x3f
    5d12:	2e 97       	sbiw	r28, 0x0e	; 14
    5d14:	2c 96       	adiw	r28, 0x0c	; 12
    5d16:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d18:	2c 97       	sbiw	r28, 0x0c	; 12
    5d1a:	2e 96       	adiw	r28, 0x0e	; 14
    5d1c:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d1e:	2e 97       	sbiw	r28, 0x0e	; 14
    5d20:	89 2b       	or	r24, r25
    5d22:	2c 96       	adiw	r28, 0x0c	; 12
    5d24:	8f af       	std	Y+63, r24	; 0x3f
    5d26:	2c 97       	sbiw	r28, 0x0c	; 12
    5d28:	2d 96       	adiw	r28, 0x0d	; 13
    5d2a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d2c:	2d 97       	sbiw	r28, 0x0d	; 13
    5d2e:	89 af       	std	Y+57, r24	; 0x39
    5d30:	9a a5       	ldd	r25, Y+42	; 0x2a
    5d32:	8a a9       	ldd	r24, Y+50	; 0x32
    5d34:	98 0f       	add	r25, r24
    5d36:	9a af       	std	Y+58, r25	; 0x3a
    5d38:	2c 96       	adiw	r28, 0x0c	; 12
    5d3a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d3c:	2c 97       	sbiw	r28, 0x0c	; 12
    5d3e:	9a ad       	ldd	r25, Y+58	; 0x3a
    5d40:	89 0f       	add	r24, r25
    5d42:	8a af       	std	Y+58, r24	; 0x3a
    5d44:	8b a9       	ldd	r24, Y+51	; 0x33
    5d46:	8b 8f       	std	Y+27, r24	; 0x1b
    5d48:	9c a9       	ldd	r25, Y+52	; 0x34
    5d4a:	9c 8f       	std	Y+28, r25	; 0x1c
    5d4c:	8d a9       	ldd	r24, Y+53	; 0x35
    5d4e:	8d 8f       	std	Y+29, r24	; 0x1d
    5d50:	9e a9       	ldd	r25, Y+54	; 0x36
    5d52:	9e 8f       	std	Y+30, r25	; 0x1e
    5d54:	8f a9       	ldd	r24, Y+55	; 0x37
    5d56:	8f 8f       	std	Y+31, r24	; 0x1f
    5d58:	98 ad       	ldd	r25, Y+56	; 0x38
    5d5a:	98 a3       	std	Y+32, r25	; 0x20
    5d5c:	89 ad       	ldd	r24, Y+57	; 0x39
    5d5e:	89 a3       	std	Y+33, r24	; 0x21
    5d60:	9a ad       	ldd	r25, Y+58	; 0x3a
    5d62:	9a a3       	std	Y+34, r25	; 0x22
    5d64:	ab 84       	ldd	r10, Y+11	; 0x0b
    5d66:	bc 84       	ldd	r11, Y+12	; 0x0c
    5d68:	cd 84       	ldd	r12, Y+13	; 0x0d
    5d6a:	de 84       	ldd	r13, Y+14	; 0x0e
    5d6c:	ef 84       	ldd	r14, Y+15	; 0x0f
    5d6e:	f8 88       	ldd	r15, Y+16	; 0x10
    5d70:	09 89       	ldd	r16, Y+17	; 0x11
    5d72:	1a 89       	ldd	r17, Y+18	; 0x12
    5d74:	2a 2d       	mov	r18, r10
    5d76:	3b 2d       	mov	r19, r11
    5d78:	4c 2d       	mov	r20, r12
    5d7a:	5d 2d       	mov	r21, r13
    5d7c:	6e 2d       	mov	r22, r14
    5d7e:	7f 2d       	mov	r23, r15
    5d80:	80 2f       	mov	r24, r16
    5d82:	91 2f       	mov	r25, r17
    5d84:	0f 2e       	mov	r0, r31
    5d86:	fa e0       	ldi	r31, 0x0A	; 10
    5d88:	af 2e       	mov	r10, r31
    5d8a:	f0 2d       	mov	r31, r0
    5d8c:	bb 24       	eor	r11, r11
    5d8e:	cc 24       	eor	r12, r12
    5d90:	dd 24       	eor	r13, r13
    5d92:	ee 24       	eor	r14, r14
    5d94:	ff 24       	eor	r15, r15
    5d96:	00 e0       	ldi	r16, 0x00	; 0
    5d98:	10 e0       	ldi	r17, 0x00	; 0
    5d9a:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    5d9e:	a2 2e       	mov	r10, r18
    5da0:	b3 2e       	mov	r11, r19
    5da2:	c4 2e       	mov	r12, r20
    5da4:	d5 2e       	mov	r13, r21
    5da6:	e6 2e       	mov	r14, r22
    5da8:	f7 2e       	mov	r15, r23
    5daa:	08 2f       	mov	r16, r24
    5dac:	19 2f       	mov	r17, r25
    5dae:	ab 8a       	std	Y+19, r10	; 0x13
    5db0:	bc 8a       	std	Y+20, r11	; 0x14
    5db2:	cd 8a       	std	Y+21, r12	; 0x15
    5db4:	de 8a       	std	Y+22, r13	; 0x16
    5db6:	ef 8a       	std	Y+23, r14	; 0x17
    5db8:	f8 8e       	std	Y+24, r15	; 0x18
    5dba:	09 8f       	std	Y+25, r16	; 0x19
    5dbc:	1a 8f       	std	Y+26, r17	; 0x1a
    5dbe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5dc0:	9b 89       	ldd	r25, Y+19	; 0x13
    5dc2:	89 0f       	add	r24, r25
    5dc4:	2f 96       	adiw	r28, 0x0f	; 15
    5dc6:	8f af       	std	Y+63, r24	; 0x3f
    5dc8:	2f 97       	sbiw	r28, 0x0f	; 15
    5dca:	81 e0       	ldi	r24, 0x01	; 1
    5dcc:	67 96       	adiw	r28, 0x17	; 23
    5dce:	8f af       	std	Y+63, r24	; 0x3f
    5dd0:	67 97       	sbiw	r28, 0x17	; 23
    5dd2:	2f 96       	adiw	r28, 0x0f	; 15
    5dd4:	9f ad       	ldd	r25, Y+63	; 0x3f
    5dd6:	2f 97       	sbiw	r28, 0x0f	; 15
    5dd8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5dda:	98 17       	cp	r25, r24
    5ddc:	18 f0       	brcs	.+6      	; 0x5de4 <Lcd_VidDisplayNumberXY+0x3ca>
    5dde:	67 96       	adiw	r28, 0x17	; 23
    5de0:	1f ae       	std	Y+63, r1	; 0x3f
    5de2:	67 97       	sbiw	r28, 0x17	; 23
    5de4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5de6:	8c 89       	ldd	r24, Y+20	; 0x14
    5de8:	98 0f       	add	r25, r24
    5dea:	60 96       	adiw	r28, 0x10	; 16
    5dec:	9f af       	std	Y+63, r25	; 0x3f
    5dee:	60 97       	sbiw	r28, 0x10	; 16
    5df0:	91 e0       	ldi	r25, 0x01	; 1
    5df2:	68 96       	adiw	r28, 0x18	; 24
    5df4:	9f af       	std	Y+63, r25	; 0x3f
    5df6:	68 97       	sbiw	r28, 0x18	; 24
    5df8:	60 96       	adiw	r28, 0x10	; 16
    5dfa:	8f ad       	ldd	r24, Y+63	; 0x3f
    5dfc:	60 97       	sbiw	r28, 0x10	; 16
    5dfe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5e00:	89 17       	cp	r24, r25
    5e02:	18 f0       	brcs	.+6      	; 0x5e0a <Lcd_VidDisplayNumberXY+0x3f0>
    5e04:	68 96       	adiw	r28, 0x18	; 24
    5e06:	1f ae       	std	Y+63, r1	; 0x3f
    5e08:	68 97       	sbiw	r28, 0x18	; 24
    5e0a:	67 96       	adiw	r28, 0x17	; 23
    5e0c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e0e:	67 97       	sbiw	r28, 0x17	; 23
    5e10:	60 96       	adiw	r28, 0x10	; 16
    5e12:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e14:	60 97       	sbiw	r28, 0x10	; 16
    5e16:	89 0f       	add	r24, r25
    5e18:	69 96       	adiw	r28, 0x19	; 25
    5e1a:	8f af       	std	Y+63, r24	; 0x3f
    5e1c:	69 97       	sbiw	r28, 0x19	; 25
    5e1e:	81 e0       	ldi	r24, 0x01	; 1
    5e20:	6a 96       	adiw	r28, 0x1a	; 26
    5e22:	8f af       	std	Y+63, r24	; 0x3f
    5e24:	6a 97       	sbiw	r28, 0x1a	; 26
    5e26:	69 96       	adiw	r28, 0x19	; 25
    5e28:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e2a:	69 97       	sbiw	r28, 0x19	; 25
    5e2c:	60 96       	adiw	r28, 0x10	; 16
    5e2e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e30:	60 97       	sbiw	r28, 0x10	; 16
    5e32:	98 17       	cp	r25, r24
    5e34:	18 f0       	brcs	.+6      	; 0x5e3c <Lcd_VidDisplayNumberXY+0x422>
    5e36:	6a 96       	adiw	r28, 0x1a	; 26
    5e38:	1f ae       	std	Y+63, r1	; 0x3f
    5e3a:	6a 97       	sbiw	r28, 0x1a	; 26
    5e3c:	68 96       	adiw	r28, 0x18	; 24
    5e3e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e40:	68 97       	sbiw	r28, 0x18	; 24
    5e42:	6a 96       	adiw	r28, 0x1a	; 26
    5e44:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e46:	6a 97       	sbiw	r28, 0x1a	; 26
    5e48:	98 2b       	or	r25, r24
    5e4a:	68 96       	adiw	r28, 0x18	; 24
    5e4c:	9f af       	std	Y+63, r25	; 0x3f
    5e4e:	68 97       	sbiw	r28, 0x18	; 24
    5e50:	69 96       	adiw	r28, 0x19	; 25
    5e52:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e54:	69 97       	sbiw	r28, 0x19	; 25
    5e56:	60 96       	adiw	r28, 0x10	; 16
    5e58:	9f af       	std	Y+63, r25	; 0x3f
    5e5a:	60 97       	sbiw	r28, 0x10	; 16
    5e5c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5e5e:	9d 89       	ldd	r25, Y+21	; 0x15
    5e60:	89 0f       	add	r24, r25
    5e62:	61 96       	adiw	r28, 0x11	; 17
    5e64:	8f af       	std	Y+63, r24	; 0x3f
    5e66:	61 97       	sbiw	r28, 0x11	; 17
    5e68:	81 e0       	ldi	r24, 0x01	; 1
    5e6a:	6b 96       	adiw	r28, 0x1b	; 27
    5e6c:	8f af       	std	Y+63, r24	; 0x3f
    5e6e:	6b 97       	sbiw	r28, 0x1b	; 27
    5e70:	61 96       	adiw	r28, 0x11	; 17
    5e72:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e74:	61 97       	sbiw	r28, 0x11	; 17
    5e76:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5e78:	98 17       	cp	r25, r24
    5e7a:	18 f0       	brcs	.+6      	; 0x5e82 <Lcd_VidDisplayNumberXY+0x468>
    5e7c:	6b 96       	adiw	r28, 0x1b	; 27
    5e7e:	1f ae       	std	Y+63, r1	; 0x3f
    5e80:	6b 97       	sbiw	r28, 0x1b	; 27
    5e82:	68 96       	adiw	r28, 0x18	; 24
    5e84:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e86:	68 97       	sbiw	r28, 0x18	; 24
    5e88:	61 96       	adiw	r28, 0x11	; 17
    5e8a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e8c:	61 97       	sbiw	r28, 0x11	; 17
    5e8e:	98 0f       	add	r25, r24
    5e90:	6c 96       	adiw	r28, 0x1c	; 28
    5e92:	9f af       	std	Y+63, r25	; 0x3f
    5e94:	6c 97       	sbiw	r28, 0x1c	; 28
    5e96:	91 e0       	ldi	r25, 0x01	; 1
    5e98:	6d 96       	adiw	r28, 0x1d	; 29
    5e9a:	9f af       	std	Y+63, r25	; 0x3f
    5e9c:	6d 97       	sbiw	r28, 0x1d	; 29
    5e9e:	6c 96       	adiw	r28, 0x1c	; 28
    5ea0:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ea2:	6c 97       	sbiw	r28, 0x1c	; 28
    5ea4:	61 96       	adiw	r28, 0x11	; 17
    5ea6:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ea8:	61 97       	sbiw	r28, 0x11	; 17
    5eaa:	89 17       	cp	r24, r25
    5eac:	18 f0       	brcs	.+6      	; 0x5eb4 <Lcd_VidDisplayNumberXY+0x49a>
    5eae:	6d 96       	adiw	r28, 0x1d	; 29
    5eb0:	1f ae       	std	Y+63, r1	; 0x3f
    5eb2:	6d 97       	sbiw	r28, 0x1d	; 29
    5eb4:	6b 96       	adiw	r28, 0x1b	; 27
    5eb6:	8f ad       	ldd	r24, Y+63	; 0x3f
    5eb8:	6b 97       	sbiw	r28, 0x1b	; 27
    5eba:	6d 96       	adiw	r28, 0x1d	; 29
    5ebc:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ebe:	6d 97       	sbiw	r28, 0x1d	; 29
    5ec0:	89 2b       	or	r24, r25
    5ec2:	6b 96       	adiw	r28, 0x1b	; 27
    5ec4:	8f af       	std	Y+63, r24	; 0x3f
    5ec6:	6b 97       	sbiw	r28, 0x1b	; 27
    5ec8:	6c 96       	adiw	r28, 0x1c	; 28
    5eca:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ecc:	6c 97       	sbiw	r28, 0x1c	; 28
    5ece:	61 96       	adiw	r28, 0x11	; 17
    5ed0:	8f af       	std	Y+63, r24	; 0x3f
    5ed2:	61 97       	sbiw	r28, 0x11	; 17
    5ed4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5ed6:	8e 89       	ldd	r24, Y+22	; 0x16
    5ed8:	98 0f       	add	r25, r24
    5eda:	62 96       	adiw	r28, 0x12	; 18
    5edc:	9f af       	std	Y+63, r25	; 0x3f
    5ede:	62 97       	sbiw	r28, 0x12	; 18
    5ee0:	91 e0       	ldi	r25, 0x01	; 1
    5ee2:	6e 96       	adiw	r28, 0x1e	; 30
    5ee4:	9f af       	std	Y+63, r25	; 0x3f
    5ee6:	6e 97       	sbiw	r28, 0x1e	; 30
    5ee8:	62 96       	adiw	r28, 0x12	; 18
    5eea:	8f ad       	ldd	r24, Y+63	; 0x3f
    5eec:	62 97       	sbiw	r28, 0x12	; 18
    5eee:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5ef0:	89 17       	cp	r24, r25
    5ef2:	18 f0       	brcs	.+6      	; 0x5efa <Lcd_VidDisplayNumberXY+0x4e0>
    5ef4:	6e 96       	adiw	r28, 0x1e	; 30
    5ef6:	1f ae       	std	Y+63, r1	; 0x3f
    5ef8:	6e 97       	sbiw	r28, 0x1e	; 30
    5efa:	6b 96       	adiw	r28, 0x1b	; 27
    5efc:	8f ad       	ldd	r24, Y+63	; 0x3f
    5efe:	6b 97       	sbiw	r28, 0x1b	; 27
    5f00:	62 96       	adiw	r28, 0x12	; 18
    5f02:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f04:	62 97       	sbiw	r28, 0x12	; 18
    5f06:	89 0f       	add	r24, r25
    5f08:	6f 96       	adiw	r28, 0x1f	; 31
    5f0a:	8f af       	std	Y+63, r24	; 0x3f
    5f0c:	6f 97       	sbiw	r28, 0x1f	; 31
    5f0e:	81 e0       	ldi	r24, 0x01	; 1
    5f10:	a0 96       	adiw	r28, 0x20	; 32
    5f12:	8f af       	std	Y+63, r24	; 0x3f
    5f14:	a0 97       	sbiw	r28, 0x20	; 32
    5f16:	6f 96       	adiw	r28, 0x1f	; 31
    5f18:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f1a:	6f 97       	sbiw	r28, 0x1f	; 31
    5f1c:	62 96       	adiw	r28, 0x12	; 18
    5f1e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f20:	62 97       	sbiw	r28, 0x12	; 18
    5f22:	98 17       	cp	r25, r24
    5f24:	18 f0       	brcs	.+6      	; 0x5f2c <Lcd_VidDisplayNumberXY+0x512>
    5f26:	a0 96       	adiw	r28, 0x20	; 32
    5f28:	1f ae       	std	Y+63, r1	; 0x3f
    5f2a:	a0 97       	sbiw	r28, 0x20	; 32
    5f2c:	6e 96       	adiw	r28, 0x1e	; 30
    5f2e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f30:	6e 97       	sbiw	r28, 0x1e	; 30
    5f32:	a0 96       	adiw	r28, 0x20	; 32
    5f34:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f36:	a0 97       	sbiw	r28, 0x20	; 32
    5f38:	98 2b       	or	r25, r24
    5f3a:	6e 96       	adiw	r28, 0x1e	; 30
    5f3c:	9f af       	std	Y+63, r25	; 0x3f
    5f3e:	6e 97       	sbiw	r28, 0x1e	; 30
    5f40:	6f 96       	adiw	r28, 0x1f	; 31
    5f42:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f44:	6f 97       	sbiw	r28, 0x1f	; 31
    5f46:	62 96       	adiw	r28, 0x12	; 18
    5f48:	9f af       	std	Y+63, r25	; 0x3f
    5f4a:	62 97       	sbiw	r28, 0x12	; 18
    5f4c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5f4e:	9f 89       	ldd	r25, Y+23	; 0x17
    5f50:	89 0f       	add	r24, r25
    5f52:	63 96       	adiw	r28, 0x13	; 19
    5f54:	8f af       	std	Y+63, r24	; 0x3f
    5f56:	63 97       	sbiw	r28, 0x13	; 19
    5f58:	81 e0       	ldi	r24, 0x01	; 1
    5f5a:	a1 96       	adiw	r28, 0x21	; 33
    5f5c:	8f af       	std	Y+63, r24	; 0x3f
    5f5e:	a1 97       	sbiw	r28, 0x21	; 33
    5f60:	63 96       	adiw	r28, 0x13	; 19
    5f62:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f64:	63 97       	sbiw	r28, 0x13	; 19
    5f66:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5f68:	98 17       	cp	r25, r24
    5f6a:	18 f0       	brcs	.+6      	; 0x5f72 <Lcd_VidDisplayNumberXY+0x558>
    5f6c:	a1 96       	adiw	r28, 0x21	; 33
    5f6e:	1f ae       	std	Y+63, r1	; 0x3f
    5f70:	a1 97       	sbiw	r28, 0x21	; 33
    5f72:	6e 96       	adiw	r28, 0x1e	; 30
    5f74:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f76:	6e 97       	sbiw	r28, 0x1e	; 30
    5f78:	63 96       	adiw	r28, 0x13	; 19
    5f7a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f7c:	63 97       	sbiw	r28, 0x13	; 19
    5f7e:	98 0f       	add	r25, r24
    5f80:	a2 96       	adiw	r28, 0x22	; 34
    5f82:	9f af       	std	Y+63, r25	; 0x3f
    5f84:	a2 97       	sbiw	r28, 0x22	; 34
    5f86:	91 e0       	ldi	r25, 0x01	; 1
    5f88:	a3 96       	adiw	r28, 0x23	; 35
    5f8a:	9f af       	std	Y+63, r25	; 0x3f
    5f8c:	a3 97       	sbiw	r28, 0x23	; 35
    5f8e:	a2 96       	adiw	r28, 0x22	; 34
    5f90:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f92:	a2 97       	sbiw	r28, 0x22	; 34
    5f94:	63 96       	adiw	r28, 0x13	; 19
    5f96:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f98:	63 97       	sbiw	r28, 0x13	; 19
    5f9a:	89 17       	cp	r24, r25
    5f9c:	18 f0       	brcs	.+6      	; 0x5fa4 <Lcd_VidDisplayNumberXY+0x58a>
    5f9e:	a3 96       	adiw	r28, 0x23	; 35
    5fa0:	1f ae       	std	Y+63, r1	; 0x3f
    5fa2:	a3 97       	sbiw	r28, 0x23	; 35
    5fa4:	a1 96       	adiw	r28, 0x21	; 33
    5fa6:	8f ad       	ldd	r24, Y+63	; 0x3f
    5fa8:	a1 97       	sbiw	r28, 0x21	; 33
    5faa:	a3 96       	adiw	r28, 0x23	; 35
    5fac:	9f ad       	ldd	r25, Y+63	; 0x3f
    5fae:	a3 97       	sbiw	r28, 0x23	; 35
    5fb0:	89 2b       	or	r24, r25
    5fb2:	a1 96       	adiw	r28, 0x21	; 33
    5fb4:	8f af       	std	Y+63, r24	; 0x3f
    5fb6:	a1 97       	sbiw	r28, 0x21	; 33
    5fb8:	a2 96       	adiw	r28, 0x22	; 34
    5fba:	8f ad       	ldd	r24, Y+63	; 0x3f
    5fbc:	a2 97       	sbiw	r28, 0x22	; 34
    5fbe:	63 96       	adiw	r28, 0x13	; 19
    5fc0:	8f af       	std	Y+63, r24	; 0x3f
    5fc2:	63 97       	sbiw	r28, 0x13	; 19
    5fc4:	98 a1       	ldd	r25, Y+32	; 0x20
    5fc6:	88 8d       	ldd	r24, Y+24	; 0x18
    5fc8:	98 0f       	add	r25, r24
    5fca:	64 96       	adiw	r28, 0x14	; 20
    5fcc:	9f af       	std	Y+63, r25	; 0x3f
    5fce:	64 97       	sbiw	r28, 0x14	; 20
    5fd0:	91 e0       	ldi	r25, 0x01	; 1
    5fd2:	a4 96       	adiw	r28, 0x24	; 36
    5fd4:	9f af       	std	Y+63, r25	; 0x3f
    5fd6:	a4 97       	sbiw	r28, 0x24	; 36
    5fd8:	64 96       	adiw	r28, 0x14	; 20
    5fda:	8f ad       	ldd	r24, Y+63	; 0x3f
    5fdc:	64 97       	sbiw	r28, 0x14	; 20
    5fde:	98 a1       	ldd	r25, Y+32	; 0x20
    5fe0:	89 17       	cp	r24, r25
    5fe2:	18 f0       	brcs	.+6      	; 0x5fea <Lcd_VidDisplayNumberXY+0x5d0>
    5fe4:	a4 96       	adiw	r28, 0x24	; 36
    5fe6:	1f ae       	std	Y+63, r1	; 0x3f
    5fe8:	a4 97       	sbiw	r28, 0x24	; 36
    5fea:	a1 96       	adiw	r28, 0x21	; 33
    5fec:	8f ad       	ldd	r24, Y+63	; 0x3f
    5fee:	a1 97       	sbiw	r28, 0x21	; 33
    5ff0:	64 96       	adiw	r28, 0x14	; 20
    5ff2:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ff4:	64 97       	sbiw	r28, 0x14	; 20
    5ff6:	89 0f       	add	r24, r25
    5ff8:	a5 96       	adiw	r28, 0x25	; 37
    5ffa:	8f af       	std	Y+63, r24	; 0x3f
    5ffc:	a5 97       	sbiw	r28, 0x25	; 37
    5ffe:	81 e0       	ldi	r24, 0x01	; 1
    6000:	a6 96       	adiw	r28, 0x26	; 38
    6002:	8f af       	std	Y+63, r24	; 0x3f
    6004:	a6 97       	sbiw	r28, 0x26	; 38
    6006:	a5 96       	adiw	r28, 0x25	; 37
    6008:	9f ad       	ldd	r25, Y+63	; 0x3f
    600a:	a5 97       	sbiw	r28, 0x25	; 37
    600c:	64 96       	adiw	r28, 0x14	; 20
    600e:	8f ad       	ldd	r24, Y+63	; 0x3f
    6010:	64 97       	sbiw	r28, 0x14	; 20
    6012:	98 17       	cp	r25, r24
    6014:	18 f0       	brcs	.+6      	; 0x601c <Lcd_VidDisplayNumberXY+0x602>
    6016:	a6 96       	adiw	r28, 0x26	; 38
    6018:	1f ae       	std	Y+63, r1	; 0x3f
    601a:	a6 97       	sbiw	r28, 0x26	; 38
    601c:	a4 96       	adiw	r28, 0x24	; 36
    601e:	9f ad       	ldd	r25, Y+63	; 0x3f
    6020:	a4 97       	sbiw	r28, 0x24	; 36
    6022:	a6 96       	adiw	r28, 0x26	; 38
    6024:	8f ad       	ldd	r24, Y+63	; 0x3f
    6026:	a6 97       	sbiw	r28, 0x26	; 38
    6028:	98 2b       	or	r25, r24
    602a:	a4 96       	adiw	r28, 0x24	; 36
    602c:	9f af       	std	Y+63, r25	; 0x3f
    602e:	a4 97       	sbiw	r28, 0x24	; 36
    6030:	a5 96       	adiw	r28, 0x25	; 37
    6032:	9f ad       	ldd	r25, Y+63	; 0x3f
    6034:	a5 97       	sbiw	r28, 0x25	; 37
    6036:	64 96       	adiw	r28, 0x14	; 20
    6038:	9f af       	std	Y+63, r25	; 0x3f
    603a:	64 97       	sbiw	r28, 0x14	; 20
    603c:	89 a1       	ldd	r24, Y+33	; 0x21
    603e:	99 8d       	ldd	r25, Y+25	; 0x19
    6040:	89 0f       	add	r24, r25
    6042:	65 96       	adiw	r28, 0x15	; 21
    6044:	8f af       	std	Y+63, r24	; 0x3f
    6046:	65 97       	sbiw	r28, 0x15	; 21
    6048:	81 e0       	ldi	r24, 0x01	; 1
    604a:	a7 96       	adiw	r28, 0x27	; 39
    604c:	8f af       	std	Y+63, r24	; 0x3f
    604e:	a7 97       	sbiw	r28, 0x27	; 39
    6050:	65 96       	adiw	r28, 0x15	; 21
    6052:	9f ad       	ldd	r25, Y+63	; 0x3f
    6054:	65 97       	sbiw	r28, 0x15	; 21
    6056:	89 a1       	ldd	r24, Y+33	; 0x21
    6058:	98 17       	cp	r25, r24
    605a:	18 f0       	brcs	.+6      	; 0x6062 <Lcd_VidDisplayNumberXY+0x648>
    605c:	a7 96       	adiw	r28, 0x27	; 39
    605e:	1f ae       	std	Y+63, r1	; 0x3f
    6060:	a7 97       	sbiw	r28, 0x27	; 39
    6062:	a4 96       	adiw	r28, 0x24	; 36
    6064:	9f ad       	ldd	r25, Y+63	; 0x3f
    6066:	a4 97       	sbiw	r28, 0x24	; 36
    6068:	65 96       	adiw	r28, 0x15	; 21
    606a:	8f ad       	ldd	r24, Y+63	; 0x3f
    606c:	65 97       	sbiw	r28, 0x15	; 21
    606e:	98 0f       	add	r25, r24
    6070:	a8 96       	adiw	r28, 0x28	; 40
    6072:	9f af       	std	Y+63, r25	; 0x3f
    6074:	a8 97       	sbiw	r28, 0x28	; 40
    6076:	91 e0       	ldi	r25, 0x01	; 1
    6078:	a9 96       	adiw	r28, 0x29	; 41
    607a:	9f af       	std	Y+63, r25	; 0x3f
    607c:	a9 97       	sbiw	r28, 0x29	; 41
    607e:	a8 96       	adiw	r28, 0x28	; 40
    6080:	8f ad       	ldd	r24, Y+63	; 0x3f
    6082:	a8 97       	sbiw	r28, 0x28	; 40
    6084:	65 96       	adiw	r28, 0x15	; 21
    6086:	9f ad       	ldd	r25, Y+63	; 0x3f
    6088:	65 97       	sbiw	r28, 0x15	; 21
    608a:	89 17       	cp	r24, r25
    608c:	18 f0       	brcs	.+6      	; 0x6094 <Lcd_VidDisplayNumberXY+0x67a>
    608e:	a9 96       	adiw	r28, 0x29	; 41
    6090:	1f ae       	std	Y+63, r1	; 0x3f
    6092:	a9 97       	sbiw	r28, 0x29	; 41
    6094:	a7 96       	adiw	r28, 0x27	; 39
    6096:	8f ad       	ldd	r24, Y+63	; 0x3f
    6098:	a7 97       	sbiw	r28, 0x27	; 39
    609a:	a9 96       	adiw	r28, 0x29	; 41
    609c:	9f ad       	ldd	r25, Y+63	; 0x3f
    609e:	a9 97       	sbiw	r28, 0x29	; 41
    60a0:	89 2b       	or	r24, r25
    60a2:	a7 96       	adiw	r28, 0x27	; 39
    60a4:	8f af       	std	Y+63, r24	; 0x3f
    60a6:	a7 97       	sbiw	r28, 0x27	; 39
    60a8:	a8 96       	adiw	r28, 0x28	; 40
    60aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    60ac:	a8 97       	sbiw	r28, 0x28	; 40
    60ae:	65 96       	adiw	r28, 0x15	; 21
    60b0:	8f af       	std	Y+63, r24	; 0x3f
    60b2:	65 97       	sbiw	r28, 0x15	; 21
    60b4:	9a a1       	ldd	r25, Y+34	; 0x22
    60b6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    60b8:	98 0f       	add	r25, r24
    60ba:	66 96       	adiw	r28, 0x16	; 22
    60bc:	9f af       	std	Y+63, r25	; 0x3f
    60be:	66 97       	sbiw	r28, 0x16	; 22
    60c0:	a7 96       	adiw	r28, 0x27	; 39
    60c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    60c4:	a7 97       	sbiw	r28, 0x27	; 39
    60c6:	66 96       	adiw	r28, 0x16	; 22
    60c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    60ca:	66 97       	sbiw	r28, 0x16	; 22
    60cc:	89 0f       	add	r24, r25
    60ce:	66 96       	adiw	r28, 0x16	; 22
    60d0:	8f af       	std	Y+63, r24	; 0x3f
    60d2:	66 97       	sbiw	r28, 0x16	; 22
    60d4:	2f 96       	adiw	r28, 0x0f	; 15
    60d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    60d8:	2f 97       	sbiw	r28, 0x0f	; 15
    60da:	89 83       	std	Y+1, r24	; 0x01
    60dc:	60 96       	adiw	r28, 0x10	; 16
    60de:	9f ad       	ldd	r25, Y+63	; 0x3f
    60e0:	60 97       	sbiw	r28, 0x10	; 16
    60e2:	9a 83       	std	Y+2, r25	; 0x02
    60e4:	61 96       	adiw	r28, 0x11	; 17
    60e6:	8f ad       	ldd	r24, Y+63	; 0x3f
    60e8:	61 97       	sbiw	r28, 0x11	; 17
    60ea:	8b 83       	std	Y+3, r24	; 0x03
    60ec:	62 96       	adiw	r28, 0x12	; 18
    60ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    60f0:	62 97       	sbiw	r28, 0x12	; 18
    60f2:	9c 83       	std	Y+4, r25	; 0x04
    60f4:	63 96       	adiw	r28, 0x13	; 19
    60f6:	8f ad       	ldd	r24, Y+63	; 0x3f
    60f8:	63 97       	sbiw	r28, 0x13	; 19
    60fa:	8d 83       	std	Y+5, r24	; 0x05
    60fc:	64 96       	adiw	r28, 0x14	; 20
    60fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    6100:	64 97       	sbiw	r28, 0x14	; 20
    6102:	9e 83       	std	Y+6, r25	; 0x06
    6104:	65 96       	adiw	r28, 0x15	; 21
    6106:	8f ad       	ldd	r24, Y+63	; 0x3f
    6108:	65 97       	sbiw	r28, 0x15	; 21
    610a:	8f 83       	std	Y+7, r24	; 0x07
    610c:	66 96       	adiw	r28, 0x16	; 22
    610e:	9f ad       	ldd	r25, Y+63	; 0x3f
    6110:	66 97       	sbiw	r28, 0x16	; 22
    6112:	98 87       	std	Y+8, r25	; 0x08
		Copy_u64Num /=10;
    6114:	ab 84       	ldd	r10, Y+11	; 0x0b
    6116:	bc 84       	ldd	r11, Y+12	; 0x0c
    6118:	cd 84       	ldd	r12, Y+13	; 0x0d
    611a:	de 84       	ldd	r13, Y+14	; 0x0e
    611c:	ef 84       	ldd	r14, Y+15	; 0x0f
    611e:	f8 88       	ldd	r15, Y+16	; 0x10
    6120:	09 89       	ldd	r16, Y+17	; 0x11
    6122:	1a 89       	ldd	r17, Y+18	; 0x12
    6124:	2a 2d       	mov	r18, r10
    6126:	3b 2d       	mov	r19, r11
    6128:	4c 2d       	mov	r20, r12
    612a:	5d 2d       	mov	r21, r13
    612c:	6e 2d       	mov	r22, r14
    612e:	7f 2d       	mov	r23, r15
    6130:	80 2f       	mov	r24, r16
    6132:	91 2f       	mov	r25, r17
    6134:	0f 2e       	mov	r0, r31
    6136:	fa e0       	ldi	r31, 0x0A	; 10
    6138:	af 2e       	mov	r10, r31
    613a:	f0 2d       	mov	r31, r0
    613c:	bb 24       	eor	r11, r11
    613e:	cc 24       	eor	r12, r12
    6140:	dd 24       	eor	r13, r13
    6142:	ee 24       	eor	r14, r14
    6144:	ff 24       	eor	r15, r15
    6146:	00 e0       	ldi	r16, 0x00	; 0
    6148:	10 e0       	ldi	r17, 0x00	; 0
    614a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    614e:	a2 2e       	mov	r10, r18
    6150:	b3 2e       	mov	r11, r19
    6152:	c4 2e       	mov	r12, r20
    6154:	d5 2e       	mov	r13, r21
    6156:	e6 2e       	mov	r14, r22
    6158:	f7 2e       	mov	r15, r23
    615a:	08 2f       	mov	r16, r24
    615c:	19 2f       	mov	r17, r25
    615e:	ab 86       	std	Y+11, r10	; 0x0b
    6160:	bc 86       	std	Y+12, r11	; 0x0c
    6162:	cd 86       	std	Y+13, r12	; 0x0d
    6164:	de 86       	std	Y+14, r13	; 0x0e
    6166:	ef 86       	std	Y+15, r14	; 0x0f
    6168:	f8 8a       	std	Y+16, r15	; 0x10
    616a:	09 8b       	std	Y+17, r16	; 0x11
    616c:	1a 8b       	std	Y+18, r17	; 0x12
	uint64 LOC_u8Inverse=1;
	if(Copy_u64Num==0)
	{
		Lcd_VidDisplayChracter('0');
	}
	while(Copy_u64Num != 0)
    616e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6170:	9c 85       	ldd	r25, Y+12	; 0x0c
    6172:	89 2b       	or	r24, r25
    6174:	9d 85       	ldd	r25, Y+13	; 0x0d
    6176:	89 2b       	or	r24, r25
    6178:	9e 85       	ldd	r25, Y+14	; 0x0e
    617a:	89 2b       	or	r24, r25
    617c:	9f 85       	ldd	r25, Y+15	; 0x0f
    617e:	89 2b       	or	r24, r25
    6180:	98 89       	ldd	r25, Y+16	; 0x10
    6182:	89 2b       	or	r24, r25
    6184:	99 89       	ldd	r25, Y+17	; 0x11
    6186:	89 2b       	or	r24, r25
    6188:	9a 89       	ldd	r25, Y+18	; 0x12
    618a:	89 2b       	or	r24, r25
    618c:	88 23       	and	r24, r24
    618e:	09 f0       	breq	.+2      	; 0x6192 <Lcd_VidDisplayNumberXY+0x778>
    6190:	84 cc       	rjmp	.-1784   	; 0x5a9a <Lcd_VidDisplayNumberXY+0x80>
    6192:	5e c0       	rjmp	.+188    	; 0x6250 <Lcd_VidDisplayNumberXY+0x836>
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
    6194:	a9 80       	ldd	r10, Y+1	; 0x01
    6196:	ba 80       	ldd	r11, Y+2	; 0x02
    6198:	cb 80       	ldd	r12, Y+3	; 0x03
    619a:	dc 80       	ldd	r13, Y+4	; 0x04
    619c:	ed 80       	ldd	r14, Y+5	; 0x05
    619e:	fe 80       	ldd	r15, Y+6	; 0x06
    61a0:	0f 81       	ldd	r16, Y+7	; 0x07
    61a2:	18 85       	ldd	r17, Y+8	; 0x08
    61a4:	2a 2d       	mov	r18, r10
    61a6:	3b 2d       	mov	r19, r11
    61a8:	4c 2d       	mov	r20, r12
    61aa:	5d 2d       	mov	r21, r13
    61ac:	6e 2d       	mov	r22, r14
    61ae:	7f 2d       	mov	r23, r15
    61b0:	80 2f       	mov	r24, r16
    61b2:	91 2f       	mov	r25, r17
    61b4:	0f 2e       	mov	r0, r31
    61b6:	fa e0       	ldi	r31, 0x0A	; 10
    61b8:	af 2e       	mov	r10, r31
    61ba:	f0 2d       	mov	r31, r0
    61bc:	bb 24       	eor	r11, r11
    61be:	cc 24       	eor	r12, r12
    61c0:	dd 24       	eor	r13, r13
    61c2:	ee 24       	eor	r14, r14
    61c4:	ff 24       	eor	r15, r15
    61c6:	00 e0       	ldi	r16, 0x00	; 0
    61c8:	10 e0       	ldi	r17, 0x00	; 0
    61ca:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    61ce:	a2 2e       	mov	r10, r18
    61d0:	b3 2e       	mov	r11, r19
    61d2:	c4 2e       	mov	r12, r20
    61d4:	d5 2e       	mov	r13, r21
    61d6:	e6 2e       	mov	r14, r22
    61d8:	f7 2e       	mov	r15, r23
    61da:	08 2f       	mov	r16, r24
    61dc:	19 2f       	mov	r17, r25
    61de:	2a 2d       	mov	r18, r10
    61e0:	3b 2d       	mov	r19, r11
    61e2:	4c 2d       	mov	r20, r12
    61e4:	5d 2d       	mov	r21, r13
    61e6:	6e 2d       	mov	r22, r14
    61e8:	7f 2d       	mov	r23, r15
    61ea:	80 2f       	mov	r24, r16
    61ec:	91 2f       	mov	r25, r17
    61ee:	82 2f       	mov	r24, r18
    61f0:	80 5d       	subi	r24, 0xD0	; 208
    61f2:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
		LOC_u8Inverse /=10;
    61f6:	a9 80       	ldd	r10, Y+1	; 0x01
    61f8:	ba 80       	ldd	r11, Y+2	; 0x02
    61fa:	cb 80       	ldd	r12, Y+3	; 0x03
    61fc:	dc 80       	ldd	r13, Y+4	; 0x04
    61fe:	ed 80       	ldd	r14, Y+5	; 0x05
    6200:	fe 80       	ldd	r15, Y+6	; 0x06
    6202:	0f 81       	ldd	r16, Y+7	; 0x07
    6204:	18 85       	ldd	r17, Y+8	; 0x08
    6206:	2a 2d       	mov	r18, r10
    6208:	3b 2d       	mov	r19, r11
    620a:	4c 2d       	mov	r20, r12
    620c:	5d 2d       	mov	r21, r13
    620e:	6e 2d       	mov	r22, r14
    6210:	7f 2d       	mov	r23, r15
    6212:	80 2f       	mov	r24, r16
    6214:	91 2f       	mov	r25, r17
    6216:	0f 2e       	mov	r0, r31
    6218:	fa e0       	ldi	r31, 0x0A	; 10
    621a:	af 2e       	mov	r10, r31
    621c:	f0 2d       	mov	r31, r0
    621e:	bb 24       	eor	r11, r11
    6220:	cc 24       	eor	r12, r12
    6222:	dd 24       	eor	r13, r13
    6224:	ee 24       	eor	r14, r14
    6226:	ff 24       	eor	r15, r15
    6228:	00 e0       	ldi	r16, 0x00	; 0
    622a:	10 e0       	ldi	r17, 0x00	; 0
    622c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    6230:	a2 2e       	mov	r10, r18
    6232:	b3 2e       	mov	r11, r19
    6234:	c4 2e       	mov	r12, r20
    6236:	d5 2e       	mov	r13, r21
    6238:	e6 2e       	mov	r14, r22
    623a:	f7 2e       	mov	r15, r23
    623c:	08 2f       	mov	r16, r24
    623e:	19 2f       	mov	r17, r25
    6240:	a9 82       	std	Y+1, r10	; 0x01
    6242:	ba 82       	std	Y+2, r11	; 0x02
    6244:	cb 82       	std	Y+3, r12	; 0x03
    6246:	dc 82       	std	Y+4, r13	; 0x04
    6248:	ed 82       	std	Y+5, r14	; 0x05
    624a:	fe 82       	std	Y+6, r15	; 0x06
    624c:	0f 83       	std	Y+7, r16	; 0x07
    624e:	18 87       	std	Y+8, r17	; 0x08
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
    6250:	89 81       	ldd	r24, Y+1	; 0x01
    6252:	81 30       	cpi	r24, 0x01	; 1
    6254:	09 f0       	breq	.+2      	; 0x6258 <Lcd_VidDisplayNumberXY+0x83e>
    6256:	9e cf       	rjmp	.-196    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
    6258:	8a 81       	ldd	r24, Y+2	; 0x02
    625a:	88 23       	and	r24, r24
    625c:	09 f0       	breq	.+2      	; 0x6260 <Lcd_VidDisplayNumberXY+0x846>
    625e:	9a cf       	rjmp	.-204    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
    6260:	8b 81       	ldd	r24, Y+3	; 0x03
    6262:	88 23       	and	r24, r24
    6264:	09 f0       	breq	.+2      	; 0x6268 <Lcd_VidDisplayNumberXY+0x84e>
    6266:	96 cf       	rjmp	.-212    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
    6268:	8c 81       	ldd	r24, Y+4	; 0x04
    626a:	88 23       	and	r24, r24
    626c:	09 f0       	breq	.+2      	; 0x6270 <Lcd_VidDisplayNumberXY+0x856>
    626e:	92 cf       	rjmp	.-220    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
    6270:	8d 81       	ldd	r24, Y+5	; 0x05
    6272:	88 23       	and	r24, r24
    6274:	09 f0       	breq	.+2      	; 0x6278 <Lcd_VidDisplayNumberXY+0x85e>
    6276:	8e cf       	rjmp	.-228    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
    6278:	8e 81       	ldd	r24, Y+6	; 0x06
    627a:	88 23       	and	r24, r24
    627c:	09 f0       	breq	.+2      	; 0x6280 <Lcd_VidDisplayNumberXY+0x866>
    627e:	8a cf       	rjmp	.-236    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
    6280:	8f 81       	ldd	r24, Y+7	; 0x07
    6282:	88 23       	and	r24, r24
    6284:	09 f0       	breq	.+2      	; 0x6288 <Lcd_VidDisplayNumberXY+0x86e>
    6286:	86 cf       	rjmp	.-244    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
    6288:	88 85       	ldd	r24, Y+8	; 0x08
    628a:	88 23       	and	r24, r24
    628c:	09 f0       	breq	.+2      	; 0x6290 <Lcd_VidDisplayNumberXY+0x876>
    628e:	82 cf       	rjmp	.-252    	; 0x6194 <Lcd_VidDisplayNumberXY+0x77a>
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
		LOC_u8Inverse /=10;
	}

}
    6290:	c8 59       	subi	r28, 0x98	; 152
    6292:	df 4f       	sbci	r29, 0xFF	; 255
    6294:	0f b6       	in	r0, 0x3f	; 63
    6296:	f8 94       	cli
    6298:	de bf       	out	0x3e, r29	; 62
    629a:	0f be       	out	0x3f, r0	; 63
    629c:	cd bf       	out	0x3d, r28	; 61
    629e:	cf 91       	pop	r28
    62a0:	df 91       	pop	r29
    62a2:	1f 91       	pop	r17
    62a4:	0f 91       	pop	r16
    62a6:	ff 90       	pop	r15
    62a8:	ef 90       	pop	r14
    62aa:	df 90       	pop	r13
    62ac:	cf 90       	pop	r12
    62ae:	bf 90       	pop	r11
    62b0:	af 90       	pop	r10
    62b2:	08 95       	ret

000062b4 <LCD_VidDisplayFloat>:
void LCD_VidDisplayFloat(float32 Copy_u32Num)
{
    62b4:	af 92       	push	r10
    62b6:	bf 92       	push	r11
    62b8:	cf 92       	push	r12
    62ba:	df 92       	push	r13
    62bc:	ef 92       	push	r14
    62be:	ff 92       	push	r15
    62c0:	0f 93       	push	r16
    62c2:	1f 93       	push	r17
    62c4:	df 93       	push	r29
    62c6:	cf 93       	push	r28
    62c8:	cd b7       	in	r28, 0x3d	; 61
    62ca:	de b7       	in	r29, 0x3e	; 62
    62cc:	2c 97       	sbiw	r28, 0x0c	; 12
    62ce:	0f b6       	in	r0, 0x3f	; 63
    62d0:	f8 94       	cli
    62d2:	de bf       	out	0x3e, r29	; 62
    62d4:	0f be       	out	0x3f, r0	; 63
    62d6:	cd bf       	out	0x3d, r28	; 61
    62d8:	69 87       	std	Y+9, r22	; 0x09
    62da:	7a 87       	std	Y+10, r23	; 0x0a
    62dc:	8b 87       	std	Y+11, r24	; 0x0b
    62de:	9c 87       	std	Y+12, r25	; 0x0c
	uint32 AfterDot=(uint32) (Copy_u32Num *10) %10;
    62e0:	69 85       	ldd	r22, Y+9	; 0x09
    62e2:	7a 85       	ldd	r23, Y+10	; 0x0a
    62e4:	8b 85       	ldd	r24, Y+11	; 0x0b
    62e6:	9c 85       	ldd	r25, Y+12	; 0x0c
    62e8:	20 e0       	ldi	r18, 0x00	; 0
    62ea:	30 e0       	ldi	r19, 0x00	; 0
    62ec:	40 e2       	ldi	r20, 0x20	; 32
    62ee:	51 e4       	ldi	r21, 0x41	; 65
    62f0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    62f4:	dc 01       	movw	r26, r24
    62f6:	cb 01       	movw	r24, r22
    62f8:	bc 01       	movw	r22, r24
    62fa:	cd 01       	movw	r24, r26
    62fc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6300:	dc 01       	movw	r26, r24
    6302:	cb 01       	movw	r24, r22
    6304:	2a e0       	ldi	r18, 0x0A	; 10
    6306:	30 e0       	ldi	r19, 0x00	; 0
    6308:	40 e0       	ldi	r20, 0x00	; 0
    630a:	50 e0       	ldi	r21, 0x00	; 0
    630c:	bc 01       	movw	r22, r24
    630e:	cd 01       	movw	r24, r26
    6310:	0e 94 2c 37 	call	0x6e58	; 0x6e58 <__udivmodsi4>
    6314:	dc 01       	movw	r26, r24
    6316:	cb 01       	movw	r24, r22
    6318:	8d 83       	std	Y+5, r24	; 0x05
    631a:	9e 83       	std	Y+6, r25	; 0x06
    631c:	af 83       	std	Y+7, r26	; 0x07
    631e:	b8 87       	std	Y+8, r27	; 0x08
	uint32 BeforDot=(Copy_u32Num *10)/10;
    6320:	69 85       	ldd	r22, Y+9	; 0x09
    6322:	7a 85       	ldd	r23, Y+10	; 0x0a
    6324:	8b 85       	ldd	r24, Y+11	; 0x0b
    6326:	9c 85       	ldd	r25, Y+12	; 0x0c
    6328:	20 e0       	ldi	r18, 0x00	; 0
    632a:	30 e0       	ldi	r19, 0x00	; 0
    632c:	40 e2       	ldi	r20, 0x20	; 32
    632e:	51 e4       	ldi	r21, 0x41	; 65
    6330:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6334:	dc 01       	movw	r26, r24
    6336:	cb 01       	movw	r24, r22
    6338:	bc 01       	movw	r22, r24
    633a:	cd 01       	movw	r24, r26
    633c:	20 e0       	ldi	r18, 0x00	; 0
    633e:	30 e0       	ldi	r19, 0x00	; 0
    6340:	40 e2       	ldi	r20, 0x20	; 32
    6342:	51 e4       	ldi	r21, 0x41	; 65
    6344:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__divsf3>
    6348:	dc 01       	movw	r26, r24
    634a:	cb 01       	movw	r24, r22
    634c:	bc 01       	movw	r22, r24
    634e:	cd 01       	movw	r24, r26
    6350:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6354:	dc 01       	movw	r26, r24
    6356:	cb 01       	movw	r24, r22
    6358:	89 83       	std	Y+1, r24	; 0x01
    635a:	9a 83       	std	Y+2, r25	; 0x02
    635c:	ab 83       	std	Y+3, r26	; 0x03
    635e:	bc 83       	std	Y+4, r27	; 0x04
	Lcd_VidDisplayNumber(BeforDot);
    6360:	89 81       	ldd	r24, Y+1	; 0x01
    6362:	9a 81       	ldd	r25, Y+2	; 0x02
    6364:	ab 81       	ldd	r26, Y+3	; 0x03
    6366:	bc 81       	ldd	r27, Y+4	; 0x04
    6368:	5c 01       	movw	r10, r24
    636a:	6d 01       	movw	r12, r26
    636c:	ee 24       	eor	r14, r14
    636e:	ff 24       	eor	r15, r15
    6370:	87 01       	movw	r16, r14
    6372:	2a 2d       	mov	r18, r10
    6374:	3b 2d       	mov	r19, r11
    6376:	4c 2d       	mov	r20, r12
    6378:	5d 2d       	mov	r21, r13
    637a:	6e 2d       	mov	r22, r14
    637c:	7f 2d       	mov	r23, r15
    637e:	80 2f       	mov	r24, r16
    6380:	91 2f       	mov	r25, r17
    6382:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <Lcd_VidDisplayNumber>
	Lcd_VidDisplayChracter('.');
    6386:	8e e2       	ldi	r24, 0x2E	; 46
    6388:	0e 94 32 22 	call	0x4464	; 0x4464 <Lcd_VidDisplayChracter>
	Lcd_VidDisplayNumber(AfterDot);
    638c:	8d 81       	ldd	r24, Y+5	; 0x05
    638e:	9e 81       	ldd	r25, Y+6	; 0x06
    6390:	af 81       	ldd	r26, Y+7	; 0x07
    6392:	b8 85       	ldd	r27, Y+8	; 0x08
    6394:	5c 01       	movw	r10, r24
    6396:	6d 01       	movw	r12, r26
    6398:	ee 24       	eor	r14, r14
    639a:	ff 24       	eor	r15, r15
    639c:	87 01       	movw	r16, r14
    639e:	2a 2d       	mov	r18, r10
    63a0:	3b 2d       	mov	r19, r11
    63a2:	4c 2d       	mov	r20, r12
    63a4:	5d 2d       	mov	r21, r13
    63a6:	6e 2d       	mov	r22, r14
    63a8:	7f 2d       	mov	r23, r15
    63aa:	80 2f       	mov	r24, r16
    63ac:	91 2f       	mov	r25, r17
    63ae:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <Lcd_VidDisplayNumber>

}
    63b2:	2c 96       	adiw	r28, 0x0c	; 12
    63b4:	0f b6       	in	r0, 0x3f	; 63
    63b6:	f8 94       	cli
    63b8:	de bf       	out	0x3e, r29	; 62
    63ba:	0f be       	out	0x3f, r0	; 63
    63bc:	cd bf       	out	0x3d, r28	; 61
    63be:	cf 91       	pop	r28
    63c0:	df 91       	pop	r29
    63c2:	1f 91       	pop	r17
    63c4:	0f 91       	pop	r16
    63c6:	ff 90       	pop	r15
    63c8:	ef 90       	pop	r14
    63ca:	df 90       	pop	r13
    63cc:	cf 90       	pop	r12
    63ce:	bf 90       	pop	r11
    63d0:	af 90       	pop	r10
    63d2:	08 95       	ret

000063d4 <Lcd_VidDisplayChracterXY>:


void Lcd_VidDisplayChracterXY(uint8 Copy_u8Row,uint8 Copy_u8Column,uint8 Copy_u8Command)
{
    63d4:	0f 93       	push	r16
    63d6:	1f 93       	push	r17
    63d8:	df 93       	push	r29
    63da:	cf 93       	push	r28
    63dc:	cd b7       	in	r28, 0x3d	; 61
    63de:	de b7       	in	r29, 0x3e	; 62
    63e0:	c5 56       	subi	r28, 0x65	; 101
    63e2:	d0 40       	sbci	r29, 0x00	; 0
    63e4:	0f b6       	in	r0, 0x3f	; 63
    63e6:	f8 94       	cli
    63e8:	de bf       	out	0x3e, r29	; 62
    63ea:	0f be       	out	0x3f, r0	; 63
    63ec:	cd bf       	out	0x3d, r28	; 61
    63ee:	fe 01       	movw	r30, r28
    63f0:	ed 59       	subi	r30, 0x9D	; 157
    63f2:	ff 4f       	sbci	r31, 0xFF	; 255
    63f4:	80 83       	st	Z, r24
    63f6:	fe 01       	movw	r30, r28
    63f8:	ec 59       	subi	r30, 0x9C	; 156
    63fa:	ff 4f       	sbci	r31, 0xFF	; 255
    63fc:	60 83       	st	Z, r22
    63fe:	fe 01       	movw	r30, r28
    6400:	eb 59       	subi	r30, 0x9B	; 155
    6402:	ff 4f       	sbci	r31, 0xFF	; 255
    6404:	40 83       	st	Z, r20
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
    6406:	fe 01       	movw	r30, r28
    6408:	ed 59       	subi	r30, 0x9D	; 157
    640a:	ff 4f       	sbci	r31, 0xFF	; 255
    640c:	de 01       	movw	r26, r28
    640e:	ac 59       	subi	r26, 0x9C	; 156
    6410:	bf 4f       	sbci	r27, 0xFF	; 255
    6412:	80 81       	ld	r24, Z
    6414:	6c 91       	ld	r22, X
    6416:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <Lcd_VidGoToXY>
	Dio_enuWriteChannel(LCD_RS_PIN_NUM,DIO_LOGIC_HIGH);
    641a:	80 e1       	ldi	r24, 0x10	; 16
    641c:	61 e0       	ldi	r22, 0x01	; 1
    641e:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    6422:	fe 01       	movw	r30, r28
    6424:	e1 5a       	subi	r30, 0xA1	; 161
    6426:	ff 4f       	sbci	r31, 0xFF	; 255
    6428:	80 e0       	ldi	r24, 0x00	; 0
    642a:	90 e0       	ldi	r25, 0x00	; 0
    642c:	a0 e8       	ldi	r26, 0x80	; 128
    642e:	bf e3       	ldi	r27, 0x3F	; 63
    6430:	80 83       	st	Z, r24
    6432:	91 83       	std	Z+1, r25	; 0x01
    6434:	a2 83       	std	Z+2, r26	; 0x02
    6436:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6438:	8e 01       	movw	r16, r28
    643a:	05 5a       	subi	r16, 0xA5	; 165
    643c:	1f 4f       	sbci	r17, 0xFF	; 255
    643e:	fe 01       	movw	r30, r28
    6440:	e1 5a       	subi	r30, 0xA1	; 161
    6442:	ff 4f       	sbci	r31, 0xFF	; 255
    6444:	60 81       	ld	r22, Z
    6446:	71 81       	ldd	r23, Z+1	; 0x01
    6448:	82 81       	ldd	r24, Z+2	; 0x02
    644a:	93 81       	ldd	r25, Z+3	; 0x03
    644c:	20 e0       	ldi	r18, 0x00	; 0
    644e:	30 e0       	ldi	r19, 0x00	; 0
    6450:	4a e7       	ldi	r20, 0x7A	; 122
    6452:	53 e4       	ldi	r21, 0x43	; 67
    6454:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6458:	dc 01       	movw	r26, r24
    645a:	cb 01       	movw	r24, r22
    645c:	f8 01       	movw	r30, r16
    645e:	80 83       	st	Z, r24
    6460:	91 83       	std	Z+1, r25	; 0x01
    6462:	a2 83       	std	Z+2, r26	; 0x02
    6464:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6466:	fe 01       	movw	r30, r28
    6468:	e5 5a       	subi	r30, 0xA5	; 165
    646a:	ff 4f       	sbci	r31, 0xFF	; 255
    646c:	60 81       	ld	r22, Z
    646e:	71 81       	ldd	r23, Z+1	; 0x01
    6470:	82 81       	ldd	r24, Z+2	; 0x02
    6472:	93 81       	ldd	r25, Z+3	; 0x03
    6474:	20 e0       	ldi	r18, 0x00	; 0
    6476:	30 e0       	ldi	r19, 0x00	; 0
    6478:	40 e8       	ldi	r20, 0x80	; 128
    647a:	5f e3       	ldi	r21, 0x3F	; 63
    647c:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    6480:	88 23       	and	r24, r24
    6482:	44 f4       	brge	.+16     	; 0x6494 <Lcd_VidDisplayChracterXY+0xc0>
		__ticks = 1;
    6484:	fe 01       	movw	r30, r28
    6486:	e7 5a       	subi	r30, 0xA7	; 167
    6488:	ff 4f       	sbci	r31, 0xFF	; 255
    648a:	81 e0       	ldi	r24, 0x01	; 1
    648c:	90 e0       	ldi	r25, 0x00	; 0
    648e:	91 83       	std	Z+1, r25	; 0x01
    6490:	80 83       	st	Z, r24
    6492:	64 c0       	rjmp	.+200    	; 0x655c <Lcd_VidDisplayChracterXY+0x188>
	else if (__tmp > 65535)
    6494:	fe 01       	movw	r30, r28
    6496:	e5 5a       	subi	r30, 0xA5	; 165
    6498:	ff 4f       	sbci	r31, 0xFF	; 255
    649a:	60 81       	ld	r22, Z
    649c:	71 81       	ldd	r23, Z+1	; 0x01
    649e:	82 81       	ldd	r24, Z+2	; 0x02
    64a0:	93 81       	ldd	r25, Z+3	; 0x03
    64a2:	20 e0       	ldi	r18, 0x00	; 0
    64a4:	3f ef       	ldi	r19, 0xFF	; 255
    64a6:	4f e7       	ldi	r20, 0x7F	; 127
    64a8:	57 e4       	ldi	r21, 0x47	; 71
    64aa:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    64ae:	18 16       	cp	r1, r24
    64b0:	0c f0       	brlt	.+2      	; 0x64b4 <Lcd_VidDisplayChracterXY+0xe0>
    64b2:	43 c0       	rjmp	.+134    	; 0x653a <Lcd_VidDisplayChracterXY+0x166>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    64b4:	fe 01       	movw	r30, r28
    64b6:	e1 5a       	subi	r30, 0xA1	; 161
    64b8:	ff 4f       	sbci	r31, 0xFF	; 255
    64ba:	60 81       	ld	r22, Z
    64bc:	71 81       	ldd	r23, Z+1	; 0x01
    64be:	82 81       	ldd	r24, Z+2	; 0x02
    64c0:	93 81       	ldd	r25, Z+3	; 0x03
    64c2:	20 e0       	ldi	r18, 0x00	; 0
    64c4:	30 e0       	ldi	r19, 0x00	; 0
    64c6:	40 e2       	ldi	r20, 0x20	; 32
    64c8:	51 e4       	ldi	r21, 0x41	; 65
    64ca:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    64ce:	dc 01       	movw	r26, r24
    64d0:	cb 01       	movw	r24, r22
    64d2:	8e 01       	movw	r16, r28
    64d4:	07 5a       	subi	r16, 0xA7	; 167
    64d6:	1f 4f       	sbci	r17, 0xFF	; 255
    64d8:	bc 01       	movw	r22, r24
    64da:	cd 01       	movw	r24, r26
    64dc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    64e0:	dc 01       	movw	r26, r24
    64e2:	cb 01       	movw	r24, r22
    64e4:	f8 01       	movw	r30, r16
    64e6:	91 83       	std	Z+1, r25	; 0x01
    64e8:	80 83       	st	Z, r24
    64ea:	1f c0       	rjmp	.+62     	; 0x652a <Lcd_VidDisplayChracterXY+0x156>
    64ec:	fe 01       	movw	r30, r28
    64ee:	e9 5a       	subi	r30, 0xA9	; 169
    64f0:	ff 4f       	sbci	r31, 0xFF	; 255
    64f2:	89 e1       	ldi	r24, 0x19	; 25
    64f4:	90 e0       	ldi	r25, 0x00	; 0
    64f6:	91 83       	std	Z+1, r25	; 0x01
    64f8:	80 83       	st	Z, r24
    64fa:	fe 01       	movw	r30, r28
    64fc:	e9 5a       	subi	r30, 0xA9	; 169
    64fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6500:	80 81       	ld	r24, Z
    6502:	91 81       	ldd	r25, Z+1	; 0x01
    6504:	01 97       	sbiw	r24, 0x01	; 1
    6506:	f1 f7       	brne	.-4      	; 0x6504 <Lcd_VidDisplayChracterXY+0x130>
    6508:	fe 01       	movw	r30, r28
    650a:	e9 5a       	subi	r30, 0xA9	; 169
    650c:	ff 4f       	sbci	r31, 0xFF	; 255
    650e:	91 83       	std	Z+1, r25	; 0x01
    6510:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6512:	de 01       	movw	r26, r28
    6514:	a7 5a       	subi	r26, 0xA7	; 167
    6516:	bf 4f       	sbci	r27, 0xFF	; 255
    6518:	fe 01       	movw	r30, r28
    651a:	e7 5a       	subi	r30, 0xA7	; 167
    651c:	ff 4f       	sbci	r31, 0xFF	; 255
    651e:	80 81       	ld	r24, Z
    6520:	91 81       	ldd	r25, Z+1	; 0x01
    6522:	01 97       	sbiw	r24, 0x01	; 1
    6524:	11 96       	adiw	r26, 0x01	; 1
    6526:	9c 93       	st	X, r25
    6528:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    652a:	fe 01       	movw	r30, r28
    652c:	e7 5a       	subi	r30, 0xA7	; 167
    652e:	ff 4f       	sbci	r31, 0xFF	; 255
    6530:	80 81       	ld	r24, Z
    6532:	91 81       	ldd	r25, Z+1	; 0x01
    6534:	00 97       	sbiw	r24, 0x00	; 0
    6536:	d1 f6       	brne	.-76     	; 0x64ec <Lcd_VidDisplayChracterXY+0x118>
    6538:	27 c0       	rjmp	.+78     	; 0x6588 <Lcd_VidDisplayChracterXY+0x1b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    653a:	8e 01       	movw	r16, r28
    653c:	07 5a       	subi	r16, 0xA7	; 167
    653e:	1f 4f       	sbci	r17, 0xFF	; 255
    6540:	fe 01       	movw	r30, r28
    6542:	e5 5a       	subi	r30, 0xA5	; 165
    6544:	ff 4f       	sbci	r31, 0xFF	; 255
    6546:	60 81       	ld	r22, Z
    6548:	71 81       	ldd	r23, Z+1	; 0x01
    654a:	82 81       	ldd	r24, Z+2	; 0x02
    654c:	93 81       	ldd	r25, Z+3	; 0x03
    654e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6552:	dc 01       	movw	r26, r24
    6554:	cb 01       	movw	r24, r22
    6556:	f8 01       	movw	r30, r16
    6558:	91 83       	std	Z+1, r25	; 0x01
    655a:	80 83       	st	Z, r24
    655c:	de 01       	movw	r26, r28
    655e:	ab 5a       	subi	r26, 0xAB	; 171
    6560:	bf 4f       	sbci	r27, 0xFF	; 255
    6562:	fe 01       	movw	r30, r28
    6564:	e7 5a       	subi	r30, 0xA7	; 167
    6566:	ff 4f       	sbci	r31, 0xFF	; 255
    6568:	80 81       	ld	r24, Z
    656a:	91 81       	ldd	r25, Z+1	; 0x01
    656c:	8d 93       	st	X+, r24
    656e:	9c 93       	st	X, r25
    6570:	fe 01       	movw	r30, r28
    6572:	eb 5a       	subi	r30, 0xAB	; 171
    6574:	ff 4f       	sbci	r31, 0xFF	; 255
    6576:	80 81       	ld	r24, Z
    6578:	91 81       	ldd	r25, Z+1	; 0x01
    657a:	01 97       	sbiw	r24, 0x01	; 1
    657c:	f1 f7       	brne	.-4      	; 0x657a <Lcd_VidDisplayChracterXY+0x1a6>
    657e:	fe 01       	movw	r30, r28
    6580:	eb 5a       	subi	r30, 0xAB	; 171
    6582:	ff 4f       	sbci	r31, 0xFF	; 255
    6584:	91 83       	std	Z+1, r25	; 0x01
    6586:	80 83       	st	Z, r24
		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    6588:	81 e1       	ldi	r24, 0x11	; 17
    658a:	61 e0       	ldi	r22, 0x01	; 1
    658c:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    6590:	fe 01       	movw	r30, r28
    6592:	ef 5a       	subi	r30, 0xAF	; 175
    6594:	ff 4f       	sbci	r31, 0xFF	; 255
    6596:	80 e0       	ldi	r24, 0x00	; 0
    6598:	90 e0       	ldi	r25, 0x00	; 0
    659a:	a0 e8       	ldi	r26, 0x80	; 128
    659c:	bf e3       	ldi	r27, 0x3F	; 63
    659e:	80 83       	st	Z, r24
    65a0:	91 83       	std	Z+1, r25	; 0x01
    65a2:	a2 83       	std	Z+2, r26	; 0x02
    65a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    65a6:	8e 01       	movw	r16, r28
    65a8:	03 5b       	subi	r16, 0xB3	; 179
    65aa:	1f 4f       	sbci	r17, 0xFF	; 255
    65ac:	fe 01       	movw	r30, r28
    65ae:	ef 5a       	subi	r30, 0xAF	; 175
    65b0:	ff 4f       	sbci	r31, 0xFF	; 255
    65b2:	60 81       	ld	r22, Z
    65b4:	71 81       	ldd	r23, Z+1	; 0x01
    65b6:	82 81       	ldd	r24, Z+2	; 0x02
    65b8:	93 81       	ldd	r25, Z+3	; 0x03
    65ba:	20 e0       	ldi	r18, 0x00	; 0
    65bc:	30 e0       	ldi	r19, 0x00	; 0
    65be:	4a e7       	ldi	r20, 0x7A	; 122
    65c0:	53 e4       	ldi	r21, 0x43	; 67
    65c2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    65c6:	dc 01       	movw	r26, r24
    65c8:	cb 01       	movw	r24, r22
    65ca:	f8 01       	movw	r30, r16
    65cc:	80 83       	st	Z, r24
    65ce:	91 83       	std	Z+1, r25	; 0x01
    65d0:	a2 83       	std	Z+2, r26	; 0x02
    65d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    65d4:	fe 01       	movw	r30, r28
    65d6:	e3 5b       	subi	r30, 0xB3	; 179
    65d8:	ff 4f       	sbci	r31, 0xFF	; 255
    65da:	60 81       	ld	r22, Z
    65dc:	71 81       	ldd	r23, Z+1	; 0x01
    65de:	82 81       	ldd	r24, Z+2	; 0x02
    65e0:	93 81       	ldd	r25, Z+3	; 0x03
    65e2:	20 e0       	ldi	r18, 0x00	; 0
    65e4:	30 e0       	ldi	r19, 0x00	; 0
    65e6:	40 e8       	ldi	r20, 0x80	; 128
    65e8:	5f e3       	ldi	r21, 0x3F	; 63
    65ea:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    65ee:	88 23       	and	r24, r24
    65f0:	44 f4       	brge	.+16     	; 0x6602 <Lcd_VidDisplayChracterXY+0x22e>
		__ticks = 1;
    65f2:	fe 01       	movw	r30, r28
    65f4:	e5 5b       	subi	r30, 0xB5	; 181
    65f6:	ff 4f       	sbci	r31, 0xFF	; 255
    65f8:	81 e0       	ldi	r24, 0x01	; 1
    65fa:	90 e0       	ldi	r25, 0x00	; 0
    65fc:	91 83       	std	Z+1, r25	; 0x01
    65fe:	80 83       	st	Z, r24
    6600:	64 c0       	rjmp	.+200    	; 0x66ca <Lcd_VidDisplayChracterXY+0x2f6>
	else if (__tmp > 65535)
    6602:	fe 01       	movw	r30, r28
    6604:	e3 5b       	subi	r30, 0xB3	; 179
    6606:	ff 4f       	sbci	r31, 0xFF	; 255
    6608:	60 81       	ld	r22, Z
    660a:	71 81       	ldd	r23, Z+1	; 0x01
    660c:	82 81       	ldd	r24, Z+2	; 0x02
    660e:	93 81       	ldd	r25, Z+3	; 0x03
    6610:	20 e0       	ldi	r18, 0x00	; 0
    6612:	3f ef       	ldi	r19, 0xFF	; 255
    6614:	4f e7       	ldi	r20, 0x7F	; 127
    6616:	57 e4       	ldi	r21, 0x47	; 71
    6618:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    661c:	18 16       	cp	r1, r24
    661e:	0c f0       	brlt	.+2      	; 0x6622 <Lcd_VidDisplayChracterXY+0x24e>
    6620:	43 c0       	rjmp	.+134    	; 0x66a8 <Lcd_VidDisplayChracterXY+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6622:	fe 01       	movw	r30, r28
    6624:	ef 5a       	subi	r30, 0xAF	; 175
    6626:	ff 4f       	sbci	r31, 0xFF	; 255
    6628:	60 81       	ld	r22, Z
    662a:	71 81       	ldd	r23, Z+1	; 0x01
    662c:	82 81       	ldd	r24, Z+2	; 0x02
    662e:	93 81       	ldd	r25, Z+3	; 0x03
    6630:	20 e0       	ldi	r18, 0x00	; 0
    6632:	30 e0       	ldi	r19, 0x00	; 0
    6634:	40 e2       	ldi	r20, 0x20	; 32
    6636:	51 e4       	ldi	r21, 0x41	; 65
    6638:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    663c:	dc 01       	movw	r26, r24
    663e:	cb 01       	movw	r24, r22
    6640:	8e 01       	movw	r16, r28
    6642:	05 5b       	subi	r16, 0xB5	; 181
    6644:	1f 4f       	sbci	r17, 0xFF	; 255
    6646:	bc 01       	movw	r22, r24
    6648:	cd 01       	movw	r24, r26
    664a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    664e:	dc 01       	movw	r26, r24
    6650:	cb 01       	movw	r24, r22
    6652:	f8 01       	movw	r30, r16
    6654:	91 83       	std	Z+1, r25	; 0x01
    6656:	80 83       	st	Z, r24
    6658:	1f c0       	rjmp	.+62     	; 0x6698 <Lcd_VidDisplayChracterXY+0x2c4>
    665a:	fe 01       	movw	r30, r28
    665c:	e7 5b       	subi	r30, 0xB7	; 183
    665e:	ff 4f       	sbci	r31, 0xFF	; 255
    6660:	89 e1       	ldi	r24, 0x19	; 25
    6662:	90 e0       	ldi	r25, 0x00	; 0
    6664:	91 83       	std	Z+1, r25	; 0x01
    6666:	80 83       	st	Z, r24
    6668:	fe 01       	movw	r30, r28
    666a:	e7 5b       	subi	r30, 0xB7	; 183
    666c:	ff 4f       	sbci	r31, 0xFF	; 255
    666e:	80 81       	ld	r24, Z
    6670:	91 81       	ldd	r25, Z+1	; 0x01
    6672:	01 97       	sbiw	r24, 0x01	; 1
    6674:	f1 f7       	brne	.-4      	; 0x6672 <Lcd_VidDisplayChracterXY+0x29e>
    6676:	fe 01       	movw	r30, r28
    6678:	e7 5b       	subi	r30, 0xB7	; 183
    667a:	ff 4f       	sbci	r31, 0xFF	; 255
    667c:	91 83       	std	Z+1, r25	; 0x01
    667e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6680:	de 01       	movw	r26, r28
    6682:	a5 5b       	subi	r26, 0xB5	; 181
    6684:	bf 4f       	sbci	r27, 0xFF	; 255
    6686:	fe 01       	movw	r30, r28
    6688:	e5 5b       	subi	r30, 0xB5	; 181
    668a:	ff 4f       	sbci	r31, 0xFF	; 255
    668c:	80 81       	ld	r24, Z
    668e:	91 81       	ldd	r25, Z+1	; 0x01
    6690:	01 97       	sbiw	r24, 0x01	; 1
    6692:	11 96       	adiw	r26, 0x01	; 1
    6694:	9c 93       	st	X, r25
    6696:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6698:	fe 01       	movw	r30, r28
    669a:	e5 5b       	subi	r30, 0xB5	; 181
    669c:	ff 4f       	sbci	r31, 0xFF	; 255
    669e:	80 81       	ld	r24, Z
    66a0:	91 81       	ldd	r25, Z+1	; 0x01
    66a2:	00 97       	sbiw	r24, 0x00	; 0
    66a4:	d1 f6       	brne	.-76     	; 0x665a <Lcd_VidDisplayChracterXY+0x286>
    66a6:	27 c0       	rjmp	.+78     	; 0x66f6 <Lcd_VidDisplayChracterXY+0x322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    66a8:	8e 01       	movw	r16, r28
    66aa:	05 5b       	subi	r16, 0xB5	; 181
    66ac:	1f 4f       	sbci	r17, 0xFF	; 255
    66ae:	fe 01       	movw	r30, r28
    66b0:	e3 5b       	subi	r30, 0xB3	; 179
    66b2:	ff 4f       	sbci	r31, 0xFF	; 255
    66b4:	60 81       	ld	r22, Z
    66b6:	71 81       	ldd	r23, Z+1	; 0x01
    66b8:	82 81       	ldd	r24, Z+2	; 0x02
    66ba:	93 81       	ldd	r25, Z+3	; 0x03
    66bc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    66c0:	dc 01       	movw	r26, r24
    66c2:	cb 01       	movw	r24, r22
    66c4:	f8 01       	movw	r30, r16
    66c6:	91 83       	std	Z+1, r25	; 0x01
    66c8:	80 83       	st	Z, r24
    66ca:	de 01       	movw	r26, r28
    66cc:	a9 5b       	subi	r26, 0xB9	; 185
    66ce:	bf 4f       	sbci	r27, 0xFF	; 255
    66d0:	fe 01       	movw	r30, r28
    66d2:	e5 5b       	subi	r30, 0xB5	; 181
    66d4:	ff 4f       	sbci	r31, 0xFF	; 255
    66d6:	80 81       	ld	r24, Z
    66d8:	91 81       	ldd	r25, Z+1	; 0x01
    66da:	8d 93       	st	X+, r24
    66dc:	9c 93       	st	X, r25
    66de:	fe 01       	movw	r30, r28
    66e0:	e9 5b       	subi	r30, 0xB9	; 185
    66e2:	ff 4f       	sbci	r31, 0xFF	; 255
    66e4:	80 81       	ld	r24, Z
    66e6:	91 81       	ldd	r25, Z+1	; 0x01
    66e8:	01 97       	sbiw	r24, 0x01	; 1
    66ea:	f1 f7       	brne	.-4      	; 0x66e8 <Lcd_VidDisplayChracterXY+0x314>
    66ec:	fe 01       	movw	r30, r28
    66ee:	e9 5b       	subi	r30, 0xB9	; 185
    66f0:	ff 4f       	sbci	r31, 0xFF	; 255
    66f2:	91 83       	std	Z+1, r25	; 0x01
    66f4:	80 83       	st	Z, r24
		_delay_ms(1);
	#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
		Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,4));
    66f6:	fe 01       	movw	r30, r28
    66f8:	eb 59       	subi	r30, 0x9B	; 155
    66fa:	ff 4f       	sbci	r31, 0xFF	; 255
    66fc:	80 81       	ld	r24, Z
    66fe:	88 2f       	mov	r24, r24
    6700:	90 e0       	ldi	r25, 0x00	; 0
    6702:	80 71       	andi	r24, 0x10	; 16
    6704:	90 70       	andi	r25, 0x00	; 0
    6706:	95 95       	asr	r25
    6708:	87 95       	ror	r24
    670a:	95 95       	asr	r25
    670c:	87 95       	ror	r24
    670e:	95 95       	asr	r25
    6710:	87 95       	ror	r24
    6712:	95 95       	asr	r25
    6714:	87 95       	ror	r24
    6716:	98 2f       	mov	r25, r24
    6718:	82 e1       	ldi	r24, 0x12	; 18
    671a:	69 2f       	mov	r22, r25
    671c:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,5));
    6720:	fe 01       	movw	r30, r28
    6722:	eb 59       	subi	r30, 0x9B	; 155
    6724:	ff 4f       	sbci	r31, 0xFF	; 255
    6726:	80 81       	ld	r24, Z
    6728:	88 2f       	mov	r24, r24
    672a:	90 e0       	ldi	r25, 0x00	; 0
    672c:	80 72       	andi	r24, 0x20	; 32
    672e:	90 70       	andi	r25, 0x00	; 0
    6730:	95 95       	asr	r25
    6732:	87 95       	ror	r24
    6734:	95 95       	asr	r25
    6736:	87 95       	ror	r24
    6738:	95 95       	asr	r25
    673a:	87 95       	ror	r24
    673c:	95 95       	asr	r25
    673e:	87 95       	ror	r24
    6740:	95 95       	asr	r25
    6742:	87 95       	ror	r24
    6744:	98 2f       	mov	r25, r24
    6746:	83 e1       	ldi	r24, 0x13	; 19
    6748:	69 2f       	mov	r22, r25
    674a:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,6));
    674e:	fe 01       	movw	r30, r28
    6750:	eb 59       	subi	r30, 0x9B	; 155
    6752:	ff 4f       	sbci	r31, 0xFF	; 255
    6754:	80 81       	ld	r24, Z
    6756:	88 2f       	mov	r24, r24
    6758:	90 e0       	ldi	r25, 0x00	; 0
    675a:	80 74       	andi	r24, 0x40	; 64
    675c:	90 70       	andi	r25, 0x00	; 0
    675e:	08 2e       	mov	r0, r24
    6760:	89 2f       	mov	r24, r25
    6762:	00 0c       	add	r0, r0
    6764:	88 1f       	adc	r24, r24
    6766:	99 0b       	sbc	r25, r25
    6768:	00 0c       	add	r0, r0
    676a:	88 1f       	adc	r24, r24
    676c:	99 1f       	adc	r25, r25
    676e:	98 2f       	mov	r25, r24
    6770:	84 e1       	ldi	r24, 0x14	; 20
    6772:	69 2f       	mov	r22, r25
    6774:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,7));
    6778:	fe 01       	movw	r30, r28
    677a:	eb 59       	subi	r30, 0x9B	; 155
    677c:	ff 4f       	sbci	r31, 0xFF	; 255
    677e:	80 81       	ld	r24, Z
    6780:	98 2f       	mov	r25, r24
    6782:	99 1f       	adc	r25, r25
    6784:	99 27       	eor	r25, r25
    6786:	99 1f       	adc	r25, r25
    6788:	85 e1       	ldi	r24, 0x15	; 21
    678a:	69 2f       	mov	r22, r25
    678c:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    6790:	fe 01       	movw	r30, r28
    6792:	ed 5b       	subi	r30, 0xBD	; 189
    6794:	ff 4f       	sbci	r31, 0xFF	; 255
    6796:	80 e0       	ldi	r24, 0x00	; 0
    6798:	90 e0       	ldi	r25, 0x00	; 0
    679a:	a0 e8       	ldi	r26, 0x80	; 128
    679c:	bf e3       	ldi	r27, 0x3F	; 63
    679e:	80 83       	st	Z, r24
    67a0:	91 83       	std	Z+1, r25	; 0x01
    67a2:	a2 83       	std	Z+2, r26	; 0x02
    67a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    67a6:	8e 01       	movw	r16, r28
    67a8:	01 5c       	subi	r16, 0xC1	; 193
    67aa:	1f 4f       	sbci	r17, 0xFF	; 255
    67ac:	fe 01       	movw	r30, r28
    67ae:	ed 5b       	subi	r30, 0xBD	; 189
    67b0:	ff 4f       	sbci	r31, 0xFF	; 255
    67b2:	60 81       	ld	r22, Z
    67b4:	71 81       	ldd	r23, Z+1	; 0x01
    67b6:	82 81       	ldd	r24, Z+2	; 0x02
    67b8:	93 81       	ldd	r25, Z+3	; 0x03
    67ba:	20 e0       	ldi	r18, 0x00	; 0
    67bc:	30 e0       	ldi	r19, 0x00	; 0
    67be:	4a e7       	ldi	r20, 0x7A	; 122
    67c0:	53 e4       	ldi	r21, 0x43	; 67
    67c2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    67c6:	dc 01       	movw	r26, r24
    67c8:	cb 01       	movw	r24, r22
    67ca:	f8 01       	movw	r30, r16
    67cc:	80 83       	st	Z, r24
    67ce:	91 83       	std	Z+1, r25	; 0x01
    67d0:	a2 83       	std	Z+2, r26	; 0x02
    67d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    67d4:	fe 01       	movw	r30, r28
    67d6:	ff 96       	adiw	r30, 0x3f	; 63
    67d8:	60 81       	ld	r22, Z
    67da:	71 81       	ldd	r23, Z+1	; 0x01
    67dc:	82 81       	ldd	r24, Z+2	; 0x02
    67de:	93 81       	ldd	r25, Z+3	; 0x03
    67e0:	20 e0       	ldi	r18, 0x00	; 0
    67e2:	30 e0       	ldi	r19, 0x00	; 0
    67e4:	40 e8       	ldi	r20, 0x80	; 128
    67e6:	5f e3       	ldi	r21, 0x3F	; 63
    67e8:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    67ec:	88 23       	and	r24, r24
    67ee:	2c f4       	brge	.+10     	; 0x67fa <Lcd_VidDisplayChracterXY+0x426>
		__ticks = 1;
    67f0:	81 e0       	ldi	r24, 0x01	; 1
    67f2:	90 e0       	ldi	r25, 0x00	; 0
    67f4:	9e af       	std	Y+62, r25	; 0x3e
    67f6:	8d af       	std	Y+61, r24	; 0x3d
    67f8:	46 c0       	rjmp	.+140    	; 0x6886 <Lcd_VidDisplayChracterXY+0x4b2>
	else if (__tmp > 65535)
    67fa:	fe 01       	movw	r30, r28
    67fc:	ff 96       	adiw	r30, 0x3f	; 63
    67fe:	60 81       	ld	r22, Z
    6800:	71 81       	ldd	r23, Z+1	; 0x01
    6802:	82 81       	ldd	r24, Z+2	; 0x02
    6804:	93 81       	ldd	r25, Z+3	; 0x03
    6806:	20 e0       	ldi	r18, 0x00	; 0
    6808:	3f ef       	ldi	r19, 0xFF	; 255
    680a:	4f e7       	ldi	r20, 0x7F	; 127
    680c:	57 e4       	ldi	r21, 0x47	; 71
    680e:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    6812:	18 16       	cp	r1, r24
    6814:	64 f5       	brge	.+88     	; 0x686e <Lcd_VidDisplayChracterXY+0x49a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6816:	fe 01       	movw	r30, r28
    6818:	ed 5b       	subi	r30, 0xBD	; 189
    681a:	ff 4f       	sbci	r31, 0xFF	; 255
    681c:	60 81       	ld	r22, Z
    681e:	71 81       	ldd	r23, Z+1	; 0x01
    6820:	82 81       	ldd	r24, Z+2	; 0x02
    6822:	93 81       	ldd	r25, Z+3	; 0x03
    6824:	20 e0       	ldi	r18, 0x00	; 0
    6826:	30 e0       	ldi	r19, 0x00	; 0
    6828:	40 e2       	ldi	r20, 0x20	; 32
    682a:	51 e4       	ldi	r21, 0x41	; 65
    682c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6830:	dc 01       	movw	r26, r24
    6832:	cb 01       	movw	r24, r22
    6834:	bc 01       	movw	r22, r24
    6836:	cd 01       	movw	r24, r26
    6838:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    683c:	dc 01       	movw	r26, r24
    683e:	cb 01       	movw	r24, r22
    6840:	9e af       	std	Y+62, r25	; 0x3e
    6842:	8d af       	std	Y+61, r24	; 0x3d
    6844:	0f c0       	rjmp	.+30     	; 0x6864 <Lcd_VidDisplayChracterXY+0x490>
    6846:	89 e1       	ldi	r24, 0x19	; 25
    6848:	90 e0       	ldi	r25, 0x00	; 0
    684a:	9c af       	std	Y+60, r25	; 0x3c
    684c:	8b af       	std	Y+59, r24	; 0x3b
    684e:	8b ad       	ldd	r24, Y+59	; 0x3b
    6850:	9c ad       	ldd	r25, Y+60	; 0x3c
    6852:	01 97       	sbiw	r24, 0x01	; 1
    6854:	f1 f7       	brne	.-4      	; 0x6852 <Lcd_VidDisplayChracterXY+0x47e>
    6856:	9c af       	std	Y+60, r25	; 0x3c
    6858:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    685a:	8d ad       	ldd	r24, Y+61	; 0x3d
    685c:	9e ad       	ldd	r25, Y+62	; 0x3e
    685e:	01 97       	sbiw	r24, 0x01	; 1
    6860:	9e af       	std	Y+62, r25	; 0x3e
    6862:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6864:	8d ad       	ldd	r24, Y+61	; 0x3d
    6866:	9e ad       	ldd	r25, Y+62	; 0x3e
    6868:	00 97       	sbiw	r24, 0x00	; 0
    686a:	69 f7       	brne	.-38     	; 0x6846 <Lcd_VidDisplayChracterXY+0x472>
    686c:	16 c0       	rjmp	.+44     	; 0x689a <Lcd_VidDisplayChracterXY+0x4c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    686e:	fe 01       	movw	r30, r28
    6870:	ff 96       	adiw	r30, 0x3f	; 63
    6872:	60 81       	ld	r22, Z
    6874:	71 81       	ldd	r23, Z+1	; 0x01
    6876:	82 81       	ldd	r24, Z+2	; 0x02
    6878:	93 81       	ldd	r25, Z+3	; 0x03
    687a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    687e:	dc 01       	movw	r26, r24
    6880:	cb 01       	movw	r24, r22
    6882:	9e af       	std	Y+62, r25	; 0x3e
    6884:	8d af       	std	Y+61, r24	; 0x3d
    6886:	8d ad       	ldd	r24, Y+61	; 0x3d
    6888:	9e ad       	ldd	r25, Y+62	; 0x3e
    688a:	9a af       	std	Y+58, r25	; 0x3a
    688c:	89 af       	std	Y+57, r24	; 0x39
    688e:	89 ad       	ldd	r24, Y+57	; 0x39
    6890:	9a ad       	ldd	r25, Y+58	; 0x3a
    6892:	01 97       	sbiw	r24, 0x01	; 1
    6894:	f1 f7       	brne	.-4      	; 0x6892 <Lcd_VidDisplayChracterXY+0x4be>
    6896:	9a af       	std	Y+58, r25	; 0x3a
    6898:	89 af       	std	Y+57, r24	; 0x39

		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    689a:	81 e1       	ldi	r24, 0x11	; 17
    689c:	60 e0       	ldi	r22, 0x00	; 0
    689e:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    68a2:	80 e0       	ldi	r24, 0x00	; 0
    68a4:	90 e0       	ldi	r25, 0x00	; 0
    68a6:	a0 e8       	ldi	r26, 0x80	; 128
    68a8:	bf e3       	ldi	r27, 0x3F	; 63
    68aa:	8d ab       	std	Y+53, r24	; 0x35
    68ac:	9e ab       	std	Y+54, r25	; 0x36
    68ae:	af ab       	std	Y+55, r26	; 0x37
    68b0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    68b2:	6d a9       	ldd	r22, Y+53	; 0x35
    68b4:	7e a9       	ldd	r23, Y+54	; 0x36
    68b6:	8f a9       	ldd	r24, Y+55	; 0x37
    68b8:	98 ad       	ldd	r25, Y+56	; 0x38
    68ba:	20 e0       	ldi	r18, 0x00	; 0
    68bc:	30 e0       	ldi	r19, 0x00	; 0
    68be:	4a e7       	ldi	r20, 0x7A	; 122
    68c0:	53 e4       	ldi	r21, 0x43	; 67
    68c2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    68c6:	dc 01       	movw	r26, r24
    68c8:	cb 01       	movw	r24, r22
    68ca:	89 ab       	std	Y+49, r24	; 0x31
    68cc:	9a ab       	std	Y+50, r25	; 0x32
    68ce:	ab ab       	std	Y+51, r26	; 0x33
    68d0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    68d2:	69 a9       	ldd	r22, Y+49	; 0x31
    68d4:	7a a9       	ldd	r23, Y+50	; 0x32
    68d6:	8b a9       	ldd	r24, Y+51	; 0x33
    68d8:	9c a9       	ldd	r25, Y+52	; 0x34
    68da:	20 e0       	ldi	r18, 0x00	; 0
    68dc:	30 e0       	ldi	r19, 0x00	; 0
    68de:	40 e8       	ldi	r20, 0x80	; 128
    68e0:	5f e3       	ldi	r21, 0x3F	; 63
    68e2:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    68e6:	88 23       	and	r24, r24
    68e8:	2c f4       	brge	.+10     	; 0x68f4 <Lcd_VidDisplayChracterXY+0x520>
		__ticks = 1;
    68ea:	81 e0       	ldi	r24, 0x01	; 1
    68ec:	90 e0       	ldi	r25, 0x00	; 0
    68ee:	98 ab       	std	Y+48, r25	; 0x30
    68f0:	8f a7       	std	Y+47, r24	; 0x2f
    68f2:	3f c0       	rjmp	.+126    	; 0x6972 <Lcd_VidDisplayChracterXY+0x59e>
	else if (__tmp > 65535)
    68f4:	69 a9       	ldd	r22, Y+49	; 0x31
    68f6:	7a a9       	ldd	r23, Y+50	; 0x32
    68f8:	8b a9       	ldd	r24, Y+51	; 0x33
    68fa:	9c a9       	ldd	r25, Y+52	; 0x34
    68fc:	20 e0       	ldi	r18, 0x00	; 0
    68fe:	3f ef       	ldi	r19, 0xFF	; 255
    6900:	4f e7       	ldi	r20, 0x7F	; 127
    6902:	57 e4       	ldi	r21, 0x47	; 71
    6904:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    6908:	18 16       	cp	r1, r24
    690a:	4c f5       	brge	.+82     	; 0x695e <Lcd_VidDisplayChracterXY+0x58a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    690c:	6d a9       	ldd	r22, Y+53	; 0x35
    690e:	7e a9       	ldd	r23, Y+54	; 0x36
    6910:	8f a9       	ldd	r24, Y+55	; 0x37
    6912:	98 ad       	ldd	r25, Y+56	; 0x38
    6914:	20 e0       	ldi	r18, 0x00	; 0
    6916:	30 e0       	ldi	r19, 0x00	; 0
    6918:	40 e2       	ldi	r20, 0x20	; 32
    691a:	51 e4       	ldi	r21, 0x41	; 65
    691c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6920:	dc 01       	movw	r26, r24
    6922:	cb 01       	movw	r24, r22
    6924:	bc 01       	movw	r22, r24
    6926:	cd 01       	movw	r24, r26
    6928:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    692c:	dc 01       	movw	r26, r24
    692e:	cb 01       	movw	r24, r22
    6930:	98 ab       	std	Y+48, r25	; 0x30
    6932:	8f a7       	std	Y+47, r24	; 0x2f
    6934:	0f c0       	rjmp	.+30     	; 0x6954 <Lcd_VidDisplayChracterXY+0x580>
    6936:	89 e1       	ldi	r24, 0x19	; 25
    6938:	90 e0       	ldi	r25, 0x00	; 0
    693a:	9e a7       	std	Y+46, r25	; 0x2e
    693c:	8d a7       	std	Y+45, r24	; 0x2d
    693e:	8d a5       	ldd	r24, Y+45	; 0x2d
    6940:	9e a5       	ldd	r25, Y+46	; 0x2e
    6942:	01 97       	sbiw	r24, 0x01	; 1
    6944:	f1 f7       	brne	.-4      	; 0x6942 <Lcd_VidDisplayChracterXY+0x56e>
    6946:	9e a7       	std	Y+46, r25	; 0x2e
    6948:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    694a:	8f a5       	ldd	r24, Y+47	; 0x2f
    694c:	98 a9       	ldd	r25, Y+48	; 0x30
    694e:	01 97       	sbiw	r24, 0x01	; 1
    6950:	98 ab       	std	Y+48, r25	; 0x30
    6952:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6954:	8f a5       	ldd	r24, Y+47	; 0x2f
    6956:	98 a9       	ldd	r25, Y+48	; 0x30
    6958:	00 97       	sbiw	r24, 0x00	; 0
    695a:	69 f7       	brne	.-38     	; 0x6936 <Lcd_VidDisplayChracterXY+0x562>
    695c:	14 c0       	rjmp	.+40     	; 0x6986 <Lcd_VidDisplayChracterXY+0x5b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    695e:	69 a9       	ldd	r22, Y+49	; 0x31
    6960:	7a a9       	ldd	r23, Y+50	; 0x32
    6962:	8b a9       	ldd	r24, Y+51	; 0x33
    6964:	9c a9       	ldd	r25, Y+52	; 0x34
    6966:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    696a:	dc 01       	movw	r26, r24
    696c:	cb 01       	movw	r24, r22
    696e:	98 ab       	std	Y+48, r25	; 0x30
    6970:	8f a7       	std	Y+47, r24	; 0x2f
    6972:	8f a5       	ldd	r24, Y+47	; 0x2f
    6974:	98 a9       	ldd	r25, Y+48	; 0x30
    6976:	9c a7       	std	Y+44, r25	; 0x2c
    6978:	8b a7       	std	Y+43, r24	; 0x2b
    697a:	8b a5       	ldd	r24, Y+43	; 0x2b
    697c:	9c a5       	ldd	r25, Y+44	; 0x2c
    697e:	01 97       	sbiw	r24, 0x01	; 1
    6980:	f1 f7       	brne	.-4      	; 0x697e <Lcd_VidDisplayChracterXY+0x5aa>
    6982:	9c a7       	std	Y+44, r25	; 0x2c
    6984:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    6986:	81 e1       	ldi	r24, 0x11	; 17
    6988:	61 e0       	ldi	r22, 0x01	; 1
    698a:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    698e:	80 e0       	ldi	r24, 0x00	; 0
    6990:	90 e0       	ldi	r25, 0x00	; 0
    6992:	a0 e8       	ldi	r26, 0x80	; 128
    6994:	bf e3       	ldi	r27, 0x3F	; 63
    6996:	8f a3       	std	Y+39, r24	; 0x27
    6998:	98 a7       	std	Y+40, r25	; 0x28
    699a:	a9 a7       	std	Y+41, r26	; 0x29
    699c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    699e:	6f a1       	ldd	r22, Y+39	; 0x27
    69a0:	78 a5       	ldd	r23, Y+40	; 0x28
    69a2:	89 a5       	ldd	r24, Y+41	; 0x29
    69a4:	9a a5       	ldd	r25, Y+42	; 0x2a
    69a6:	20 e0       	ldi	r18, 0x00	; 0
    69a8:	30 e0       	ldi	r19, 0x00	; 0
    69aa:	4a e7       	ldi	r20, 0x7A	; 122
    69ac:	53 e4       	ldi	r21, 0x43	; 67
    69ae:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    69b2:	dc 01       	movw	r26, r24
    69b4:	cb 01       	movw	r24, r22
    69b6:	8b a3       	std	Y+35, r24	; 0x23
    69b8:	9c a3       	std	Y+36, r25	; 0x24
    69ba:	ad a3       	std	Y+37, r26	; 0x25
    69bc:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    69be:	6b a1       	ldd	r22, Y+35	; 0x23
    69c0:	7c a1       	ldd	r23, Y+36	; 0x24
    69c2:	8d a1       	ldd	r24, Y+37	; 0x25
    69c4:	9e a1       	ldd	r25, Y+38	; 0x26
    69c6:	20 e0       	ldi	r18, 0x00	; 0
    69c8:	30 e0       	ldi	r19, 0x00	; 0
    69ca:	40 e8       	ldi	r20, 0x80	; 128
    69cc:	5f e3       	ldi	r21, 0x3F	; 63
    69ce:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    69d2:	88 23       	and	r24, r24
    69d4:	2c f4       	brge	.+10     	; 0x69e0 <Lcd_VidDisplayChracterXY+0x60c>
		__ticks = 1;
    69d6:	81 e0       	ldi	r24, 0x01	; 1
    69d8:	90 e0       	ldi	r25, 0x00	; 0
    69da:	9a a3       	std	Y+34, r25	; 0x22
    69dc:	89 a3       	std	Y+33, r24	; 0x21
    69de:	3f c0       	rjmp	.+126    	; 0x6a5e <Lcd_VidDisplayChracterXY+0x68a>
	else if (__tmp > 65535)
    69e0:	6b a1       	ldd	r22, Y+35	; 0x23
    69e2:	7c a1       	ldd	r23, Y+36	; 0x24
    69e4:	8d a1       	ldd	r24, Y+37	; 0x25
    69e6:	9e a1       	ldd	r25, Y+38	; 0x26
    69e8:	20 e0       	ldi	r18, 0x00	; 0
    69ea:	3f ef       	ldi	r19, 0xFF	; 255
    69ec:	4f e7       	ldi	r20, 0x7F	; 127
    69ee:	57 e4       	ldi	r21, 0x47	; 71
    69f0:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    69f4:	18 16       	cp	r1, r24
    69f6:	4c f5       	brge	.+82     	; 0x6a4a <Lcd_VidDisplayChracterXY+0x676>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    69f8:	6f a1       	ldd	r22, Y+39	; 0x27
    69fa:	78 a5       	ldd	r23, Y+40	; 0x28
    69fc:	89 a5       	ldd	r24, Y+41	; 0x29
    69fe:	9a a5       	ldd	r25, Y+42	; 0x2a
    6a00:	20 e0       	ldi	r18, 0x00	; 0
    6a02:	30 e0       	ldi	r19, 0x00	; 0
    6a04:	40 e2       	ldi	r20, 0x20	; 32
    6a06:	51 e4       	ldi	r21, 0x41	; 65
    6a08:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6a0c:	dc 01       	movw	r26, r24
    6a0e:	cb 01       	movw	r24, r22
    6a10:	bc 01       	movw	r22, r24
    6a12:	cd 01       	movw	r24, r26
    6a14:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6a18:	dc 01       	movw	r26, r24
    6a1a:	cb 01       	movw	r24, r22
    6a1c:	9a a3       	std	Y+34, r25	; 0x22
    6a1e:	89 a3       	std	Y+33, r24	; 0x21
    6a20:	0f c0       	rjmp	.+30     	; 0x6a40 <Lcd_VidDisplayChracterXY+0x66c>
    6a22:	89 e1       	ldi	r24, 0x19	; 25
    6a24:	90 e0       	ldi	r25, 0x00	; 0
    6a26:	98 a3       	std	Y+32, r25	; 0x20
    6a28:	8f 8f       	std	Y+31, r24	; 0x1f
    6a2a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    6a2c:	98 a1       	ldd	r25, Y+32	; 0x20
    6a2e:	01 97       	sbiw	r24, 0x01	; 1
    6a30:	f1 f7       	brne	.-4      	; 0x6a2e <Lcd_VidDisplayChracterXY+0x65a>
    6a32:	98 a3       	std	Y+32, r25	; 0x20
    6a34:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6a36:	89 a1       	ldd	r24, Y+33	; 0x21
    6a38:	9a a1       	ldd	r25, Y+34	; 0x22
    6a3a:	01 97       	sbiw	r24, 0x01	; 1
    6a3c:	9a a3       	std	Y+34, r25	; 0x22
    6a3e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6a40:	89 a1       	ldd	r24, Y+33	; 0x21
    6a42:	9a a1       	ldd	r25, Y+34	; 0x22
    6a44:	00 97       	sbiw	r24, 0x00	; 0
    6a46:	69 f7       	brne	.-38     	; 0x6a22 <Lcd_VidDisplayChracterXY+0x64e>
    6a48:	14 c0       	rjmp	.+40     	; 0x6a72 <Lcd_VidDisplayChracterXY+0x69e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6a4a:	6b a1       	ldd	r22, Y+35	; 0x23
    6a4c:	7c a1       	ldd	r23, Y+36	; 0x24
    6a4e:	8d a1       	ldd	r24, Y+37	; 0x25
    6a50:	9e a1       	ldd	r25, Y+38	; 0x26
    6a52:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6a56:	dc 01       	movw	r26, r24
    6a58:	cb 01       	movw	r24, r22
    6a5a:	9a a3       	std	Y+34, r25	; 0x22
    6a5c:	89 a3       	std	Y+33, r24	; 0x21
    6a5e:	89 a1       	ldd	r24, Y+33	; 0x21
    6a60:	9a a1       	ldd	r25, Y+34	; 0x22
    6a62:	9e 8f       	std	Y+30, r25	; 0x1e
    6a64:	8d 8f       	std	Y+29, r24	; 0x1d
    6a66:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6a68:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6a6a:	01 97       	sbiw	r24, 0x01	; 1
    6a6c:	f1 f7       	brne	.-4      	; 0x6a6a <Lcd_VidDisplayChracterXY+0x696>
    6a6e:	9e 8f       	std	Y+30, r25	; 0x1e
    6a70:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);


		Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,0));
    6a72:	fe 01       	movw	r30, r28
    6a74:	eb 59       	subi	r30, 0x9B	; 155
    6a76:	ff 4f       	sbci	r31, 0xFF	; 255
    6a78:	80 81       	ld	r24, Z
    6a7a:	98 2f       	mov	r25, r24
    6a7c:	91 70       	andi	r25, 0x01	; 1
    6a7e:	82 e1       	ldi	r24, 0x12	; 18
    6a80:	69 2f       	mov	r22, r25
    6a82:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,1));
    6a86:	fe 01       	movw	r30, r28
    6a88:	eb 59       	subi	r30, 0x9B	; 155
    6a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    6a8c:	80 81       	ld	r24, Z
    6a8e:	88 2f       	mov	r24, r24
    6a90:	90 e0       	ldi	r25, 0x00	; 0
    6a92:	82 70       	andi	r24, 0x02	; 2
    6a94:	90 70       	andi	r25, 0x00	; 0
    6a96:	95 95       	asr	r25
    6a98:	87 95       	ror	r24
    6a9a:	98 2f       	mov	r25, r24
    6a9c:	83 e1       	ldi	r24, 0x13	; 19
    6a9e:	69 2f       	mov	r22, r25
    6aa0:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,2));
    6aa4:	fe 01       	movw	r30, r28
    6aa6:	eb 59       	subi	r30, 0x9B	; 155
    6aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    6aaa:	80 81       	ld	r24, Z
    6aac:	88 2f       	mov	r24, r24
    6aae:	90 e0       	ldi	r25, 0x00	; 0
    6ab0:	84 70       	andi	r24, 0x04	; 4
    6ab2:	90 70       	andi	r25, 0x00	; 0
    6ab4:	95 95       	asr	r25
    6ab6:	87 95       	ror	r24
    6ab8:	95 95       	asr	r25
    6aba:	87 95       	ror	r24
    6abc:	98 2f       	mov	r25, r24
    6abe:	84 e1       	ldi	r24, 0x14	; 20
    6ac0:	69 2f       	mov	r22, r25
    6ac2:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,3));
    6ac6:	fe 01       	movw	r30, r28
    6ac8:	eb 59       	subi	r30, 0x9B	; 155
    6aca:	ff 4f       	sbci	r31, 0xFF	; 255
    6acc:	80 81       	ld	r24, Z
    6ace:	88 2f       	mov	r24, r24
    6ad0:	90 e0       	ldi	r25, 0x00	; 0
    6ad2:	88 70       	andi	r24, 0x08	; 8
    6ad4:	90 70       	andi	r25, 0x00	; 0
    6ad6:	95 95       	asr	r25
    6ad8:	87 95       	ror	r24
    6ada:	95 95       	asr	r25
    6adc:	87 95       	ror	r24
    6ade:	95 95       	asr	r25
    6ae0:	87 95       	ror	r24
    6ae2:	98 2f       	mov	r25, r24
    6ae4:	85 e1       	ldi	r24, 0x15	; 21
    6ae6:	69 2f       	mov	r22, r25
    6ae8:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    6aec:	80 e0       	ldi	r24, 0x00	; 0
    6aee:	90 e0       	ldi	r25, 0x00	; 0
    6af0:	a0 e8       	ldi	r26, 0x80	; 128
    6af2:	bf e3       	ldi	r27, 0x3F	; 63
    6af4:	89 8f       	std	Y+25, r24	; 0x19
    6af6:	9a 8f       	std	Y+26, r25	; 0x1a
    6af8:	ab 8f       	std	Y+27, r26	; 0x1b
    6afa:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6afc:	69 8d       	ldd	r22, Y+25	; 0x19
    6afe:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6b00:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6b02:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6b04:	20 e0       	ldi	r18, 0x00	; 0
    6b06:	30 e0       	ldi	r19, 0x00	; 0
    6b08:	4a e7       	ldi	r20, 0x7A	; 122
    6b0a:	53 e4       	ldi	r21, 0x43	; 67
    6b0c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6b10:	dc 01       	movw	r26, r24
    6b12:	cb 01       	movw	r24, r22
    6b14:	8d 8b       	std	Y+21, r24	; 0x15
    6b16:	9e 8b       	std	Y+22, r25	; 0x16
    6b18:	af 8b       	std	Y+23, r26	; 0x17
    6b1a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    6b1c:	6d 89       	ldd	r22, Y+21	; 0x15
    6b1e:	7e 89       	ldd	r23, Y+22	; 0x16
    6b20:	8f 89       	ldd	r24, Y+23	; 0x17
    6b22:	98 8d       	ldd	r25, Y+24	; 0x18
    6b24:	20 e0       	ldi	r18, 0x00	; 0
    6b26:	30 e0       	ldi	r19, 0x00	; 0
    6b28:	40 e8       	ldi	r20, 0x80	; 128
    6b2a:	5f e3       	ldi	r21, 0x3F	; 63
    6b2c:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    6b30:	88 23       	and	r24, r24
    6b32:	2c f4       	brge	.+10     	; 0x6b3e <Lcd_VidDisplayChracterXY+0x76a>
		__ticks = 1;
    6b34:	81 e0       	ldi	r24, 0x01	; 1
    6b36:	90 e0       	ldi	r25, 0x00	; 0
    6b38:	9c 8b       	std	Y+20, r25	; 0x14
    6b3a:	8b 8b       	std	Y+19, r24	; 0x13
    6b3c:	3f c0       	rjmp	.+126    	; 0x6bbc <Lcd_VidDisplayChracterXY+0x7e8>
	else if (__tmp > 65535)
    6b3e:	6d 89       	ldd	r22, Y+21	; 0x15
    6b40:	7e 89       	ldd	r23, Y+22	; 0x16
    6b42:	8f 89       	ldd	r24, Y+23	; 0x17
    6b44:	98 8d       	ldd	r25, Y+24	; 0x18
    6b46:	20 e0       	ldi	r18, 0x00	; 0
    6b48:	3f ef       	ldi	r19, 0xFF	; 255
    6b4a:	4f e7       	ldi	r20, 0x7F	; 127
    6b4c:	57 e4       	ldi	r21, 0x47	; 71
    6b4e:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    6b52:	18 16       	cp	r1, r24
    6b54:	4c f5       	brge	.+82     	; 0x6ba8 <Lcd_VidDisplayChracterXY+0x7d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6b56:	69 8d       	ldd	r22, Y+25	; 0x19
    6b58:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6b5a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6b5c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6b5e:	20 e0       	ldi	r18, 0x00	; 0
    6b60:	30 e0       	ldi	r19, 0x00	; 0
    6b62:	40 e2       	ldi	r20, 0x20	; 32
    6b64:	51 e4       	ldi	r21, 0x41	; 65
    6b66:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6b6a:	dc 01       	movw	r26, r24
    6b6c:	cb 01       	movw	r24, r22
    6b6e:	bc 01       	movw	r22, r24
    6b70:	cd 01       	movw	r24, r26
    6b72:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6b76:	dc 01       	movw	r26, r24
    6b78:	cb 01       	movw	r24, r22
    6b7a:	9c 8b       	std	Y+20, r25	; 0x14
    6b7c:	8b 8b       	std	Y+19, r24	; 0x13
    6b7e:	0f c0       	rjmp	.+30     	; 0x6b9e <Lcd_VidDisplayChracterXY+0x7ca>
    6b80:	89 e1       	ldi	r24, 0x19	; 25
    6b82:	90 e0       	ldi	r25, 0x00	; 0
    6b84:	9a 8b       	std	Y+18, r25	; 0x12
    6b86:	89 8b       	std	Y+17, r24	; 0x11
    6b88:	89 89       	ldd	r24, Y+17	; 0x11
    6b8a:	9a 89       	ldd	r25, Y+18	; 0x12
    6b8c:	01 97       	sbiw	r24, 0x01	; 1
    6b8e:	f1 f7       	brne	.-4      	; 0x6b8c <Lcd_VidDisplayChracterXY+0x7b8>
    6b90:	9a 8b       	std	Y+18, r25	; 0x12
    6b92:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6b94:	8b 89       	ldd	r24, Y+19	; 0x13
    6b96:	9c 89       	ldd	r25, Y+20	; 0x14
    6b98:	01 97       	sbiw	r24, 0x01	; 1
    6b9a:	9c 8b       	std	Y+20, r25	; 0x14
    6b9c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6b9e:	8b 89       	ldd	r24, Y+19	; 0x13
    6ba0:	9c 89       	ldd	r25, Y+20	; 0x14
    6ba2:	00 97       	sbiw	r24, 0x00	; 0
    6ba4:	69 f7       	brne	.-38     	; 0x6b80 <Lcd_VidDisplayChracterXY+0x7ac>
    6ba6:	14 c0       	rjmp	.+40     	; 0x6bd0 <Lcd_VidDisplayChracterXY+0x7fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6ba8:	6d 89       	ldd	r22, Y+21	; 0x15
    6baa:	7e 89       	ldd	r23, Y+22	; 0x16
    6bac:	8f 89       	ldd	r24, Y+23	; 0x17
    6bae:	98 8d       	ldd	r25, Y+24	; 0x18
    6bb0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6bb4:	dc 01       	movw	r26, r24
    6bb6:	cb 01       	movw	r24, r22
    6bb8:	9c 8b       	std	Y+20, r25	; 0x14
    6bba:	8b 8b       	std	Y+19, r24	; 0x13
    6bbc:	8b 89       	ldd	r24, Y+19	; 0x13
    6bbe:	9c 89       	ldd	r25, Y+20	; 0x14
    6bc0:	98 8b       	std	Y+16, r25	; 0x10
    6bc2:	8f 87       	std	Y+15, r24	; 0x0f
    6bc4:	8f 85       	ldd	r24, Y+15	; 0x0f
    6bc6:	98 89       	ldd	r25, Y+16	; 0x10
    6bc8:	01 97       	sbiw	r24, 0x01	; 1
    6bca:	f1 f7       	brne	.-4      	; 0x6bc8 <Lcd_VidDisplayChracterXY+0x7f4>
    6bcc:	98 8b       	std	Y+16, r25	; 0x10
    6bce:	8f 87       	std	Y+15, r24	; 0x0f

		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    6bd0:	81 e1       	ldi	r24, 0x11	; 17
    6bd2:	60 e0       	ldi	r22, 0x00	; 0
    6bd4:	0e 94 9c 18 	call	0x3138	; 0x3138 <Dio_enuWriteChannel>
    6bd8:	80 e0       	ldi	r24, 0x00	; 0
    6bda:	90 e0       	ldi	r25, 0x00	; 0
    6bdc:	a0 e8       	ldi	r26, 0x80	; 128
    6bde:	bf e3       	ldi	r27, 0x3F	; 63
    6be0:	8b 87       	std	Y+11, r24	; 0x0b
    6be2:	9c 87       	std	Y+12, r25	; 0x0c
    6be4:	ad 87       	std	Y+13, r26	; 0x0d
    6be6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6be8:	6b 85       	ldd	r22, Y+11	; 0x0b
    6bea:	7c 85       	ldd	r23, Y+12	; 0x0c
    6bec:	8d 85       	ldd	r24, Y+13	; 0x0d
    6bee:	9e 85       	ldd	r25, Y+14	; 0x0e
    6bf0:	20 e0       	ldi	r18, 0x00	; 0
    6bf2:	30 e0       	ldi	r19, 0x00	; 0
    6bf4:	4a e7       	ldi	r20, 0x7A	; 122
    6bf6:	53 e4       	ldi	r21, 0x43	; 67
    6bf8:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6bfc:	dc 01       	movw	r26, r24
    6bfe:	cb 01       	movw	r24, r22
    6c00:	8f 83       	std	Y+7, r24	; 0x07
    6c02:	98 87       	std	Y+8, r25	; 0x08
    6c04:	a9 87       	std	Y+9, r26	; 0x09
    6c06:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6c08:	6f 81       	ldd	r22, Y+7	; 0x07
    6c0a:	78 85       	ldd	r23, Y+8	; 0x08
    6c0c:	89 85       	ldd	r24, Y+9	; 0x09
    6c0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    6c10:	20 e0       	ldi	r18, 0x00	; 0
    6c12:	30 e0       	ldi	r19, 0x00	; 0
    6c14:	40 e8       	ldi	r20, 0x80	; 128
    6c16:	5f e3       	ldi	r21, 0x3F	; 63
    6c18:	0e 94 89 11 	call	0x2312	; 0x2312 <__ltsf2>
    6c1c:	88 23       	and	r24, r24
    6c1e:	2c f4       	brge	.+10     	; 0x6c2a <Lcd_VidDisplayChracterXY+0x856>
		__ticks = 1;
    6c20:	81 e0       	ldi	r24, 0x01	; 1
    6c22:	90 e0       	ldi	r25, 0x00	; 0
    6c24:	9e 83       	std	Y+6, r25	; 0x06
    6c26:	8d 83       	std	Y+5, r24	; 0x05
    6c28:	3f c0       	rjmp	.+126    	; 0x6ca8 <Lcd_VidDisplayChracterXY+0x8d4>
	else if (__tmp > 65535)
    6c2a:	6f 81       	ldd	r22, Y+7	; 0x07
    6c2c:	78 85       	ldd	r23, Y+8	; 0x08
    6c2e:	89 85       	ldd	r24, Y+9	; 0x09
    6c30:	9a 85       	ldd	r25, Y+10	; 0x0a
    6c32:	20 e0       	ldi	r18, 0x00	; 0
    6c34:	3f ef       	ldi	r19, 0xFF	; 255
    6c36:	4f e7       	ldi	r20, 0x7F	; 127
    6c38:	57 e4       	ldi	r21, 0x47	; 71
    6c3a:	0e 94 29 11 	call	0x2252	; 0x2252 <__gtsf2>
    6c3e:	18 16       	cp	r1, r24
    6c40:	4c f5       	brge	.+82     	; 0x6c94 <Lcd_VidDisplayChracterXY+0x8c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6c42:	6b 85       	ldd	r22, Y+11	; 0x0b
    6c44:	7c 85       	ldd	r23, Y+12	; 0x0c
    6c46:	8d 85       	ldd	r24, Y+13	; 0x0d
    6c48:	9e 85       	ldd	r25, Y+14	; 0x0e
    6c4a:	20 e0       	ldi	r18, 0x00	; 0
    6c4c:	30 e0       	ldi	r19, 0x00	; 0
    6c4e:	40 e2       	ldi	r20, 0x20	; 32
    6c50:	51 e4       	ldi	r21, 0x41	; 65
    6c52:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    6c56:	dc 01       	movw	r26, r24
    6c58:	cb 01       	movw	r24, r22
    6c5a:	bc 01       	movw	r22, r24
    6c5c:	cd 01       	movw	r24, r26
    6c5e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6c62:	dc 01       	movw	r26, r24
    6c64:	cb 01       	movw	r24, r22
    6c66:	9e 83       	std	Y+6, r25	; 0x06
    6c68:	8d 83       	std	Y+5, r24	; 0x05
    6c6a:	0f c0       	rjmp	.+30     	; 0x6c8a <Lcd_VidDisplayChracterXY+0x8b6>
    6c6c:	89 e1       	ldi	r24, 0x19	; 25
    6c6e:	90 e0       	ldi	r25, 0x00	; 0
    6c70:	9c 83       	std	Y+4, r25	; 0x04
    6c72:	8b 83       	std	Y+3, r24	; 0x03
    6c74:	8b 81       	ldd	r24, Y+3	; 0x03
    6c76:	9c 81       	ldd	r25, Y+4	; 0x04
    6c78:	01 97       	sbiw	r24, 0x01	; 1
    6c7a:	f1 f7       	brne	.-4      	; 0x6c78 <Lcd_VidDisplayChracterXY+0x8a4>
    6c7c:	9c 83       	std	Y+4, r25	; 0x04
    6c7e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6c80:	8d 81       	ldd	r24, Y+5	; 0x05
    6c82:	9e 81       	ldd	r25, Y+6	; 0x06
    6c84:	01 97       	sbiw	r24, 0x01	; 1
    6c86:	9e 83       	std	Y+6, r25	; 0x06
    6c88:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    6c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    6c8e:	00 97       	sbiw	r24, 0x00	; 0
    6c90:	69 f7       	brne	.-38     	; 0x6c6c <Lcd_VidDisplayChracterXY+0x898>
    6c92:	14 c0       	rjmp	.+40     	; 0x6cbc <Lcd_VidDisplayChracterXY+0x8e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6c94:	6f 81       	ldd	r22, Y+7	; 0x07
    6c96:	78 85       	ldd	r23, Y+8	; 0x08
    6c98:	89 85       	ldd	r24, Y+9	; 0x09
    6c9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    6c9c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6ca0:	dc 01       	movw	r26, r24
    6ca2:	cb 01       	movw	r24, r22
    6ca4:	9e 83       	std	Y+6, r25	; 0x06
    6ca6:	8d 83       	std	Y+5, r24	; 0x05
    6ca8:	8d 81       	ldd	r24, Y+5	; 0x05
    6caa:	9e 81       	ldd	r25, Y+6	; 0x06
    6cac:	9a 83       	std	Y+2, r25	; 0x02
    6cae:	89 83       	std	Y+1, r24	; 0x01
    6cb0:	89 81       	ldd	r24, Y+1	; 0x01
    6cb2:	9a 81       	ldd	r25, Y+2	; 0x02
    6cb4:	01 97       	sbiw	r24, 0x01	; 1
    6cb6:	f1 f7       	brne	.-4      	; 0x6cb4 <Lcd_VidDisplayChracterXY+0x8e0>
    6cb8:	9a 83       	std	Y+2, r25	; 0x02
    6cba:	89 83       	std	Y+1, r24	; 0x01
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
		_delay_ms(2);
	#endif
}
    6cbc:	cb 59       	subi	r28, 0x9B	; 155
    6cbe:	df 4f       	sbci	r29, 0xFF	; 255
    6cc0:	0f b6       	in	r0, 0x3f	; 63
    6cc2:	f8 94       	cli
    6cc4:	de bf       	out	0x3e, r29	; 62
    6cc6:	0f be       	out	0x3f, r0	; 63
    6cc8:	cd bf       	out	0x3d, r28	; 61
    6cca:	cf 91       	pop	r28
    6ccc:	df 91       	pop	r29
    6cce:	1f 91       	pop	r17
    6cd0:	0f 91       	pop	r16
    6cd2:	08 95       	ret

00006cd4 <ADC_CallFunc>:
		0b11111,
		0b11111
};
uint16 ADC_VAL=0;
void ADC_CallFunc(uint16 Val)
{
    6cd4:	df 93       	push	r29
    6cd6:	cf 93       	push	r28
    6cd8:	00 d0       	rcall	.+0      	; 0x6cda <ADC_CallFunc+0x6>
    6cda:	cd b7       	in	r28, 0x3d	; 61
    6cdc:	de b7       	in	r29, 0x3e	; 62
    6cde:	9a 83       	std	Y+2, r25	; 0x02
    6ce0:	89 83       	std	Y+1, r24	; 0x01
	ADC_VAL=Val;
    6ce2:	89 81       	ldd	r24, Y+1	; 0x01
    6ce4:	9a 81       	ldd	r25, Y+2	; 0x02
    6ce6:	90 93 bd 01 	sts	0x01BD, r25
    6cea:	80 93 bc 01 	sts	0x01BC, r24
}
    6cee:	0f 90       	pop	r0
    6cf0:	0f 90       	pop	r0
    6cf2:	cf 91       	pop	r28
    6cf4:	df 91       	pop	r29
    6cf6:	08 95       	ret

00006cf8 <main>:
int main(void)
{
    6cf8:	df 93       	push	r29
    6cfa:	cf 93       	push	r28
    6cfc:	cd b7       	in	r28, 0x3d	; 61
    6cfe:	de b7       	in	r29, 0x3e	; 62
    6d00:	28 97       	sbiw	r28, 0x08	; 8
    6d02:	0f b6       	in	r0, 0x3f	; 63
    6d04:	f8 94       	cli
    6d06:	de bf       	out	0x3e, r29	; 62
    6d08:	0f be       	out	0x3f, r0	; 63
    6d0a:	cd bf       	out	0x3d, r28	; 61
	PORT_Init();
    6d0c:	0e 94 b3 13 	call	0x2766	; 0x2766 <PORT_Init>
	GIE_enuInit();
    6d10:	0e 94 5e 18 	call	0x30bc	; 0x30bc <GIE_enuInit>
	Lcd_Init();
    6d14:	0e 94 ae 1d 	call	0x3b5c	; 0x3b5c <Lcd_Init>
	ADC_ConfigType Config={AREF,ADC0,Prescaler_64};
    6d18:	ce 01       	movw	r24, r28
    6d1a:	01 96       	adiw	r24, 0x01	; 1
    6d1c:	9d 83       	std	Y+5, r25	; 0x05
    6d1e:	8c 83       	std	Y+4, r24	; 0x04
    6d20:	e4 eb       	ldi	r30, 0xB4	; 180
    6d22:	f1 e0       	ldi	r31, 0x01	; 1
    6d24:	ff 83       	std	Y+7, r31	; 0x07
    6d26:	ee 83       	std	Y+6, r30	; 0x06
    6d28:	f3 e0       	ldi	r31, 0x03	; 3
    6d2a:	f8 87       	std	Y+8, r31	; 0x08
    6d2c:	ee 81       	ldd	r30, Y+6	; 0x06
    6d2e:	ff 81       	ldd	r31, Y+7	; 0x07
    6d30:	00 80       	ld	r0, Z
    6d32:	8e 81       	ldd	r24, Y+6	; 0x06
    6d34:	9f 81       	ldd	r25, Y+7	; 0x07
    6d36:	01 96       	adiw	r24, 0x01	; 1
    6d38:	9f 83       	std	Y+7, r25	; 0x07
    6d3a:	8e 83       	std	Y+6, r24	; 0x06
    6d3c:	ec 81       	ldd	r30, Y+4	; 0x04
    6d3e:	fd 81       	ldd	r31, Y+5	; 0x05
    6d40:	00 82       	st	Z, r0
    6d42:	8c 81       	ldd	r24, Y+4	; 0x04
    6d44:	9d 81       	ldd	r25, Y+5	; 0x05
    6d46:	01 96       	adiw	r24, 0x01	; 1
    6d48:	9d 83       	std	Y+5, r25	; 0x05
    6d4a:	8c 83       	std	Y+4, r24	; 0x04
    6d4c:	98 85       	ldd	r25, Y+8	; 0x08
    6d4e:	91 50       	subi	r25, 0x01	; 1
    6d50:	98 87       	std	Y+8, r25	; 0x08
    6d52:	e8 85       	ldd	r30, Y+8	; 0x08
    6d54:	ee 23       	and	r30, r30
    6d56:	51 f7       	brne	.-44     	; 0x6d2c <main+0x34>
	ADC_Init(&Config);
    6d58:	ce 01       	movw	r24, r28
    6d5a:	01 96       	adiw	r24, 0x01	; 1
    6d5c:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <ADC_Init>
	ADC_CallBack(ADC_CallFunc);
    6d60:	8a e6       	ldi	r24, 0x6A	; 106
    6d62:	96 e3       	ldi	r25, 0x36	; 54
    6d64:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <ADC_CallBack>
	LCD_DisplayStringXY(0,1,"Volume = ");
    6d68:	20 e6       	ldi	r18, 0x60	; 96
    6d6a:	30 e0       	ldi	r19, 0x00	; 0
    6d6c:	80 e0       	ldi	r24, 0x00	; 0
    6d6e:	61 e0       	ldi	r22, 0x01	; 1
    6d70:	a9 01       	movw	r20, r18
    6d72:	0e 94 db 2c 	call	0x59b6	; 0x59b6 <LCD_DisplayStringXY>
	Lcd_VidCreateCustomCharacter(Vol,0);
    6d76:	8c e9       	ldi	r24, 0x9C	; 156
    6d78:	91 e0       	ldi	r25, 0x01	; 1
    6d7a:	60 e0       	ldi	r22, 0x00	; 0
    6d7c:	0e 94 a0 26 	call	0x4d40	; 0x4d40 <Lcd_VidCreateCustomCharacter>
	Lcd_VidCreateCustomCharacter(Vol1,1);
    6d80:	84 ea       	ldi	r24, 0xA4	; 164
    6d82:	91 e0       	ldi	r25, 0x01	; 1
    6d84:	61 e0       	ldi	r22, 0x01	; 1
    6d86:	0e 94 a0 26 	call	0x4d40	; 0x4d40 <Lcd_VidCreateCustomCharacter>
	Lcd_VidCreateCustomCharacter(customChar,2);
    6d8a:	8c ea       	ldi	r24, 0xAC	; 172
    6d8c:	91 e0       	ldi	r25, 0x01	; 1
    6d8e:	62 e0       	ldi	r22, 0x02	; 2
    6d90:	0e 94 a0 26 	call	0x4d40	; 0x4d40 <Lcd_VidCreateCustomCharacter>
	while(1)
	{
		ADC_enuReadChannel(ADC0);
    6d94:	80 e0       	ldi	r24, 0x00	; 0
    6d96:	0e 94 43 1d 	call	0x3a86	; 0x3a86 <ADC_enuReadChannel>
		if(ADC_VAL>500 && ADC_VAL<530)
    6d9a:	80 91 bc 01 	lds	r24, 0x01BC
    6d9e:	90 91 bd 01 	lds	r25, 0x01BD
    6da2:	f1 e0       	ldi	r31, 0x01	; 1
    6da4:	85 3f       	cpi	r24, 0xF5	; 245
    6da6:	9f 07       	cpc	r25, r31
    6da8:	a8 f0       	brcs	.+42     	; 0x6dd4 <main+0xdc>
    6daa:	80 91 bc 01 	lds	r24, 0x01BC
    6dae:	90 91 bd 01 	lds	r25, 0x01BD
    6db2:	22 e0       	ldi	r18, 0x02	; 2
    6db4:	82 31       	cpi	r24, 0x12	; 18
    6db6:	92 07       	cpc	r25, r18
    6db8:	68 f4       	brcc	.+26     	; 0x6dd4 <main+0xdc>
		{
			Lcd_VidDisplayChracterXY(1,10,0);
    6dba:	81 e0       	ldi	r24, 0x01	; 1
    6dbc:	6a e0       	ldi	r22, 0x0A	; 10
    6dbe:	40 e0       	ldi	r20, 0x00	; 0
    6dc0:	0e 94 ea 31 	call	0x63d4	; 0x63d4 <Lcd_VidDisplayChracterXY>
			LCD_DisplayStringXY(1,11,"     ");
    6dc4:	2a e6       	ldi	r18, 0x6A	; 106
    6dc6:	30 e0       	ldi	r19, 0x00	; 0
    6dc8:	81 e0       	ldi	r24, 0x01	; 1
    6dca:	6b e0       	ldi	r22, 0x0B	; 11
    6dcc:	a9 01       	movw	r20, r18
    6dce:	0e 94 db 2c 	call	0x59b6	; 0x59b6 <LCD_DisplayStringXY>
    6dd2:	e0 cf       	rjmp	.-64     	; 0x6d94 <main+0x9c>

		}
		else if(ADC_VAL>530 && ADC_VAL<560)
    6dd4:	80 91 bc 01 	lds	r24, 0x01BC
    6dd8:	90 91 bd 01 	lds	r25, 0x01BD
    6ddc:	e2 e0       	ldi	r30, 0x02	; 2
    6dde:	83 31       	cpi	r24, 0x13	; 19
    6de0:	9e 07       	cpc	r25, r30
    6de2:	d0 f0       	brcs	.+52     	; 0x6e18 <main+0x120>
    6de4:	80 91 bc 01 	lds	r24, 0x01BC
    6de8:	90 91 bd 01 	lds	r25, 0x01BD
    6dec:	f2 e0       	ldi	r31, 0x02	; 2
    6dee:	80 33       	cpi	r24, 0x30	; 48
    6df0:	9f 07       	cpc	r25, r31
    6df2:	90 f4       	brcc	.+36     	; 0x6e18 <main+0x120>
		{
			Lcd_VidDisplayChracterXY(1,10,0);
    6df4:	81 e0       	ldi	r24, 0x01	; 1
    6df6:	6a e0       	ldi	r22, 0x0A	; 10
    6df8:	40 e0       	ldi	r20, 0x00	; 0
    6dfa:	0e 94 ea 31 	call	0x63d4	; 0x63d4 <Lcd_VidDisplayChracterXY>
			Lcd_VidDisplayChracterXY(1,11,1);
    6dfe:	81 e0       	ldi	r24, 0x01	; 1
    6e00:	6b e0       	ldi	r22, 0x0B	; 11
    6e02:	41 e0       	ldi	r20, 0x01	; 1
    6e04:	0e 94 ea 31 	call	0x63d4	; 0x63d4 <Lcd_VidDisplayChracterXY>
			LCD_DisplayStringXY(1,12,"     ");
    6e08:	2a e6       	ldi	r18, 0x6A	; 106
    6e0a:	30 e0       	ldi	r19, 0x00	; 0
    6e0c:	81 e0       	ldi	r24, 0x01	; 1
    6e0e:	6c e0       	ldi	r22, 0x0C	; 12
    6e10:	a9 01       	movw	r20, r18
    6e12:	0e 94 db 2c 	call	0x59b6	; 0x59b6 <LCD_DisplayStringXY>
    6e16:	be cf       	rjmp	.-132    	; 0x6d94 <main+0x9c>

		}
		else if(ADC_VAL>560 )
    6e18:	80 91 bc 01 	lds	r24, 0x01BC
    6e1c:	90 91 bd 01 	lds	r25, 0x01BD
    6e20:	22 e0       	ldi	r18, 0x02	; 2
    6e22:	81 33       	cpi	r24, 0x31	; 49
    6e24:	92 07       	cpc	r25, r18
    6e26:	80 f0       	brcs	.+32     	; 0x6e48 <main+0x150>
		{
			Lcd_VidDisplayChracterXY(1,10,0);
    6e28:	81 e0       	ldi	r24, 0x01	; 1
    6e2a:	6a e0       	ldi	r22, 0x0A	; 10
    6e2c:	40 e0       	ldi	r20, 0x00	; 0
    6e2e:	0e 94 ea 31 	call	0x63d4	; 0x63d4 <Lcd_VidDisplayChracterXY>
			Lcd_VidDisplayChracterXY(1,11,1);
    6e32:	81 e0       	ldi	r24, 0x01	; 1
    6e34:	6b e0       	ldi	r22, 0x0B	; 11
    6e36:	41 e0       	ldi	r20, 0x01	; 1
    6e38:	0e 94 ea 31 	call	0x63d4	; 0x63d4 <Lcd_VidDisplayChracterXY>
			Lcd_VidDisplayChracterXY(1,12,2);
    6e3c:	81 e0       	ldi	r24, 0x01	; 1
    6e3e:	6c e0       	ldi	r22, 0x0C	; 12
    6e40:	42 e0       	ldi	r20, 0x02	; 2
    6e42:	0e 94 ea 31 	call	0x63d4	; 0x63d4 <Lcd_VidDisplayChracterXY>
    6e46:	a6 cf       	rjmp	.-180    	; 0x6d94 <main+0x9c>

		}
		else{
			LCD_DisplayStringXY(1,0,"                                   ");
    6e48:	20 e7       	ldi	r18, 0x70	; 112
    6e4a:	30 e0       	ldi	r19, 0x00	; 0
    6e4c:	81 e0       	ldi	r24, 0x01	; 1
    6e4e:	60 e0       	ldi	r22, 0x00	; 0
    6e50:	a9 01       	movw	r20, r18
    6e52:	0e 94 db 2c 	call	0x59b6	; 0x59b6 <LCD_DisplayStringXY>
    6e56:	9e cf       	rjmp	.-196    	; 0x6d94 <main+0x9c>

00006e58 <__udivmodsi4>:
    6e58:	a1 e2       	ldi	r26, 0x21	; 33
    6e5a:	1a 2e       	mov	r1, r26
    6e5c:	aa 1b       	sub	r26, r26
    6e5e:	bb 1b       	sub	r27, r27
    6e60:	fd 01       	movw	r30, r26
    6e62:	0d c0       	rjmp	.+26     	; 0x6e7e <__udivmodsi4_ep>

00006e64 <__udivmodsi4_loop>:
    6e64:	aa 1f       	adc	r26, r26
    6e66:	bb 1f       	adc	r27, r27
    6e68:	ee 1f       	adc	r30, r30
    6e6a:	ff 1f       	adc	r31, r31
    6e6c:	a2 17       	cp	r26, r18
    6e6e:	b3 07       	cpc	r27, r19
    6e70:	e4 07       	cpc	r30, r20
    6e72:	f5 07       	cpc	r31, r21
    6e74:	20 f0       	brcs	.+8      	; 0x6e7e <__udivmodsi4_ep>
    6e76:	a2 1b       	sub	r26, r18
    6e78:	b3 0b       	sbc	r27, r19
    6e7a:	e4 0b       	sbc	r30, r20
    6e7c:	f5 0b       	sbc	r31, r21

00006e7e <__udivmodsi4_ep>:
    6e7e:	66 1f       	adc	r22, r22
    6e80:	77 1f       	adc	r23, r23
    6e82:	88 1f       	adc	r24, r24
    6e84:	99 1f       	adc	r25, r25
    6e86:	1a 94       	dec	r1
    6e88:	69 f7       	brne	.-38     	; 0x6e64 <__udivmodsi4_loop>
    6e8a:	60 95       	com	r22
    6e8c:	70 95       	com	r23
    6e8e:	80 95       	com	r24
    6e90:	90 95       	com	r25
    6e92:	9b 01       	movw	r18, r22
    6e94:	ac 01       	movw	r20, r24
    6e96:	bd 01       	movw	r22, r26
    6e98:	cf 01       	movw	r24, r30
    6e9a:	08 95       	ret

00006e9c <__mulsi3>:
    6e9c:	62 9f       	mul	r22, r18
    6e9e:	d0 01       	movw	r26, r0
    6ea0:	73 9f       	mul	r23, r19
    6ea2:	f0 01       	movw	r30, r0
    6ea4:	82 9f       	mul	r24, r18
    6ea6:	e0 0d       	add	r30, r0
    6ea8:	f1 1d       	adc	r31, r1
    6eaa:	64 9f       	mul	r22, r20
    6eac:	e0 0d       	add	r30, r0
    6eae:	f1 1d       	adc	r31, r1
    6eb0:	92 9f       	mul	r25, r18
    6eb2:	f0 0d       	add	r31, r0
    6eb4:	83 9f       	mul	r24, r19
    6eb6:	f0 0d       	add	r31, r0
    6eb8:	74 9f       	mul	r23, r20
    6eba:	f0 0d       	add	r31, r0
    6ebc:	65 9f       	mul	r22, r21
    6ebe:	f0 0d       	add	r31, r0
    6ec0:	99 27       	eor	r25, r25
    6ec2:	72 9f       	mul	r23, r18
    6ec4:	b0 0d       	add	r27, r0
    6ec6:	e1 1d       	adc	r30, r1
    6ec8:	f9 1f       	adc	r31, r25
    6eca:	63 9f       	mul	r22, r19
    6ecc:	b0 0d       	add	r27, r0
    6ece:	e1 1d       	adc	r30, r1
    6ed0:	f9 1f       	adc	r31, r25
    6ed2:	bd 01       	movw	r22, r26
    6ed4:	cf 01       	movw	r24, r30
    6ed6:	11 24       	eor	r1, r1
    6ed8:	08 95       	ret

00006eda <__prologue_saves__>:
    6eda:	2f 92       	push	r2
    6edc:	3f 92       	push	r3
    6ede:	4f 92       	push	r4
    6ee0:	5f 92       	push	r5
    6ee2:	6f 92       	push	r6
    6ee4:	7f 92       	push	r7
    6ee6:	8f 92       	push	r8
    6ee8:	9f 92       	push	r9
    6eea:	af 92       	push	r10
    6eec:	bf 92       	push	r11
    6eee:	cf 92       	push	r12
    6ef0:	df 92       	push	r13
    6ef2:	ef 92       	push	r14
    6ef4:	ff 92       	push	r15
    6ef6:	0f 93       	push	r16
    6ef8:	1f 93       	push	r17
    6efa:	cf 93       	push	r28
    6efc:	df 93       	push	r29
    6efe:	cd b7       	in	r28, 0x3d	; 61
    6f00:	de b7       	in	r29, 0x3e	; 62
    6f02:	ca 1b       	sub	r28, r26
    6f04:	db 0b       	sbc	r29, r27
    6f06:	0f b6       	in	r0, 0x3f	; 63
    6f08:	f8 94       	cli
    6f0a:	de bf       	out	0x3e, r29	; 62
    6f0c:	0f be       	out	0x3f, r0	; 63
    6f0e:	cd bf       	out	0x3d, r28	; 61
    6f10:	09 94       	ijmp

00006f12 <__epilogue_restores__>:
    6f12:	2a 88       	ldd	r2, Y+18	; 0x12
    6f14:	39 88       	ldd	r3, Y+17	; 0x11
    6f16:	48 88       	ldd	r4, Y+16	; 0x10
    6f18:	5f 84       	ldd	r5, Y+15	; 0x0f
    6f1a:	6e 84       	ldd	r6, Y+14	; 0x0e
    6f1c:	7d 84       	ldd	r7, Y+13	; 0x0d
    6f1e:	8c 84       	ldd	r8, Y+12	; 0x0c
    6f20:	9b 84       	ldd	r9, Y+11	; 0x0b
    6f22:	aa 84       	ldd	r10, Y+10	; 0x0a
    6f24:	b9 84       	ldd	r11, Y+9	; 0x09
    6f26:	c8 84       	ldd	r12, Y+8	; 0x08
    6f28:	df 80       	ldd	r13, Y+7	; 0x07
    6f2a:	ee 80       	ldd	r14, Y+6	; 0x06
    6f2c:	fd 80       	ldd	r15, Y+5	; 0x05
    6f2e:	0c 81       	ldd	r16, Y+4	; 0x04
    6f30:	1b 81       	ldd	r17, Y+3	; 0x03
    6f32:	aa 81       	ldd	r26, Y+2	; 0x02
    6f34:	b9 81       	ldd	r27, Y+1	; 0x01
    6f36:	ce 0f       	add	r28, r30
    6f38:	d1 1d       	adc	r29, r1
    6f3a:	0f b6       	in	r0, 0x3f	; 63
    6f3c:	f8 94       	cli
    6f3e:	de bf       	out	0x3e, r29	; 62
    6f40:	0f be       	out	0x3f, r0	; 63
    6f42:	cd bf       	out	0x3d, r28	; 61
    6f44:	ed 01       	movw	r28, r26
    6f46:	08 95       	ret

00006f48 <_exit>:
    6f48:	f8 94       	cli

00006f4a <__stop_program>:
    6f4a:	ff cf       	rjmp	.-2      	; 0x6f4a <__stop_program>
