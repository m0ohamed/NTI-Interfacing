
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000070de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000014a  00800060  000070de  00007152  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003648  00000000  00000000  0000729c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001233  00000000  00000000  0000a8e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001c0  00000000  00000000  0000bb17  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000020f  00000000  00000000  0000bcd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000030e2  00000000  00000000  0000bee6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000156a  00000000  00000000  0000efc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014dd  00000000  00000000  00010532  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  00011a10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000375  00000000  00000000  00011bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000022ac  00000000  00000000  00011f65  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00014211  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ed       	ldi	r30, 0xDE	; 222
      68:	f0 e7       	ldi	r31, 0x70	; 112
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 3a       	cpi	r26, 0xAA	; 170
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 a1 35 	call	0x6b42	; 0x6b42 <main>
      7a:	0c 94 6d 38 	jmp	0x70da	; 0x70da <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__ashldi3>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	df 93       	push	r29
      8a:	cf 93       	push	r28
      8c:	cd b7       	in	r28, 0x3d	; 61
      8e:	de b7       	in	r29, 0x3e	; 62
      90:	60 97       	sbiw	r28, 0x10	; 16
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
      9c:	a8 2f       	mov	r26, r24
      9e:	00 23       	and	r16, r16
      a0:	09 f4       	brne	.+2      	; 0xa4 <__ashldi3+0x22>
      a2:	61 c0       	rjmp	.+194    	; 0x166 <__ashldi3+0xe4>
      a4:	7e 01       	movw	r14, r28
      a6:	08 94       	sec
      a8:	e1 1c       	adc	r14, r1
      aa:	f1 1c       	adc	r15, r1
      ac:	88 e0       	ldi	r24, 0x08	; 8
      ae:	f7 01       	movw	r30, r14
      b0:	11 92       	st	Z+, r1
      b2:	8a 95       	dec	r24
      b4:	e9 f7       	brne	.-6      	; 0xb0 <__ashldi3+0x2e>
      b6:	29 83       	std	Y+1, r18	; 0x01
      b8:	3a 83       	std	Y+2, r19	; 0x02
      ba:	4b 83       	std	Y+3, r20	; 0x03
      bc:	5c 83       	std	Y+4, r21	; 0x04
      be:	6d 83       	std	Y+5, r22	; 0x05
      c0:	7e 83       	std	Y+6, r23	; 0x06
      c2:	af 83       	std	Y+7, r26	; 0x07
      c4:	98 87       	std	Y+8, r25	; 0x08
      c6:	80 e2       	ldi	r24, 0x20	; 32
      c8:	80 1b       	sub	r24, r16
      ca:	e8 2f       	mov	r30, r24
      cc:	ff 27       	eor	r31, r31
      ce:	e7 fd       	sbrc	r30, 7
      d0:	f0 95       	com	r31
      d2:	49 81       	ldd	r20, Y+1	; 0x01
      d4:	5a 81       	ldd	r21, Y+2	; 0x02
      d6:	6b 81       	ldd	r22, Y+3	; 0x03
      d8:	7c 81       	ldd	r23, Y+4	; 0x04
      da:	18 16       	cp	r1, r24
      dc:	84 f0       	brlt	.+32     	; 0xfe <__ashldi3+0x7c>
      de:	19 86       	std	Y+9, r1	; 0x09
      e0:	1a 86       	std	Y+10, r1	; 0x0a
      e2:	1b 86       	std	Y+11, r1	; 0x0b
      e4:	1c 86       	std	Y+12, r1	; 0x0c
      e6:	88 27       	eor	r24, r24
      e8:	99 27       	eor	r25, r25
      ea:	8e 1b       	sub	r24, r30
      ec:	9f 0b       	sbc	r25, r31
      ee:	04 c0       	rjmp	.+8      	; 0xf8 <__ashldi3+0x76>
      f0:	44 0f       	add	r20, r20
      f2:	55 1f       	adc	r21, r21
      f4:	66 1f       	adc	r22, r22
      f6:	77 1f       	adc	r23, r23
      f8:	8a 95       	dec	r24
      fa:	d2 f7       	brpl	.-12     	; 0xf0 <__ashldi3+0x6e>
      fc:	28 c0       	rjmp	.+80     	; 0x14e <__ashldi3+0xcc>
      fe:	20 2f       	mov	r18, r16
     100:	33 27       	eor	r19, r19
     102:	27 fd       	sbrc	r18, 7
     104:	30 95       	com	r19
     106:	db 01       	movw	r26, r22
     108:	ca 01       	movw	r24, r20
     10a:	02 2e       	mov	r0, r18
     10c:	04 c0       	rjmp	.+8      	; 0x116 <__ashldi3+0x94>
     10e:	88 0f       	add	r24, r24
     110:	99 1f       	adc	r25, r25
     112:	aa 1f       	adc	r26, r26
     114:	bb 1f       	adc	r27, r27
     116:	0a 94       	dec	r0
     118:	d2 f7       	brpl	.-12     	; 0x10e <__ashldi3+0x8c>
     11a:	89 87       	std	Y+9, r24	; 0x09
     11c:	9a 87       	std	Y+10, r25	; 0x0a
     11e:	ab 87       	std	Y+11, r26	; 0x0b
     120:	bc 87       	std	Y+12, r27	; 0x0c
     122:	04 c0       	rjmp	.+8      	; 0x12c <__ashldi3+0xaa>
     124:	76 95       	lsr	r23
     126:	67 95       	ror	r22
     128:	57 95       	ror	r21
     12a:	47 95       	ror	r20
     12c:	ea 95       	dec	r30
     12e:	d2 f7       	brpl	.-12     	; 0x124 <__ashldi3+0xa2>
     130:	8d 81       	ldd	r24, Y+5	; 0x05
     132:	9e 81       	ldd	r25, Y+6	; 0x06
     134:	af 81       	ldd	r26, Y+7	; 0x07
     136:	b8 85       	ldd	r27, Y+8	; 0x08
     138:	04 c0       	rjmp	.+8      	; 0x142 <__ashldi3+0xc0>
     13a:	88 0f       	add	r24, r24
     13c:	99 1f       	adc	r25, r25
     13e:	aa 1f       	adc	r26, r26
     140:	bb 1f       	adc	r27, r27
     142:	2a 95       	dec	r18
     144:	d2 f7       	brpl	.-12     	; 0x13a <__ashldi3+0xb8>
     146:	48 2b       	or	r20, r24
     148:	59 2b       	or	r21, r25
     14a:	6a 2b       	or	r22, r26
     14c:	7b 2b       	or	r23, r27
     14e:	4d 87       	std	Y+13, r20	; 0x0d
     150:	5e 87       	std	Y+14, r21	; 0x0e
     152:	6f 87       	std	Y+15, r22	; 0x0f
     154:	78 8b       	std	Y+16, r23	; 0x10
     156:	29 85       	ldd	r18, Y+9	; 0x09
     158:	3a 85       	ldd	r19, Y+10	; 0x0a
     15a:	4b 85       	ldd	r20, Y+11	; 0x0b
     15c:	5c 85       	ldd	r21, Y+12	; 0x0c
     15e:	6d 85       	ldd	r22, Y+13	; 0x0d
     160:	7e 85       	ldd	r23, Y+14	; 0x0e
     162:	af 85       	ldd	r26, Y+15	; 0x0f
     164:	98 89       	ldd	r25, Y+16	; 0x10
     166:	8a 2f       	mov	r24, r26
     168:	60 96       	adiw	r28, 0x10	; 16
     16a:	0f b6       	in	r0, 0x3f	; 63
     16c:	f8 94       	cli
     16e:	de bf       	out	0x3e, r29	; 62
     170:	0f be       	out	0x3f, r0	; 63
     172:	cd bf       	out	0x3d, r28	; 61
     174:	cf 91       	pop	r28
     176:	df 91       	pop	r29
     178:	0f 91       	pop	r16
     17a:	ff 90       	pop	r15
     17c:	ef 90       	pop	r14
     17e:	08 95       	ret

00000180 <__fixunssfsi>:
     180:	ef 92       	push	r14
     182:	ff 92       	push	r15
     184:	0f 93       	push	r16
     186:	1f 93       	push	r17
     188:	7b 01       	movw	r14, r22
     18a:	8c 01       	movw	r16, r24
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 e0       	ldi	r20, 0x00	; 0
     192:	5f e4       	ldi	r21, 0x4F	; 79
     194:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__gesf2>
     198:	88 23       	and	r24, r24
     19a:	8c f0       	brlt	.+34     	; 0x1be <__fixunssfsi+0x3e>
     19c:	c8 01       	movw	r24, r16
     19e:	b7 01       	movw	r22, r14
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	40 e0       	ldi	r20, 0x00	; 0
     1a6:	5f e4       	ldi	r21, 0x4F	; 79
     1a8:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <__subsf3>
     1ac:	0e 94 b1 11 	call	0x2362	; 0x2362 <__fixsfsi>
     1b0:	9b 01       	movw	r18, r22
     1b2:	ac 01       	movw	r20, r24
     1b4:	20 50       	subi	r18, 0x00	; 0
     1b6:	30 40       	sbci	r19, 0x00	; 0
     1b8:	40 40       	sbci	r20, 0x00	; 0
     1ba:	50 48       	sbci	r21, 0x80	; 128
     1bc:	06 c0       	rjmp	.+12     	; 0x1ca <__fixunssfsi+0x4a>
     1be:	c8 01       	movw	r24, r16
     1c0:	b7 01       	movw	r22, r14
     1c2:	0e 94 b1 11 	call	0x2362	; 0x2362 <__fixsfsi>
     1c6:	9b 01       	movw	r18, r22
     1c8:	ac 01       	movw	r20, r24
     1ca:	b9 01       	movw	r22, r18
     1cc:	ca 01       	movw	r24, r20
     1ce:	1f 91       	pop	r17
     1d0:	0f 91       	pop	r16
     1d2:	ff 90       	pop	r15
     1d4:	ef 90       	pop	r14
     1d6:	08 95       	ret

000001d8 <__udivdi3>:
     1d8:	ae e5       	ldi	r26, 0x5E	; 94
     1da:	b0 e0       	ldi	r27, 0x00	; 0
     1dc:	e2 ef       	ldi	r30, 0xF2	; 242
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	0c 94 36 38 	jmp	0x706c	; 0x706c <__prologue_saves__>
     1e4:	a8 e0       	ldi	r26, 0x08	; 8
     1e6:	4e 01       	movw	r8, r28
     1e8:	08 94       	sec
     1ea:	81 1c       	adc	r8, r1
     1ec:	91 1c       	adc	r9, r1
     1ee:	f4 01       	movw	r30, r8
     1f0:	6a 2e       	mov	r6, r26
     1f2:	11 92       	st	Z+, r1
     1f4:	6a 94       	dec	r6
     1f6:	e9 f7       	brne	.-6      	; 0x1f2 <__udivdi3+0x1a>
     1f8:	29 83       	std	Y+1, r18	; 0x01
     1fa:	3a 83       	std	Y+2, r19	; 0x02
     1fc:	4b 83       	std	Y+3, r20	; 0x03
     1fe:	5c 83       	std	Y+4, r21	; 0x04
     200:	6d 83       	std	Y+5, r22	; 0x05
     202:	7e 83       	std	Y+6, r23	; 0x06
     204:	8f 83       	std	Y+7, r24	; 0x07
     206:	98 87       	std	Y+8, r25	; 0x08
     208:	ce 01       	movw	r24, r28
     20a:	09 96       	adiw	r24, 0x09	; 9
     20c:	fc 01       	movw	r30, r24
     20e:	11 92       	st	Z+, r1
     210:	aa 95       	dec	r26
     212:	e9 f7       	brne	.-6      	; 0x20e <__udivdi3+0x36>
     214:	a9 86       	std	Y+9, r10	; 0x09
     216:	ba 86       	std	Y+10, r11	; 0x0a
     218:	cb 86       	std	Y+11, r12	; 0x0b
     21a:	dc 86       	std	Y+12, r13	; 0x0c
     21c:	ed 86       	std	Y+13, r14	; 0x0d
     21e:	fe 86       	std	Y+14, r15	; 0x0e
     220:	0f 87       	std	Y+15, r16	; 0x0f
     222:	18 8b       	std	Y+16, r17	; 0x10
     224:	29 84       	ldd	r2, Y+9	; 0x09
     226:	3a 84       	ldd	r3, Y+10	; 0x0a
     228:	4b 84       	ldd	r4, Y+11	; 0x0b
     22a:	5c 84       	ldd	r5, Y+12	; 0x0c
     22c:	ed 84       	ldd	r14, Y+13	; 0x0d
     22e:	fe 84       	ldd	r15, Y+14	; 0x0e
     230:	0f 85       	ldd	r16, Y+15	; 0x0f
     232:	18 89       	ldd	r17, Y+16	; 0x10
     234:	69 80       	ldd	r6, Y+1	; 0x01
     236:	7a 80       	ldd	r7, Y+2	; 0x02
     238:	8b 80       	ldd	r8, Y+3	; 0x03
     23a:	9c 80       	ldd	r9, Y+4	; 0x04
     23c:	6d a6       	std	Y+45, r6	; 0x2d
     23e:	7e a6       	std	Y+46, r7	; 0x2e
     240:	8f a6       	std	Y+47, r8	; 0x2f
     242:	98 aa       	std	Y+48, r9	; 0x30
     244:	6d 80       	ldd	r6, Y+5	; 0x05
     246:	7e 80       	ldd	r7, Y+6	; 0x06
     248:	8f 80       	ldd	r8, Y+7	; 0x07
     24a:	98 84       	ldd	r9, Y+8	; 0x08
     24c:	e1 14       	cp	r14, r1
     24e:	f1 04       	cpc	r15, r1
     250:	01 05       	cpc	r16, r1
     252:	11 05       	cpc	r17, r1
     254:	09 f0       	breq	.+2      	; 0x258 <__udivdi3+0x80>
     256:	b3 c3       	rjmp	.+1894   	; 0x9be <__stack+0x15f>
     258:	62 14       	cp	r6, r2
     25a:	73 04       	cpc	r7, r3
     25c:	84 04       	cpc	r8, r4
     25e:	95 04       	cpc	r9, r5
     260:	08 f0       	brcs	.+2      	; 0x264 <__udivdi3+0x8c>
     262:	3d c1       	rjmp	.+634    	; 0x4de <__udivdi3+0x306>
     264:	00 e0       	ldi	r16, 0x00	; 0
     266:	20 16       	cp	r2, r16
     268:	00 e0       	ldi	r16, 0x00	; 0
     26a:	30 06       	cpc	r3, r16
     26c:	01 e0       	ldi	r16, 0x01	; 1
     26e:	40 06       	cpc	r4, r16
     270:	00 e0       	ldi	r16, 0x00	; 0
     272:	50 06       	cpc	r5, r16
     274:	88 f4       	brcc	.+34     	; 0x298 <__udivdi3+0xc0>
     276:	1f ef       	ldi	r17, 0xFF	; 255
     278:	21 16       	cp	r2, r17
     27a:	31 04       	cpc	r3, r1
     27c:	41 04       	cpc	r4, r1
     27e:	51 04       	cpc	r5, r1
     280:	39 f0       	breq	.+14     	; 0x290 <__udivdi3+0xb8>
     282:	30 f0       	brcs	.+12     	; 0x290 <__udivdi3+0xb8>
     284:	48 e0       	ldi	r20, 0x08	; 8
     286:	e4 2e       	mov	r14, r20
     288:	f1 2c       	mov	r15, r1
     28a:	01 2d       	mov	r16, r1
     28c:	11 2d       	mov	r17, r1
     28e:	18 c0       	rjmp	.+48     	; 0x2c0 <__udivdi3+0xe8>
     290:	ee 24       	eor	r14, r14
     292:	ff 24       	eor	r15, r15
     294:	87 01       	movw	r16, r14
     296:	14 c0       	rjmp	.+40     	; 0x2c0 <__udivdi3+0xe8>
     298:	20 e0       	ldi	r18, 0x00	; 0
     29a:	22 16       	cp	r2, r18
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	32 06       	cpc	r3, r18
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	42 06       	cpc	r4, r18
     2a4:	21 e0       	ldi	r18, 0x01	; 1
     2a6:	52 06       	cpc	r5, r18
     2a8:	30 f0       	brcs	.+12     	; 0x2b6 <__udivdi3+0xde>
     2aa:	38 e1       	ldi	r19, 0x18	; 24
     2ac:	e3 2e       	mov	r14, r19
     2ae:	f1 2c       	mov	r15, r1
     2b0:	01 2d       	mov	r16, r1
     2b2:	11 2d       	mov	r17, r1
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <__udivdi3+0xe8>
     2b6:	20 e1       	ldi	r18, 0x10	; 16
     2b8:	e2 2e       	mov	r14, r18
     2ba:	f1 2c       	mov	r15, r1
     2bc:	01 2d       	mov	r16, r1
     2be:	11 2d       	mov	r17, r1
     2c0:	d2 01       	movw	r26, r4
     2c2:	c1 01       	movw	r24, r2
     2c4:	0e 2c       	mov	r0, r14
     2c6:	04 c0       	rjmp	.+8      	; 0x2d0 <__udivdi3+0xf8>
     2c8:	b6 95       	lsr	r27
     2ca:	a7 95       	ror	r26
     2cc:	97 95       	ror	r25
     2ce:	87 95       	ror	r24
     2d0:	0a 94       	dec	r0
     2d2:	d2 f7       	brpl	.-12     	; 0x2c8 <__udivdi3+0xf0>
     2d4:	86 58       	subi	r24, 0x86	; 134
     2d6:	9f 4f       	sbci	r25, 0xFF	; 255
     2d8:	dc 01       	movw	r26, r24
     2da:	2c 91       	ld	r18, X
     2dc:	80 e2       	ldi	r24, 0x20	; 32
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	a0 e0       	ldi	r26, 0x00	; 0
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	8e 19       	sub	r24, r14
     2e6:	9f 09       	sbc	r25, r15
     2e8:	a0 0b       	sbc	r26, r16
     2ea:	b1 0b       	sbc	r27, r17
     2ec:	7c 01       	movw	r14, r24
     2ee:	8d 01       	movw	r16, r26
     2f0:	e2 1a       	sub	r14, r18
     2f2:	f1 08       	sbc	r15, r1
     2f4:	01 09       	sbc	r16, r1
     2f6:	11 09       	sbc	r17, r1
     2f8:	e1 14       	cp	r14, r1
     2fa:	f1 04       	cpc	r15, r1
     2fc:	01 05       	cpc	r16, r1
     2fe:	11 05       	cpc	r17, r1
     300:	a1 f1       	breq	.+104    	; 0x36a <__udivdi3+0x192>
     302:	0e 2c       	mov	r0, r14
     304:	04 c0       	rjmp	.+8      	; 0x30e <__udivdi3+0x136>
     306:	22 0c       	add	r2, r2
     308:	33 1c       	adc	r3, r3
     30a:	44 1c       	adc	r4, r4
     30c:	55 1c       	adc	r5, r5
     30e:	0a 94       	dec	r0
     310:	d2 f7       	brpl	.-12     	; 0x306 <__udivdi3+0x12e>
     312:	a4 01       	movw	r20, r8
     314:	93 01       	movw	r18, r6
     316:	0e 2c       	mov	r0, r14
     318:	04 c0       	rjmp	.+8      	; 0x322 <__udivdi3+0x14a>
     31a:	22 0f       	add	r18, r18
     31c:	33 1f       	adc	r19, r19
     31e:	44 1f       	adc	r20, r20
     320:	55 1f       	adc	r21, r21
     322:	0a 94       	dec	r0
     324:	d2 f7       	brpl	.-12     	; 0x31a <__udivdi3+0x142>
     326:	80 e2       	ldi	r24, 0x20	; 32
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	8e 19       	sub	r24, r14
     32c:	9f 09       	sbc	r25, r15
     32e:	6d a4       	ldd	r6, Y+45	; 0x2d
     330:	7e a4       	ldd	r7, Y+46	; 0x2e
     332:	8f a4       	ldd	r8, Y+47	; 0x2f
     334:	98 a8       	ldd	r9, Y+48	; 0x30
     336:	04 c0       	rjmp	.+8      	; 0x340 <__udivdi3+0x168>
     338:	96 94       	lsr	r9
     33a:	87 94       	ror	r8
     33c:	77 94       	ror	r7
     33e:	67 94       	ror	r6
     340:	8a 95       	dec	r24
     342:	d2 f7       	brpl	.-12     	; 0x338 <__udivdi3+0x160>
     344:	62 2a       	or	r6, r18
     346:	73 2a       	or	r7, r19
     348:	84 2a       	or	r8, r20
     34a:	95 2a       	or	r9, r21
     34c:	ad a4       	ldd	r10, Y+45	; 0x2d
     34e:	be a4       	ldd	r11, Y+46	; 0x2e
     350:	cf a4       	ldd	r12, Y+47	; 0x2f
     352:	d8 a8       	ldd	r13, Y+48	; 0x30
     354:	04 c0       	rjmp	.+8      	; 0x35e <__udivdi3+0x186>
     356:	aa 0c       	add	r10, r10
     358:	bb 1c       	adc	r11, r11
     35a:	cc 1c       	adc	r12, r12
     35c:	dd 1c       	adc	r13, r13
     35e:	ea 94       	dec	r14
     360:	d2 f7       	brpl	.-12     	; 0x356 <__udivdi3+0x17e>
     362:	ad a6       	std	Y+45, r10	; 0x2d
     364:	be a6       	std	Y+46, r11	; 0x2e
     366:	cf a6       	std	Y+47, r12	; 0x2f
     368:	d8 aa       	std	Y+48, r13	; 0x30
     36a:	62 01       	movw	r12, r4
     36c:	ee 24       	eor	r14, r14
     36e:	ff 24       	eor	r15, r15
     370:	cd aa       	std	Y+53, r12	; 0x35
     372:	de aa       	std	Y+54, r13	; 0x36
     374:	ef aa       	std	Y+55, r14	; 0x37
     376:	f8 ae       	std	Y+56, r15	; 0x38
     378:	92 01       	movw	r18, r4
     37a:	81 01       	movw	r16, r2
     37c:	20 70       	andi	r18, 0x00	; 0
     37e:	30 70       	andi	r19, 0x00	; 0
     380:	09 af       	std	Y+57, r16	; 0x39
     382:	1a af       	std	Y+58, r17	; 0x3a
     384:	2b af       	std	Y+59, r18	; 0x3b
     386:	3c af       	std	Y+60, r19	; 0x3c
     388:	c4 01       	movw	r24, r8
     38a:	b3 01       	movw	r22, r6
     38c:	a7 01       	movw	r20, r14
     38e:	96 01       	movw	r18, r12
     390:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     394:	7b 01       	movw	r14, r22
     396:	8c 01       	movw	r16, r24
     398:	c4 01       	movw	r24, r8
     39a:	b3 01       	movw	r22, r6
     39c:	2d a9       	ldd	r18, Y+53	; 0x35
     39e:	3e a9       	ldd	r19, Y+54	; 0x36
     3a0:	4f a9       	ldd	r20, Y+55	; 0x37
     3a2:	58 ad       	ldd	r21, Y+56	; 0x38
     3a4:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     3a8:	c9 01       	movw	r24, r18
     3aa:	da 01       	movw	r26, r20
     3ac:	3c 01       	movw	r6, r24
     3ae:	4d 01       	movw	r8, r26
     3b0:	c4 01       	movw	r24, r8
     3b2:	b3 01       	movw	r22, r6
     3b4:	29 ad       	ldd	r18, Y+57	; 0x39
     3b6:	3a ad       	ldd	r19, Y+58	; 0x3a
     3b8:	4b ad       	ldd	r20, Y+59	; 0x3b
     3ba:	5c ad       	ldd	r21, Y+60	; 0x3c
     3bc:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     3c0:	9b 01       	movw	r18, r22
     3c2:	ac 01       	movw	r20, r24
     3c4:	87 01       	movw	r16, r14
     3c6:	ff 24       	eor	r15, r15
     3c8:	ee 24       	eor	r14, r14
     3ca:	ad a4       	ldd	r10, Y+45	; 0x2d
     3cc:	be a4       	ldd	r11, Y+46	; 0x2e
     3ce:	cf a4       	ldd	r12, Y+47	; 0x2f
     3d0:	d8 a8       	ldd	r13, Y+48	; 0x30
     3d2:	c6 01       	movw	r24, r12
     3d4:	aa 27       	eor	r26, r26
     3d6:	bb 27       	eor	r27, r27
     3d8:	57 01       	movw	r10, r14
     3da:	68 01       	movw	r12, r16
     3dc:	a8 2a       	or	r10, r24
     3de:	b9 2a       	or	r11, r25
     3e0:	ca 2a       	or	r12, r26
     3e2:	db 2a       	or	r13, r27
     3e4:	a2 16       	cp	r10, r18
     3e6:	b3 06       	cpc	r11, r19
     3e8:	c4 06       	cpc	r12, r20
     3ea:	d5 06       	cpc	r13, r21
     3ec:	e0 f4       	brcc	.+56     	; 0x426 <__udivdi3+0x24e>
     3ee:	08 94       	sec
     3f0:	61 08       	sbc	r6, r1
     3f2:	71 08       	sbc	r7, r1
     3f4:	81 08       	sbc	r8, r1
     3f6:	91 08       	sbc	r9, r1
     3f8:	a2 0c       	add	r10, r2
     3fa:	b3 1c       	adc	r11, r3
     3fc:	c4 1c       	adc	r12, r4
     3fe:	d5 1c       	adc	r13, r5
     400:	a2 14       	cp	r10, r2
     402:	b3 04       	cpc	r11, r3
     404:	c4 04       	cpc	r12, r4
     406:	d5 04       	cpc	r13, r5
     408:	70 f0       	brcs	.+28     	; 0x426 <__udivdi3+0x24e>
     40a:	a2 16       	cp	r10, r18
     40c:	b3 06       	cpc	r11, r19
     40e:	c4 06       	cpc	r12, r20
     410:	d5 06       	cpc	r13, r21
     412:	48 f4       	brcc	.+18     	; 0x426 <__udivdi3+0x24e>
     414:	08 94       	sec
     416:	61 08       	sbc	r6, r1
     418:	71 08       	sbc	r7, r1
     41a:	81 08       	sbc	r8, r1
     41c:	91 08       	sbc	r9, r1
     41e:	a2 0c       	add	r10, r2
     420:	b3 1c       	adc	r11, r3
     422:	c4 1c       	adc	r12, r4
     424:	d5 1c       	adc	r13, r5
     426:	a2 1a       	sub	r10, r18
     428:	b3 0a       	sbc	r11, r19
     42a:	c4 0a       	sbc	r12, r20
     42c:	d5 0a       	sbc	r13, r21
     42e:	c6 01       	movw	r24, r12
     430:	b5 01       	movw	r22, r10
     432:	2d a9       	ldd	r18, Y+53	; 0x35
     434:	3e a9       	ldd	r19, Y+54	; 0x36
     436:	4f a9       	ldd	r20, Y+55	; 0x37
     438:	58 ad       	ldd	r21, Y+56	; 0x38
     43a:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     43e:	7b 01       	movw	r14, r22
     440:	8c 01       	movw	r16, r24
     442:	c6 01       	movw	r24, r12
     444:	b5 01       	movw	r22, r10
     446:	2d a9       	ldd	r18, Y+53	; 0x35
     448:	3e a9       	ldd	r19, Y+54	; 0x36
     44a:	4f a9       	ldd	r20, Y+55	; 0x37
     44c:	58 ad       	ldd	r21, Y+56	; 0x38
     44e:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     452:	c9 01       	movw	r24, r18
     454:	da 01       	movw	r26, r20
     456:	5c 01       	movw	r10, r24
     458:	6d 01       	movw	r12, r26
     45a:	c6 01       	movw	r24, r12
     45c:	b5 01       	movw	r22, r10
     45e:	29 ad       	ldd	r18, Y+57	; 0x39
     460:	3a ad       	ldd	r19, Y+58	; 0x3a
     462:	4b ad       	ldd	r20, Y+59	; 0x3b
     464:	5c ad       	ldd	r21, Y+60	; 0x3c
     466:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     46a:	9b 01       	movw	r18, r22
     46c:	ac 01       	movw	r20, r24
     46e:	87 01       	movw	r16, r14
     470:	ff 24       	eor	r15, r15
     472:	ee 24       	eor	r14, r14
     474:	8d a5       	ldd	r24, Y+45	; 0x2d
     476:	9e a5       	ldd	r25, Y+46	; 0x2e
     478:	af a5       	ldd	r26, Y+47	; 0x2f
     47a:	b8 a9       	ldd	r27, Y+48	; 0x30
     47c:	a0 70       	andi	r26, 0x00	; 0
     47e:	b0 70       	andi	r27, 0x00	; 0
     480:	e8 2a       	or	r14, r24
     482:	f9 2a       	or	r15, r25
     484:	0a 2b       	or	r16, r26
     486:	1b 2b       	or	r17, r27
     488:	e2 16       	cp	r14, r18
     48a:	f3 06       	cpc	r15, r19
     48c:	04 07       	cpc	r16, r20
     48e:	15 07       	cpc	r17, r21
     490:	c0 f4       	brcc	.+48     	; 0x4c2 <__udivdi3+0x2ea>
     492:	08 94       	sec
     494:	a1 08       	sbc	r10, r1
     496:	b1 08       	sbc	r11, r1
     498:	c1 08       	sbc	r12, r1
     49a:	d1 08       	sbc	r13, r1
     49c:	e2 0c       	add	r14, r2
     49e:	f3 1c       	adc	r15, r3
     4a0:	04 1d       	adc	r16, r4
     4a2:	15 1d       	adc	r17, r5
     4a4:	e2 14       	cp	r14, r2
     4a6:	f3 04       	cpc	r15, r3
     4a8:	04 05       	cpc	r16, r4
     4aa:	15 05       	cpc	r17, r5
     4ac:	50 f0       	brcs	.+20     	; 0x4c2 <__udivdi3+0x2ea>
     4ae:	e2 16       	cp	r14, r18
     4b0:	f3 06       	cpc	r15, r19
     4b2:	04 07       	cpc	r16, r20
     4b4:	15 07       	cpc	r17, r21
     4b6:	28 f4       	brcc	.+10     	; 0x4c2 <__udivdi3+0x2ea>
     4b8:	08 94       	sec
     4ba:	a1 08       	sbc	r10, r1
     4bc:	b1 08       	sbc	r11, r1
     4be:	c1 08       	sbc	r12, r1
     4c0:	d1 08       	sbc	r13, r1
     4c2:	d3 01       	movw	r26, r6
     4c4:	99 27       	eor	r25, r25
     4c6:	88 27       	eor	r24, r24
     4c8:	86 01       	movw	r16, r12
     4ca:	75 01       	movw	r14, r10
     4cc:	e8 2a       	or	r14, r24
     4ce:	f9 2a       	or	r15, r25
     4d0:	0a 2b       	or	r16, r26
     4d2:	1b 2b       	or	r17, r27
     4d4:	e9 aa       	std	Y+49, r14	; 0x31
     4d6:	fa aa       	std	Y+50, r15	; 0x32
     4d8:	0b ab       	std	Y+51, r16	; 0x33
     4da:	1c ab       	std	Y+52, r17	; 0x34
     4dc:	cf c4       	rjmp	.+2462   	; 0xe7c <__stack+0x61d>
     4de:	21 14       	cp	r2, r1
     4e0:	31 04       	cpc	r3, r1
     4e2:	41 04       	cpc	r4, r1
     4e4:	51 04       	cpc	r5, r1
     4e6:	71 f4       	brne	.+28     	; 0x504 <__udivdi3+0x32c>
     4e8:	61 e0       	ldi	r22, 0x01	; 1
     4ea:	70 e0       	ldi	r23, 0x00	; 0
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	20 e0       	ldi	r18, 0x00	; 0
     4f2:	30 e0       	ldi	r19, 0x00	; 0
     4f4:	40 e0       	ldi	r20, 0x00	; 0
     4f6:	50 e0       	ldi	r21, 0x00	; 0
     4f8:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     4fc:	c9 01       	movw	r24, r18
     4fe:	da 01       	movw	r26, r20
     500:	1c 01       	movw	r2, r24
     502:	2d 01       	movw	r4, r26
     504:	00 e0       	ldi	r16, 0x00	; 0
     506:	20 16       	cp	r2, r16
     508:	00 e0       	ldi	r16, 0x00	; 0
     50a:	30 06       	cpc	r3, r16
     50c:	01 e0       	ldi	r16, 0x01	; 1
     50e:	40 06       	cpc	r4, r16
     510:	00 e0       	ldi	r16, 0x00	; 0
     512:	50 06       	cpc	r5, r16
     514:	88 f4       	brcc	.+34     	; 0x538 <__udivdi3+0x360>
     516:	1f ef       	ldi	r17, 0xFF	; 255
     518:	21 16       	cp	r2, r17
     51a:	31 04       	cpc	r3, r1
     51c:	41 04       	cpc	r4, r1
     51e:	51 04       	cpc	r5, r1
     520:	31 f0       	breq	.+12     	; 0x52e <__udivdi3+0x356>
     522:	28 f0       	brcs	.+10     	; 0x52e <__udivdi3+0x356>
     524:	48 e0       	ldi	r20, 0x08	; 8
     526:	50 e0       	ldi	r21, 0x00	; 0
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	17 c0       	rjmp	.+46     	; 0x55c <__udivdi3+0x384>
     52e:	40 e0       	ldi	r20, 0x00	; 0
     530:	50 e0       	ldi	r21, 0x00	; 0
     532:	60 e0       	ldi	r22, 0x00	; 0
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	12 c0       	rjmp	.+36     	; 0x55c <__udivdi3+0x384>
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	22 16       	cp	r2, r18
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	32 06       	cpc	r3, r18
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	42 06       	cpc	r4, r18
     544:	21 e0       	ldi	r18, 0x01	; 1
     546:	52 06       	cpc	r5, r18
     548:	28 f0       	brcs	.+10     	; 0x554 <__udivdi3+0x37c>
     54a:	48 e1       	ldi	r20, 0x18	; 24
     54c:	50 e0       	ldi	r21, 0x00	; 0
     54e:	60 e0       	ldi	r22, 0x00	; 0
     550:	70 e0       	ldi	r23, 0x00	; 0
     552:	04 c0       	rjmp	.+8      	; 0x55c <__udivdi3+0x384>
     554:	40 e1       	ldi	r20, 0x10	; 16
     556:	50 e0       	ldi	r21, 0x00	; 0
     558:	60 e0       	ldi	r22, 0x00	; 0
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	d2 01       	movw	r26, r4
     55e:	c1 01       	movw	r24, r2
     560:	04 2e       	mov	r0, r20
     562:	04 c0       	rjmp	.+8      	; 0x56c <__udivdi3+0x394>
     564:	b6 95       	lsr	r27
     566:	a7 95       	ror	r26
     568:	97 95       	ror	r25
     56a:	87 95       	ror	r24
     56c:	0a 94       	dec	r0
     56e:	d2 f7       	brpl	.-12     	; 0x564 <__udivdi3+0x38c>
     570:	86 58       	subi	r24, 0x86	; 134
     572:	9f 4f       	sbci	r25, 0xFF	; 255
     574:	dc 01       	movw	r26, r24
     576:	2c 91       	ld	r18, X
     578:	e0 e2       	ldi	r30, 0x20	; 32
     57a:	ee 2e       	mov	r14, r30
     57c:	f1 2c       	mov	r15, r1
     57e:	01 2d       	mov	r16, r1
     580:	11 2d       	mov	r17, r1
     582:	d8 01       	movw	r26, r16
     584:	c7 01       	movw	r24, r14
     586:	84 1b       	sub	r24, r20
     588:	95 0b       	sbc	r25, r21
     58a:	a6 0b       	sbc	r26, r22
     58c:	b7 0b       	sbc	r27, r23
     58e:	82 1b       	sub	r24, r18
     590:	91 09       	sbc	r25, r1
     592:	a1 09       	sbc	r26, r1
     594:	b1 09       	sbc	r27, r1
     596:	00 97       	sbiw	r24, 0x00	; 0
     598:	a1 05       	cpc	r26, r1
     59a:	b1 05       	cpc	r27, r1
     59c:	61 f4       	brne	.+24     	; 0x5b6 <__udivdi3+0x3de>
     59e:	64 01       	movw	r12, r8
     5a0:	53 01       	movw	r10, r6
     5a2:	a2 18       	sub	r10, r2
     5a4:	b3 08       	sbc	r11, r3
     5a6:	c4 08       	sbc	r12, r4
     5a8:	d5 08       	sbc	r13, r5
     5aa:	31 e0       	ldi	r19, 0x01	; 1
     5ac:	63 2e       	mov	r6, r19
     5ae:	71 2c       	mov	r7, r1
     5b0:	81 2c       	mov	r8, r1
     5b2:	91 2c       	mov	r9, r1
     5b4:	1e c1       	rjmp	.+572    	; 0x7f2 <__udivdi3+0x61a>
     5b6:	6f 96       	adiw	r28, 0x1f	; 31
     5b8:	8f af       	std	Y+63, r24	; 0x3f
     5ba:	6f 97       	sbiw	r28, 0x1f	; 31
     5bc:	08 2e       	mov	r0, r24
     5be:	04 c0       	rjmp	.+8      	; 0x5c8 <__udivdi3+0x3f0>
     5c0:	22 0c       	add	r2, r2
     5c2:	33 1c       	adc	r3, r3
     5c4:	44 1c       	adc	r4, r4
     5c6:	55 1c       	adc	r5, r5
     5c8:	0a 94       	dec	r0
     5ca:	d2 f7       	brpl	.-12     	; 0x5c0 <__udivdi3+0x3e8>
     5cc:	ee 2d       	mov	r30, r14
     5ce:	e8 1b       	sub	r30, r24
     5d0:	64 01       	movw	r12, r8
     5d2:	53 01       	movw	r10, r6
     5d4:	0e 2e       	mov	r0, r30
     5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <__udivdi3+0x408>
     5d8:	d6 94       	lsr	r13
     5da:	c7 94       	ror	r12
     5dc:	b7 94       	ror	r11
     5de:	a7 94       	ror	r10
     5e0:	0a 94       	dec	r0
     5e2:	d2 f7       	brpl	.-12     	; 0x5d8 <__udivdi3+0x400>
     5e4:	a4 01       	movw	r20, r8
     5e6:	93 01       	movw	r18, r6
     5e8:	6f 96       	adiw	r28, 0x1f	; 31
     5ea:	0f ac       	ldd	r0, Y+63	; 0x3f
     5ec:	6f 97       	sbiw	r28, 0x1f	; 31
     5ee:	04 c0       	rjmp	.+8      	; 0x5f8 <__udivdi3+0x420>
     5f0:	22 0f       	add	r18, r18
     5f2:	33 1f       	adc	r19, r19
     5f4:	44 1f       	adc	r20, r20
     5f6:	55 1f       	adc	r21, r21
     5f8:	0a 94       	dec	r0
     5fa:	d2 f7       	brpl	.-12     	; 0x5f0 <__udivdi3+0x418>
     5fc:	6d a4       	ldd	r6, Y+45	; 0x2d
     5fe:	7e a4       	ldd	r7, Y+46	; 0x2e
     600:	8f a4       	ldd	r8, Y+47	; 0x2f
     602:	98 a8       	ldd	r9, Y+48	; 0x30
     604:	0e 2e       	mov	r0, r30
     606:	04 c0       	rjmp	.+8      	; 0x610 <__udivdi3+0x438>
     608:	96 94       	lsr	r9
     60a:	87 94       	ror	r8
     60c:	77 94       	ror	r7
     60e:	67 94       	ror	r6
     610:	0a 94       	dec	r0
     612:	d2 f7       	brpl	.-12     	; 0x608 <__udivdi3+0x430>
     614:	84 01       	movw	r16, r8
     616:	73 01       	movw	r14, r6
     618:	e2 2a       	or	r14, r18
     61a:	f3 2a       	or	r15, r19
     61c:	04 2b       	or	r16, r20
     61e:	15 2b       	or	r17, r21
     620:	e9 a6       	std	Y+41, r14	; 0x29
     622:	fa a6       	std	Y+42, r15	; 0x2a
     624:	0b a7       	std	Y+43, r16	; 0x2b
     626:	1c a7       	std	Y+44, r17	; 0x2c
     628:	32 01       	movw	r6, r4
     62a:	88 24       	eor	r8, r8
     62c:	99 24       	eor	r9, r9
     62e:	92 01       	movw	r18, r4
     630:	81 01       	movw	r16, r2
     632:	20 70       	andi	r18, 0x00	; 0
     634:	30 70       	andi	r19, 0x00	; 0
     636:	21 96       	adiw	r28, 0x01	; 1
     638:	0c af       	std	Y+60, r16	; 0x3c
     63a:	1d af       	std	Y+61, r17	; 0x3d
     63c:	2e af       	std	Y+62, r18	; 0x3e
     63e:	3f af       	std	Y+63, r19	; 0x3f
     640:	21 97       	sbiw	r28, 0x01	; 1
     642:	c6 01       	movw	r24, r12
     644:	b5 01       	movw	r22, r10
     646:	a4 01       	movw	r20, r8
     648:	93 01       	movw	r18, r6
     64a:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     64e:	7b 01       	movw	r14, r22
     650:	8c 01       	movw	r16, r24
     652:	c6 01       	movw	r24, r12
     654:	b5 01       	movw	r22, r10
     656:	a4 01       	movw	r20, r8
     658:	93 01       	movw	r18, r6
     65a:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     65e:	c9 01       	movw	r24, r18
     660:	da 01       	movw	r26, r20
     662:	25 96       	adiw	r28, 0x05	; 5
     664:	8c af       	std	Y+60, r24	; 0x3c
     666:	9d af       	std	Y+61, r25	; 0x3d
     668:	ae af       	std	Y+62, r26	; 0x3e
     66a:	bf af       	std	Y+63, r27	; 0x3f
     66c:	25 97       	sbiw	r28, 0x05	; 5
     66e:	bc 01       	movw	r22, r24
     670:	cd 01       	movw	r24, r26
     672:	21 96       	adiw	r28, 0x01	; 1
     674:	2c ad       	ldd	r18, Y+60	; 0x3c
     676:	3d ad       	ldd	r19, Y+61	; 0x3d
     678:	4e ad       	ldd	r20, Y+62	; 0x3e
     67a:	5f ad       	ldd	r21, Y+63	; 0x3f
     67c:	21 97       	sbiw	r28, 0x01	; 1
     67e:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     682:	9b 01       	movw	r18, r22
     684:	ac 01       	movw	r20, r24
     686:	87 01       	movw	r16, r14
     688:	ff 24       	eor	r15, r15
     68a:	ee 24       	eor	r14, r14
     68c:	a9 a4       	ldd	r10, Y+41	; 0x29
     68e:	ba a4       	ldd	r11, Y+42	; 0x2a
     690:	cb a4       	ldd	r12, Y+43	; 0x2b
     692:	dc a4       	ldd	r13, Y+44	; 0x2c
     694:	c6 01       	movw	r24, r12
     696:	aa 27       	eor	r26, r26
     698:	bb 27       	eor	r27, r27
     69a:	5c 01       	movw	r10, r24
     69c:	6d 01       	movw	r12, r26
     69e:	ae 28       	or	r10, r14
     6a0:	bf 28       	or	r11, r15
     6a2:	c0 2a       	or	r12, r16
     6a4:	d1 2a       	or	r13, r17
     6a6:	a2 16       	cp	r10, r18
     6a8:	b3 06       	cpc	r11, r19
     6aa:	c4 06       	cpc	r12, r20
     6ac:	d5 06       	cpc	r13, r21
     6ae:	60 f5       	brcc	.+88     	; 0x708 <__udivdi3+0x530>
     6b0:	25 96       	adiw	r28, 0x05	; 5
     6b2:	6c ad       	ldd	r22, Y+60	; 0x3c
     6b4:	7d ad       	ldd	r23, Y+61	; 0x3d
     6b6:	8e ad       	ldd	r24, Y+62	; 0x3e
     6b8:	9f ad       	ldd	r25, Y+63	; 0x3f
     6ba:	25 97       	sbiw	r28, 0x05	; 5
     6bc:	61 50       	subi	r22, 0x01	; 1
     6be:	70 40       	sbci	r23, 0x00	; 0
     6c0:	80 40       	sbci	r24, 0x00	; 0
     6c2:	90 40       	sbci	r25, 0x00	; 0
     6c4:	25 96       	adiw	r28, 0x05	; 5
     6c6:	6c af       	std	Y+60, r22	; 0x3c
     6c8:	7d af       	std	Y+61, r23	; 0x3d
     6ca:	8e af       	std	Y+62, r24	; 0x3e
     6cc:	9f af       	std	Y+63, r25	; 0x3f
     6ce:	25 97       	sbiw	r28, 0x05	; 5
     6d0:	a2 0c       	add	r10, r2
     6d2:	b3 1c       	adc	r11, r3
     6d4:	c4 1c       	adc	r12, r4
     6d6:	d5 1c       	adc	r13, r5
     6d8:	a2 14       	cp	r10, r2
     6da:	b3 04       	cpc	r11, r3
     6dc:	c4 04       	cpc	r12, r4
     6de:	d5 04       	cpc	r13, r5
     6e0:	98 f0       	brcs	.+38     	; 0x708 <__udivdi3+0x530>
     6e2:	a2 16       	cp	r10, r18
     6e4:	b3 06       	cpc	r11, r19
     6e6:	c4 06       	cpc	r12, r20
     6e8:	d5 06       	cpc	r13, r21
     6ea:	70 f4       	brcc	.+28     	; 0x708 <__udivdi3+0x530>
     6ec:	61 50       	subi	r22, 0x01	; 1
     6ee:	70 40       	sbci	r23, 0x00	; 0
     6f0:	80 40       	sbci	r24, 0x00	; 0
     6f2:	90 40       	sbci	r25, 0x00	; 0
     6f4:	25 96       	adiw	r28, 0x05	; 5
     6f6:	6c af       	std	Y+60, r22	; 0x3c
     6f8:	7d af       	std	Y+61, r23	; 0x3d
     6fa:	8e af       	std	Y+62, r24	; 0x3e
     6fc:	9f af       	std	Y+63, r25	; 0x3f
     6fe:	25 97       	sbiw	r28, 0x05	; 5
     700:	a2 0c       	add	r10, r2
     702:	b3 1c       	adc	r11, r3
     704:	c4 1c       	adc	r12, r4
     706:	d5 1c       	adc	r13, r5
     708:	a2 1a       	sub	r10, r18
     70a:	b3 0a       	sbc	r11, r19
     70c:	c4 0a       	sbc	r12, r20
     70e:	d5 0a       	sbc	r13, r21
     710:	c6 01       	movw	r24, r12
     712:	b5 01       	movw	r22, r10
     714:	a4 01       	movw	r20, r8
     716:	93 01       	movw	r18, r6
     718:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     71c:	7b 01       	movw	r14, r22
     71e:	8c 01       	movw	r16, r24
     720:	c6 01       	movw	r24, r12
     722:	b5 01       	movw	r22, r10
     724:	a4 01       	movw	r20, r8
     726:	93 01       	movw	r18, r6
     728:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     72c:	c9 01       	movw	r24, r18
     72e:	da 01       	movw	r26, r20
     730:	3c 01       	movw	r6, r24
     732:	4d 01       	movw	r8, r26
     734:	c4 01       	movw	r24, r8
     736:	b3 01       	movw	r22, r6
     738:	21 96       	adiw	r28, 0x01	; 1
     73a:	2c ad       	ldd	r18, Y+60	; 0x3c
     73c:	3d ad       	ldd	r19, Y+61	; 0x3d
     73e:	4e ad       	ldd	r20, Y+62	; 0x3e
     740:	5f ad       	ldd	r21, Y+63	; 0x3f
     742:	21 97       	sbiw	r28, 0x01	; 1
     744:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     748:	9b 01       	movw	r18, r22
     74a:	ac 01       	movw	r20, r24
     74c:	87 01       	movw	r16, r14
     74e:	ff 24       	eor	r15, r15
     750:	ee 24       	eor	r14, r14
     752:	89 a5       	ldd	r24, Y+41	; 0x29
     754:	9a a5       	ldd	r25, Y+42	; 0x2a
     756:	ab a5       	ldd	r26, Y+43	; 0x2b
     758:	bc a5       	ldd	r27, Y+44	; 0x2c
     75a:	a0 70       	andi	r26, 0x00	; 0
     75c:	b0 70       	andi	r27, 0x00	; 0
     75e:	57 01       	movw	r10, r14
     760:	68 01       	movw	r12, r16
     762:	a8 2a       	or	r10, r24
     764:	b9 2a       	or	r11, r25
     766:	ca 2a       	or	r12, r26
     768:	db 2a       	or	r13, r27
     76a:	a2 16       	cp	r10, r18
     76c:	b3 06       	cpc	r11, r19
     76e:	c4 06       	cpc	r12, r20
     770:	d5 06       	cpc	r13, r21
     772:	e0 f4       	brcc	.+56     	; 0x7ac <__udivdi3+0x5d4>
     774:	08 94       	sec
     776:	61 08       	sbc	r6, r1
     778:	71 08       	sbc	r7, r1
     77a:	81 08       	sbc	r8, r1
     77c:	91 08       	sbc	r9, r1
     77e:	a2 0c       	add	r10, r2
     780:	b3 1c       	adc	r11, r3
     782:	c4 1c       	adc	r12, r4
     784:	d5 1c       	adc	r13, r5
     786:	a2 14       	cp	r10, r2
     788:	b3 04       	cpc	r11, r3
     78a:	c4 04       	cpc	r12, r4
     78c:	d5 04       	cpc	r13, r5
     78e:	70 f0       	brcs	.+28     	; 0x7ac <__udivdi3+0x5d4>
     790:	a2 16       	cp	r10, r18
     792:	b3 06       	cpc	r11, r19
     794:	c4 06       	cpc	r12, r20
     796:	d5 06       	cpc	r13, r21
     798:	48 f4       	brcc	.+18     	; 0x7ac <__udivdi3+0x5d4>
     79a:	08 94       	sec
     79c:	61 08       	sbc	r6, r1
     79e:	71 08       	sbc	r7, r1
     7a0:	81 08       	sbc	r8, r1
     7a2:	91 08       	sbc	r9, r1
     7a4:	a2 0c       	add	r10, r2
     7a6:	b3 1c       	adc	r11, r3
     7a8:	c4 1c       	adc	r12, r4
     7aa:	d5 1c       	adc	r13, r5
     7ac:	8d a5       	ldd	r24, Y+45	; 0x2d
     7ae:	9e a5       	ldd	r25, Y+46	; 0x2e
     7b0:	af a5       	ldd	r26, Y+47	; 0x2f
     7b2:	b8 a9       	ldd	r27, Y+48	; 0x30
     7b4:	6f 96       	adiw	r28, 0x1f	; 31
     7b6:	0f ac       	ldd	r0, Y+63	; 0x3f
     7b8:	6f 97       	sbiw	r28, 0x1f	; 31
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <__udivdi3+0x5ec>
     7bc:	88 0f       	add	r24, r24
     7be:	99 1f       	adc	r25, r25
     7c0:	aa 1f       	adc	r26, r26
     7c2:	bb 1f       	adc	r27, r27
     7c4:	0a 94       	dec	r0
     7c6:	d2 f7       	brpl	.-12     	; 0x7bc <__udivdi3+0x5e4>
     7c8:	8d a7       	std	Y+45, r24	; 0x2d
     7ca:	9e a7       	std	Y+46, r25	; 0x2e
     7cc:	af a7       	std	Y+47, r26	; 0x2f
     7ce:	b8 ab       	std	Y+48, r27	; 0x30
     7d0:	a2 1a       	sub	r10, r18
     7d2:	b3 0a       	sbc	r11, r19
     7d4:	c4 0a       	sbc	r12, r20
     7d6:	d5 0a       	sbc	r13, r21
     7d8:	25 96       	adiw	r28, 0x05	; 5
     7da:	ec ac       	ldd	r14, Y+60	; 0x3c
     7dc:	fd ac       	ldd	r15, Y+61	; 0x3d
     7de:	0e ad       	ldd	r16, Y+62	; 0x3e
     7e0:	1f ad       	ldd	r17, Y+63	; 0x3f
     7e2:	25 97       	sbiw	r28, 0x05	; 5
     7e4:	d7 01       	movw	r26, r14
     7e6:	99 27       	eor	r25, r25
     7e8:	88 27       	eor	r24, r24
     7ea:	68 2a       	or	r6, r24
     7ec:	79 2a       	or	r7, r25
     7ee:	8a 2a       	or	r8, r26
     7f0:	9b 2a       	or	r9, r27
     7f2:	82 01       	movw	r16, r4
     7f4:	22 27       	eor	r18, r18
     7f6:	33 27       	eor	r19, r19
     7f8:	29 96       	adiw	r28, 0x09	; 9
     7fa:	0c af       	std	Y+60, r16	; 0x3c
     7fc:	1d af       	std	Y+61, r17	; 0x3d
     7fe:	2e af       	std	Y+62, r18	; 0x3e
     800:	3f af       	std	Y+63, r19	; 0x3f
     802:	29 97       	sbiw	r28, 0x09	; 9
     804:	a2 01       	movw	r20, r4
     806:	91 01       	movw	r18, r2
     808:	40 70       	andi	r20, 0x00	; 0
     80a:	50 70       	andi	r21, 0x00	; 0
     80c:	2d 96       	adiw	r28, 0x0d	; 13
     80e:	2c af       	std	Y+60, r18	; 0x3c
     810:	3d af       	std	Y+61, r19	; 0x3d
     812:	4e af       	std	Y+62, r20	; 0x3e
     814:	5f af       	std	Y+63, r21	; 0x3f
     816:	2d 97       	sbiw	r28, 0x0d	; 13
     818:	c6 01       	movw	r24, r12
     81a:	b5 01       	movw	r22, r10
     81c:	29 96       	adiw	r28, 0x09	; 9
     81e:	2c ad       	ldd	r18, Y+60	; 0x3c
     820:	3d ad       	ldd	r19, Y+61	; 0x3d
     822:	4e ad       	ldd	r20, Y+62	; 0x3e
     824:	5f ad       	ldd	r21, Y+63	; 0x3f
     826:	29 97       	sbiw	r28, 0x09	; 9
     828:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     82c:	7b 01       	movw	r14, r22
     82e:	8c 01       	movw	r16, r24
     830:	c6 01       	movw	r24, r12
     832:	b5 01       	movw	r22, r10
     834:	29 96       	adiw	r28, 0x09	; 9
     836:	2c ad       	ldd	r18, Y+60	; 0x3c
     838:	3d ad       	ldd	r19, Y+61	; 0x3d
     83a:	4e ad       	ldd	r20, Y+62	; 0x3e
     83c:	5f ad       	ldd	r21, Y+63	; 0x3f
     83e:	29 97       	sbiw	r28, 0x09	; 9
     840:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     844:	c9 01       	movw	r24, r18
     846:	da 01       	movw	r26, r20
     848:	61 96       	adiw	r28, 0x11	; 17
     84a:	8c af       	std	Y+60, r24	; 0x3c
     84c:	9d af       	std	Y+61, r25	; 0x3d
     84e:	ae af       	std	Y+62, r26	; 0x3e
     850:	bf af       	std	Y+63, r27	; 0x3f
     852:	61 97       	sbiw	r28, 0x11	; 17
     854:	bc 01       	movw	r22, r24
     856:	cd 01       	movw	r24, r26
     858:	2d 96       	adiw	r28, 0x0d	; 13
     85a:	2c ad       	ldd	r18, Y+60	; 0x3c
     85c:	3d ad       	ldd	r19, Y+61	; 0x3d
     85e:	4e ad       	ldd	r20, Y+62	; 0x3e
     860:	5f ad       	ldd	r21, Y+63	; 0x3f
     862:	2d 97       	sbiw	r28, 0x0d	; 13
     864:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     868:	9b 01       	movw	r18, r22
     86a:	ac 01       	movw	r20, r24
     86c:	87 01       	movw	r16, r14
     86e:	ff 24       	eor	r15, r15
     870:	ee 24       	eor	r14, r14
     872:	ad a4       	ldd	r10, Y+45	; 0x2d
     874:	be a4       	ldd	r11, Y+46	; 0x2e
     876:	cf a4       	ldd	r12, Y+47	; 0x2f
     878:	d8 a8       	ldd	r13, Y+48	; 0x30
     87a:	c6 01       	movw	r24, r12
     87c:	aa 27       	eor	r26, r26
     87e:	bb 27       	eor	r27, r27
     880:	57 01       	movw	r10, r14
     882:	68 01       	movw	r12, r16
     884:	a8 2a       	or	r10, r24
     886:	b9 2a       	or	r11, r25
     888:	ca 2a       	or	r12, r26
     88a:	db 2a       	or	r13, r27
     88c:	a2 16       	cp	r10, r18
     88e:	b3 06       	cpc	r11, r19
     890:	c4 06       	cpc	r12, r20
     892:	d5 06       	cpc	r13, r21
     894:	60 f5       	brcc	.+88     	; 0x8ee <__stack+0x8f>
     896:	61 96       	adiw	r28, 0x11	; 17
     898:	6c ad       	ldd	r22, Y+60	; 0x3c
     89a:	7d ad       	ldd	r23, Y+61	; 0x3d
     89c:	8e ad       	ldd	r24, Y+62	; 0x3e
     89e:	9f ad       	ldd	r25, Y+63	; 0x3f
     8a0:	61 97       	sbiw	r28, 0x11	; 17
     8a2:	61 50       	subi	r22, 0x01	; 1
     8a4:	70 40       	sbci	r23, 0x00	; 0
     8a6:	80 40       	sbci	r24, 0x00	; 0
     8a8:	90 40       	sbci	r25, 0x00	; 0
     8aa:	61 96       	adiw	r28, 0x11	; 17
     8ac:	6c af       	std	Y+60, r22	; 0x3c
     8ae:	7d af       	std	Y+61, r23	; 0x3d
     8b0:	8e af       	std	Y+62, r24	; 0x3e
     8b2:	9f af       	std	Y+63, r25	; 0x3f
     8b4:	61 97       	sbiw	r28, 0x11	; 17
     8b6:	a2 0c       	add	r10, r2
     8b8:	b3 1c       	adc	r11, r3
     8ba:	c4 1c       	adc	r12, r4
     8bc:	d5 1c       	adc	r13, r5
     8be:	a2 14       	cp	r10, r2
     8c0:	b3 04       	cpc	r11, r3
     8c2:	c4 04       	cpc	r12, r4
     8c4:	d5 04       	cpc	r13, r5
     8c6:	98 f0       	brcs	.+38     	; 0x8ee <__stack+0x8f>
     8c8:	a2 16       	cp	r10, r18
     8ca:	b3 06       	cpc	r11, r19
     8cc:	c4 06       	cpc	r12, r20
     8ce:	d5 06       	cpc	r13, r21
     8d0:	70 f4       	brcc	.+28     	; 0x8ee <__stack+0x8f>
     8d2:	61 50       	subi	r22, 0x01	; 1
     8d4:	70 40       	sbci	r23, 0x00	; 0
     8d6:	80 40       	sbci	r24, 0x00	; 0
     8d8:	90 40       	sbci	r25, 0x00	; 0
     8da:	61 96       	adiw	r28, 0x11	; 17
     8dc:	6c af       	std	Y+60, r22	; 0x3c
     8de:	7d af       	std	Y+61, r23	; 0x3d
     8e0:	8e af       	std	Y+62, r24	; 0x3e
     8e2:	9f af       	std	Y+63, r25	; 0x3f
     8e4:	61 97       	sbiw	r28, 0x11	; 17
     8e6:	a2 0c       	add	r10, r2
     8e8:	b3 1c       	adc	r11, r3
     8ea:	c4 1c       	adc	r12, r4
     8ec:	d5 1c       	adc	r13, r5
     8ee:	a2 1a       	sub	r10, r18
     8f0:	b3 0a       	sbc	r11, r19
     8f2:	c4 0a       	sbc	r12, r20
     8f4:	d5 0a       	sbc	r13, r21
     8f6:	c6 01       	movw	r24, r12
     8f8:	b5 01       	movw	r22, r10
     8fa:	29 96       	adiw	r28, 0x09	; 9
     8fc:	2c ad       	ldd	r18, Y+60	; 0x3c
     8fe:	3d ad       	ldd	r19, Y+61	; 0x3d
     900:	4e ad       	ldd	r20, Y+62	; 0x3e
     902:	5f ad       	ldd	r21, Y+63	; 0x3f
     904:	29 97       	sbiw	r28, 0x09	; 9
     906:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     90a:	7b 01       	movw	r14, r22
     90c:	8c 01       	movw	r16, r24
     90e:	c6 01       	movw	r24, r12
     910:	b5 01       	movw	r22, r10
     912:	29 96       	adiw	r28, 0x09	; 9
     914:	2c ad       	ldd	r18, Y+60	; 0x3c
     916:	3d ad       	ldd	r19, Y+61	; 0x3d
     918:	4e ad       	ldd	r20, Y+62	; 0x3e
     91a:	5f ad       	ldd	r21, Y+63	; 0x3f
     91c:	29 97       	sbiw	r28, 0x09	; 9
     91e:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     922:	c9 01       	movw	r24, r18
     924:	da 01       	movw	r26, r20
     926:	5c 01       	movw	r10, r24
     928:	6d 01       	movw	r12, r26
     92a:	c6 01       	movw	r24, r12
     92c:	b5 01       	movw	r22, r10
     92e:	2d 96       	adiw	r28, 0x0d	; 13
     930:	2c ad       	ldd	r18, Y+60	; 0x3c
     932:	3d ad       	ldd	r19, Y+61	; 0x3d
     934:	4e ad       	ldd	r20, Y+62	; 0x3e
     936:	5f ad       	ldd	r21, Y+63	; 0x3f
     938:	2d 97       	sbiw	r28, 0x0d	; 13
     93a:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     93e:	9b 01       	movw	r18, r22
     940:	ac 01       	movw	r20, r24
     942:	87 01       	movw	r16, r14
     944:	ff 24       	eor	r15, r15
     946:	ee 24       	eor	r14, r14
     948:	8d a5       	ldd	r24, Y+45	; 0x2d
     94a:	9e a5       	ldd	r25, Y+46	; 0x2e
     94c:	af a5       	ldd	r26, Y+47	; 0x2f
     94e:	b8 a9       	ldd	r27, Y+48	; 0x30
     950:	a0 70       	andi	r26, 0x00	; 0
     952:	b0 70       	andi	r27, 0x00	; 0
     954:	e8 2a       	or	r14, r24
     956:	f9 2a       	or	r15, r25
     958:	0a 2b       	or	r16, r26
     95a:	1b 2b       	or	r17, r27
     95c:	e2 16       	cp	r14, r18
     95e:	f3 06       	cpc	r15, r19
     960:	04 07       	cpc	r16, r20
     962:	15 07       	cpc	r17, r21
     964:	c0 f4       	brcc	.+48     	; 0x996 <__stack+0x137>
     966:	08 94       	sec
     968:	a1 08       	sbc	r10, r1
     96a:	b1 08       	sbc	r11, r1
     96c:	c1 08       	sbc	r12, r1
     96e:	d1 08       	sbc	r13, r1
     970:	e2 0c       	add	r14, r2
     972:	f3 1c       	adc	r15, r3
     974:	04 1d       	adc	r16, r4
     976:	15 1d       	adc	r17, r5
     978:	e2 14       	cp	r14, r2
     97a:	f3 04       	cpc	r15, r3
     97c:	04 05       	cpc	r16, r4
     97e:	15 05       	cpc	r17, r5
     980:	50 f0       	brcs	.+20     	; 0x996 <__stack+0x137>
     982:	e2 16       	cp	r14, r18
     984:	f3 06       	cpc	r15, r19
     986:	04 07       	cpc	r16, r20
     988:	15 07       	cpc	r17, r21
     98a:	28 f4       	brcc	.+10     	; 0x996 <__stack+0x137>
     98c:	08 94       	sec
     98e:	a1 08       	sbc	r10, r1
     990:	b1 08       	sbc	r11, r1
     992:	c1 08       	sbc	r12, r1
     994:	d1 08       	sbc	r13, r1
     996:	61 96       	adiw	r28, 0x11	; 17
     998:	ec ac       	ldd	r14, Y+60	; 0x3c
     99a:	fd ac       	ldd	r15, Y+61	; 0x3d
     99c:	0e ad       	ldd	r16, Y+62	; 0x3e
     99e:	1f ad       	ldd	r17, Y+63	; 0x3f
     9a0:	61 97       	sbiw	r28, 0x11	; 17
     9a2:	d7 01       	movw	r26, r14
     9a4:	99 27       	eor	r25, r25
     9a6:	88 27       	eor	r24, r24
     9a8:	96 01       	movw	r18, r12
     9aa:	85 01       	movw	r16, r10
     9ac:	08 2b       	or	r16, r24
     9ae:	19 2b       	or	r17, r25
     9b0:	2a 2b       	or	r18, r26
     9b2:	3b 2b       	or	r19, r27
     9b4:	09 ab       	std	Y+49, r16	; 0x31
     9b6:	1a ab       	std	Y+50, r17	; 0x32
     9b8:	2b ab       	std	Y+51, r18	; 0x33
     9ba:	3c ab       	std	Y+52, r19	; 0x34
     9bc:	62 c2       	rjmp	.+1220   	; 0xe82 <__stack+0x623>
     9be:	6e 14       	cp	r6, r14
     9c0:	7f 04       	cpc	r7, r15
     9c2:	80 06       	cpc	r8, r16
     9c4:	91 06       	cpc	r9, r17
     9c6:	08 f4       	brcc	.+2      	; 0x9ca <__stack+0x16b>
     9c8:	51 c2       	rjmp	.+1186   	; 0xe6c <__stack+0x60d>
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	e2 16       	cp	r14, r18
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	f2 06       	cpc	r15, r18
     9d2:	21 e0       	ldi	r18, 0x01	; 1
     9d4:	02 07       	cpc	r16, r18
     9d6:	20 e0       	ldi	r18, 0x00	; 0
     9d8:	12 07       	cpc	r17, r18
     9da:	88 f4       	brcc	.+34     	; 0x9fe <__stack+0x19f>
     9dc:	3f ef       	ldi	r19, 0xFF	; 255
     9de:	e3 16       	cp	r14, r19
     9e0:	f1 04       	cpc	r15, r1
     9e2:	01 05       	cpc	r16, r1
     9e4:	11 05       	cpc	r17, r1
     9e6:	31 f0       	breq	.+12     	; 0x9f4 <__stack+0x195>
     9e8:	28 f0       	brcs	.+10     	; 0x9f4 <__stack+0x195>
     9ea:	48 e0       	ldi	r20, 0x08	; 8
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	17 c0       	rjmp	.+46     	; 0xa22 <__stack+0x1c3>
     9f4:	40 e0       	ldi	r20, 0x00	; 0
     9f6:	50 e0       	ldi	r21, 0x00	; 0
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	12 c0       	rjmp	.+36     	; 0xa22 <__stack+0x1c3>
     9fe:	40 e0       	ldi	r20, 0x00	; 0
     a00:	e4 16       	cp	r14, r20
     a02:	40 e0       	ldi	r20, 0x00	; 0
     a04:	f4 06       	cpc	r15, r20
     a06:	40 e0       	ldi	r20, 0x00	; 0
     a08:	04 07       	cpc	r16, r20
     a0a:	41 e0       	ldi	r20, 0x01	; 1
     a0c:	14 07       	cpc	r17, r20
     a0e:	28 f0       	brcs	.+10     	; 0xa1a <__stack+0x1bb>
     a10:	48 e1       	ldi	r20, 0x18	; 24
     a12:	50 e0       	ldi	r21, 0x00	; 0
     a14:	60 e0       	ldi	r22, 0x00	; 0
     a16:	70 e0       	ldi	r23, 0x00	; 0
     a18:	04 c0       	rjmp	.+8      	; 0xa22 <__stack+0x1c3>
     a1a:	40 e1       	ldi	r20, 0x10	; 16
     a1c:	50 e0       	ldi	r21, 0x00	; 0
     a1e:	60 e0       	ldi	r22, 0x00	; 0
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	d8 01       	movw	r26, r16
     a24:	c7 01       	movw	r24, r14
     a26:	04 2e       	mov	r0, r20
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <__stack+0x1d3>
     a2a:	b6 95       	lsr	r27
     a2c:	a7 95       	ror	r26
     a2e:	97 95       	ror	r25
     a30:	87 95       	ror	r24
     a32:	0a 94       	dec	r0
     a34:	d2 f7       	brpl	.-12     	; 0xa2a <__stack+0x1cb>
     a36:	86 58       	subi	r24, 0x86	; 134
     a38:	9f 4f       	sbci	r25, 0xFF	; 255
     a3a:	dc 01       	movw	r26, r24
     a3c:	2c 91       	ld	r18, X
     a3e:	30 e2       	ldi	r19, 0x20	; 32
     a40:	a3 2e       	mov	r10, r19
     a42:	b1 2c       	mov	r11, r1
     a44:	c1 2c       	mov	r12, r1
     a46:	d1 2c       	mov	r13, r1
     a48:	d6 01       	movw	r26, r12
     a4a:	c5 01       	movw	r24, r10
     a4c:	84 1b       	sub	r24, r20
     a4e:	95 0b       	sbc	r25, r21
     a50:	a6 0b       	sbc	r26, r22
     a52:	b7 0b       	sbc	r27, r23
     a54:	82 1b       	sub	r24, r18
     a56:	91 09       	sbc	r25, r1
     a58:	a1 09       	sbc	r26, r1
     a5a:	b1 09       	sbc	r27, r1
     a5c:	00 97       	sbiw	r24, 0x00	; 0
     a5e:	a1 05       	cpc	r26, r1
     a60:	b1 05       	cpc	r27, r1
     a62:	89 f4       	brne	.+34     	; 0xa86 <__stack+0x227>
     a64:	e6 14       	cp	r14, r6
     a66:	f7 04       	cpc	r15, r7
     a68:	08 05       	cpc	r16, r8
     a6a:	19 05       	cpc	r17, r9
     a6c:	08 f4       	brcc	.+2      	; 0xa70 <__stack+0x211>
     a6e:	f2 c1       	rjmp	.+996    	; 0xe54 <__stack+0x5f5>
     a70:	6d a4       	ldd	r6, Y+45	; 0x2d
     a72:	7e a4       	ldd	r7, Y+46	; 0x2e
     a74:	8f a4       	ldd	r8, Y+47	; 0x2f
     a76:	98 a8       	ldd	r9, Y+48	; 0x30
     a78:	62 14       	cp	r6, r2
     a7a:	73 04       	cpc	r7, r3
     a7c:	84 04       	cpc	r8, r4
     a7e:	95 04       	cpc	r9, r5
     a80:	08 f0       	brcs	.+2      	; 0xa84 <__stack+0x225>
     a82:	e8 c1       	rjmp	.+976    	; 0xe54 <__stack+0x5f5>
     a84:	f3 c1       	rjmp	.+998    	; 0xe6c <__stack+0x60d>
     a86:	6e 96       	adiw	r28, 0x1e	; 30
     a88:	8f af       	std	Y+63, r24	; 0x3f
     a8a:	6e 97       	sbiw	r28, 0x1e	; 30
     a8c:	08 2e       	mov	r0, r24
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <__stack+0x239>
     a90:	ee 0c       	add	r14, r14
     a92:	ff 1c       	adc	r15, r15
     a94:	00 1f       	adc	r16, r16
     a96:	11 1f       	adc	r17, r17
     a98:	0a 94       	dec	r0
     a9a:	d2 f7       	brpl	.-12     	; 0xa90 <__stack+0x231>
     a9c:	6a 2d       	mov	r22, r10
     a9e:	68 1b       	sub	r22, r24
     aa0:	d2 01       	movw	r26, r4
     aa2:	c1 01       	movw	r24, r2
     aa4:	06 2e       	mov	r0, r22
     aa6:	04 c0       	rjmp	.+8      	; 0xab0 <__stack+0x251>
     aa8:	b6 95       	lsr	r27
     aaa:	a7 95       	ror	r26
     aac:	97 95       	ror	r25
     aae:	87 95       	ror	r24
     ab0:	0a 94       	dec	r0
     ab2:	d2 f7       	brpl	.-12     	; 0xaa8 <__stack+0x249>
     ab4:	5c 01       	movw	r10, r24
     ab6:	6d 01       	movw	r12, r26
     ab8:	ae 28       	or	r10, r14
     aba:	bf 28       	or	r11, r15
     abc:	c0 2a       	or	r12, r16
     abe:	d1 2a       	or	r13, r17
     ac0:	ad a2       	std	Y+37, r10	; 0x25
     ac2:	be a2       	std	Y+38, r11	; 0x26
     ac4:	cf a2       	std	Y+39, r12	; 0x27
     ac6:	d8 a6       	std	Y+40, r13	; 0x28
     ac8:	72 01       	movw	r14, r4
     aca:	61 01       	movw	r12, r2
     acc:	6e 96       	adiw	r28, 0x1e	; 30
     ace:	0f ac       	ldd	r0, Y+63	; 0x3f
     ad0:	6e 97       	sbiw	r28, 0x1e	; 30
     ad2:	04 c0       	rjmp	.+8      	; 0xadc <__stack+0x27d>
     ad4:	cc 0c       	add	r12, r12
     ad6:	dd 1c       	adc	r13, r13
     ad8:	ee 1c       	adc	r14, r14
     ada:	ff 1c       	adc	r15, r15
     adc:	0a 94       	dec	r0
     ade:	d2 f7       	brpl	.-12     	; 0xad4 <__stack+0x275>
     ae0:	c9 a2       	std	Y+33, r12	; 0x21
     ae2:	da a2       	std	Y+34, r13	; 0x22
     ae4:	eb a2       	std	Y+35, r14	; 0x23
     ae6:	fc a2       	std	Y+36, r15	; 0x24
     ae8:	64 01       	movw	r12, r8
     aea:	53 01       	movw	r10, r6
     aec:	06 2e       	mov	r0, r22
     aee:	04 c0       	rjmp	.+8      	; 0xaf8 <__stack+0x299>
     af0:	d6 94       	lsr	r13
     af2:	c7 94       	ror	r12
     af4:	b7 94       	ror	r11
     af6:	a7 94       	ror	r10
     af8:	0a 94       	dec	r0
     afa:	d2 f7       	brpl	.-12     	; 0xaf0 <__stack+0x291>
     afc:	d4 01       	movw	r26, r8
     afe:	c3 01       	movw	r24, r6
     b00:	6e 96       	adiw	r28, 0x1e	; 30
     b02:	0f ac       	ldd	r0, Y+63	; 0x3f
     b04:	6e 97       	sbiw	r28, 0x1e	; 30
     b06:	04 c0       	rjmp	.+8      	; 0xb10 <__stack+0x2b1>
     b08:	88 0f       	add	r24, r24
     b0a:	99 1f       	adc	r25, r25
     b0c:	aa 1f       	adc	r26, r26
     b0e:	bb 1f       	adc	r27, r27
     b10:	0a 94       	dec	r0
     b12:	d2 f7       	brpl	.-12     	; 0xb08 <__stack+0x2a9>
     b14:	ed a4       	ldd	r14, Y+45	; 0x2d
     b16:	fe a4       	ldd	r15, Y+46	; 0x2e
     b18:	0f a5       	ldd	r16, Y+47	; 0x2f
     b1a:	18 a9       	ldd	r17, Y+48	; 0x30
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <__stack+0x2c7>
     b1e:	16 95       	lsr	r17
     b20:	07 95       	ror	r16
     b22:	f7 94       	ror	r15
     b24:	e7 94       	ror	r14
     b26:	6a 95       	dec	r22
     b28:	d2 f7       	brpl	.-12     	; 0xb1e <__stack+0x2bf>
     b2a:	37 01       	movw	r6, r14
     b2c:	48 01       	movw	r8, r16
     b2e:	68 2a       	or	r6, r24
     b30:	79 2a       	or	r7, r25
     b32:	8a 2a       	or	r8, r26
     b34:	9b 2a       	or	r9, r27
     b36:	6d 8e       	std	Y+29, r6	; 0x1d
     b38:	7e 8e       	std	Y+30, r7	; 0x1e
     b3a:	8f 8e       	std	Y+31, r8	; 0x1f
     b3c:	98 a2       	std	Y+32, r9	; 0x20
     b3e:	ed a0       	ldd	r14, Y+37	; 0x25
     b40:	fe a0       	ldd	r15, Y+38	; 0x26
     b42:	0f a1       	ldd	r16, Y+39	; 0x27
     b44:	18 a5       	ldd	r17, Y+40	; 0x28
     b46:	38 01       	movw	r6, r16
     b48:	88 24       	eor	r8, r8
     b4a:	99 24       	eor	r9, r9
     b4c:	98 01       	movw	r18, r16
     b4e:	87 01       	movw	r16, r14
     b50:	20 70       	andi	r18, 0x00	; 0
     b52:	30 70       	andi	r19, 0x00	; 0
     b54:	65 96       	adiw	r28, 0x15	; 21
     b56:	0c af       	std	Y+60, r16	; 0x3c
     b58:	1d af       	std	Y+61, r17	; 0x3d
     b5a:	2e af       	std	Y+62, r18	; 0x3e
     b5c:	3f af       	std	Y+63, r19	; 0x3f
     b5e:	65 97       	sbiw	r28, 0x15	; 21
     b60:	c6 01       	movw	r24, r12
     b62:	b5 01       	movw	r22, r10
     b64:	a4 01       	movw	r20, r8
     b66:	93 01       	movw	r18, r6
     b68:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     b6c:	7b 01       	movw	r14, r22
     b6e:	8c 01       	movw	r16, r24
     b70:	c6 01       	movw	r24, r12
     b72:	b5 01       	movw	r22, r10
     b74:	a4 01       	movw	r20, r8
     b76:	93 01       	movw	r18, r6
     b78:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     b7c:	c9 01       	movw	r24, r18
     b7e:	da 01       	movw	r26, r20
     b80:	1c 01       	movw	r2, r24
     b82:	2d 01       	movw	r4, r26
     b84:	c2 01       	movw	r24, r4
     b86:	b1 01       	movw	r22, r2
     b88:	65 96       	adiw	r28, 0x15	; 21
     b8a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b8c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b8e:	4e ad       	ldd	r20, Y+62	; 0x3e
     b90:	5f ad       	ldd	r21, Y+63	; 0x3f
     b92:	65 97       	sbiw	r28, 0x15	; 21
     b94:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     b98:	9b 01       	movw	r18, r22
     b9a:	ac 01       	movw	r20, r24
     b9c:	87 01       	movw	r16, r14
     b9e:	ff 24       	eor	r15, r15
     ba0:	ee 24       	eor	r14, r14
     ba2:	ad 8c       	ldd	r10, Y+29	; 0x1d
     ba4:	be 8c       	ldd	r11, Y+30	; 0x1e
     ba6:	cf 8c       	ldd	r12, Y+31	; 0x1f
     ba8:	d8 a0       	ldd	r13, Y+32	; 0x20
     baa:	c6 01       	movw	r24, r12
     bac:	aa 27       	eor	r26, r26
     bae:	bb 27       	eor	r27, r27
     bb0:	57 01       	movw	r10, r14
     bb2:	68 01       	movw	r12, r16
     bb4:	a8 2a       	or	r10, r24
     bb6:	b9 2a       	or	r11, r25
     bb8:	ca 2a       	or	r12, r26
     bba:	db 2a       	or	r13, r27
     bbc:	a2 16       	cp	r10, r18
     bbe:	b3 06       	cpc	r11, r19
     bc0:	c4 06       	cpc	r12, r20
     bc2:	d5 06       	cpc	r13, r21
     bc4:	00 f5       	brcc	.+64     	; 0xc06 <__stack+0x3a7>
     bc6:	08 94       	sec
     bc8:	21 08       	sbc	r2, r1
     bca:	31 08       	sbc	r3, r1
     bcc:	41 08       	sbc	r4, r1
     bce:	51 08       	sbc	r5, r1
     bd0:	ed a0       	ldd	r14, Y+37	; 0x25
     bd2:	fe a0       	ldd	r15, Y+38	; 0x26
     bd4:	0f a1       	ldd	r16, Y+39	; 0x27
     bd6:	18 a5       	ldd	r17, Y+40	; 0x28
     bd8:	ae 0c       	add	r10, r14
     bda:	bf 1c       	adc	r11, r15
     bdc:	c0 1e       	adc	r12, r16
     bde:	d1 1e       	adc	r13, r17
     be0:	ae 14       	cp	r10, r14
     be2:	bf 04       	cpc	r11, r15
     be4:	c0 06       	cpc	r12, r16
     be6:	d1 06       	cpc	r13, r17
     be8:	70 f0       	brcs	.+28     	; 0xc06 <__stack+0x3a7>
     bea:	a2 16       	cp	r10, r18
     bec:	b3 06       	cpc	r11, r19
     bee:	c4 06       	cpc	r12, r20
     bf0:	d5 06       	cpc	r13, r21
     bf2:	48 f4       	brcc	.+18     	; 0xc06 <__stack+0x3a7>
     bf4:	08 94       	sec
     bf6:	21 08       	sbc	r2, r1
     bf8:	31 08       	sbc	r3, r1
     bfa:	41 08       	sbc	r4, r1
     bfc:	51 08       	sbc	r5, r1
     bfe:	ae 0c       	add	r10, r14
     c00:	bf 1c       	adc	r11, r15
     c02:	c0 1e       	adc	r12, r16
     c04:	d1 1e       	adc	r13, r17
     c06:	a2 1a       	sub	r10, r18
     c08:	b3 0a       	sbc	r11, r19
     c0a:	c4 0a       	sbc	r12, r20
     c0c:	d5 0a       	sbc	r13, r21
     c0e:	c6 01       	movw	r24, r12
     c10:	b5 01       	movw	r22, r10
     c12:	a4 01       	movw	r20, r8
     c14:	93 01       	movw	r18, r6
     c16:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     c1a:	7b 01       	movw	r14, r22
     c1c:	8c 01       	movw	r16, r24
     c1e:	c6 01       	movw	r24, r12
     c20:	b5 01       	movw	r22, r10
     c22:	a4 01       	movw	r20, r8
     c24:	93 01       	movw	r18, r6
     c26:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
     c2a:	c9 01       	movw	r24, r18
     c2c:	da 01       	movw	r26, r20
     c2e:	3c 01       	movw	r6, r24
     c30:	4d 01       	movw	r8, r26
     c32:	c4 01       	movw	r24, r8
     c34:	b3 01       	movw	r22, r6
     c36:	65 96       	adiw	r28, 0x15	; 21
     c38:	2c ad       	ldd	r18, Y+60	; 0x3c
     c3a:	3d ad       	ldd	r19, Y+61	; 0x3d
     c3c:	4e ad       	ldd	r20, Y+62	; 0x3e
     c3e:	5f ad       	ldd	r21, Y+63	; 0x3f
     c40:	65 97       	sbiw	r28, 0x15	; 21
     c42:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     c46:	9b 01       	movw	r18, r22
     c48:	ac 01       	movw	r20, r24
     c4a:	87 01       	movw	r16, r14
     c4c:	ff 24       	eor	r15, r15
     c4e:	ee 24       	eor	r14, r14
     c50:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c52:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c54:	af 8d       	ldd	r26, Y+31	; 0x1f
     c56:	b8 a1       	ldd	r27, Y+32	; 0x20
     c58:	a0 70       	andi	r26, 0x00	; 0
     c5a:	b0 70       	andi	r27, 0x00	; 0
     c5c:	57 01       	movw	r10, r14
     c5e:	68 01       	movw	r12, r16
     c60:	a8 2a       	or	r10, r24
     c62:	b9 2a       	or	r11, r25
     c64:	ca 2a       	or	r12, r26
     c66:	db 2a       	or	r13, r27
     c68:	a2 16       	cp	r10, r18
     c6a:	b3 06       	cpc	r11, r19
     c6c:	c4 06       	cpc	r12, r20
     c6e:	d5 06       	cpc	r13, r21
     c70:	00 f5       	brcc	.+64     	; 0xcb2 <__stack+0x453>
     c72:	08 94       	sec
     c74:	61 08       	sbc	r6, r1
     c76:	71 08       	sbc	r7, r1
     c78:	81 08       	sbc	r8, r1
     c7a:	91 08       	sbc	r9, r1
     c7c:	6d a1       	ldd	r22, Y+37	; 0x25
     c7e:	7e a1       	ldd	r23, Y+38	; 0x26
     c80:	8f a1       	ldd	r24, Y+39	; 0x27
     c82:	98 a5       	ldd	r25, Y+40	; 0x28
     c84:	a6 0e       	add	r10, r22
     c86:	b7 1e       	adc	r11, r23
     c88:	c8 1e       	adc	r12, r24
     c8a:	d9 1e       	adc	r13, r25
     c8c:	a6 16       	cp	r10, r22
     c8e:	b7 06       	cpc	r11, r23
     c90:	c8 06       	cpc	r12, r24
     c92:	d9 06       	cpc	r13, r25
     c94:	70 f0       	brcs	.+28     	; 0xcb2 <__stack+0x453>
     c96:	a2 16       	cp	r10, r18
     c98:	b3 06       	cpc	r11, r19
     c9a:	c4 06       	cpc	r12, r20
     c9c:	d5 06       	cpc	r13, r21
     c9e:	48 f4       	brcc	.+18     	; 0xcb2 <__stack+0x453>
     ca0:	08 94       	sec
     ca2:	61 08       	sbc	r6, r1
     ca4:	71 08       	sbc	r7, r1
     ca6:	81 08       	sbc	r8, r1
     ca8:	91 08       	sbc	r9, r1
     caa:	a6 0e       	add	r10, r22
     cac:	b7 1e       	adc	r11, r23
     cae:	c8 1e       	adc	r12, r24
     cb0:	d9 1e       	adc	r13, r25
     cb2:	d6 01       	movw	r26, r12
     cb4:	c5 01       	movw	r24, r10
     cb6:	82 1b       	sub	r24, r18
     cb8:	93 0b       	sbc	r25, r19
     cba:	a4 0b       	sbc	r26, r20
     cbc:	b5 0b       	sbc	r27, r21
     cbe:	89 8f       	std	Y+25, r24	; 0x19
     cc0:	9a 8f       	std	Y+26, r25	; 0x1a
     cc2:	ab 8f       	std	Y+27, r26	; 0x1b
     cc4:	bc 8f       	std	Y+28, r27	; 0x1c
     cc6:	d1 01       	movw	r26, r2
     cc8:	99 27       	eor	r25, r25
     cca:	88 27       	eor	r24, r24
     ccc:	64 01       	movw	r12, r8
     cce:	53 01       	movw	r10, r6
     cd0:	a8 2a       	or	r10, r24
     cd2:	b9 2a       	or	r11, r25
     cd4:	ca 2a       	or	r12, r26
     cd6:	db 2a       	or	r13, r27
     cd8:	a9 aa       	std	Y+49, r10	; 0x31
     cda:	ba aa       	std	Y+50, r11	; 0x32
     cdc:	cb aa       	std	Y+51, r12	; 0x33
     cde:	dc aa       	std	Y+52, r13	; 0x34
     ce0:	86 01       	movw	r16, r12
     ce2:	75 01       	movw	r14, r10
     ce4:	2f ef       	ldi	r18, 0xFF	; 255
     ce6:	3f ef       	ldi	r19, 0xFF	; 255
     ce8:	40 e0       	ldi	r20, 0x00	; 0
     cea:	50 e0       	ldi	r21, 0x00	; 0
     cec:	e2 22       	and	r14, r18
     cee:	f3 22       	and	r15, r19
     cf0:	04 23       	and	r16, r20
     cf2:	15 23       	and	r17, r21
     cf4:	a6 01       	movw	r20, r12
     cf6:	66 27       	eor	r22, r22
     cf8:	77 27       	eor	r23, r23
     cfa:	6d 96       	adiw	r28, 0x1d	; 29
     cfc:	4c af       	std	Y+60, r20	; 0x3c
     cfe:	5d af       	std	Y+61, r21	; 0x3d
     d00:	6e af       	std	Y+62, r22	; 0x3e
     d02:	7f af       	std	Y+63, r23	; 0x3f
     d04:	6d 97       	sbiw	r28, 0x1d	; 29
     d06:	a9 a0       	ldd	r10, Y+33	; 0x21
     d08:	ba a0       	ldd	r11, Y+34	; 0x22
     d0a:	cb a0       	ldd	r12, Y+35	; 0x23
     d0c:	dc a0       	ldd	r13, Y+36	; 0x24
     d0e:	6f ef       	ldi	r22, 0xFF	; 255
     d10:	7f ef       	ldi	r23, 0xFF	; 255
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	a6 22       	and	r10, r22
     d18:	b7 22       	and	r11, r23
     d1a:	c8 22       	and	r12, r24
     d1c:	d9 22       	and	r13, r25
     d1e:	89 a1       	ldd	r24, Y+33	; 0x21
     d20:	9a a1       	ldd	r25, Y+34	; 0x22
     d22:	ab a1       	ldd	r26, Y+35	; 0x23
     d24:	bc a1       	ldd	r27, Y+36	; 0x24
     d26:	1d 01       	movw	r2, r26
     d28:	44 24       	eor	r4, r4
     d2a:	55 24       	eor	r5, r5
     d2c:	c8 01       	movw	r24, r16
     d2e:	b7 01       	movw	r22, r14
     d30:	a6 01       	movw	r20, r12
     d32:	95 01       	movw	r18, r10
     d34:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     d38:	69 96       	adiw	r28, 0x19	; 25
     d3a:	6c af       	std	Y+60, r22	; 0x3c
     d3c:	7d af       	std	Y+61, r23	; 0x3d
     d3e:	8e af       	std	Y+62, r24	; 0x3e
     d40:	9f af       	std	Y+63, r25	; 0x3f
     d42:	69 97       	sbiw	r28, 0x19	; 25
     d44:	c8 01       	movw	r24, r16
     d46:	b7 01       	movw	r22, r14
     d48:	a2 01       	movw	r20, r4
     d4a:	91 01       	movw	r18, r2
     d4c:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     d50:	3b 01       	movw	r6, r22
     d52:	4c 01       	movw	r8, r24
     d54:	6d 96       	adiw	r28, 0x1d	; 29
     d56:	6c ad       	ldd	r22, Y+60	; 0x3c
     d58:	7d ad       	ldd	r23, Y+61	; 0x3d
     d5a:	8e ad       	ldd	r24, Y+62	; 0x3e
     d5c:	9f ad       	ldd	r25, Y+63	; 0x3f
     d5e:	6d 97       	sbiw	r28, 0x1d	; 29
     d60:	a6 01       	movw	r20, r12
     d62:	95 01       	movw	r18, r10
     d64:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     d68:	7b 01       	movw	r14, r22
     d6a:	8c 01       	movw	r16, r24
     d6c:	6d 96       	adiw	r28, 0x1d	; 29
     d6e:	6c ad       	ldd	r22, Y+60	; 0x3c
     d70:	7d ad       	ldd	r23, Y+61	; 0x3d
     d72:	8e ad       	ldd	r24, Y+62	; 0x3e
     d74:	9f ad       	ldd	r25, Y+63	; 0x3f
     d76:	6d 97       	sbiw	r28, 0x1d	; 29
     d78:	a2 01       	movw	r20, r4
     d7a:	91 01       	movw	r18, r2
     d7c:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
     d80:	5b 01       	movw	r10, r22
     d82:	6c 01       	movw	r12, r24
     d84:	a8 01       	movw	r20, r16
     d86:	97 01       	movw	r18, r14
     d88:	26 0d       	add	r18, r6
     d8a:	37 1d       	adc	r19, r7
     d8c:	48 1d       	adc	r20, r8
     d8e:	59 1d       	adc	r21, r9
     d90:	69 96       	adiw	r28, 0x19	; 25
     d92:	6c ac       	ldd	r6, Y+60	; 0x3c
     d94:	7d ac       	ldd	r7, Y+61	; 0x3d
     d96:	8e ac       	ldd	r8, Y+62	; 0x3e
     d98:	9f ac       	ldd	r9, Y+63	; 0x3f
     d9a:	69 97       	sbiw	r28, 0x19	; 25
     d9c:	c4 01       	movw	r24, r8
     d9e:	aa 27       	eor	r26, r26
     da0:	bb 27       	eor	r27, r27
     da2:	28 0f       	add	r18, r24
     da4:	39 1f       	adc	r19, r25
     da6:	4a 1f       	adc	r20, r26
     da8:	5b 1f       	adc	r21, r27
     daa:	2e 15       	cp	r18, r14
     dac:	3f 05       	cpc	r19, r15
     dae:	40 07       	cpc	r20, r16
     db0:	51 07       	cpc	r21, r17
     db2:	48 f4       	brcc	.+18     	; 0xdc6 <__stack+0x567>
     db4:	e1 2c       	mov	r14, r1
     db6:	f1 2c       	mov	r15, r1
     db8:	61 e0       	ldi	r22, 0x01	; 1
     dba:	06 2f       	mov	r16, r22
     dbc:	11 2d       	mov	r17, r1
     dbe:	ae 0c       	add	r10, r14
     dc0:	bf 1c       	adc	r11, r15
     dc2:	c0 1e       	adc	r12, r16
     dc4:	d1 1e       	adc	r13, r17
     dc6:	ca 01       	movw	r24, r20
     dc8:	aa 27       	eor	r26, r26
     dca:	bb 27       	eor	r27, r27
     dcc:	bc 01       	movw	r22, r24
     dce:	cd 01       	movw	r24, r26
     dd0:	6a 0d       	add	r22, r10
     dd2:	7b 1d       	adc	r23, r11
     dd4:	8c 1d       	adc	r24, r12
     dd6:	9d 1d       	adc	r25, r13
     dd8:	69 8c       	ldd	r6, Y+25	; 0x19
     dda:	7a 8c       	ldd	r7, Y+26	; 0x1a
     ddc:	8b 8c       	ldd	r8, Y+27	; 0x1b
     dde:	9c 8c       	ldd	r9, Y+28	; 0x1c
     de0:	66 16       	cp	r6, r22
     de2:	77 06       	cpc	r7, r23
     de4:	88 06       	cpc	r8, r24
     de6:	99 06       	cpc	r9, r25
     de8:	40 f1       	brcs	.+80     	; 0xe3a <__stack+0x5db>
     dea:	66 15       	cp	r22, r6
     dec:	77 05       	cpc	r23, r7
     dee:	88 05       	cpc	r24, r8
     df0:	99 05       	cpc	r25, r9
     df2:	09 f0       	breq	.+2      	; 0xdf6 <__stack+0x597>
     df4:	43 c0       	rjmp	.+134    	; 0xe7c <__stack+0x61d>
     df6:	d9 01       	movw	r26, r18
     df8:	99 27       	eor	r25, r25
     dfa:	88 27       	eor	r24, r24
     dfc:	69 96       	adiw	r28, 0x19	; 25
     dfe:	2c ad       	ldd	r18, Y+60	; 0x3c
     e00:	3d ad       	ldd	r19, Y+61	; 0x3d
     e02:	4e ad       	ldd	r20, Y+62	; 0x3e
     e04:	5f ad       	ldd	r21, Y+63	; 0x3f
     e06:	69 97       	sbiw	r28, 0x19	; 25
     e08:	40 70       	andi	r20, 0x00	; 0
     e0a:	50 70       	andi	r21, 0x00	; 0
     e0c:	82 0f       	add	r24, r18
     e0e:	93 1f       	adc	r25, r19
     e10:	a4 1f       	adc	r26, r20
     e12:	b5 1f       	adc	r27, r21
     e14:	2d a5       	ldd	r18, Y+45	; 0x2d
     e16:	3e a5       	ldd	r19, Y+46	; 0x2e
     e18:	4f a5       	ldd	r20, Y+47	; 0x2f
     e1a:	58 a9       	ldd	r21, Y+48	; 0x30
     e1c:	6e 96       	adiw	r28, 0x1e	; 30
     e1e:	0f ac       	ldd	r0, Y+63	; 0x3f
     e20:	6e 97       	sbiw	r28, 0x1e	; 30
     e22:	04 c0       	rjmp	.+8      	; 0xe2c <__stack+0x5cd>
     e24:	22 0f       	add	r18, r18
     e26:	33 1f       	adc	r19, r19
     e28:	44 1f       	adc	r20, r20
     e2a:	55 1f       	adc	r21, r21
     e2c:	0a 94       	dec	r0
     e2e:	d2 f7       	brpl	.-12     	; 0xe24 <__stack+0x5c5>
     e30:	28 17       	cp	r18, r24
     e32:	39 07       	cpc	r19, r25
     e34:	4a 07       	cpc	r20, r26
     e36:	5b 07       	cpc	r21, r27
     e38:	08 f5       	brcc	.+66     	; 0xe7c <__stack+0x61d>
     e3a:	09 a9       	ldd	r16, Y+49	; 0x31
     e3c:	1a a9       	ldd	r17, Y+50	; 0x32
     e3e:	2b a9       	ldd	r18, Y+51	; 0x33
     e40:	3c a9       	ldd	r19, Y+52	; 0x34
     e42:	01 50       	subi	r16, 0x01	; 1
     e44:	10 40       	sbci	r17, 0x00	; 0
     e46:	20 40       	sbci	r18, 0x00	; 0
     e48:	30 40       	sbci	r19, 0x00	; 0
     e4a:	09 ab       	std	Y+49, r16	; 0x31
     e4c:	1a ab       	std	Y+50, r17	; 0x32
     e4e:	2b ab       	std	Y+51, r18	; 0x33
     e50:	3c ab       	std	Y+52, r19	; 0x34
     e52:	14 c0       	rjmp	.+40     	; 0xe7c <__stack+0x61d>
     e54:	66 24       	eor	r6, r6
     e56:	77 24       	eor	r7, r7
     e58:	43 01       	movw	r8, r6
     e5a:	21 e0       	ldi	r18, 0x01	; 1
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 e0       	ldi	r20, 0x00	; 0
     e60:	50 e0       	ldi	r21, 0x00	; 0
     e62:	29 ab       	std	Y+49, r18	; 0x31
     e64:	3a ab       	std	Y+50, r19	; 0x32
     e66:	4b ab       	std	Y+51, r20	; 0x33
     e68:	5c ab       	std	Y+52, r21	; 0x34
     e6a:	0b c0       	rjmp	.+22     	; 0xe82 <__stack+0x623>
     e6c:	66 24       	eor	r6, r6
     e6e:	77 24       	eor	r7, r7
     e70:	43 01       	movw	r8, r6
     e72:	19 aa       	std	Y+49, r1	; 0x31
     e74:	1a aa       	std	Y+50, r1	; 0x32
     e76:	1b aa       	std	Y+51, r1	; 0x33
     e78:	1c aa       	std	Y+52, r1	; 0x34
     e7a:	03 c0       	rjmp	.+6      	; 0xe82 <__stack+0x623>
     e7c:	66 24       	eor	r6, r6
     e7e:	77 24       	eor	r7, r7
     e80:	43 01       	movw	r8, r6
     e82:	fe 01       	movw	r30, r28
     e84:	71 96       	adiw	r30, 0x11	; 17
     e86:	88 e0       	ldi	r24, 0x08	; 8
     e88:	df 01       	movw	r26, r30
     e8a:	1d 92       	st	X+, r1
     e8c:	8a 95       	dec	r24
     e8e:	e9 f7       	brne	.-6      	; 0xe8a <__stack+0x62b>
     e90:	a9 a8       	ldd	r10, Y+49	; 0x31
     e92:	ba a8       	ldd	r11, Y+50	; 0x32
     e94:	cb a8       	ldd	r12, Y+51	; 0x33
     e96:	dc a8       	ldd	r13, Y+52	; 0x34
     e98:	a9 8a       	std	Y+17, r10	; 0x11
     e9a:	ba 8a       	std	Y+18, r11	; 0x12
     e9c:	cb 8a       	std	Y+19, r12	; 0x13
     e9e:	dc 8a       	std	Y+20, r13	; 0x14
     ea0:	6d 8a       	std	Y+21, r6	; 0x15
     ea2:	7e 8a       	std	Y+22, r7	; 0x16
     ea4:	8f 8a       	std	Y+23, r8	; 0x17
     ea6:	98 8e       	std	Y+24, r9	; 0x18
     ea8:	29 a9       	ldd	r18, Y+49	; 0x31
     eaa:	3a 89       	ldd	r19, Y+18	; 0x12
     eac:	4b 89       	ldd	r20, Y+19	; 0x13
     eae:	5c 89       	ldd	r21, Y+20	; 0x14
     eb0:	66 2d       	mov	r22, r6
     eb2:	7e 89       	ldd	r23, Y+22	; 0x16
     eb4:	8f 89       	ldd	r24, Y+23	; 0x17
     eb6:	98 8d       	ldd	r25, Y+24	; 0x18
     eb8:	c2 5a       	subi	r28, 0xA2	; 162
     eba:	df 4f       	sbci	r29, 0xFF	; 255
     ebc:	e2 e1       	ldi	r30, 0x12	; 18
     ebe:	0c 94 52 38 	jmp	0x70a4	; 0x70a4 <__epilogue_restores__>

00000ec2 <__umoddi3>:
     ec2:	ab e5       	ldi	r26, 0x5B	; 91
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e7 e6       	ldi	r30, 0x67	; 103
     ec8:	f7 e0       	ldi	r31, 0x07	; 7
     eca:	0c 94 36 38 	jmp	0x706c	; 0x706c <__prologue_saves__>
     ece:	a8 e0       	ldi	r26, 0x08	; 8
     ed0:	4e 01       	movw	r8, r28
     ed2:	08 94       	sec
     ed4:	81 1c       	adc	r8, r1
     ed6:	91 1c       	adc	r9, r1
     ed8:	f4 01       	movw	r30, r8
     eda:	6a 2e       	mov	r6, r26
     edc:	11 92       	st	Z+, r1
     ede:	6a 94       	dec	r6
     ee0:	e9 f7       	brne	.-6      	; 0xedc <__umoddi3+0x1a>
     ee2:	29 83       	std	Y+1, r18	; 0x01
     ee4:	3a 83       	std	Y+2, r19	; 0x02
     ee6:	4b 83       	std	Y+3, r20	; 0x03
     ee8:	5c 83       	std	Y+4, r21	; 0x04
     eea:	6d 83       	std	Y+5, r22	; 0x05
     eec:	7e 83       	std	Y+6, r23	; 0x06
     eee:	8f 83       	std	Y+7, r24	; 0x07
     ef0:	98 87       	std	Y+8, r25	; 0x08
     ef2:	ce 01       	movw	r24, r28
     ef4:	09 96       	adiw	r24, 0x09	; 9
     ef6:	fc 01       	movw	r30, r24
     ef8:	11 92       	st	Z+, r1
     efa:	aa 95       	dec	r26
     efc:	e9 f7       	brne	.-6      	; 0xef8 <__umoddi3+0x36>
     efe:	a9 86       	std	Y+9, r10	; 0x09
     f00:	ba 86       	std	Y+10, r11	; 0x0a
     f02:	cb 86       	std	Y+11, r12	; 0x0b
     f04:	dc 86       	std	Y+12, r13	; 0x0c
     f06:	ed 86       	std	Y+13, r14	; 0x0d
     f08:	fe 86       	std	Y+14, r15	; 0x0e
     f0a:	0f 87       	std	Y+15, r16	; 0x0f
     f0c:	18 8b       	std	Y+16, r17	; 0x10
     f0e:	29 84       	ldd	r2, Y+9	; 0x09
     f10:	3a 84       	ldd	r3, Y+10	; 0x0a
     f12:	4b 84       	ldd	r4, Y+11	; 0x0b
     f14:	5c 84       	ldd	r5, Y+12	; 0x0c
     f16:	ad 84       	ldd	r10, Y+13	; 0x0d
     f18:	be 84       	ldd	r11, Y+14	; 0x0e
     f1a:	cf 84       	ldd	r12, Y+15	; 0x0f
     f1c:	d8 88       	ldd	r13, Y+16	; 0x10
     f1e:	29 81       	ldd	r18, Y+1	; 0x01
     f20:	3a 81       	ldd	r19, Y+2	; 0x02
     f22:	4b 81       	ldd	r20, Y+3	; 0x03
     f24:	5c 81       	ldd	r21, Y+4	; 0x04
     f26:	69 96       	adiw	r28, 0x19	; 25
     f28:	2f af       	std	Y+63, r18	; 0x3f
     f2a:	69 97       	sbiw	r28, 0x19	; 25
     f2c:	6a 96       	adiw	r28, 0x1a	; 26
     f2e:	3f af       	std	Y+63, r19	; 0x3f
     f30:	6a 97       	sbiw	r28, 0x1a	; 26
     f32:	6b 96       	adiw	r28, 0x1b	; 27
     f34:	4f af       	std	Y+63, r20	; 0x3f
     f36:	6b 97       	sbiw	r28, 0x1b	; 27
     f38:	6c 96       	adiw	r28, 0x1c	; 28
     f3a:	5f af       	std	Y+63, r21	; 0x3f
     f3c:	6c 97       	sbiw	r28, 0x1c	; 28
     f3e:	6c 96       	adiw	r28, 0x1c	; 28
     f40:	6c ac       	ldd	r6, Y+60	; 0x3c
     f42:	7d ac       	ldd	r7, Y+61	; 0x3d
     f44:	8e ac       	ldd	r8, Y+62	; 0x3e
     f46:	9f ac       	ldd	r9, Y+63	; 0x3f
     f48:	6c 97       	sbiw	r28, 0x1c	; 28
     f4a:	69 aa       	std	Y+49, r6	; 0x31
     f4c:	7a aa       	std	Y+50, r7	; 0x32
     f4e:	8b aa       	std	Y+51, r8	; 0x33
     f50:	9c aa       	std	Y+52, r9	; 0x34
     f52:	6d 81       	ldd	r22, Y+5	; 0x05
     f54:	7e 81       	ldd	r23, Y+6	; 0x06
     f56:	8f 81       	ldd	r24, Y+7	; 0x07
     f58:	98 85       	ldd	r25, Y+8	; 0x08
     f5a:	3b 01       	movw	r6, r22
     f5c:	4c 01       	movw	r8, r24
     f5e:	6d aa       	std	Y+53, r6	; 0x35
     f60:	7e aa       	std	Y+54, r7	; 0x36
     f62:	8f aa       	std	Y+55, r8	; 0x37
     f64:	98 ae       	std	Y+56, r9	; 0x38
     f66:	a1 14       	cp	r10, r1
     f68:	b1 04       	cpc	r11, r1
     f6a:	c1 04       	cpc	r12, r1
     f6c:	d1 04       	cpc	r13, r1
     f6e:	09 f0       	breq	.+2      	; 0xf72 <__umoddi3+0xb0>
     f70:	04 c3       	rjmp	.+1544   	; 0x157a <__umoddi3+0x6b8>
     f72:	62 14       	cp	r6, r2
     f74:	73 04       	cpc	r7, r3
     f76:	84 04       	cpc	r8, r4
     f78:	95 04       	cpc	r9, r5
     f7a:	08 f0       	brcs	.+2      	; 0xf7e <__umoddi3+0xbc>
     f7c:	00 c1       	rjmp	.+512    	; 0x117e <__umoddi3+0x2bc>
     f7e:	00 e0       	ldi	r16, 0x00	; 0
     f80:	20 16       	cp	r2, r16
     f82:	00 e0       	ldi	r16, 0x00	; 0
     f84:	30 06       	cpc	r3, r16
     f86:	01 e0       	ldi	r16, 0x01	; 1
     f88:	40 06       	cpc	r4, r16
     f8a:	00 e0       	ldi	r16, 0x00	; 0
     f8c:	50 06       	cpc	r5, r16
     f8e:	88 f4       	brcc	.+34     	; 0xfb2 <__umoddi3+0xf0>
     f90:	1f ef       	ldi	r17, 0xFF	; 255
     f92:	21 16       	cp	r2, r17
     f94:	31 04       	cpc	r3, r1
     f96:	41 04       	cpc	r4, r1
     f98:	51 04       	cpc	r5, r1
     f9a:	39 f0       	breq	.+14     	; 0xfaa <__umoddi3+0xe8>
     f9c:	30 f0       	brcs	.+12     	; 0xfaa <__umoddi3+0xe8>
     f9e:	88 e0       	ldi	r24, 0x08	; 8
     fa0:	e8 2e       	mov	r14, r24
     fa2:	f1 2c       	mov	r15, r1
     fa4:	01 2d       	mov	r16, r1
     fa6:	11 2d       	mov	r17, r1
     fa8:	18 c0       	rjmp	.+48     	; 0xfda <__umoddi3+0x118>
     faa:	ee 24       	eor	r14, r14
     fac:	ff 24       	eor	r15, r15
     fae:	87 01       	movw	r16, r14
     fb0:	14 c0       	rjmp	.+40     	; 0xfda <__umoddi3+0x118>
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	24 16       	cp	r2, r20
     fb6:	40 e0       	ldi	r20, 0x00	; 0
     fb8:	34 06       	cpc	r3, r20
     fba:	40 e0       	ldi	r20, 0x00	; 0
     fbc:	44 06       	cpc	r4, r20
     fbe:	41 e0       	ldi	r20, 0x01	; 1
     fc0:	54 06       	cpc	r5, r20
     fc2:	30 f0       	brcs	.+12     	; 0xfd0 <__umoddi3+0x10e>
     fc4:	b8 e1       	ldi	r27, 0x18	; 24
     fc6:	eb 2e       	mov	r14, r27
     fc8:	f1 2c       	mov	r15, r1
     fca:	01 2d       	mov	r16, r1
     fcc:	11 2d       	mov	r17, r1
     fce:	05 c0       	rjmp	.+10     	; 0xfda <__umoddi3+0x118>
     fd0:	a0 e1       	ldi	r26, 0x10	; 16
     fd2:	ea 2e       	mov	r14, r26
     fd4:	f1 2c       	mov	r15, r1
     fd6:	01 2d       	mov	r16, r1
     fd8:	11 2d       	mov	r17, r1
     fda:	d2 01       	movw	r26, r4
     fdc:	c1 01       	movw	r24, r2
     fde:	0e 2c       	mov	r0, r14
     fe0:	04 c0       	rjmp	.+8      	; 0xfea <__umoddi3+0x128>
     fe2:	b6 95       	lsr	r27
     fe4:	a7 95       	ror	r26
     fe6:	97 95       	ror	r25
     fe8:	87 95       	ror	r24
     fea:	0a 94       	dec	r0
     fec:	d2 f7       	brpl	.-12     	; 0xfe2 <__umoddi3+0x120>
     fee:	86 58       	subi	r24, 0x86	; 134
     ff0:	9f 4f       	sbci	r25, 0xFF	; 255
     ff2:	dc 01       	movw	r26, r24
     ff4:	2c 91       	ld	r18, X
     ff6:	80 e2       	ldi	r24, 0x20	; 32
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	a0 e0       	ldi	r26, 0x00	; 0
     ffc:	b0 e0       	ldi	r27, 0x00	; 0
     ffe:	8e 19       	sub	r24, r14
    1000:	9f 09       	sbc	r25, r15
    1002:	a0 0b       	sbc	r26, r16
    1004:	b1 0b       	sbc	r27, r17
    1006:	5c 01       	movw	r10, r24
    1008:	6d 01       	movw	r12, r26
    100a:	a2 1a       	sub	r10, r18
    100c:	b1 08       	sbc	r11, r1
    100e:	c1 08       	sbc	r12, r1
    1010:	d1 08       	sbc	r13, r1
    1012:	a9 ae       	std	Y+57, r10	; 0x39
    1014:	ba ae       	std	Y+58, r11	; 0x3a
    1016:	cb ae       	std	Y+59, r12	; 0x3b
    1018:	dc ae       	std	Y+60, r13	; 0x3c
    101a:	a1 14       	cp	r10, r1
    101c:	b1 04       	cpc	r11, r1
    101e:	c1 04       	cpc	r12, r1
    1020:	d1 04       	cpc	r13, r1
    1022:	09 f4       	brne	.+2      	; 0x1026 <__umoddi3+0x164>
    1024:	3f c0       	rjmp	.+126    	; 0x10a4 <__umoddi3+0x1e2>
    1026:	69 ad       	ldd	r22, Y+57	; 0x39
    1028:	06 2e       	mov	r0, r22
    102a:	04 c0       	rjmp	.+8      	; 0x1034 <__umoddi3+0x172>
    102c:	22 0c       	add	r2, r2
    102e:	33 1c       	adc	r3, r3
    1030:	44 1c       	adc	r4, r4
    1032:	55 1c       	adc	r5, r5
    1034:	0a 94       	dec	r0
    1036:	d2 f7       	brpl	.-12     	; 0x102c <__umoddi3+0x16a>
    1038:	a4 01       	movw	r20, r8
    103a:	93 01       	movw	r18, r6
    103c:	06 2e       	mov	r0, r22
    103e:	04 c0       	rjmp	.+8      	; 0x1048 <__umoddi3+0x186>
    1040:	22 0f       	add	r18, r18
    1042:	33 1f       	adc	r19, r19
    1044:	44 1f       	adc	r20, r20
    1046:	55 1f       	adc	r21, r21
    1048:	0a 94       	dec	r0
    104a:	d2 f7       	brpl	.-12     	; 0x1040 <__umoddi3+0x17e>
    104c:	80 e2       	ldi	r24, 0x20	; 32
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	8a 19       	sub	r24, r10
    1052:	9b 09       	sbc	r25, r11
    1054:	6c 96       	adiw	r28, 0x1c	; 28
    1056:	cc ac       	ldd	r12, Y+60	; 0x3c
    1058:	dd ac       	ldd	r13, Y+61	; 0x3d
    105a:	ee ac       	ldd	r14, Y+62	; 0x3e
    105c:	ff ac       	ldd	r15, Y+63	; 0x3f
    105e:	6c 97       	sbiw	r28, 0x1c	; 28
    1060:	04 c0       	rjmp	.+8      	; 0x106a <__umoddi3+0x1a8>
    1062:	f6 94       	lsr	r15
    1064:	e7 94       	ror	r14
    1066:	d7 94       	ror	r13
    1068:	c7 94       	ror	r12
    106a:	8a 95       	dec	r24
    106c:	d2 f7       	brpl	.-12     	; 0x1062 <__umoddi3+0x1a0>
    106e:	87 01       	movw	r16, r14
    1070:	76 01       	movw	r14, r12
    1072:	e2 2a       	or	r14, r18
    1074:	f3 2a       	or	r15, r19
    1076:	04 2b       	or	r16, r20
    1078:	15 2b       	or	r17, r21
    107a:	ed aa       	std	Y+53, r14	; 0x35
    107c:	fe aa       	std	Y+54, r15	; 0x36
    107e:	0f ab       	std	Y+55, r16	; 0x37
    1080:	18 af       	std	Y+56, r17	; 0x38
    1082:	6c 96       	adiw	r28, 0x1c	; 28
    1084:	8c ad       	ldd	r24, Y+60	; 0x3c
    1086:	9d ad       	ldd	r25, Y+61	; 0x3d
    1088:	ae ad       	ldd	r26, Y+62	; 0x3e
    108a:	bf ad       	ldd	r27, Y+63	; 0x3f
    108c:	6c 97       	sbiw	r28, 0x1c	; 28
    108e:	04 c0       	rjmp	.+8      	; 0x1098 <__umoddi3+0x1d6>
    1090:	88 0f       	add	r24, r24
    1092:	99 1f       	adc	r25, r25
    1094:	aa 1f       	adc	r26, r26
    1096:	bb 1f       	adc	r27, r27
    1098:	6a 95       	dec	r22
    109a:	d2 f7       	brpl	.-12     	; 0x1090 <__umoddi3+0x1ce>
    109c:	89 ab       	std	Y+49, r24	; 0x31
    109e:	9a ab       	std	Y+50, r25	; 0x32
    10a0:	ab ab       	std	Y+51, r26	; 0x33
    10a2:	bc ab       	std	Y+52, r27	; 0x34
    10a4:	32 01       	movw	r6, r4
    10a6:	88 24       	eor	r8, r8
    10a8:	99 24       	eor	r9, r9
    10aa:	b2 01       	movw	r22, r4
    10ac:	a1 01       	movw	r20, r2
    10ae:	60 70       	andi	r22, 0x00	; 0
    10b0:	70 70       	andi	r23, 0x00	; 0
    10b2:	21 96       	adiw	r28, 0x01	; 1
    10b4:	4c af       	std	Y+60, r20	; 0x3c
    10b6:	5d af       	std	Y+61, r21	; 0x3d
    10b8:	6e af       	std	Y+62, r22	; 0x3e
    10ba:	7f af       	std	Y+63, r23	; 0x3f
    10bc:	21 97       	sbiw	r28, 0x01	; 1
    10be:	6d a9       	ldd	r22, Y+53	; 0x35
    10c0:	7e a9       	ldd	r23, Y+54	; 0x36
    10c2:	8f a9       	ldd	r24, Y+55	; 0x37
    10c4:	98 ad       	ldd	r25, Y+56	; 0x38
    10c6:	a4 01       	movw	r20, r8
    10c8:	93 01       	movw	r18, r6
    10ca:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    10ce:	7b 01       	movw	r14, r22
    10d0:	8c 01       	movw	r16, r24
    10d2:	6d a9       	ldd	r22, Y+53	; 0x35
    10d4:	7e a9       	ldd	r23, Y+54	; 0x36
    10d6:	8f a9       	ldd	r24, Y+55	; 0x37
    10d8:	98 ad       	ldd	r25, Y+56	; 0x38
    10da:	a4 01       	movw	r20, r8
    10dc:	93 01       	movw	r18, r6
    10de:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    10e2:	ca 01       	movw	r24, r20
    10e4:	b9 01       	movw	r22, r18
    10e6:	21 96       	adiw	r28, 0x01	; 1
    10e8:	2c ad       	ldd	r18, Y+60	; 0x3c
    10ea:	3d ad       	ldd	r19, Y+61	; 0x3d
    10ec:	4e ad       	ldd	r20, Y+62	; 0x3e
    10ee:	5f ad       	ldd	r21, Y+63	; 0x3f
    10f0:	21 97       	sbiw	r28, 0x01	; 1
    10f2:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    10f6:	9b 01       	movw	r18, r22
    10f8:	ac 01       	movw	r20, r24
    10fa:	87 01       	movw	r16, r14
    10fc:	ff 24       	eor	r15, r15
    10fe:	ee 24       	eor	r14, r14
    1100:	a9 a8       	ldd	r10, Y+49	; 0x31
    1102:	ba a8       	ldd	r11, Y+50	; 0x32
    1104:	cb a8       	ldd	r12, Y+51	; 0x33
    1106:	dc a8       	ldd	r13, Y+52	; 0x34
    1108:	c6 01       	movw	r24, r12
    110a:	aa 27       	eor	r26, r26
    110c:	bb 27       	eor	r27, r27
    110e:	57 01       	movw	r10, r14
    1110:	68 01       	movw	r12, r16
    1112:	a8 2a       	or	r10, r24
    1114:	b9 2a       	or	r11, r25
    1116:	ca 2a       	or	r12, r26
    1118:	db 2a       	or	r13, r27
    111a:	a2 16       	cp	r10, r18
    111c:	b3 06       	cpc	r11, r19
    111e:	c4 06       	cpc	r12, r20
    1120:	d5 06       	cpc	r13, r21
    1122:	90 f4       	brcc	.+36     	; 0x1148 <__umoddi3+0x286>
    1124:	a2 0c       	add	r10, r2
    1126:	b3 1c       	adc	r11, r3
    1128:	c4 1c       	adc	r12, r4
    112a:	d5 1c       	adc	r13, r5
    112c:	a2 14       	cp	r10, r2
    112e:	b3 04       	cpc	r11, r3
    1130:	c4 04       	cpc	r12, r4
    1132:	d5 04       	cpc	r13, r5
    1134:	48 f0       	brcs	.+18     	; 0x1148 <__umoddi3+0x286>
    1136:	a2 16       	cp	r10, r18
    1138:	b3 06       	cpc	r11, r19
    113a:	c4 06       	cpc	r12, r20
    113c:	d5 06       	cpc	r13, r21
    113e:	20 f4       	brcc	.+8      	; 0x1148 <__umoddi3+0x286>
    1140:	a2 0c       	add	r10, r2
    1142:	b3 1c       	adc	r11, r3
    1144:	c4 1c       	adc	r12, r4
    1146:	d5 1c       	adc	r13, r5
    1148:	a2 1a       	sub	r10, r18
    114a:	b3 0a       	sbc	r11, r19
    114c:	c4 0a       	sbc	r12, r20
    114e:	d5 0a       	sbc	r13, r21
    1150:	c6 01       	movw	r24, r12
    1152:	b5 01       	movw	r22, r10
    1154:	a4 01       	movw	r20, r8
    1156:	93 01       	movw	r18, r6
    1158:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    115c:	7b 01       	movw	r14, r22
    115e:	8c 01       	movw	r16, r24
    1160:	c6 01       	movw	r24, r12
    1162:	b5 01       	movw	r22, r10
    1164:	a4 01       	movw	r20, r8
    1166:	93 01       	movw	r18, r6
    1168:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    116c:	ca 01       	movw	r24, r20
    116e:	b9 01       	movw	r22, r18
    1170:	21 96       	adiw	r28, 0x01	; 1
    1172:	2c ad       	ldd	r18, Y+60	; 0x3c
    1174:	3d ad       	ldd	r19, Y+61	; 0x3d
    1176:	4e ad       	ldd	r20, Y+62	; 0x3e
    1178:	5f ad       	ldd	r21, Y+63	; 0x3f
    117a:	21 97       	sbiw	r28, 0x01	; 1
    117c:	ba c1       	rjmp	.+884    	; 0x14f2 <__umoddi3+0x630>
    117e:	21 14       	cp	r2, r1
    1180:	31 04       	cpc	r3, r1
    1182:	41 04       	cpc	r4, r1
    1184:	51 04       	cpc	r5, r1
    1186:	71 f4       	brne	.+28     	; 0x11a4 <__umoddi3+0x2e2>
    1188:	61 e0       	ldi	r22, 0x01	; 1
    118a:	70 e0       	ldi	r23, 0x00	; 0
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	40 e0       	ldi	r20, 0x00	; 0
    1196:	50 e0       	ldi	r21, 0x00	; 0
    1198:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    119c:	c9 01       	movw	r24, r18
    119e:	da 01       	movw	r26, r20
    11a0:	1c 01       	movw	r2, r24
    11a2:	2d 01       	movw	r4, r26
    11a4:	00 e0       	ldi	r16, 0x00	; 0
    11a6:	20 16       	cp	r2, r16
    11a8:	00 e0       	ldi	r16, 0x00	; 0
    11aa:	30 06       	cpc	r3, r16
    11ac:	01 e0       	ldi	r16, 0x01	; 1
    11ae:	40 06       	cpc	r4, r16
    11b0:	00 e0       	ldi	r16, 0x00	; 0
    11b2:	50 06       	cpc	r5, r16
    11b4:	88 f4       	brcc	.+34     	; 0x11d8 <__umoddi3+0x316>
    11b6:	1f ef       	ldi	r17, 0xFF	; 255
    11b8:	21 16       	cp	r2, r17
    11ba:	31 04       	cpc	r3, r1
    11bc:	41 04       	cpc	r4, r1
    11be:	51 04       	cpc	r5, r1
    11c0:	39 f0       	breq	.+14     	; 0x11d0 <__umoddi3+0x30e>
    11c2:	30 f0       	brcs	.+12     	; 0x11d0 <__umoddi3+0x30e>
    11c4:	68 e0       	ldi	r22, 0x08	; 8
    11c6:	e6 2e       	mov	r14, r22
    11c8:	f1 2c       	mov	r15, r1
    11ca:	01 2d       	mov	r16, r1
    11cc:	11 2d       	mov	r17, r1
    11ce:	18 c0       	rjmp	.+48     	; 0x1200 <__umoddi3+0x33e>
    11d0:	ee 24       	eor	r14, r14
    11d2:	ff 24       	eor	r15, r15
    11d4:	87 01       	movw	r16, r14
    11d6:	14 c0       	rjmp	.+40     	; 0x1200 <__umoddi3+0x33e>
    11d8:	40 e0       	ldi	r20, 0x00	; 0
    11da:	24 16       	cp	r2, r20
    11dc:	40 e0       	ldi	r20, 0x00	; 0
    11de:	34 06       	cpc	r3, r20
    11e0:	40 e0       	ldi	r20, 0x00	; 0
    11e2:	44 06       	cpc	r4, r20
    11e4:	41 e0       	ldi	r20, 0x01	; 1
    11e6:	54 06       	cpc	r5, r20
    11e8:	30 f0       	brcs	.+12     	; 0x11f6 <__umoddi3+0x334>
    11ea:	58 e1       	ldi	r21, 0x18	; 24
    11ec:	e5 2e       	mov	r14, r21
    11ee:	f1 2c       	mov	r15, r1
    11f0:	01 2d       	mov	r16, r1
    11f2:	11 2d       	mov	r17, r1
    11f4:	05 c0       	rjmp	.+10     	; 0x1200 <__umoddi3+0x33e>
    11f6:	40 e1       	ldi	r20, 0x10	; 16
    11f8:	e4 2e       	mov	r14, r20
    11fa:	f1 2c       	mov	r15, r1
    11fc:	01 2d       	mov	r16, r1
    11fe:	11 2d       	mov	r17, r1
    1200:	d2 01       	movw	r26, r4
    1202:	c1 01       	movw	r24, r2
    1204:	0e 2c       	mov	r0, r14
    1206:	04 c0       	rjmp	.+8      	; 0x1210 <__umoddi3+0x34e>
    1208:	b6 95       	lsr	r27
    120a:	a7 95       	ror	r26
    120c:	97 95       	ror	r25
    120e:	87 95       	ror	r24
    1210:	0a 94       	dec	r0
    1212:	d2 f7       	brpl	.-12     	; 0x1208 <__umoddi3+0x346>
    1214:	86 58       	subi	r24, 0x86	; 134
    1216:	9f 4f       	sbci	r25, 0xFF	; 255
    1218:	dc 01       	movw	r26, r24
    121a:	2c 91       	ld	r18, X
    121c:	30 e2       	ldi	r19, 0x20	; 32
    121e:	a3 2e       	mov	r10, r19
    1220:	b1 2c       	mov	r11, r1
    1222:	c1 2c       	mov	r12, r1
    1224:	d1 2c       	mov	r13, r1
    1226:	d6 01       	movw	r26, r12
    1228:	c5 01       	movw	r24, r10
    122a:	8e 19       	sub	r24, r14
    122c:	9f 09       	sbc	r25, r15
    122e:	a0 0b       	sbc	r26, r16
    1230:	b1 0b       	sbc	r27, r17
    1232:	7c 01       	movw	r14, r24
    1234:	8d 01       	movw	r16, r26
    1236:	e2 1a       	sub	r14, r18
    1238:	f1 08       	sbc	r15, r1
    123a:	01 09       	sbc	r16, r1
    123c:	11 09       	sbc	r17, r1
    123e:	e9 ae       	std	Y+57, r14	; 0x39
    1240:	fa ae       	std	Y+58, r15	; 0x3a
    1242:	0b af       	std	Y+59, r16	; 0x3b
    1244:	1c af       	std	Y+60, r17	; 0x3c
    1246:	e1 14       	cp	r14, r1
    1248:	f1 04       	cpc	r15, r1
    124a:	01 05       	cpc	r16, r1
    124c:	11 05       	cpc	r17, r1
    124e:	39 f4       	brne	.+14     	; 0x125e <__umoddi3+0x39c>
    1250:	64 01       	movw	r12, r8
    1252:	53 01       	movw	r10, r6
    1254:	a2 18       	sub	r10, r2
    1256:	b3 08       	sbc	r11, r3
    1258:	c4 08       	sbc	r12, r4
    125a:	d5 08       	sbc	r13, r5
    125c:	e2 c0       	rjmp	.+452    	; 0x1422 <__umoddi3+0x560>
    125e:	f9 ac       	ldd	r15, Y+57	; 0x39
    1260:	68 96       	adiw	r28, 0x18	; 24
    1262:	ff ae       	std	Y+63, r15	; 0x3f
    1264:	68 97       	sbiw	r28, 0x18	; 24
    1266:	0f 2c       	mov	r0, r15
    1268:	04 c0       	rjmp	.+8      	; 0x1272 <__umoddi3+0x3b0>
    126a:	22 0c       	add	r2, r2
    126c:	33 1c       	adc	r3, r3
    126e:	44 1c       	adc	r4, r4
    1270:	55 1c       	adc	r5, r5
    1272:	0a 94       	dec	r0
    1274:	d2 f7       	brpl	.-12     	; 0x126a <__umoddi3+0x3a8>
    1276:	8a 2d       	mov	r24, r10
    1278:	8f 19       	sub	r24, r15
    127a:	64 01       	movw	r12, r8
    127c:	53 01       	movw	r10, r6
    127e:	08 2e       	mov	r0, r24
    1280:	04 c0       	rjmp	.+8      	; 0x128a <__umoddi3+0x3c8>
    1282:	d6 94       	lsr	r13
    1284:	c7 94       	ror	r12
    1286:	b7 94       	ror	r11
    1288:	a7 94       	ror	r10
    128a:	0a 94       	dec	r0
    128c:	d2 f7       	brpl	.-12     	; 0x1282 <__umoddi3+0x3c0>
    128e:	a4 01       	movw	r20, r8
    1290:	93 01       	movw	r18, r6
    1292:	04 c0       	rjmp	.+8      	; 0x129c <__umoddi3+0x3da>
    1294:	22 0f       	add	r18, r18
    1296:	33 1f       	adc	r19, r19
    1298:	44 1f       	adc	r20, r20
    129a:	55 1f       	adc	r21, r21
    129c:	fa 94       	dec	r15
    129e:	d2 f7       	brpl	.-12     	; 0x1294 <__umoddi3+0x3d2>
    12a0:	6c 96       	adiw	r28, 0x1c	; 28
    12a2:	6c ac       	ldd	r6, Y+60	; 0x3c
    12a4:	7d ac       	ldd	r7, Y+61	; 0x3d
    12a6:	8e ac       	ldd	r8, Y+62	; 0x3e
    12a8:	9f ac       	ldd	r9, Y+63	; 0x3f
    12aa:	6c 97       	sbiw	r28, 0x1c	; 28
    12ac:	04 c0       	rjmp	.+8      	; 0x12b6 <__umoddi3+0x3f4>
    12ae:	96 94       	lsr	r9
    12b0:	87 94       	ror	r8
    12b2:	77 94       	ror	r7
    12b4:	67 94       	ror	r6
    12b6:	8a 95       	dec	r24
    12b8:	d2 f7       	brpl	.-12     	; 0x12ae <__umoddi3+0x3ec>
    12ba:	84 01       	movw	r16, r8
    12bc:	73 01       	movw	r14, r6
    12be:	e2 2a       	or	r14, r18
    12c0:	f3 2a       	or	r15, r19
    12c2:	04 2b       	or	r16, r20
    12c4:	15 2b       	or	r17, r21
    12c6:	ed a6       	std	Y+45, r14	; 0x2d
    12c8:	fe a6       	std	Y+46, r15	; 0x2e
    12ca:	0f a7       	std	Y+47, r16	; 0x2f
    12cc:	18 ab       	std	Y+48, r17	; 0x30
    12ce:	32 01       	movw	r6, r4
    12d0:	88 24       	eor	r8, r8
    12d2:	99 24       	eor	r9, r9
    12d4:	b2 01       	movw	r22, r4
    12d6:	a1 01       	movw	r20, r2
    12d8:	60 70       	andi	r22, 0x00	; 0
    12da:	70 70       	andi	r23, 0x00	; 0
    12dc:	25 96       	adiw	r28, 0x05	; 5
    12de:	4c af       	std	Y+60, r20	; 0x3c
    12e0:	5d af       	std	Y+61, r21	; 0x3d
    12e2:	6e af       	std	Y+62, r22	; 0x3e
    12e4:	7f af       	std	Y+63, r23	; 0x3f
    12e6:	25 97       	sbiw	r28, 0x05	; 5
    12e8:	c6 01       	movw	r24, r12
    12ea:	b5 01       	movw	r22, r10
    12ec:	a4 01       	movw	r20, r8
    12ee:	93 01       	movw	r18, r6
    12f0:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    12f4:	7b 01       	movw	r14, r22
    12f6:	8c 01       	movw	r16, r24
    12f8:	c6 01       	movw	r24, r12
    12fa:	b5 01       	movw	r22, r10
    12fc:	a4 01       	movw	r20, r8
    12fe:	93 01       	movw	r18, r6
    1300:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    1304:	ca 01       	movw	r24, r20
    1306:	b9 01       	movw	r22, r18
    1308:	25 96       	adiw	r28, 0x05	; 5
    130a:	2c ad       	ldd	r18, Y+60	; 0x3c
    130c:	3d ad       	ldd	r19, Y+61	; 0x3d
    130e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1310:	5f ad       	ldd	r21, Y+63	; 0x3f
    1312:	25 97       	sbiw	r28, 0x05	; 5
    1314:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    1318:	9b 01       	movw	r18, r22
    131a:	ac 01       	movw	r20, r24
    131c:	87 01       	movw	r16, r14
    131e:	ff 24       	eor	r15, r15
    1320:	ee 24       	eor	r14, r14
    1322:	ad a4       	ldd	r10, Y+45	; 0x2d
    1324:	be a4       	ldd	r11, Y+46	; 0x2e
    1326:	cf a4       	ldd	r12, Y+47	; 0x2f
    1328:	d8 a8       	ldd	r13, Y+48	; 0x30
    132a:	c6 01       	movw	r24, r12
    132c:	aa 27       	eor	r26, r26
    132e:	bb 27       	eor	r27, r27
    1330:	5c 01       	movw	r10, r24
    1332:	6d 01       	movw	r12, r26
    1334:	ae 28       	or	r10, r14
    1336:	bf 28       	or	r11, r15
    1338:	c0 2a       	or	r12, r16
    133a:	d1 2a       	or	r13, r17
    133c:	a2 16       	cp	r10, r18
    133e:	b3 06       	cpc	r11, r19
    1340:	c4 06       	cpc	r12, r20
    1342:	d5 06       	cpc	r13, r21
    1344:	90 f4       	brcc	.+36     	; 0x136a <__umoddi3+0x4a8>
    1346:	a2 0c       	add	r10, r2
    1348:	b3 1c       	adc	r11, r3
    134a:	c4 1c       	adc	r12, r4
    134c:	d5 1c       	adc	r13, r5
    134e:	a2 14       	cp	r10, r2
    1350:	b3 04       	cpc	r11, r3
    1352:	c4 04       	cpc	r12, r4
    1354:	d5 04       	cpc	r13, r5
    1356:	48 f0       	brcs	.+18     	; 0x136a <__umoddi3+0x4a8>
    1358:	a2 16       	cp	r10, r18
    135a:	b3 06       	cpc	r11, r19
    135c:	c4 06       	cpc	r12, r20
    135e:	d5 06       	cpc	r13, r21
    1360:	20 f4       	brcc	.+8      	; 0x136a <__umoddi3+0x4a8>
    1362:	a2 0c       	add	r10, r2
    1364:	b3 1c       	adc	r11, r3
    1366:	c4 1c       	adc	r12, r4
    1368:	d5 1c       	adc	r13, r5
    136a:	a2 1a       	sub	r10, r18
    136c:	b3 0a       	sbc	r11, r19
    136e:	c4 0a       	sbc	r12, r20
    1370:	d5 0a       	sbc	r13, r21
    1372:	c6 01       	movw	r24, r12
    1374:	b5 01       	movw	r22, r10
    1376:	a4 01       	movw	r20, r8
    1378:	93 01       	movw	r18, r6
    137a:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    137e:	7b 01       	movw	r14, r22
    1380:	8c 01       	movw	r16, r24
    1382:	c6 01       	movw	r24, r12
    1384:	b5 01       	movw	r22, r10
    1386:	a4 01       	movw	r20, r8
    1388:	93 01       	movw	r18, r6
    138a:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    138e:	ca 01       	movw	r24, r20
    1390:	b9 01       	movw	r22, r18
    1392:	25 96       	adiw	r28, 0x05	; 5
    1394:	2c ad       	ldd	r18, Y+60	; 0x3c
    1396:	3d ad       	ldd	r19, Y+61	; 0x3d
    1398:	4e ad       	ldd	r20, Y+62	; 0x3e
    139a:	5f ad       	ldd	r21, Y+63	; 0x3f
    139c:	25 97       	sbiw	r28, 0x05	; 5
    139e:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    13a2:	9b 01       	movw	r18, r22
    13a4:	ac 01       	movw	r20, r24
    13a6:	87 01       	movw	r16, r14
    13a8:	ff 24       	eor	r15, r15
    13aa:	ee 24       	eor	r14, r14
    13ac:	8d a5       	ldd	r24, Y+45	; 0x2d
    13ae:	9e a5       	ldd	r25, Y+46	; 0x2e
    13b0:	af a5       	ldd	r26, Y+47	; 0x2f
    13b2:	b8 a9       	ldd	r27, Y+48	; 0x30
    13b4:	a0 70       	andi	r26, 0x00	; 0
    13b6:	b0 70       	andi	r27, 0x00	; 0
    13b8:	57 01       	movw	r10, r14
    13ba:	68 01       	movw	r12, r16
    13bc:	a8 2a       	or	r10, r24
    13be:	b9 2a       	or	r11, r25
    13c0:	ca 2a       	or	r12, r26
    13c2:	db 2a       	or	r13, r27
    13c4:	a2 16       	cp	r10, r18
    13c6:	b3 06       	cpc	r11, r19
    13c8:	c4 06       	cpc	r12, r20
    13ca:	d5 06       	cpc	r13, r21
    13cc:	90 f4       	brcc	.+36     	; 0x13f2 <__umoddi3+0x530>
    13ce:	a2 0c       	add	r10, r2
    13d0:	b3 1c       	adc	r11, r3
    13d2:	c4 1c       	adc	r12, r4
    13d4:	d5 1c       	adc	r13, r5
    13d6:	a2 14       	cp	r10, r2
    13d8:	b3 04       	cpc	r11, r3
    13da:	c4 04       	cpc	r12, r4
    13dc:	d5 04       	cpc	r13, r5
    13de:	48 f0       	brcs	.+18     	; 0x13f2 <__umoddi3+0x530>
    13e0:	a2 16       	cp	r10, r18
    13e2:	b3 06       	cpc	r11, r19
    13e4:	c4 06       	cpc	r12, r20
    13e6:	d5 06       	cpc	r13, r21
    13e8:	20 f4       	brcc	.+8      	; 0x13f2 <__umoddi3+0x530>
    13ea:	a2 0c       	add	r10, r2
    13ec:	b3 1c       	adc	r11, r3
    13ee:	c4 1c       	adc	r12, r4
    13f0:	d5 1c       	adc	r13, r5
    13f2:	6c 96       	adiw	r28, 0x1c	; 28
    13f4:	ec ac       	ldd	r14, Y+60	; 0x3c
    13f6:	fd ac       	ldd	r15, Y+61	; 0x3d
    13f8:	0e ad       	ldd	r16, Y+62	; 0x3e
    13fa:	1f ad       	ldd	r17, Y+63	; 0x3f
    13fc:	6c 97       	sbiw	r28, 0x1c	; 28
    13fe:	68 96       	adiw	r28, 0x18	; 24
    1400:	0f ac       	ldd	r0, Y+63	; 0x3f
    1402:	68 97       	sbiw	r28, 0x18	; 24
    1404:	04 c0       	rjmp	.+8      	; 0x140e <__umoddi3+0x54c>
    1406:	ee 0c       	add	r14, r14
    1408:	ff 1c       	adc	r15, r15
    140a:	00 1f       	adc	r16, r16
    140c:	11 1f       	adc	r17, r17
    140e:	0a 94       	dec	r0
    1410:	d2 f7       	brpl	.-12     	; 0x1406 <__umoddi3+0x544>
    1412:	e9 aa       	std	Y+49, r14	; 0x31
    1414:	fa aa       	std	Y+50, r15	; 0x32
    1416:	0b ab       	std	Y+51, r16	; 0x33
    1418:	1c ab       	std	Y+52, r17	; 0x34
    141a:	a2 1a       	sub	r10, r18
    141c:	b3 0a       	sbc	r11, r19
    141e:	c4 0a       	sbc	r12, r20
    1420:	d5 0a       	sbc	r13, r21
    1422:	32 01       	movw	r6, r4
    1424:	88 24       	eor	r8, r8
    1426:	99 24       	eor	r9, r9
    1428:	b2 01       	movw	r22, r4
    142a:	a1 01       	movw	r20, r2
    142c:	60 70       	andi	r22, 0x00	; 0
    142e:	70 70       	andi	r23, 0x00	; 0
    1430:	29 96       	adiw	r28, 0x09	; 9
    1432:	4c af       	std	Y+60, r20	; 0x3c
    1434:	5d af       	std	Y+61, r21	; 0x3d
    1436:	6e af       	std	Y+62, r22	; 0x3e
    1438:	7f af       	std	Y+63, r23	; 0x3f
    143a:	29 97       	sbiw	r28, 0x09	; 9
    143c:	c6 01       	movw	r24, r12
    143e:	b5 01       	movw	r22, r10
    1440:	a4 01       	movw	r20, r8
    1442:	93 01       	movw	r18, r6
    1444:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    1448:	7b 01       	movw	r14, r22
    144a:	8c 01       	movw	r16, r24
    144c:	c6 01       	movw	r24, r12
    144e:	b5 01       	movw	r22, r10
    1450:	a4 01       	movw	r20, r8
    1452:	93 01       	movw	r18, r6
    1454:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    1458:	ca 01       	movw	r24, r20
    145a:	b9 01       	movw	r22, r18
    145c:	29 96       	adiw	r28, 0x09	; 9
    145e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1460:	3d ad       	ldd	r19, Y+61	; 0x3d
    1462:	4e ad       	ldd	r20, Y+62	; 0x3e
    1464:	5f ad       	ldd	r21, Y+63	; 0x3f
    1466:	29 97       	sbiw	r28, 0x09	; 9
    1468:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    146c:	9b 01       	movw	r18, r22
    146e:	ac 01       	movw	r20, r24
    1470:	87 01       	movw	r16, r14
    1472:	ff 24       	eor	r15, r15
    1474:	ee 24       	eor	r14, r14
    1476:	a9 a8       	ldd	r10, Y+49	; 0x31
    1478:	ba a8       	ldd	r11, Y+50	; 0x32
    147a:	cb a8       	ldd	r12, Y+51	; 0x33
    147c:	dc a8       	ldd	r13, Y+52	; 0x34
    147e:	c6 01       	movw	r24, r12
    1480:	aa 27       	eor	r26, r26
    1482:	bb 27       	eor	r27, r27
    1484:	57 01       	movw	r10, r14
    1486:	68 01       	movw	r12, r16
    1488:	a8 2a       	or	r10, r24
    148a:	b9 2a       	or	r11, r25
    148c:	ca 2a       	or	r12, r26
    148e:	db 2a       	or	r13, r27
    1490:	a2 16       	cp	r10, r18
    1492:	b3 06       	cpc	r11, r19
    1494:	c4 06       	cpc	r12, r20
    1496:	d5 06       	cpc	r13, r21
    1498:	90 f4       	brcc	.+36     	; 0x14be <__umoddi3+0x5fc>
    149a:	a2 0c       	add	r10, r2
    149c:	b3 1c       	adc	r11, r3
    149e:	c4 1c       	adc	r12, r4
    14a0:	d5 1c       	adc	r13, r5
    14a2:	a2 14       	cp	r10, r2
    14a4:	b3 04       	cpc	r11, r3
    14a6:	c4 04       	cpc	r12, r4
    14a8:	d5 04       	cpc	r13, r5
    14aa:	48 f0       	brcs	.+18     	; 0x14be <__umoddi3+0x5fc>
    14ac:	a2 16       	cp	r10, r18
    14ae:	b3 06       	cpc	r11, r19
    14b0:	c4 06       	cpc	r12, r20
    14b2:	d5 06       	cpc	r13, r21
    14b4:	20 f4       	brcc	.+8      	; 0x14be <__umoddi3+0x5fc>
    14b6:	a2 0c       	add	r10, r2
    14b8:	b3 1c       	adc	r11, r3
    14ba:	c4 1c       	adc	r12, r4
    14bc:	d5 1c       	adc	r13, r5
    14be:	a2 1a       	sub	r10, r18
    14c0:	b3 0a       	sbc	r11, r19
    14c2:	c4 0a       	sbc	r12, r20
    14c4:	d5 0a       	sbc	r13, r21
    14c6:	c6 01       	movw	r24, r12
    14c8:	b5 01       	movw	r22, r10
    14ca:	a4 01       	movw	r20, r8
    14cc:	93 01       	movw	r18, r6
    14ce:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    14d2:	7b 01       	movw	r14, r22
    14d4:	8c 01       	movw	r16, r24
    14d6:	c6 01       	movw	r24, r12
    14d8:	b5 01       	movw	r22, r10
    14da:	a4 01       	movw	r20, r8
    14dc:	93 01       	movw	r18, r6
    14de:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    14e2:	ca 01       	movw	r24, r20
    14e4:	b9 01       	movw	r22, r18
    14e6:	29 96       	adiw	r28, 0x09	; 9
    14e8:	2c ad       	ldd	r18, Y+60	; 0x3c
    14ea:	3d ad       	ldd	r19, Y+61	; 0x3d
    14ec:	4e ad       	ldd	r20, Y+62	; 0x3e
    14ee:	5f ad       	ldd	r21, Y+63	; 0x3f
    14f0:	29 97       	sbiw	r28, 0x09	; 9
    14f2:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    14f6:	9b 01       	movw	r18, r22
    14f8:	ac 01       	movw	r20, r24
    14fa:	87 01       	movw	r16, r14
    14fc:	ff 24       	eor	r15, r15
    14fe:	ee 24       	eor	r14, r14
    1500:	89 a9       	ldd	r24, Y+49	; 0x31
    1502:	9a a9       	ldd	r25, Y+50	; 0x32
    1504:	ab a9       	ldd	r26, Y+51	; 0x33
    1506:	bc a9       	ldd	r27, Y+52	; 0x34
    1508:	a0 70       	andi	r26, 0x00	; 0
    150a:	b0 70       	andi	r27, 0x00	; 0
    150c:	e8 2a       	or	r14, r24
    150e:	f9 2a       	or	r15, r25
    1510:	0a 2b       	or	r16, r26
    1512:	1b 2b       	or	r17, r27
    1514:	e2 16       	cp	r14, r18
    1516:	f3 06       	cpc	r15, r19
    1518:	04 07       	cpc	r16, r20
    151a:	15 07       	cpc	r17, r21
    151c:	90 f4       	brcc	.+36     	; 0x1542 <__umoddi3+0x680>
    151e:	e2 0c       	add	r14, r2
    1520:	f3 1c       	adc	r15, r3
    1522:	04 1d       	adc	r16, r4
    1524:	15 1d       	adc	r17, r5
    1526:	e2 14       	cp	r14, r2
    1528:	f3 04       	cpc	r15, r3
    152a:	04 05       	cpc	r16, r4
    152c:	15 05       	cpc	r17, r5
    152e:	48 f0       	brcs	.+18     	; 0x1542 <__umoddi3+0x680>
    1530:	e2 16       	cp	r14, r18
    1532:	f3 06       	cpc	r15, r19
    1534:	04 07       	cpc	r16, r20
    1536:	15 07       	cpc	r17, r21
    1538:	20 f4       	brcc	.+8      	; 0x1542 <__umoddi3+0x680>
    153a:	e2 0c       	add	r14, r2
    153c:	f3 1c       	adc	r15, r3
    153e:	04 1d       	adc	r16, r4
    1540:	15 1d       	adc	r17, r5
    1542:	e2 1a       	sub	r14, r18
    1544:	f3 0a       	sbc	r15, r19
    1546:	04 0b       	sbc	r16, r20
    1548:	15 0b       	sbc	r17, r21
    154a:	d8 01       	movw	r26, r16
    154c:	c7 01       	movw	r24, r14
    154e:	09 ac       	ldd	r0, Y+57	; 0x39
    1550:	04 c0       	rjmp	.+8      	; 0x155a <__umoddi3+0x698>
    1552:	b6 95       	lsr	r27
    1554:	a7 95       	ror	r26
    1556:	97 95       	ror	r25
    1558:	87 95       	ror	r24
    155a:	0a 94       	dec	r0
    155c:	d2 f7       	brpl	.-12     	; 0x1552 <__umoddi3+0x690>
    155e:	89 8b       	std	Y+17, r24	; 0x11
    1560:	9a 8b       	std	Y+18, r25	; 0x12
    1562:	ab 8b       	std	Y+19, r26	; 0x13
    1564:	bc 8b       	std	Y+20, r27	; 0x14
    1566:	1d 8a       	std	Y+21, r1	; 0x15
    1568:	1e 8a       	std	Y+22, r1	; 0x16
    156a:	1f 8a       	std	Y+23, r1	; 0x17
    156c:	18 8e       	std	Y+24, r1	; 0x18
    156e:	28 2f       	mov	r18, r24
    1570:	3a 89       	ldd	r19, Y+18	; 0x12
    1572:	4b 89       	ldd	r20, Y+19	; 0x13
    1574:	5c 89       	ldd	r21, Y+20	; 0x14
    1576:	6d 89       	ldd	r22, Y+21	; 0x15
    1578:	0c c3       	rjmp	.+1560   	; 0x1b92 <__umoddi3+0xcd0>
    157a:	6a 14       	cp	r6, r10
    157c:	7b 04       	cpc	r7, r11
    157e:	8c 04       	cpc	r8, r12
    1580:	9d 04       	cpc	r9, r13
    1582:	08 f4       	brcc	.+2      	; 0x1586 <__umoddi3+0x6c4>
    1584:	09 c3       	rjmp	.+1554   	; 0x1b98 <__umoddi3+0xcd6>
    1586:	00 e0       	ldi	r16, 0x00	; 0
    1588:	a0 16       	cp	r10, r16
    158a:	00 e0       	ldi	r16, 0x00	; 0
    158c:	b0 06       	cpc	r11, r16
    158e:	01 e0       	ldi	r16, 0x01	; 1
    1590:	c0 06       	cpc	r12, r16
    1592:	00 e0       	ldi	r16, 0x00	; 0
    1594:	d0 06       	cpc	r13, r16
    1596:	88 f4       	brcc	.+34     	; 0x15ba <__umoddi3+0x6f8>
    1598:	1f ef       	ldi	r17, 0xFF	; 255
    159a:	a1 16       	cp	r10, r17
    159c:	b1 04       	cpc	r11, r1
    159e:	c1 04       	cpc	r12, r1
    15a0:	d1 04       	cpc	r13, r1
    15a2:	39 f0       	breq	.+14     	; 0x15b2 <__umoddi3+0x6f0>
    15a4:	30 f0       	brcs	.+12     	; 0x15b2 <__umoddi3+0x6f0>
    15a6:	28 e0       	ldi	r18, 0x08	; 8
    15a8:	e2 2e       	mov	r14, r18
    15aa:	f1 2c       	mov	r15, r1
    15ac:	01 2d       	mov	r16, r1
    15ae:	11 2d       	mov	r17, r1
    15b0:	18 c0       	rjmp	.+48     	; 0x15e2 <__umoddi3+0x720>
    15b2:	ee 24       	eor	r14, r14
    15b4:	ff 24       	eor	r15, r15
    15b6:	87 01       	movw	r16, r14
    15b8:	14 c0       	rjmp	.+40     	; 0x15e2 <__umoddi3+0x720>
    15ba:	40 e0       	ldi	r20, 0x00	; 0
    15bc:	a4 16       	cp	r10, r20
    15be:	40 e0       	ldi	r20, 0x00	; 0
    15c0:	b4 06       	cpc	r11, r20
    15c2:	40 e0       	ldi	r20, 0x00	; 0
    15c4:	c4 06       	cpc	r12, r20
    15c6:	41 e0       	ldi	r20, 0x01	; 1
    15c8:	d4 06       	cpc	r13, r20
    15ca:	30 f0       	brcs	.+12     	; 0x15d8 <__umoddi3+0x716>
    15cc:	98 e1       	ldi	r25, 0x18	; 24
    15ce:	e9 2e       	mov	r14, r25
    15d0:	f1 2c       	mov	r15, r1
    15d2:	01 2d       	mov	r16, r1
    15d4:	11 2d       	mov	r17, r1
    15d6:	05 c0       	rjmp	.+10     	; 0x15e2 <__umoddi3+0x720>
    15d8:	80 e1       	ldi	r24, 0x10	; 16
    15da:	e8 2e       	mov	r14, r24
    15dc:	f1 2c       	mov	r15, r1
    15de:	01 2d       	mov	r16, r1
    15e0:	11 2d       	mov	r17, r1
    15e2:	d6 01       	movw	r26, r12
    15e4:	c5 01       	movw	r24, r10
    15e6:	0e 2c       	mov	r0, r14
    15e8:	04 c0       	rjmp	.+8      	; 0x15f2 <__umoddi3+0x730>
    15ea:	b6 95       	lsr	r27
    15ec:	a7 95       	ror	r26
    15ee:	97 95       	ror	r25
    15f0:	87 95       	ror	r24
    15f2:	0a 94       	dec	r0
    15f4:	d2 f7       	brpl	.-12     	; 0x15ea <__umoddi3+0x728>
    15f6:	86 58       	subi	r24, 0x86	; 134
    15f8:	9f 4f       	sbci	r25, 0xFF	; 255
    15fa:	dc 01       	movw	r26, r24
    15fc:	2c 91       	ld	r18, X
    15fe:	80 e2       	ldi	r24, 0x20	; 32
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	a0 e0       	ldi	r26, 0x00	; 0
    1604:	b0 e0       	ldi	r27, 0x00	; 0
    1606:	8e 19       	sub	r24, r14
    1608:	9f 09       	sbc	r25, r15
    160a:	a0 0b       	sbc	r26, r16
    160c:	b1 0b       	sbc	r27, r17
    160e:	82 1b       	sub	r24, r18
    1610:	91 09       	sbc	r25, r1
    1612:	a1 09       	sbc	r26, r1
    1614:	b1 09       	sbc	r27, r1
    1616:	00 97       	sbiw	r24, 0x00	; 0
    1618:	a1 05       	cpc	r26, r1
    161a:	b1 05       	cpc	r27, r1
    161c:	09 f0       	breq	.+2      	; 0x1620 <__umoddi3+0x75e>
    161e:	4f c0       	rjmp	.+158    	; 0x16be <__umoddi3+0x7fc>
    1620:	a6 14       	cp	r10, r6
    1622:	b7 04       	cpc	r11, r7
    1624:	c8 04       	cpc	r12, r8
    1626:	d9 04       	cpc	r13, r9
    1628:	58 f0       	brcs	.+22     	; 0x1640 <__umoddi3+0x77e>
    162a:	6c 96       	adiw	r28, 0x1c	; 28
    162c:	ec ac       	ldd	r14, Y+60	; 0x3c
    162e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1630:	0e ad       	ldd	r16, Y+62	; 0x3e
    1632:	1f ad       	ldd	r17, Y+63	; 0x3f
    1634:	6c 97       	sbiw	r28, 0x1c	; 28
    1636:	e2 14       	cp	r14, r2
    1638:	f3 04       	cpc	r15, r3
    163a:	04 05       	cpc	r16, r4
    163c:	15 05       	cpc	r17, r5
    163e:	68 f1       	brcs	.+90     	; 0x169a <__umoddi3+0x7d8>
    1640:	6c 96       	adiw	r28, 0x1c	; 28
    1642:	ec ac       	ldd	r14, Y+60	; 0x3c
    1644:	fd ac       	ldd	r15, Y+61	; 0x3d
    1646:	0e ad       	ldd	r16, Y+62	; 0x3e
    1648:	1f ad       	ldd	r17, Y+63	; 0x3f
    164a:	6c 97       	sbiw	r28, 0x1c	; 28
    164c:	e2 18       	sub	r14, r2
    164e:	f3 08       	sbc	r15, r3
    1650:	04 09       	sbc	r16, r4
    1652:	15 09       	sbc	r17, r5
    1654:	a4 01       	movw	r20, r8
    1656:	93 01       	movw	r18, r6
    1658:	2a 19       	sub	r18, r10
    165a:	3b 09       	sbc	r19, r11
    165c:	4c 09       	sbc	r20, r12
    165e:	5d 09       	sbc	r21, r13
    1660:	aa 24       	eor	r10, r10
    1662:	bb 24       	eor	r11, r11
    1664:	65 01       	movw	r12, r10
    1666:	6c 96       	adiw	r28, 0x1c	; 28
    1668:	6c ad       	ldd	r22, Y+60	; 0x3c
    166a:	7d ad       	ldd	r23, Y+61	; 0x3d
    166c:	8e ad       	ldd	r24, Y+62	; 0x3e
    166e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1670:	6c 97       	sbiw	r28, 0x1c	; 28
    1672:	6e 15       	cp	r22, r14
    1674:	7f 05       	cpc	r23, r15
    1676:	80 07       	cpc	r24, r16
    1678:	91 07       	cpc	r25, r17
    167a:	28 f4       	brcc	.+10     	; 0x1686 <__umoddi3+0x7c4>
    167c:	b1 e0       	ldi	r27, 0x01	; 1
    167e:	ab 2e       	mov	r10, r27
    1680:	b1 2c       	mov	r11, r1
    1682:	c1 2c       	mov	r12, r1
    1684:	d1 2c       	mov	r13, r1
    1686:	da 01       	movw	r26, r20
    1688:	c9 01       	movw	r24, r18
    168a:	8a 19       	sub	r24, r10
    168c:	9b 09       	sbc	r25, r11
    168e:	ac 09       	sbc	r26, r12
    1690:	bd 09       	sbc	r27, r13
    1692:	8d ab       	std	Y+53, r24	; 0x35
    1694:	9e ab       	std	Y+54, r25	; 0x36
    1696:	af ab       	std	Y+55, r26	; 0x37
    1698:	b8 af       	std	Y+56, r27	; 0x38
    169a:	e9 8a       	std	Y+17, r14	; 0x11
    169c:	fa 8a       	std	Y+18, r15	; 0x12
    169e:	0b 8b       	std	Y+19, r16	; 0x13
    16a0:	1c 8b       	std	Y+20, r17	; 0x14
    16a2:	6d a8       	ldd	r6, Y+53	; 0x35
    16a4:	7e a8       	ldd	r7, Y+54	; 0x36
    16a6:	8f a8       	ldd	r8, Y+55	; 0x37
    16a8:	98 ac       	ldd	r9, Y+56	; 0x38
    16aa:	6d 8a       	std	Y+21, r6	; 0x15
    16ac:	7e 8a       	std	Y+22, r7	; 0x16
    16ae:	8f 8a       	std	Y+23, r8	; 0x17
    16b0:	98 8e       	std	Y+24, r9	; 0x18
    16b2:	2e 2d       	mov	r18, r14
    16b4:	3a 89       	ldd	r19, Y+18	; 0x12
    16b6:	4b 89       	ldd	r20, Y+19	; 0x13
    16b8:	5c 89       	ldd	r21, Y+20	; 0x14
    16ba:	6d a9       	ldd	r22, Y+53	; 0x35
    16bc:	6a c2       	rjmp	.+1236   	; 0x1b92 <__umoddi3+0xcd0>
    16be:	67 96       	adiw	r28, 0x17	; 23
    16c0:	8f af       	std	Y+63, r24	; 0x3f
    16c2:	67 97       	sbiw	r28, 0x17	; 23
    16c4:	a6 01       	movw	r20, r12
    16c6:	95 01       	movw	r18, r10
    16c8:	08 2e       	mov	r0, r24
    16ca:	04 c0       	rjmp	.+8      	; 0x16d4 <__umoddi3+0x812>
    16cc:	22 0f       	add	r18, r18
    16ce:	33 1f       	adc	r19, r19
    16d0:	44 1f       	adc	r20, r20
    16d2:	55 1f       	adc	r21, r21
    16d4:	0a 94       	dec	r0
    16d6:	d2 f7       	brpl	.-12     	; 0x16cc <__umoddi3+0x80a>
    16d8:	a0 e2       	ldi	r26, 0x20	; 32
    16da:	aa 2e       	mov	r10, r26
    16dc:	a8 1a       	sub	r10, r24
    16de:	66 96       	adiw	r28, 0x16	; 22
    16e0:	af ae       	std	Y+63, r10	; 0x3f
    16e2:	66 97       	sbiw	r28, 0x16	; 22
    16e4:	d2 01       	movw	r26, r4
    16e6:	c1 01       	movw	r24, r2
    16e8:	04 c0       	rjmp	.+8      	; 0x16f2 <__umoddi3+0x830>
    16ea:	b6 95       	lsr	r27
    16ec:	a7 95       	ror	r26
    16ee:	97 95       	ror	r25
    16f0:	87 95       	ror	r24
    16f2:	aa 94       	dec	r10
    16f4:	d2 f7       	brpl	.-12     	; 0x16ea <__umoddi3+0x828>
    16f6:	6c 01       	movw	r12, r24
    16f8:	7d 01       	movw	r14, r26
    16fa:	c2 2a       	or	r12, r18
    16fc:	d3 2a       	or	r13, r19
    16fe:	e4 2a       	or	r14, r20
    1700:	f5 2a       	or	r15, r21
    1702:	c9 a6       	std	Y+41, r12	; 0x29
    1704:	da a6       	std	Y+42, r13	; 0x2a
    1706:	eb a6       	std	Y+43, r14	; 0x2b
    1708:	fc a6       	std	Y+44, r15	; 0x2c
    170a:	82 01       	movw	r16, r4
    170c:	71 01       	movw	r14, r2
    170e:	67 96       	adiw	r28, 0x17	; 23
    1710:	0f ac       	ldd	r0, Y+63	; 0x3f
    1712:	67 97       	sbiw	r28, 0x17	; 23
    1714:	04 c0       	rjmp	.+8      	; 0x171e <__umoddi3+0x85c>
    1716:	ee 0c       	add	r14, r14
    1718:	ff 1c       	adc	r15, r15
    171a:	00 1f       	adc	r16, r16
    171c:	11 1f       	adc	r17, r17
    171e:	0a 94       	dec	r0
    1720:	d2 f7       	brpl	.-12     	; 0x1716 <__umoddi3+0x854>
    1722:	ed a2       	std	Y+37, r14	; 0x25
    1724:	fe a2       	std	Y+38, r15	; 0x26
    1726:	0f a3       	std	Y+39, r16	; 0x27
    1728:	18 a7       	std	Y+40, r17	; 0x28
    172a:	64 01       	movw	r12, r8
    172c:	53 01       	movw	r10, r6
    172e:	66 96       	adiw	r28, 0x16	; 22
    1730:	0f ac       	ldd	r0, Y+63	; 0x3f
    1732:	66 97       	sbiw	r28, 0x16	; 22
    1734:	04 c0       	rjmp	.+8      	; 0x173e <__umoddi3+0x87c>
    1736:	d6 94       	lsr	r13
    1738:	c7 94       	ror	r12
    173a:	b7 94       	ror	r11
    173c:	a7 94       	ror	r10
    173e:	0a 94       	dec	r0
    1740:	d2 f7       	brpl	.-12     	; 0x1736 <__umoddi3+0x874>
    1742:	a4 01       	movw	r20, r8
    1744:	93 01       	movw	r18, r6
    1746:	67 96       	adiw	r28, 0x17	; 23
    1748:	0f ac       	ldd	r0, Y+63	; 0x3f
    174a:	67 97       	sbiw	r28, 0x17	; 23
    174c:	04 c0       	rjmp	.+8      	; 0x1756 <__umoddi3+0x894>
    174e:	22 0f       	add	r18, r18
    1750:	33 1f       	adc	r19, r19
    1752:	44 1f       	adc	r20, r20
    1754:	55 1f       	adc	r21, r21
    1756:	0a 94       	dec	r0
    1758:	d2 f7       	brpl	.-12     	; 0x174e <__umoddi3+0x88c>
    175a:	6c 96       	adiw	r28, 0x1c	; 28
    175c:	8c ad       	ldd	r24, Y+60	; 0x3c
    175e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1760:	ae ad       	ldd	r26, Y+62	; 0x3e
    1762:	bf ad       	ldd	r27, Y+63	; 0x3f
    1764:	6c 97       	sbiw	r28, 0x1c	; 28
    1766:	66 96       	adiw	r28, 0x16	; 22
    1768:	0f ac       	ldd	r0, Y+63	; 0x3f
    176a:	66 97       	sbiw	r28, 0x16	; 22
    176c:	04 c0       	rjmp	.+8      	; 0x1776 <__umoddi3+0x8b4>
    176e:	b6 95       	lsr	r27
    1770:	a7 95       	ror	r26
    1772:	97 95       	ror	r25
    1774:	87 95       	ror	r24
    1776:	0a 94       	dec	r0
    1778:	d2 f7       	brpl	.-12     	; 0x176e <__umoddi3+0x8ac>
    177a:	3c 01       	movw	r6, r24
    177c:	4d 01       	movw	r8, r26
    177e:	62 2a       	or	r6, r18
    1780:	73 2a       	or	r7, r19
    1782:	84 2a       	or	r8, r20
    1784:	95 2a       	or	r9, r21
    1786:	69 a2       	std	Y+33, r6	; 0x21
    1788:	7a a2       	std	Y+34, r7	; 0x22
    178a:	8b a2       	std	Y+35, r8	; 0x23
    178c:	9c a2       	std	Y+36, r9	; 0x24
    178e:	6c 96       	adiw	r28, 0x1c	; 28
    1790:	ec ac       	ldd	r14, Y+60	; 0x3c
    1792:	fd ac       	ldd	r15, Y+61	; 0x3d
    1794:	0e ad       	ldd	r16, Y+62	; 0x3e
    1796:	1f ad       	ldd	r17, Y+63	; 0x3f
    1798:	6c 97       	sbiw	r28, 0x1c	; 28
    179a:	67 96       	adiw	r28, 0x17	; 23
    179c:	0f ac       	ldd	r0, Y+63	; 0x3f
    179e:	67 97       	sbiw	r28, 0x17	; 23
    17a0:	04 c0       	rjmp	.+8      	; 0x17aa <__umoddi3+0x8e8>
    17a2:	ee 0c       	add	r14, r14
    17a4:	ff 1c       	adc	r15, r15
    17a6:	00 1f       	adc	r16, r16
    17a8:	11 1f       	adc	r17, r17
    17aa:	0a 94       	dec	r0
    17ac:	d2 f7       	brpl	.-12     	; 0x17a2 <__umoddi3+0x8e0>
    17ae:	ed 8e       	std	Y+29, r14	; 0x1d
    17b0:	fe 8e       	std	Y+30, r15	; 0x1e
    17b2:	0f 8f       	std	Y+31, r16	; 0x1f
    17b4:	18 a3       	std	Y+32, r17	; 0x20
    17b6:	49 a5       	ldd	r20, Y+41	; 0x29
    17b8:	5a a5       	ldd	r21, Y+42	; 0x2a
    17ba:	6b a5       	ldd	r22, Y+43	; 0x2b
    17bc:	7c a5       	ldd	r23, Y+44	; 0x2c
    17be:	3b 01       	movw	r6, r22
    17c0:	88 24       	eor	r8, r8
    17c2:	99 24       	eor	r9, r9
    17c4:	60 70       	andi	r22, 0x00	; 0
    17c6:	70 70       	andi	r23, 0x00	; 0
    17c8:	2d 96       	adiw	r28, 0x0d	; 13
    17ca:	4c af       	std	Y+60, r20	; 0x3c
    17cc:	5d af       	std	Y+61, r21	; 0x3d
    17ce:	6e af       	std	Y+62, r22	; 0x3e
    17d0:	7f af       	std	Y+63, r23	; 0x3f
    17d2:	2d 97       	sbiw	r28, 0x0d	; 13
    17d4:	c6 01       	movw	r24, r12
    17d6:	b5 01       	movw	r22, r10
    17d8:	a4 01       	movw	r20, r8
    17da:	93 01       	movw	r18, r6
    17dc:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    17e0:	7b 01       	movw	r14, r22
    17e2:	8c 01       	movw	r16, r24
    17e4:	c6 01       	movw	r24, r12
    17e6:	b5 01       	movw	r22, r10
    17e8:	a4 01       	movw	r20, r8
    17ea:	93 01       	movw	r18, r6
    17ec:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    17f0:	c9 01       	movw	r24, r18
    17f2:	da 01       	movw	r26, r20
    17f4:	1c 01       	movw	r2, r24
    17f6:	2d 01       	movw	r4, r26
    17f8:	c2 01       	movw	r24, r4
    17fa:	b1 01       	movw	r22, r2
    17fc:	2d 96       	adiw	r28, 0x0d	; 13
    17fe:	2c ad       	ldd	r18, Y+60	; 0x3c
    1800:	3d ad       	ldd	r19, Y+61	; 0x3d
    1802:	4e ad       	ldd	r20, Y+62	; 0x3e
    1804:	5f ad       	ldd	r21, Y+63	; 0x3f
    1806:	2d 97       	sbiw	r28, 0x0d	; 13
    1808:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    180c:	9b 01       	movw	r18, r22
    180e:	ac 01       	movw	r20, r24
    1810:	87 01       	movw	r16, r14
    1812:	ff 24       	eor	r15, r15
    1814:	ee 24       	eor	r14, r14
    1816:	a9 a0       	ldd	r10, Y+33	; 0x21
    1818:	ba a0       	ldd	r11, Y+34	; 0x22
    181a:	cb a0       	ldd	r12, Y+35	; 0x23
    181c:	dc a0       	ldd	r13, Y+36	; 0x24
    181e:	c6 01       	movw	r24, r12
    1820:	aa 27       	eor	r26, r26
    1822:	bb 27       	eor	r27, r27
    1824:	57 01       	movw	r10, r14
    1826:	68 01       	movw	r12, r16
    1828:	a8 2a       	or	r10, r24
    182a:	b9 2a       	or	r11, r25
    182c:	ca 2a       	or	r12, r26
    182e:	db 2a       	or	r13, r27
    1830:	a2 16       	cp	r10, r18
    1832:	b3 06       	cpc	r11, r19
    1834:	c4 06       	cpc	r12, r20
    1836:	d5 06       	cpc	r13, r21
    1838:	00 f5       	brcc	.+64     	; 0x187a <__umoddi3+0x9b8>
    183a:	08 94       	sec
    183c:	21 08       	sbc	r2, r1
    183e:	31 08       	sbc	r3, r1
    1840:	41 08       	sbc	r4, r1
    1842:	51 08       	sbc	r5, r1
    1844:	e9 a4       	ldd	r14, Y+41	; 0x29
    1846:	fa a4       	ldd	r15, Y+42	; 0x2a
    1848:	0b a5       	ldd	r16, Y+43	; 0x2b
    184a:	1c a5       	ldd	r17, Y+44	; 0x2c
    184c:	ae 0c       	add	r10, r14
    184e:	bf 1c       	adc	r11, r15
    1850:	c0 1e       	adc	r12, r16
    1852:	d1 1e       	adc	r13, r17
    1854:	ae 14       	cp	r10, r14
    1856:	bf 04       	cpc	r11, r15
    1858:	c0 06       	cpc	r12, r16
    185a:	d1 06       	cpc	r13, r17
    185c:	70 f0       	brcs	.+28     	; 0x187a <__umoddi3+0x9b8>
    185e:	a2 16       	cp	r10, r18
    1860:	b3 06       	cpc	r11, r19
    1862:	c4 06       	cpc	r12, r20
    1864:	d5 06       	cpc	r13, r21
    1866:	48 f4       	brcc	.+18     	; 0x187a <__umoddi3+0x9b8>
    1868:	08 94       	sec
    186a:	21 08       	sbc	r2, r1
    186c:	31 08       	sbc	r3, r1
    186e:	41 08       	sbc	r4, r1
    1870:	51 08       	sbc	r5, r1
    1872:	ae 0c       	add	r10, r14
    1874:	bf 1c       	adc	r11, r15
    1876:	c0 1e       	adc	r12, r16
    1878:	d1 1e       	adc	r13, r17
    187a:	a2 1a       	sub	r10, r18
    187c:	b3 0a       	sbc	r11, r19
    187e:	c4 0a       	sbc	r12, r20
    1880:	d5 0a       	sbc	r13, r21
    1882:	c6 01       	movw	r24, r12
    1884:	b5 01       	movw	r22, r10
    1886:	a4 01       	movw	r20, r8
    1888:	93 01       	movw	r18, r6
    188a:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    188e:	7b 01       	movw	r14, r22
    1890:	8c 01       	movw	r16, r24
    1892:	c6 01       	movw	r24, r12
    1894:	b5 01       	movw	r22, r10
    1896:	a4 01       	movw	r20, r8
    1898:	93 01       	movw	r18, r6
    189a:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    189e:	c9 01       	movw	r24, r18
    18a0:	da 01       	movw	r26, r20
    18a2:	3c 01       	movw	r6, r24
    18a4:	4d 01       	movw	r8, r26
    18a6:	c4 01       	movw	r24, r8
    18a8:	b3 01       	movw	r22, r6
    18aa:	2d 96       	adiw	r28, 0x0d	; 13
    18ac:	2c ad       	ldd	r18, Y+60	; 0x3c
    18ae:	3d ad       	ldd	r19, Y+61	; 0x3d
    18b0:	4e ad       	ldd	r20, Y+62	; 0x3e
    18b2:	5f ad       	ldd	r21, Y+63	; 0x3f
    18b4:	2d 97       	sbiw	r28, 0x0d	; 13
    18b6:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    18ba:	9b 01       	movw	r18, r22
    18bc:	ac 01       	movw	r20, r24
    18be:	87 01       	movw	r16, r14
    18c0:	ff 24       	eor	r15, r15
    18c2:	ee 24       	eor	r14, r14
    18c4:	89 a1       	ldd	r24, Y+33	; 0x21
    18c6:	9a a1       	ldd	r25, Y+34	; 0x22
    18c8:	ab a1       	ldd	r26, Y+35	; 0x23
    18ca:	bc a1       	ldd	r27, Y+36	; 0x24
    18cc:	a0 70       	andi	r26, 0x00	; 0
    18ce:	b0 70       	andi	r27, 0x00	; 0
    18d0:	57 01       	movw	r10, r14
    18d2:	68 01       	movw	r12, r16
    18d4:	a8 2a       	or	r10, r24
    18d6:	b9 2a       	or	r11, r25
    18d8:	ca 2a       	or	r12, r26
    18da:	db 2a       	or	r13, r27
    18dc:	a2 16       	cp	r10, r18
    18de:	b3 06       	cpc	r11, r19
    18e0:	c4 06       	cpc	r12, r20
    18e2:	d5 06       	cpc	r13, r21
    18e4:	00 f5       	brcc	.+64     	; 0x1926 <__umoddi3+0xa64>
    18e6:	08 94       	sec
    18e8:	61 08       	sbc	r6, r1
    18ea:	71 08       	sbc	r7, r1
    18ec:	81 08       	sbc	r8, r1
    18ee:	91 08       	sbc	r9, r1
    18f0:	69 a5       	ldd	r22, Y+41	; 0x29
    18f2:	7a a5       	ldd	r23, Y+42	; 0x2a
    18f4:	8b a5       	ldd	r24, Y+43	; 0x2b
    18f6:	9c a5       	ldd	r25, Y+44	; 0x2c
    18f8:	a6 0e       	add	r10, r22
    18fa:	b7 1e       	adc	r11, r23
    18fc:	c8 1e       	adc	r12, r24
    18fe:	d9 1e       	adc	r13, r25
    1900:	a6 16       	cp	r10, r22
    1902:	b7 06       	cpc	r11, r23
    1904:	c8 06       	cpc	r12, r24
    1906:	d9 06       	cpc	r13, r25
    1908:	70 f0       	brcs	.+28     	; 0x1926 <__umoddi3+0xa64>
    190a:	a2 16       	cp	r10, r18
    190c:	b3 06       	cpc	r11, r19
    190e:	c4 06       	cpc	r12, r20
    1910:	d5 06       	cpc	r13, r21
    1912:	48 f4       	brcc	.+18     	; 0x1926 <__umoddi3+0xa64>
    1914:	08 94       	sec
    1916:	61 08       	sbc	r6, r1
    1918:	71 08       	sbc	r7, r1
    191a:	81 08       	sbc	r8, r1
    191c:	91 08       	sbc	r9, r1
    191e:	a6 0e       	add	r10, r22
    1920:	b7 1e       	adc	r11, r23
    1922:	c8 1e       	adc	r12, r24
    1924:	d9 1e       	adc	r13, r25
    1926:	d6 01       	movw	r26, r12
    1928:	c5 01       	movw	r24, r10
    192a:	82 1b       	sub	r24, r18
    192c:	93 0b       	sbc	r25, r19
    192e:	a4 0b       	sbc	r26, r20
    1930:	b5 0b       	sbc	r27, r21
    1932:	89 8f       	std	Y+25, r24	; 0x19
    1934:	9a 8f       	std	Y+26, r25	; 0x1a
    1936:	ab 8f       	std	Y+27, r26	; 0x1b
    1938:	bc 8f       	std	Y+28, r27	; 0x1c
    193a:	d1 01       	movw	r26, r2
    193c:	99 27       	eor	r25, r25
    193e:	88 27       	eor	r24, r24
    1940:	84 01       	movw	r16, r8
    1942:	73 01       	movw	r14, r6
    1944:	e8 2a       	or	r14, r24
    1946:	f9 2a       	or	r15, r25
    1948:	0a 2b       	or	r16, r26
    194a:	1b 2b       	or	r17, r27
    194c:	4f ef       	ldi	r20, 0xFF	; 255
    194e:	a4 2e       	mov	r10, r20
    1950:	4f ef       	ldi	r20, 0xFF	; 255
    1952:	b4 2e       	mov	r11, r20
    1954:	c1 2c       	mov	r12, r1
    1956:	d1 2c       	mov	r13, r1
    1958:	ae 20       	and	r10, r14
    195a:	bf 20       	and	r11, r15
    195c:	c0 22       	and	r12, r16
    195e:	d1 22       	and	r13, r17
    1960:	78 01       	movw	r14, r16
    1962:	00 27       	eor	r16, r16
    1964:	11 27       	eor	r17, r17
    1966:	6d a0       	ldd	r6, Y+37	; 0x25
    1968:	7e a0       	ldd	r7, Y+38	; 0x26
    196a:	8f a0       	ldd	r8, Y+39	; 0x27
    196c:	98 a4       	ldd	r9, Y+40	; 0x28
    196e:	4f ef       	ldi	r20, 0xFF	; 255
    1970:	5f ef       	ldi	r21, 0xFF	; 255
    1972:	60 e0       	ldi	r22, 0x00	; 0
    1974:	70 e0       	ldi	r23, 0x00	; 0
    1976:	64 22       	and	r6, r20
    1978:	75 22       	and	r7, r21
    197a:	86 22       	and	r8, r22
    197c:	97 22       	and	r9, r23
    197e:	8d a1       	ldd	r24, Y+37	; 0x25
    1980:	9e a1       	ldd	r25, Y+38	; 0x26
    1982:	af a1       	ldd	r26, Y+39	; 0x27
    1984:	b8 a5       	ldd	r27, Y+40	; 0x28
    1986:	bd 01       	movw	r22, r26
    1988:	88 27       	eor	r24, r24
    198a:	99 27       	eor	r25, r25
    198c:	65 96       	adiw	r28, 0x15	; 21
    198e:	6c af       	std	Y+60, r22	; 0x3c
    1990:	7d af       	std	Y+61, r23	; 0x3d
    1992:	8e af       	std	Y+62, r24	; 0x3e
    1994:	9f af       	std	Y+63, r25	; 0x3f
    1996:	65 97       	sbiw	r28, 0x15	; 21
    1998:	c6 01       	movw	r24, r12
    199a:	b5 01       	movw	r22, r10
    199c:	a4 01       	movw	r20, r8
    199e:	93 01       	movw	r18, r6
    19a0:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    19a4:	61 96       	adiw	r28, 0x11	; 17
    19a6:	6c af       	std	Y+60, r22	; 0x3c
    19a8:	7d af       	std	Y+61, r23	; 0x3d
    19aa:	8e af       	std	Y+62, r24	; 0x3e
    19ac:	9f af       	std	Y+63, r25	; 0x3f
    19ae:	61 97       	sbiw	r28, 0x11	; 17
    19b0:	c6 01       	movw	r24, r12
    19b2:	b5 01       	movw	r22, r10
    19b4:	65 96       	adiw	r28, 0x15	; 21
    19b6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19b8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ba:	4e ad       	ldd	r20, Y+62	; 0x3e
    19bc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19be:	65 97       	sbiw	r28, 0x15	; 21
    19c0:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    19c4:	1b 01       	movw	r2, r22
    19c6:	2c 01       	movw	r4, r24
    19c8:	c8 01       	movw	r24, r16
    19ca:	b7 01       	movw	r22, r14
    19cc:	a4 01       	movw	r20, r8
    19ce:	93 01       	movw	r18, r6
    19d0:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    19d4:	5b 01       	movw	r10, r22
    19d6:	6c 01       	movw	r12, r24
    19d8:	c8 01       	movw	r24, r16
    19da:	b7 01       	movw	r22, r14
    19dc:	65 96       	adiw	r28, 0x15	; 21
    19de:	2c ad       	ldd	r18, Y+60	; 0x3c
    19e0:	3d ad       	ldd	r19, Y+61	; 0x3d
    19e2:	4e ad       	ldd	r20, Y+62	; 0x3e
    19e4:	5f ad       	ldd	r21, Y+63	; 0x3f
    19e6:	65 97       	sbiw	r28, 0x15	; 21
    19e8:	0e 94 17 38 	call	0x702e	; 0x702e <__mulsi3>
    19ec:	7b 01       	movw	r14, r22
    19ee:	8c 01       	movw	r16, r24
    19f0:	a6 01       	movw	r20, r12
    19f2:	95 01       	movw	r18, r10
    19f4:	22 0d       	add	r18, r2
    19f6:	33 1d       	adc	r19, r3
    19f8:	44 1d       	adc	r20, r4
    19fa:	55 1d       	adc	r21, r5
    19fc:	61 96       	adiw	r28, 0x11	; 17
    19fe:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a00:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a02:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a04:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a06:	61 97       	sbiw	r28, 0x11	; 17
    1a08:	c4 01       	movw	r24, r8
    1a0a:	aa 27       	eor	r26, r26
    1a0c:	bb 27       	eor	r27, r27
    1a0e:	28 0f       	add	r18, r24
    1a10:	39 1f       	adc	r19, r25
    1a12:	4a 1f       	adc	r20, r26
    1a14:	5b 1f       	adc	r21, r27
    1a16:	2a 15       	cp	r18, r10
    1a18:	3b 05       	cpc	r19, r11
    1a1a:	4c 05       	cpc	r20, r12
    1a1c:	5d 05       	cpc	r21, r13
    1a1e:	48 f4       	brcc	.+18     	; 0x1a32 <__umoddi3+0xb70>
    1a20:	81 2c       	mov	r8, r1
    1a22:	91 2c       	mov	r9, r1
    1a24:	e1 e0       	ldi	r30, 0x01	; 1
    1a26:	ae 2e       	mov	r10, r30
    1a28:	b1 2c       	mov	r11, r1
    1a2a:	e8 0c       	add	r14, r8
    1a2c:	f9 1c       	adc	r15, r9
    1a2e:	0a 1d       	adc	r16, r10
    1a30:	1b 1d       	adc	r17, r11
    1a32:	ca 01       	movw	r24, r20
    1a34:	aa 27       	eor	r26, r26
    1a36:	bb 27       	eor	r27, r27
    1a38:	57 01       	movw	r10, r14
    1a3a:	68 01       	movw	r12, r16
    1a3c:	a8 0e       	add	r10, r24
    1a3e:	b9 1e       	adc	r11, r25
    1a40:	ca 1e       	adc	r12, r26
    1a42:	db 1e       	adc	r13, r27
    1a44:	a9 01       	movw	r20, r18
    1a46:	33 27       	eor	r19, r19
    1a48:	22 27       	eor	r18, r18
    1a4a:	61 96       	adiw	r28, 0x11	; 17
    1a4c:	8c ad       	ldd	r24, Y+60	; 0x3c
    1a4e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1a50:	ae ad       	ldd	r26, Y+62	; 0x3e
    1a52:	bf ad       	ldd	r27, Y+63	; 0x3f
    1a54:	61 97       	sbiw	r28, 0x11	; 17
    1a56:	a0 70       	andi	r26, 0x00	; 0
    1a58:	b0 70       	andi	r27, 0x00	; 0
    1a5a:	28 0f       	add	r18, r24
    1a5c:	39 1f       	adc	r19, r25
    1a5e:	4a 1f       	adc	r20, r26
    1a60:	5b 1f       	adc	r21, r27
    1a62:	e9 8c       	ldd	r14, Y+25	; 0x19
    1a64:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1a66:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1a68:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1a6a:	ea 14       	cp	r14, r10
    1a6c:	fb 04       	cpc	r15, r11
    1a6e:	0c 05       	cpc	r16, r12
    1a70:	1d 05       	cpc	r17, r13
    1a72:	70 f0       	brcs	.+28     	; 0x1a90 <__umoddi3+0xbce>
    1a74:	ae 14       	cp	r10, r14
    1a76:	bf 04       	cpc	r11, r15
    1a78:	c0 06       	cpc	r12, r16
    1a7a:	d1 06       	cpc	r13, r17
    1a7c:	69 f5       	brne	.+90     	; 0x1ad8 <__umoddi3+0xc16>
    1a7e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a80:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a82:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a84:	98 a1       	ldd	r25, Y+32	; 0x20
    1a86:	62 17       	cp	r22, r18
    1a88:	73 07       	cpc	r23, r19
    1a8a:	84 07       	cpc	r24, r20
    1a8c:	95 07       	cpc	r25, r21
    1a8e:	20 f5       	brcc	.+72     	; 0x1ad8 <__umoddi3+0xc16>
    1a90:	da 01       	movw	r26, r20
    1a92:	c9 01       	movw	r24, r18
    1a94:	6d a0       	ldd	r6, Y+37	; 0x25
    1a96:	7e a0       	ldd	r7, Y+38	; 0x26
    1a98:	8f a0       	ldd	r8, Y+39	; 0x27
    1a9a:	98 a4       	ldd	r9, Y+40	; 0x28
    1a9c:	86 19       	sub	r24, r6
    1a9e:	97 09       	sbc	r25, r7
    1aa0:	a8 09       	sbc	r26, r8
    1aa2:	b9 09       	sbc	r27, r9
    1aa4:	e9 a4       	ldd	r14, Y+41	; 0x29
    1aa6:	fa a4       	ldd	r15, Y+42	; 0x2a
    1aa8:	0b a5       	ldd	r16, Y+43	; 0x2b
    1aaa:	1c a5       	ldd	r17, Y+44	; 0x2c
    1aac:	ae 18       	sub	r10, r14
    1aae:	bf 08       	sbc	r11, r15
    1ab0:	c0 0a       	sbc	r12, r16
    1ab2:	d1 0a       	sbc	r13, r17
    1ab4:	ee 24       	eor	r14, r14
    1ab6:	ff 24       	eor	r15, r15
    1ab8:	87 01       	movw	r16, r14
    1aba:	28 17       	cp	r18, r24
    1abc:	39 07       	cpc	r19, r25
    1abe:	4a 07       	cpc	r20, r26
    1ac0:	5b 07       	cpc	r21, r27
    1ac2:	28 f4       	brcc	.+10     	; 0x1ace <__umoddi3+0xc0c>
    1ac4:	21 e0       	ldi	r18, 0x01	; 1
    1ac6:	e2 2e       	mov	r14, r18
    1ac8:	f1 2c       	mov	r15, r1
    1aca:	01 2d       	mov	r16, r1
    1acc:	11 2d       	mov	r17, r1
    1ace:	ae 18       	sub	r10, r14
    1ad0:	bf 08       	sbc	r11, r15
    1ad2:	c0 0a       	sbc	r12, r16
    1ad4:	d1 0a       	sbc	r13, r17
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <__umoddi3+0xc1a>
    1ad8:	da 01       	movw	r26, r20
    1ada:	c9 01       	movw	r24, r18
    1adc:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1ade:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1ae0:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1ae2:	98 a0       	ldd	r9, Y+32	; 0x20
    1ae4:	68 1a       	sub	r6, r24
    1ae6:	79 0a       	sbc	r7, r25
    1ae8:	8a 0a       	sbc	r8, r26
    1aea:	9b 0a       	sbc	r9, r27
    1aec:	49 8d       	ldd	r20, Y+25	; 0x19
    1aee:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1af0:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1af2:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1af4:	4a 19       	sub	r20, r10
    1af6:	5b 09       	sbc	r21, r11
    1af8:	6c 09       	sbc	r22, r12
    1afa:	7d 09       	sbc	r23, r13
    1afc:	5a 01       	movw	r10, r20
    1afe:	6b 01       	movw	r12, r22
    1b00:	22 24       	eor	r2, r2
    1b02:	33 24       	eor	r3, r3
    1b04:	21 01       	movw	r4, r2
    1b06:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b08:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b0a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b0c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b0e:	66 15       	cp	r22, r6
    1b10:	77 05       	cpc	r23, r7
    1b12:	88 05       	cpc	r24, r8
    1b14:	99 05       	cpc	r25, r9
    1b16:	28 f4       	brcc	.+10     	; 0x1b22 <__umoddi3+0xc60>
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	28 2e       	mov	r2, r24
    1b1c:	31 2c       	mov	r3, r1
    1b1e:	41 2c       	mov	r4, r1
    1b20:	51 2c       	mov	r5, r1
    1b22:	86 01       	movw	r16, r12
    1b24:	75 01       	movw	r14, r10
    1b26:	e2 18       	sub	r14, r2
    1b28:	f3 08       	sbc	r15, r3
    1b2a:	04 09       	sbc	r16, r4
    1b2c:	15 09       	sbc	r17, r5
    1b2e:	a8 01       	movw	r20, r16
    1b30:	97 01       	movw	r18, r14
    1b32:	66 96       	adiw	r28, 0x16	; 22
    1b34:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b36:	66 97       	sbiw	r28, 0x16	; 22
    1b38:	04 c0       	rjmp	.+8      	; 0x1b42 <__umoddi3+0xc80>
    1b3a:	22 0f       	add	r18, r18
    1b3c:	33 1f       	adc	r19, r19
    1b3e:	44 1f       	adc	r20, r20
    1b40:	55 1f       	adc	r21, r21
    1b42:	0a 94       	dec	r0
    1b44:	d2 f7       	brpl	.-12     	; 0x1b3a <__umoddi3+0xc78>
    1b46:	d4 01       	movw	r26, r8
    1b48:	c3 01       	movw	r24, r6
    1b4a:	67 96       	adiw	r28, 0x17	; 23
    1b4c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b4e:	67 97       	sbiw	r28, 0x17	; 23
    1b50:	04 c0       	rjmp	.+8      	; 0x1b5a <__umoddi3+0xc98>
    1b52:	b6 95       	lsr	r27
    1b54:	a7 95       	ror	r26
    1b56:	97 95       	ror	r25
    1b58:	87 95       	ror	r24
    1b5a:	0a 94       	dec	r0
    1b5c:	d2 f7       	brpl	.-12     	; 0x1b52 <__umoddi3+0xc90>
    1b5e:	28 2b       	or	r18, r24
    1b60:	39 2b       	or	r19, r25
    1b62:	4a 2b       	or	r20, r26
    1b64:	5b 2b       	or	r21, r27
    1b66:	29 8b       	std	Y+17, r18	; 0x11
    1b68:	3a 8b       	std	Y+18, r19	; 0x12
    1b6a:	4b 8b       	std	Y+19, r20	; 0x13
    1b6c:	5c 8b       	std	Y+20, r21	; 0x14
    1b6e:	67 96       	adiw	r28, 0x17	; 23
    1b70:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b72:	67 97       	sbiw	r28, 0x17	; 23
    1b74:	04 c0       	rjmp	.+8      	; 0x1b7e <__umoddi3+0xcbc>
    1b76:	16 95       	lsr	r17
    1b78:	07 95       	ror	r16
    1b7a:	f7 94       	ror	r15
    1b7c:	e7 94       	ror	r14
    1b7e:	0a 94       	dec	r0
    1b80:	d2 f7       	brpl	.-12     	; 0x1b76 <__umoddi3+0xcb4>
    1b82:	ed 8a       	std	Y+21, r14	; 0x15
    1b84:	fe 8a       	std	Y+22, r15	; 0x16
    1b86:	0f 8b       	std	Y+23, r16	; 0x17
    1b88:	18 8f       	std	Y+24, r17	; 0x18
    1b8a:	3a 89       	ldd	r19, Y+18	; 0x12
    1b8c:	4b 89       	ldd	r20, Y+19	; 0x13
    1b8e:	5c 89       	ldd	r21, Y+20	; 0x14
    1b90:	6e 2d       	mov	r22, r14
    1b92:	7e 89       	ldd	r23, Y+22	; 0x16
    1b94:	8f 89       	ldd	r24, Y+23	; 0x17
    1b96:	98 8d       	ldd	r25, Y+24	; 0x18
    1b98:	c5 5a       	subi	r28, 0xA5	; 165
    1b9a:	df 4f       	sbci	r29, 0xFF	; 255
    1b9c:	e2 e1       	ldi	r30, 0x12	; 18
    1b9e:	0c 94 52 38 	jmp	0x70a4	; 0x70a4 <__epilogue_restores__>

00001ba2 <_fpadd_parts>:
    1ba2:	a0 e0       	ldi	r26, 0x00	; 0
    1ba4:	b0 e0       	ldi	r27, 0x00	; 0
    1ba6:	e7 ed       	ldi	r30, 0xD7	; 215
    1ba8:	fd e0       	ldi	r31, 0x0D	; 13
    1baa:	0c 94 36 38 	jmp	0x706c	; 0x706c <__prologue_saves__>
    1bae:	dc 01       	movw	r26, r24
    1bb0:	2b 01       	movw	r4, r22
    1bb2:	fa 01       	movw	r30, r20
    1bb4:	9c 91       	ld	r25, X
    1bb6:	92 30       	cpi	r25, 0x02	; 2
    1bb8:	08 f4       	brcc	.+2      	; 0x1bbc <_fpadd_parts+0x1a>
    1bba:	39 c1       	rjmp	.+626    	; 0x1e2e <_fpadd_parts+0x28c>
    1bbc:	eb 01       	movw	r28, r22
    1bbe:	88 81       	ld	r24, Y
    1bc0:	82 30       	cpi	r24, 0x02	; 2
    1bc2:	08 f4       	brcc	.+2      	; 0x1bc6 <_fpadd_parts+0x24>
    1bc4:	33 c1       	rjmp	.+614    	; 0x1e2c <_fpadd_parts+0x28a>
    1bc6:	94 30       	cpi	r25, 0x04	; 4
    1bc8:	69 f4       	brne	.+26     	; 0x1be4 <_fpadd_parts+0x42>
    1bca:	84 30       	cpi	r24, 0x04	; 4
    1bcc:	09 f0       	breq	.+2      	; 0x1bd0 <_fpadd_parts+0x2e>
    1bce:	2f c1       	rjmp	.+606    	; 0x1e2e <_fpadd_parts+0x28c>
    1bd0:	11 96       	adiw	r26, 0x01	; 1
    1bd2:	9c 91       	ld	r25, X
    1bd4:	11 97       	sbiw	r26, 0x01	; 1
    1bd6:	89 81       	ldd	r24, Y+1	; 0x01
    1bd8:	98 17       	cp	r25, r24
    1bda:	09 f4       	brne	.+2      	; 0x1bde <_fpadd_parts+0x3c>
    1bdc:	28 c1       	rjmp	.+592    	; 0x1e2e <_fpadd_parts+0x28c>
    1bde:	a2 e7       	ldi	r26, 0x72	; 114
    1be0:	b0 e0       	ldi	r27, 0x00	; 0
    1be2:	25 c1       	rjmp	.+586    	; 0x1e2e <_fpadd_parts+0x28c>
    1be4:	84 30       	cpi	r24, 0x04	; 4
    1be6:	09 f4       	brne	.+2      	; 0x1bea <_fpadd_parts+0x48>
    1be8:	21 c1       	rjmp	.+578    	; 0x1e2c <_fpadd_parts+0x28a>
    1bea:	82 30       	cpi	r24, 0x02	; 2
    1bec:	a9 f4       	brne	.+42     	; 0x1c18 <_fpadd_parts+0x76>
    1bee:	92 30       	cpi	r25, 0x02	; 2
    1bf0:	09 f0       	breq	.+2      	; 0x1bf4 <_fpadd_parts+0x52>
    1bf2:	1d c1       	rjmp	.+570    	; 0x1e2e <_fpadd_parts+0x28c>
    1bf4:	9a 01       	movw	r18, r20
    1bf6:	ad 01       	movw	r20, r26
    1bf8:	88 e0       	ldi	r24, 0x08	; 8
    1bfa:	ea 01       	movw	r28, r20
    1bfc:	09 90       	ld	r0, Y+
    1bfe:	ae 01       	movw	r20, r28
    1c00:	e9 01       	movw	r28, r18
    1c02:	09 92       	st	Y+, r0
    1c04:	9e 01       	movw	r18, r28
    1c06:	81 50       	subi	r24, 0x01	; 1
    1c08:	c1 f7       	brne	.-16     	; 0x1bfa <_fpadd_parts+0x58>
    1c0a:	e2 01       	movw	r28, r4
    1c0c:	89 81       	ldd	r24, Y+1	; 0x01
    1c0e:	11 96       	adiw	r26, 0x01	; 1
    1c10:	9c 91       	ld	r25, X
    1c12:	89 23       	and	r24, r25
    1c14:	81 83       	std	Z+1, r24	; 0x01
    1c16:	08 c1       	rjmp	.+528    	; 0x1e28 <_fpadd_parts+0x286>
    1c18:	92 30       	cpi	r25, 0x02	; 2
    1c1a:	09 f4       	brne	.+2      	; 0x1c1e <_fpadd_parts+0x7c>
    1c1c:	07 c1       	rjmp	.+526    	; 0x1e2c <_fpadd_parts+0x28a>
    1c1e:	12 96       	adiw	r26, 0x02	; 2
    1c20:	2d 90       	ld	r2, X+
    1c22:	3c 90       	ld	r3, X
    1c24:	13 97       	sbiw	r26, 0x03	; 3
    1c26:	eb 01       	movw	r28, r22
    1c28:	8a 81       	ldd	r24, Y+2	; 0x02
    1c2a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c2c:	14 96       	adiw	r26, 0x04	; 4
    1c2e:	ad 90       	ld	r10, X+
    1c30:	bd 90       	ld	r11, X+
    1c32:	cd 90       	ld	r12, X+
    1c34:	dc 90       	ld	r13, X
    1c36:	17 97       	sbiw	r26, 0x07	; 7
    1c38:	ec 80       	ldd	r14, Y+4	; 0x04
    1c3a:	fd 80       	ldd	r15, Y+5	; 0x05
    1c3c:	0e 81       	ldd	r16, Y+6	; 0x06
    1c3e:	1f 81       	ldd	r17, Y+7	; 0x07
    1c40:	91 01       	movw	r18, r2
    1c42:	28 1b       	sub	r18, r24
    1c44:	39 0b       	sbc	r19, r25
    1c46:	b9 01       	movw	r22, r18
    1c48:	37 ff       	sbrs	r19, 7
    1c4a:	04 c0       	rjmp	.+8      	; 0x1c54 <_fpadd_parts+0xb2>
    1c4c:	66 27       	eor	r22, r22
    1c4e:	77 27       	eor	r23, r23
    1c50:	62 1b       	sub	r22, r18
    1c52:	73 0b       	sbc	r23, r19
    1c54:	60 32       	cpi	r22, 0x20	; 32
    1c56:	71 05       	cpc	r23, r1
    1c58:	0c f0       	brlt	.+2      	; 0x1c5c <_fpadd_parts+0xba>
    1c5a:	61 c0       	rjmp	.+194    	; 0x1d1e <_fpadd_parts+0x17c>
    1c5c:	12 16       	cp	r1, r18
    1c5e:	13 06       	cpc	r1, r19
    1c60:	6c f5       	brge	.+90     	; 0x1cbc <_fpadd_parts+0x11a>
    1c62:	37 01       	movw	r6, r14
    1c64:	48 01       	movw	r8, r16
    1c66:	06 2e       	mov	r0, r22
    1c68:	04 c0       	rjmp	.+8      	; 0x1c72 <_fpadd_parts+0xd0>
    1c6a:	96 94       	lsr	r9
    1c6c:	87 94       	ror	r8
    1c6e:	77 94       	ror	r7
    1c70:	67 94       	ror	r6
    1c72:	0a 94       	dec	r0
    1c74:	d2 f7       	brpl	.-12     	; 0x1c6a <_fpadd_parts+0xc8>
    1c76:	21 e0       	ldi	r18, 0x01	; 1
    1c78:	30 e0       	ldi	r19, 0x00	; 0
    1c7a:	40 e0       	ldi	r20, 0x00	; 0
    1c7c:	50 e0       	ldi	r21, 0x00	; 0
    1c7e:	04 c0       	rjmp	.+8      	; 0x1c88 <_fpadd_parts+0xe6>
    1c80:	22 0f       	add	r18, r18
    1c82:	33 1f       	adc	r19, r19
    1c84:	44 1f       	adc	r20, r20
    1c86:	55 1f       	adc	r21, r21
    1c88:	6a 95       	dec	r22
    1c8a:	d2 f7       	brpl	.-12     	; 0x1c80 <_fpadd_parts+0xde>
    1c8c:	21 50       	subi	r18, 0x01	; 1
    1c8e:	30 40       	sbci	r19, 0x00	; 0
    1c90:	40 40       	sbci	r20, 0x00	; 0
    1c92:	50 40       	sbci	r21, 0x00	; 0
    1c94:	2e 21       	and	r18, r14
    1c96:	3f 21       	and	r19, r15
    1c98:	40 23       	and	r20, r16
    1c9a:	51 23       	and	r21, r17
    1c9c:	21 15       	cp	r18, r1
    1c9e:	31 05       	cpc	r19, r1
    1ca0:	41 05       	cpc	r20, r1
    1ca2:	51 05       	cpc	r21, r1
    1ca4:	21 f0       	breq	.+8      	; 0x1cae <_fpadd_parts+0x10c>
    1ca6:	21 e0       	ldi	r18, 0x01	; 1
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	40 e0       	ldi	r20, 0x00	; 0
    1cac:	50 e0       	ldi	r21, 0x00	; 0
    1cae:	79 01       	movw	r14, r18
    1cb0:	8a 01       	movw	r16, r20
    1cb2:	e6 28       	or	r14, r6
    1cb4:	f7 28       	or	r15, r7
    1cb6:	08 29       	or	r16, r8
    1cb8:	19 29       	or	r17, r9
    1cba:	3c c0       	rjmp	.+120    	; 0x1d34 <_fpadd_parts+0x192>
    1cbc:	23 2b       	or	r18, r19
    1cbe:	d1 f1       	breq	.+116    	; 0x1d34 <_fpadd_parts+0x192>
    1cc0:	26 0e       	add	r2, r22
    1cc2:	37 1e       	adc	r3, r23
    1cc4:	35 01       	movw	r6, r10
    1cc6:	46 01       	movw	r8, r12
    1cc8:	06 2e       	mov	r0, r22
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <_fpadd_parts+0x132>
    1ccc:	96 94       	lsr	r9
    1cce:	87 94       	ror	r8
    1cd0:	77 94       	ror	r7
    1cd2:	67 94       	ror	r6
    1cd4:	0a 94       	dec	r0
    1cd6:	d2 f7       	brpl	.-12     	; 0x1ccc <_fpadd_parts+0x12a>
    1cd8:	21 e0       	ldi	r18, 0x01	; 1
    1cda:	30 e0       	ldi	r19, 0x00	; 0
    1cdc:	40 e0       	ldi	r20, 0x00	; 0
    1cde:	50 e0       	ldi	r21, 0x00	; 0
    1ce0:	04 c0       	rjmp	.+8      	; 0x1cea <_fpadd_parts+0x148>
    1ce2:	22 0f       	add	r18, r18
    1ce4:	33 1f       	adc	r19, r19
    1ce6:	44 1f       	adc	r20, r20
    1ce8:	55 1f       	adc	r21, r21
    1cea:	6a 95       	dec	r22
    1cec:	d2 f7       	brpl	.-12     	; 0x1ce2 <_fpadd_parts+0x140>
    1cee:	21 50       	subi	r18, 0x01	; 1
    1cf0:	30 40       	sbci	r19, 0x00	; 0
    1cf2:	40 40       	sbci	r20, 0x00	; 0
    1cf4:	50 40       	sbci	r21, 0x00	; 0
    1cf6:	2a 21       	and	r18, r10
    1cf8:	3b 21       	and	r19, r11
    1cfa:	4c 21       	and	r20, r12
    1cfc:	5d 21       	and	r21, r13
    1cfe:	21 15       	cp	r18, r1
    1d00:	31 05       	cpc	r19, r1
    1d02:	41 05       	cpc	r20, r1
    1d04:	51 05       	cpc	r21, r1
    1d06:	21 f0       	breq	.+8      	; 0x1d10 <_fpadd_parts+0x16e>
    1d08:	21 e0       	ldi	r18, 0x01	; 1
    1d0a:	30 e0       	ldi	r19, 0x00	; 0
    1d0c:	40 e0       	ldi	r20, 0x00	; 0
    1d0e:	50 e0       	ldi	r21, 0x00	; 0
    1d10:	59 01       	movw	r10, r18
    1d12:	6a 01       	movw	r12, r20
    1d14:	a6 28       	or	r10, r6
    1d16:	b7 28       	or	r11, r7
    1d18:	c8 28       	or	r12, r8
    1d1a:	d9 28       	or	r13, r9
    1d1c:	0b c0       	rjmp	.+22     	; 0x1d34 <_fpadd_parts+0x192>
    1d1e:	82 15       	cp	r24, r2
    1d20:	93 05       	cpc	r25, r3
    1d22:	2c f0       	brlt	.+10     	; 0x1d2e <_fpadd_parts+0x18c>
    1d24:	1c 01       	movw	r2, r24
    1d26:	aa 24       	eor	r10, r10
    1d28:	bb 24       	eor	r11, r11
    1d2a:	65 01       	movw	r12, r10
    1d2c:	03 c0       	rjmp	.+6      	; 0x1d34 <_fpadd_parts+0x192>
    1d2e:	ee 24       	eor	r14, r14
    1d30:	ff 24       	eor	r15, r15
    1d32:	87 01       	movw	r16, r14
    1d34:	11 96       	adiw	r26, 0x01	; 1
    1d36:	9c 91       	ld	r25, X
    1d38:	d2 01       	movw	r26, r4
    1d3a:	11 96       	adiw	r26, 0x01	; 1
    1d3c:	8c 91       	ld	r24, X
    1d3e:	98 17       	cp	r25, r24
    1d40:	09 f4       	brne	.+2      	; 0x1d44 <_fpadd_parts+0x1a2>
    1d42:	45 c0       	rjmp	.+138    	; 0x1dce <_fpadd_parts+0x22c>
    1d44:	99 23       	and	r25, r25
    1d46:	39 f0       	breq	.+14     	; 0x1d56 <_fpadd_parts+0x1b4>
    1d48:	a8 01       	movw	r20, r16
    1d4a:	97 01       	movw	r18, r14
    1d4c:	2a 19       	sub	r18, r10
    1d4e:	3b 09       	sbc	r19, r11
    1d50:	4c 09       	sbc	r20, r12
    1d52:	5d 09       	sbc	r21, r13
    1d54:	06 c0       	rjmp	.+12     	; 0x1d62 <_fpadd_parts+0x1c0>
    1d56:	a6 01       	movw	r20, r12
    1d58:	95 01       	movw	r18, r10
    1d5a:	2e 19       	sub	r18, r14
    1d5c:	3f 09       	sbc	r19, r15
    1d5e:	40 0b       	sbc	r20, r16
    1d60:	51 0b       	sbc	r21, r17
    1d62:	57 fd       	sbrc	r21, 7
    1d64:	08 c0       	rjmp	.+16     	; 0x1d76 <_fpadd_parts+0x1d4>
    1d66:	11 82       	std	Z+1, r1	; 0x01
    1d68:	33 82       	std	Z+3, r3	; 0x03
    1d6a:	22 82       	std	Z+2, r2	; 0x02
    1d6c:	24 83       	std	Z+4, r18	; 0x04
    1d6e:	35 83       	std	Z+5, r19	; 0x05
    1d70:	46 83       	std	Z+6, r20	; 0x06
    1d72:	57 83       	std	Z+7, r21	; 0x07
    1d74:	1d c0       	rjmp	.+58     	; 0x1db0 <_fpadd_parts+0x20e>
    1d76:	81 e0       	ldi	r24, 0x01	; 1
    1d78:	81 83       	std	Z+1, r24	; 0x01
    1d7a:	33 82       	std	Z+3, r3	; 0x03
    1d7c:	22 82       	std	Z+2, r2	; 0x02
    1d7e:	88 27       	eor	r24, r24
    1d80:	99 27       	eor	r25, r25
    1d82:	dc 01       	movw	r26, r24
    1d84:	82 1b       	sub	r24, r18
    1d86:	93 0b       	sbc	r25, r19
    1d88:	a4 0b       	sbc	r26, r20
    1d8a:	b5 0b       	sbc	r27, r21
    1d8c:	84 83       	std	Z+4, r24	; 0x04
    1d8e:	95 83       	std	Z+5, r25	; 0x05
    1d90:	a6 83       	std	Z+6, r26	; 0x06
    1d92:	b7 83       	std	Z+7, r27	; 0x07
    1d94:	0d c0       	rjmp	.+26     	; 0x1db0 <_fpadd_parts+0x20e>
    1d96:	22 0f       	add	r18, r18
    1d98:	33 1f       	adc	r19, r19
    1d9a:	44 1f       	adc	r20, r20
    1d9c:	55 1f       	adc	r21, r21
    1d9e:	24 83       	std	Z+4, r18	; 0x04
    1da0:	35 83       	std	Z+5, r19	; 0x05
    1da2:	46 83       	std	Z+6, r20	; 0x06
    1da4:	57 83       	std	Z+7, r21	; 0x07
    1da6:	82 81       	ldd	r24, Z+2	; 0x02
    1da8:	93 81       	ldd	r25, Z+3	; 0x03
    1daa:	01 97       	sbiw	r24, 0x01	; 1
    1dac:	93 83       	std	Z+3, r25	; 0x03
    1dae:	82 83       	std	Z+2, r24	; 0x02
    1db0:	24 81       	ldd	r18, Z+4	; 0x04
    1db2:	35 81       	ldd	r19, Z+5	; 0x05
    1db4:	46 81       	ldd	r20, Z+6	; 0x06
    1db6:	57 81       	ldd	r21, Z+7	; 0x07
    1db8:	da 01       	movw	r26, r20
    1dba:	c9 01       	movw	r24, r18
    1dbc:	01 97       	sbiw	r24, 0x01	; 1
    1dbe:	a1 09       	sbc	r26, r1
    1dc0:	b1 09       	sbc	r27, r1
    1dc2:	8f 5f       	subi	r24, 0xFF	; 255
    1dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc6:	af 4f       	sbci	r26, 0xFF	; 255
    1dc8:	bf 43       	sbci	r27, 0x3F	; 63
    1dca:	28 f3       	brcs	.-54     	; 0x1d96 <_fpadd_parts+0x1f4>
    1dcc:	0b c0       	rjmp	.+22     	; 0x1de4 <_fpadd_parts+0x242>
    1dce:	91 83       	std	Z+1, r25	; 0x01
    1dd0:	33 82       	std	Z+3, r3	; 0x03
    1dd2:	22 82       	std	Z+2, r2	; 0x02
    1dd4:	ea 0c       	add	r14, r10
    1dd6:	fb 1c       	adc	r15, r11
    1dd8:	0c 1d       	adc	r16, r12
    1dda:	1d 1d       	adc	r17, r13
    1ddc:	e4 82       	std	Z+4, r14	; 0x04
    1dde:	f5 82       	std	Z+5, r15	; 0x05
    1de0:	06 83       	std	Z+6, r16	; 0x06
    1de2:	17 83       	std	Z+7, r17	; 0x07
    1de4:	83 e0       	ldi	r24, 0x03	; 3
    1de6:	80 83       	st	Z, r24
    1de8:	24 81       	ldd	r18, Z+4	; 0x04
    1dea:	35 81       	ldd	r19, Z+5	; 0x05
    1dec:	46 81       	ldd	r20, Z+6	; 0x06
    1dee:	57 81       	ldd	r21, Z+7	; 0x07
    1df0:	57 ff       	sbrs	r21, 7
    1df2:	1a c0       	rjmp	.+52     	; 0x1e28 <_fpadd_parts+0x286>
    1df4:	c9 01       	movw	r24, r18
    1df6:	aa 27       	eor	r26, r26
    1df8:	97 fd       	sbrc	r25, 7
    1dfa:	a0 95       	com	r26
    1dfc:	ba 2f       	mov	r27, r26
    1dfe:	81 70       	andi	r24, 0x01	; 1
    1e00:	90 70       	andi	r25, 0x00	; 0
    1e02:	a0 70       	andi	r26, 0x00	; 0
    1e04:	b0 70       	andi	r27, 0x00	; 0
    1e06:	56 95       	lsr	r21
    1e08:	47 95       	ror	r20
    1e0a:	37 95       	ror	r19
    1e0c:	27 95       	ror	r18
    1e0e:	82 2b       	or	r24, r18
    1e10:	93 2b       	or	r25, r19
    1e12:	a4 2b       	or	r26, r20
    1e14:	b5 2b       	or	r27, r21
    1e16:	84 83       	std	Z+4, r24	; 0x04
    1e18:	95 83       	std	Z+5, r25	; 0x05
    1e1a:	a6 83       	std	Z+6, r26	; 0x06
    1e1c:	b7 83       	std	Z+7, r27	; 0x07
    1e1e:	82 81       	ldd	r24, Z+2	; 0x02
    1e20:	93 81       	ldd	r25, Z+3	; 0x03
    1e22:	01 96       	adiw	r24, 0x01	; 1
    1e24:	93 83       	std	Z+3, r25	; 0x03
    1e26:	82 83       	std	Z+2, r24	; 0x02
    1e28:	df 01       	movw	r26, r30
    1e2a:	01 c0       	rjmp	.+2      	; 0x1e2e <_fpadd_parts+0x28c>
    1e2c:	d2 01       	movw	r26, r4
    1e2e:	cd 01       	movw	r24, r26
    1e30:	cd b7       	in	r28, 0x3d	; 61
    1e32:	de b7       	in	r29, 0x3e	; 62
    1e34:	e2 e1       	ldi	r30, 0x12	; 18
    1e36:	0c 94 52 38 	jmp	0x70a4	; 0x70a4 <__epilogue_restores__>

00001e3a <__subsf3>:
    1e3a:	a0 e2       	ldi	r26, 0x20	; 32
    1e3c:	b0 e0       	ldi	r27, 0x00	; 0
    1e3e:	e3 e2       	ldi	r30, 0x23	; 35
    1e40:	ff e0       	ldi	r31, 0x0F	; 15
    1e42:	0c 94 42 38 	jmp	0x7084	; 0x7084 <__prologue_saves__+0x18>
    1e46:	69 83       	std	Y+1, r22	; 0x01
    1e48:	7a 83       	std	Y+2, r23	; 0x02
    1e4a:	8b 83       	std	Y+3, r24	; 0x03
    1e4c:	9c 83       	std	Y+4, r25	; 0x04
    1e4e:	2d 83       	std	Y+5, r18	; 0x05
    1e50:	3e 83       	std	Y+6, r19	; 0x06
    1e52:	4f 83       	std	Y+7, r20	; 0x07
    1e54:	58 87       	std	Y+8, r21	; 0x08
    1e56:	e9 e0       	ldi	r30, 0x09	; 9
    1e58:	ee 2e       	mov	r14, r30
    1e5a:	f1 2c       	mov	r15, r1
    1e5c:	ec 0e       	add	r14, r28
    1e5e:	fd 1e       	adc	r15, r29
    1e60:	ce 01       	movw	r24, r28
    1e62:	01 96       	adiw	r24, 0x01	; 1
    1e64:	b7 01       	movw	r22, r14
    1e66:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    1e6a:	8e 01       	movw	r16, r28
    1e6c:	0f 5e       	subi	r16, 0xEF	; 239
    1e6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e70:	ce 01       	movw	r24, r28
    1e72:	05 96       	adiw	r24, 0x05	; 5
    1e74:	b8 01       	movw	r22, r16
    1e76:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    1e7a:	8a 89       	ldd	r24, Y+18	; 0x12
    1e7c:	91 e0       	ldi	r25, 0x01	; 1
    1e7e:	89 27       	eor	r24, r25
    1e80:	8a 8b       	std	Y+18, r24	; 0x12
    1e82:	c7 01       	movw	r24, r14
    1e84:	b8 01       	movw	r22, r16
    1e86:	ae 01       	movw	r20, r28
    1e88:	47 5e       	subi	r20, 0xE7	; 231
    1e8a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e8c:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <_fpadd_parts>
    1e90:	0e 94 05 12 	call	0x240a	; 0x240a <__pack_f>
    1e94:	a0 96       	adiw	r28, 0x20	; 32
    1e96:	e6 e0       	ldi	r30, 0x06	; 6
    1e98:	0c 94 5e 38 	jmp	0x70bc	; 0x70bc <__epilogue_restores__+0x18>

00001e9c <__addsf3>:
    1e9c:	a0 e2       	ldi	r26, 0x20	; 32
    1e9e:	b0 e0       	ldi	r27, 0x00	; 0
    1ea0:	e4 e5       	ldi	r30, 0x54	; 84
    1ea2:	ff e0       	ldi	r31, 0x0F	; 15
    1ea4:	0c 94 42 38 	jmp	0x7084	; 0x7084 <__prologue_saves__+0x18>
    1ea8:	69 83       	std	Y+1, r22	; 0x01
    1eaa:	7a 83       	std	Y+2, r23	; 0x02
    1eac:	8b 83       	std	Y+3, r24	; 0x03
    1eae:	9c 83       	std	Y+4, r25	; 0x04
    1eb0:	2d 83       	std	Y+5, r18	; 0x05
    1eb2:	3e 83       	std	Y+6, r19	; 0x06
    1eb4:	4f 83       	std	Y+7, r20	; 0x07
    1eb6:	58 87       	std	Y+8, r21	; 0x08
    1eb8:	f9 e0       	ldi	r31, 0x09	; 9
    1eba:	ef 2e       	mov	r14, r31
    1ebc:	f1 2c       	mov	r15, r1
    1ebe:	ec 0e       	add	r14, r28
    1ec0:	fd 1e       	adc	r15, r29
    1ec2:	ce 01       	movw	r24, r28
    1ec4:	01 96       	adiw	r24, 0x01	; 1
    1ec6:	b7 01       	movw	r22, r14
    1ec8:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    1ecc:	8e 01       	movw	r16, r28
    1ece:	0f 5e       	subi	r16, 0xEF	; 239
    1ed0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	05 96       	adiw	r24, 0x05	; 5
    1ed6:	b8 01       	movw	r22, r16
    1ed8:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    1edc:	c7 01       	movw	r24, r14
    1ede:	b8 01       	movw	r22, r16
    1ee0:	ae 01       	movw	r20, r28
    1ee2:	47 5e       	subi	r20, 0xE7	; 231
    1ee4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ee6:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <_fpadd_parts>
    1eea:	0e 94 05 12 	call	0x240a	; 0x240a <__pack_f>
    1eee:	a0 96       	adiw	r28, 0x20	; 32
    1ef0:	e6 e0       	ldi	r30, 0x06	; 6
    1ef2:	0c 94 5e 38 	jmp	0x70bc	; 0x70bc <__epilogue_restores__+0x18>

00001ef6 <__mulsf3>:
    1ef6:	a0 e2       	ldi	r26, 0x20	; 32
    1ef8:	b0 e0       	ldi	r27, 0x00	; 0
    1efa:	e1 e8       	ldi	r30, 0x81	; 129
    1efc:	ff e0       	ldi	r31, 0x0F	; 15
    1efe:	0c 94 36 38 	jmp	0x706c	; 0x706c <__prologue_saves__>
    1f02:	69 83       	std	Y+1, r22	; 0x01
    1f04:	7a 83       	std	Y+2, r23	; 0x02
    1f06:	8b 83       	std	Y+3, r24	; 0x03
    1f08:	9c 83       	std	Y+4, r25	; 0x04
    1f0a:	2d 83       	std	Y+5, r18	; 0x05
    1f0c:	3e 83       	std	Y+6, r19	; 0x06
    1f0e:	4f 83       	std	Y+7, r20	; 0x07
    1f10:	58 87       	std	Y+8, r21	; 0x08
    1f12:	ce 01       	movw	r24, r28
    1f14:	01 96       	adiw	r24, 0x01	; 1
    1f16:	be 01       	movw	r22, r28
    1f18:	67 5f       	subi	r22, 0xF7	; 247
    1f1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f1c:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    1f20:	ce 01       	movw	r24, r28
    1f22:	05 96       	adiw	r24, 0x05	; 5
    1f24:	be 01       	movw	r22, r28
    1f26:	6f 5e       	subi	r22, 0xEF	; 239
    1f28:	7f 4f       	sbci	r23, 0xFF	; 255
    1f2a:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    1f2e:	99 85       	ldd	r25, Y+9	; 0x09
    1f30:	92 30       	cpi	r25, 0x02	; 2
    1f32:	88 f0       	brcs	.+34     	; 0x1f56 <__mulsf3+0x60>
    1f34:	89 89       	ldd	r24, Y+17	; 0x11
    1f36:	82 30       	cpi	r24, 0x02	; 2
    1f38:	c8 f0       	brcs	.+50     	; 0x1f6c <__mulsf3+0x76>
    1f3a:	94 30       	cpi	r25, 0x04	; 4
    1f3c:	19 f4       	brne	.+6      	; 0x1f44 <__mulsf3+0x4e>
    1f3e:	82 30       	cpi	r24, 0x02	; 2
    1f40:	51 f4       	brne	.+20     	; 0x1f56 <__mulsf3+0x60>
    1f42:	04 c0       	rjmp	.+8      	; 0x1f4c <__mulsf3+0x56>
    1f44:	84 30       	cpi	r24, 0x04	; 4
    1f46:	29 f4       	brne	.+10     	; 0x1f52 <__mulsf3+0x5c>
    1f48:	92 30       	cpi	r25, 0x02	; 2
    1f4a:	81 f4       	brne	.+32     	; 0x1f6c <__mulsf3+0x76>
    1f4c:	82 e7       	ldi	r24, 0x72	; 114
    1f4e:	90 e0       	ldi	r25, 0x00	; 0
    1f50:	c6 c0       	rjmp	.+396    	; 0x20de <__mulsf3+0x1e8>
    1f52:	92 30       	cpi	r25, 0x02	; 2
    1f54:	49 f4       	brne	.+18     	; 0x1f68 <__mulsf3+0x72>
    1f56:	20 e0       	ldi	r18, 0x00	; 0
    1f58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f5a:	8a 89       	ldd	r24, Y+18	; 0x12
    1f5c:	98 13       	cpse	r25, r24
    1f5e:	21 e0       	ldi	r18, 0x01	; 1
    1f60:	2a 87       	std	Y+10, r18	; 0x0a
    1f62:	ce 01       	movw	r24, r28
    1f64:	09 96       	adiw	r24, 0x09	; 9
    1f66:	bb c0       	rjmp	.+374    	; 0x20de <__mulsf3+0x1e8>
    1f68:	82 30       	cpi	r24, 0x02	; 2
    1f6a:	49 f4       	brne	.+18     	; 0x1f7e <__mulsf3+0x88>
    1f6c:	20 e0       	ldi	r18, 0x00	; 0
    1f6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f70:	8a 89       	ldd	r24, Y+18	; 0x12
    1f72:	98 13       	cpse	r25, r24
    1f74:	21 e0       	ldi	r18, 0x01	; 1
    1f76:	2a 8b       	std	Y+18, r18	; 0x12
    1f78:	ce 01       	movw	r24, r28
    1f7a:	41 96       	adiw	r24, 0x11	; 17
    1f7c:	b0 c0       	rjmp	.+352    	; 0x20de <__mulsf3+0x1e8>
    1f7e:	2d 84       	ldd	r2, Y+13	; 0x0d
    1f80:	3e 84       	ldd	r3, Y+14	; 0x0e
    1f82:	4f 84       	ldd	r4, Y+15	; 0x0f
    1f84:	58 88       	ldd	r5, Y+16	; 0x10
    1f86:	6d 88       	ldd	r6, Y+21	; 0x15
    1f88:	7e 88       	ldd	r7, Y+22	; 0x16
    1f8a:	8f 88       	ldd	r8, Y+23	; 0x17
    1f8c:	98 8c       	ldd	r9, Y+24	; 0x18
    1f8e:	ee 24       	eor	r14, r14
    1f90:	ff 24       	eor	r15, r15
    1f92:	87 01       	movw	r16, r14
    1f94:	aa 24       	eor	r10, r10
    1f96:	bb 24       	eor	r11, r11
    1f98:	65 01       	movw	r12, r10
    1f9a:	40 e0       	ldi	r20, 0x00	; 0
    1f9c:	50 e0       	ldi	r21, 0x00	; 0
    1f9e:	60 e0       	ldi	r22, 0x00	; 0
    1fa0:	70 e0       	ldi	r23, 0x00	; 0
    1fa2:	e0 e0       	ldi	r30, 0x00	; 0
    1fa4:	f0 e0       	ldi	r31, 0x00	; 0
    1fa6:	c1 01       	movw	r24, r2
    1fa8:	81 70       	andi	r24, 0x01	; 1
    1faa:	90 70       	andi	r25, 0x00	; 0
    1fac:	89 2b       	or	r24, r25
    1fae:	e9 f0       	breq	.+58     	; 0x1fea <__mulsf3+0xf4>
    1fb0:	e6 0c       	add	r14, r6
    1fb2:	f7 1c       	adc	r15, r7
    1fb4:	08 1d       	adc	r16, r8
    1fb6:	19 1d       	adc	r17, r9
    1fb8:	9a 01       	movw	r18, r20
    1fba:	ab 01       	movw	r20, r22
    1fbc:	2a 0d       	add	r18, r10
    1fbe:	3b 1d       	adc	r19, r11
    1fc0:	4c 1d       	adc	r20, r12
    1fc2:	5d 1d       	adc	r21, r13
    1fc4:	80 e0       	ldi	r24, 0x00	; 0
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	a0 e0       	ldi	r26, 0x00	; 0
    1fca:	b0 e0       	ldi	r27, 0x00	; 0
    1fcc:	e6 14       	cp	r14, r6
    1fce:	f7 04       	cpc	r15, r7
    1fd0:	08 05       	cpc	r16, r8
    1fd2:	19 05       	cpc	r17, r9
    1fd4:	20 f4       	brcc	.+8      	; 0x1fde <__mulsf3+0xe8>
    1fd6:	81 e0       	ldi	r24, 0x01	; 1
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	a0 e0       	ldi	r26, 0x00	; 0
    1fdc:	b0 e0       	ldi	r27, 0x00	; 0
    1fde:	ba 01       	movw	r22, r20
    1fe0:	a9 01       	movw	r20, r18
    1fe2:	48 0f       	add	r20, r24
    1fe4:	59 1f       	adc	r21, r25
    1fe6:	6a 1f       	adc	r22, r26
    1fe8:	7b 1f       	adc	r23, r27
    1fea:	aa 0c       	add	r10, r10
    1fec:	bb 1c       	adc	r11, r11
    1fee:	cc 1c       	adc	r12, r12
    1ff0:	dd 1c       	adc	r13, r13
    1ff2:	97 fe       	sbrs	r9, 7
    1ff4:	08 c0       	rjmp	.+16     	; 0x2006 <__mulsf3+0x110>
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	a0 e0       	ldi	r26, 0x00	; 0
    1ffc:	b0 e0       	ldi	r27, 0x00	; 0
    1ffe:	a8 2a       	or	r10, r24
    2000:	b9 2a       	or	r11, r25
    2002:	ca 2a       	or	r12, r26
    2004:	db 2a       	or	r13, r27
    2006:	31 96       	adiw	r30, 0x01	; 1
    2008:	e0 32       	cpi	r30, 0x20	; 32
    200a:	f1 05       	cpc	r31, r1
    200c:	49 f0       	breq	.+18     	; 0x2020 <__mulsf3+0x12a>
    200e:	66 0c       	add	r6, r6
    2010:	77 1c       	adc	r7, r7
    2012:	88 1c       	adc	r8, r8
    2014:	99 1c       	adc	r9, r9
    2016:	56 94       	lsr	r5
    2018:	47 94       	ror	r4
    201a:	37 94       	ror	r3
    201c:	27 94       	ror	r2
    201e:	c3 cf       	rjmp	.-122    	; 0x1fa6 <__mulsf3+0xb0>
    2020:	fa 85       	ldd	r31, Y+10	; 0x0a
    2022:	ea 89       	ldd	r30, Y+18	; 0x12
    2024:	2b 89       	ldd	r18, Y+19	; 0x13
    2026:	3c 89       	ldd	r19, Y+20	; 0x14
    2028:	8b 85       	ldd	r24, Y+11	; 0x0b
    202a:	9c 85       	ldd	r25, Y+12	; 0x0c
    202c:	28 0f       	add	r18, r24
    202e:	39 1f       	adc	r19, r25
    2030:	2e 5f       	subi	r18, 0xFE	; 254
    2032:	3f 4f       	sbci	r19, 0xFF	; 255
    2034:	17 c0       	rjmp	.+46     	; 0x2064 <__mulsf3+0x16e>
    2036:	ca 01       	movw	r24, r20
    2038:	81 70       	andi	r24, 0x01	; 1
    203a:	90 70       	andi	r25, 0x00	; 0
    203c:	89 2b       	or	r24, r25
    203e:	61 f0       	breq	.+24     	; 0x2058 <__mulsf3+0x162>
    2040:	16 95       	lsr	r17
    2042:	07 95       	ror	r16
    2044:	f7 94       	ror	r15
    2046:	e7 94       	ror	r14
    2048:	80 e0       	ldi	r24, 0x00	; 0
    204a:	90 e0       	ldi	r25, 0x00	; 0
    204c:	a0 e0       	ldi	r26, 0x00	; 0
    204e:	b0 e8       	ldi	r27, 0x80	; 128
    2050:	e8 2a       	or	r14, r24
    2052:	f9 2a       	or	r15, r25
    2054:	0a 2b       	or	r16, r26
    2056:	1b 2b       	or	r17, r27
    2058:	76 95       	lsr	r23
    205a:	67 95       	ror	r22
    205c:	57 95       	ror	r21
    205e:	47 95       	ror	r20
    2060:	2f 5f       	subi	r18, 0xFF	; 255
    2062:	3f 4f       	sbci	r19, 0xFF	; 255
    2064:	77 fd       	sbrc	r23, 7
    2066:	e7 cf       	rjmp	.-50     	; 0x2036 <__mulsf3+0x140>
    2068:	0c c0       	rjmp	.+24     	; 0x2082 <__mulsf3+0x18c>
    206a:	44 0f       	add	r20, r20
    206c:	55 1f       	adc	r21, r21
    206e:	66 1f       	adc	r22, r22
    2070:	77 1f       	adc	r23, r23
    2072:	17 fd       	sbrc	r17, 7
    2074:	41 60       	ori	r20, 0x01	; 1
    2076:	ee 0c       	add	r14, r14
    2078:	ff 1c       	adc	r15, r15
    207a:	00 1f       	adc	r16, r16
    207c:	11 1f       	adc	r17, r17
    207e:	21 50       	subi	r18, 0x01	; 1
    2080:	30 40       	sbci	r19, 0x00	; 0
    2082:	40 30       	cpi	r20, 0x00	; 0
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	59 07       	cpc	r21, r25
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	69 07       	cpc	r22, r25
    208c:	90 e4       	ldi	r25, 0x40	; 64
    208e:	79 07       	cpc	r23, r25
    2090:	60 f3       	brcs	.-40     	; 0x206a <__mulsf3+0x174>
    2092:	2b 8f       	std	Y+27, r18	; 0x1b
    2094:	3c 8f       	std	Y+28, r19	; 0x1c
    2096:	db 01       	movw	r26, r22
    2098:	ca 01       	movw	r24, r20
    209a:	8f 77       	andi	r24, 0x7F	; 127
    209c:	90 70       	andi	r25, 0x00	; 0
    209e:	a0 70       	andi	r26, 0x00	; 0
    20a0:	b0 70       	andi	r27, 0x00	; 0
    20a2:	80 34       	cpi	r24, 0x40	; 64
    20a4:	91 05       	cpc	r25, r1
    20a6:	a1 05       	cpc	r26, r1
    20a8:	b1 05       	cpc	r27, r1
    20aa:	61 f4       	brne	.+24     	; 0x20c4 <__mulsf3+0x1ce>
    20ac:	47 fd       	sbrc	r20, 7
    20ae:	0a c0       	rjmp	.+20     	; 0x20c4 <__mulsf3+0x1ce>
    20b0:	e1 14       	cp	r14, r1
    20b2:	f1 04       	cpc	r15, r1
    20b4:	01 05       	cpc	r16, r1
    20b6:	11 05       	cpc	r17, r1
    20b8:	29 f0       	breq	.+10     	; 0x20c4 <__mulsf3+0x1ce>
    20ba:	40 5c       	subi	r20, 0xC0	; 192
    20bc:	5f 4f       	sbci	r21, 0xFF	; 255
    20be:	6f 4f       	sbci	r22, 0xFF	; 255
    20c0:	7f 4f       	sbci	r23, 0xFF	; 255
    20c2:	40 78       	andi	r20, 0x80	; 128
    20c4:	1a 8e       	std	Y+26, r1	; 0x1a
    20c6:	fe 17       	cp	r31, r30
    20c8:	11 f0       	breq	.+4      	; 0x20ce <__mulsf3+0x1d8>
    20ca:	81 e0       	ldi	r24, 0x01	; 1
    20cc:	8a 8f       	std	Y+26, r24	; 0x1a
    20ce:	4d 8f       	std	Y+29, r20	; 0x1d
    20d0:	5e 8f       	std	Y+30, r21	; 0x1e
    20d2:	6f 8f       	std	Y+31, r22	; 0x1f
    20d4:	78 a3       	std	Y+32, r23	; 0x20
    20d6:	83 e0       	ldi	r24, 0x03	; 3
    20d8:	89 8f       	std	Y+25, r24	; 0x19
    20da:	ce 01       	movw	r24, r28
    20dc:	49 96       	adiw	r24, 0x19	; 25
    20de:	0e 94 05 12 	call	0x240a	; 0x240a <__pack_f>
    20e2:	a0 96       	adiw	r28, 0x20	; 32
    20e4:	e2 e1       	ldi	r30, 0x12	; 18
    20e6:	0c 94 52 38 	jmp	0x70a4	; 0x70a4 <__epilogue_restores__>

000020ea <__divsf3>:
    20ea:	a8 e1       	ldi	r26, 0x18	; 24
    20ec:	b0 e0       	ldi	r27, 0x00	; 0
    20ee:	eb e7       	ldi	r30, 0x7B	; 123
    20f0:	f0 e1       	ldi	r31, 0x10	; 16
    20f2:	0c 94 3e 38 	jmp	0x707c	; 0x707c <__prologue_saves__+0x10>
    20f6:	69 83       	std	Y+1, r22	; 0x01
    20f8:	7a 83       	std	Y+2, r23	; 0x02
    20fa:	8b 83       	std	Y+3, r24	; 0x03
    20fc:	9c 83       	std	Y+4, r25	; 0x04
    20fe:	2d 83       	std	Y+5, r18	; 0x05
    2100:	3e 83       	std	Y+6, r19	; 0x06
    2102:	4f 83       	std	Y+7, r20	; 0x07
    2104:	58 87       	std	Y+8, r21	; 0x08
    2106:	b9 e0       	ldi	r27, 0x09	; 9
    2108:	eb 2e       	mov	r14, r27
    210a:	f1 2c       	mov	r15, r1
    210c:	ec 0e       	add	r14, r28
    210e:	fd 1e       	adc	r15, r29
    2110:	ce 01       	movw	r24, r28
    2112:	01 96       	adiw	r24, 0x01	; 1
    2114:	b7 01       	movw	r22, r14
    2116:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    211a:	8e 01       	movw	r16, r28
    211c:	0f 5e       	subi	r16, 0xEF	; 239
    211e:	1f 4f       	sbci	r17, 0xFF	; 255
    2120:	ce 01       	movw	r24, r28
    2122:	05 96       	adiw	r24, 0x05	; 5
    2124:	b8 01       	movw	r22, r16
    2126:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    212a:	29 85       	ldd	r18, Y+9	; 0x09
    212c:	22 30       	cpi	r18, 0x02	; 2
    212e:	08 f4       	brcc	.+2      	; 0x2132 <__divsf3+0x48>
    2130:	7e c0       	rjmp	.+252    	; 0x222e <__divsf3+0x144>
    2132:	39 89       	ldd	r19, Y+17	; 0x11
    2134:	32 30       	cpi	r19, 0x02	; 2
    2136:	10 f4       	brcc	.+4      	; 0x213c <__divsf3+0x52>
    2138:	b8 01       	movw	r22, r16
    213a:	7c c0       	rjmp	.+248    	; 0x2234 <__divsf3+0x14a>
    213c:	8a 85       	ldd	r24, Y+10	; 0x0a
    213e:	9a 89       	ldd	r25, Y+18	; 0x12
    2140:	89 27       	eor	r24, r25
    2142:	8a 87       	std	Y+10, r24	; 0x0a
    2144:	24 30       	cpi	r18, 0x04	; 4
    2146:	11 f0       	breq	.+4      	; 0x214c <__divsf3+0x62>
    2148:	22 30       	cpi	r18, 0x02	; 2
    214a:	31 f4       	brne	.+12     	; 0x2158 <__divsf3+0x6e>
    214c:	23 17       	cp	r18, r19
    214e:	09 f0       	breq	.+2      	; 0x2152 <__divsf3+0x68>
    2150:	6e c0       	rjmp	.+220    	; 0x222e <__divsf3+0x144>
    2152:	62 e7       	ldi	r22, 0x72	; 114
    2154:	70 e0       	ldi	r23, 0x00	; 0
    2156:	6e c0       	rjmp	.+220    	; 0x2234 <__divsf3+0x14a>
    2158:	34 30       	cpi	r19, 0x04	; 4
    215a:	39 f4       	brne	.+14     	; 0x216a <__divsf3+0x80>
    215c:	1d 86       	std	Y+13, r1	; 0x0d
    215e:	1e 86       	std	Y+14, r1	; 0x0e
    2160:	1f 86       	std	Y+15, r1	; 0x0f
    2162:	18 8a       	std	Y+16, r1	; 0x10
    2164:	1c 86       	std	Y+12, r1	; 0x0c
    2166:	1b 86       	std	Y+11, r1	; 0x0b
    2168:	04 c0       	rjmp	.+8      	; 0x2172 <__divsf3+0x88>
    216a:	32 30       	cpi	r19, 0x02	; 2
    216c:	21 f4       	brne	.+8      	; 0x2176 <__divsf3+0x8c>
    216e:	84 e0       	ldi	r24, 0x04	; 4
    2170:	89 87       	std	Y+9, r24	; 0x09
    2172:	b7 01       	movw	r22, r14
    2174:	5f c0       	rjmp	.+190    	; 0x2234 <__divsf3+0x14a>
    2176:	2b 85       	ldd	r18, Y+11	; 0x0b
    2178:	3c 85       	ldd	r19, Y+12	; 0x0c
    217a:	8b 89       	ldd	r24, Y+19	; 0x13
    217c:	9c 89       	ldd	r25, Y+20	; 0x14
    217e:	28 1b       	sub	r18, r24
    2180:	39 0b       	sbc	r19, r25
    2182:	3c 87       	std	Y+12, r19	; 0x0c
    2184:	2b 87       	std	Y+11, r18	; 0x0b
    2186:	ed 84       	ldd	r14, Y+13	; 0x0d
    2188:	fe 84       	ldd	r15, Y+14	; 0x0e
    218a:	0f 85       	ldd	r16, Y+15	; 0x0f
    218c:	18 89       	ldd	r17, Y+16	; 0x10
    218e:	ad 88       	ldd	r10, Y+21	; 0x15
    2190:	be 88       	ldd	r11, Y+22	; 0x16
    2192:	cf 88       	ldd	r12, Y+23	; 0x17
    2194:	d8 8c       	ldd	r13, Y+24	; 0x18
    2196:	ea 14       	cp	r14, r10
    2198:	fb 04       	cpc	r15, r11
    219a:	0c 05       	cpc	r16, r12
    219c:	1d 05       	cpc	r17, r13
    219e:	40 f4       	brcc	.+16     	; 0x21b0 <__divsf3+0xc6>
    21a0:	ee 0c       	add	r14, r14
    21a2:	ff 1c       	adc	r15, r15
    21a4:	00 1f       	adc	r16, r16
    21a6:	11 1f       	adc	r17, r17
    21a8:	21 50       	subi	r18, 0x01	; 1
    21aa:	30 40       	sbci	r19, 0x00	; 0
    21ac:	3c 87       	std	Y+12, r19	; 0x0c
    21ae:	2b 87       	std	Y+11, r18	; 0x0b
    21b0:	20 e0       	ldi	r18, 0x00	; 0
    21b2:	30 e0       	ldi	r19, 0x00	; 0
    21b4:	40 e0       	ldi	r20, 0x00	; 0
    21b6:	50 e0       	ldi	r21, 0x00	; 0
    21b8:	80 e0       	ldi	r24, 0x00	; 0
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	a0 e0       	ldi	r26, 0x00	; 0
    21be:	b0 e4       	ldi	r27, 0x40	; 64
    21c0:	60 e0       	ldi	r22, 0x00	; 0
    21c2:	70 e0       	ldi	r23, 0x00	; 0
    21c4:	ea 14       	cp	r14, r10
    21c6:	fb 04       	cpc	r15, r11
    21c8:	0c 05       	cpc	r16, r12
    21ca:	1d 05       	cpc	r17, r13
    21cc:	40 f0       	brcs	.+16     	; 0x21de <__divsf3+0xf4>
    21ce:	28 2b       	or	r18, r24
    21d0:	39 2b       	or	r19, r25
    21d2:	4a 2b       	or	r20, r26
    21d4:	5b 2b       	or	r21, r27
    21d6:	ea 18       	sub	r14, r10
    21d8:	fb 08       	sbc	r15, r11
    21da:	0c 09       	sbc	r16, r12
    21dc:	1d 09       	sbc	r17, r13
    21de:	b6 95       	lsr	r27
    21e0:	a7 95       	ror	r26
    21e2:	97 95       	ror	r25
    21e4:	87 95       	ror	r24
    21e6:	ee 0c       	add	r14, r14
    21e8:	ff 1c       	adc	r15, r15
    21ea:	00 1f       	adc	r16, r16
    21ec:	11 1f       	adc	r17, r17
    21ee:	6f 5f       	subi	r22, 0xFF	; 255
    21f0:	7f 4f       	sbci	r23, 0xFF	; 255
    21f2:	6f 31       	cpi	r22, 0x1F	; 31
    21f4:	71 05       	cpc	r23, r1
    21f6:	31 f7       	brne	.-52     	; 0x21c4 <__divsf3+0xda>
    21f8:	da 01       	movw	r26, r20
    21fa:	c9 01       	movw	r24, r18
    21fc:	8f 77       	andi	r24, 0x7F	; 127
    21fe:	90 70       	andi	r25, 0x00	; 0
    2200:	a0 70       	andi	r26, 0x00	; 0
    2202:	b0 70       	andi	r27, 0x00	; 0
    2204:	80 34       	cpi	r24, 0x40	; 64
    2206:	91 05       	cpc	r25, r1
    2208:	a1 05       	cpc	r26, r1
    220a:	b1 05       	cpc	r27, r1
    220c:	61 f4       	brne	.+24     	; 0x2226 <__divsf3+0x13c>
    220e:	27 fd       	sbrc	r18, 7
    2210:	0a c0       	rjmp	.+20     	; 0x2226 <__divsf3+0x13c>
    2212:	e1 14       	cp	r14, r1
    2214:	f1 04       	cpc	r15, r1
    2216:	01 05       	cpc	r16, r1
    2218:	11 05       	cpc	r17, r1
    221a:	29 f0       	breq	.+10     	; 0x2226 <__divsf3+0x13c>
    221c:	20 5c       	subi	r18, 0xC0	; 192
    221e:	3f 4f       	sbci	r19, 0xFF	; 255
    2220:	4f 4f       	sbci	r20, 0xFF	; 255
    2222:	5f 4f       	sbci	r21, 0xFF	; 255
    2224:	20 78       	andi	r18, 0x80	; 128
    2226:	2d 87       	std	Y+13, r18	; 0x0d
    2228:	3e 87       	std	Y+14, r19	; 0x0e
    222a:	4f 87       	std	Y+15, r20	; 0x0f
    222c:	58 8b       	std	Y+16, r21	; 0x10
    222e:	be 01       	movw	r22, r28
    2230:	67 5f       	subi	r22, 0xF7	; 247
    2232:	7f 4f       	sbci	r23, 0xFF	; 255
    2234:	cb 01       	movw	r24, r22
    2236:	0e 94 05 12 	call	0x240a	; 0x240a <__pack_f>
    223a:	68 96       	adiw	r28, 0x18	; 24
    223c:	ea e0       	ldi	r30, 0x0A	; 10
    223e:	0c 94 5a 38 	jmp	0x70b4	; 0x70b4 <__epilogue_restores__+0x10>

00002242 <__gtsf2>:
    2242:	a8 e1       	ldi	r26, 0x18	; 24
    2244:	b0 e0       	ldi	r27, 0x00	; 0
    2246:	e7 e2       	ldi	r30, 0x27	; 39
    2248:	f1 e1       	ldi	r31, 0x11	; 17
    224a:	0c 94 42 38 	jmp	0x7084	; 0x7084 <__prologue_saves__+0x18>
    224e:	69 83       	std	Y+1, r22	; 0x01
    2250:	7a 83       	std	Y+2, r23	; 0x02
    2252:	8b 83       	std	Y+3, r24	; 0x03
    2254:	9c 83       	std	Y+4, r25	; 0x04
    2256:	2d 83       	std	Y+5, r18	; 0x05
    2258:	3e 83       	std	Y+6, r19	; 0x06
    225a:	4f 83       	std	Y+7, r20	; 0x07
    225c:	58 87       	std	Y+8, r21	; 0x08
    225e:	89 e0       	ldi	r24, 0x09	; 9
    2260:	e8 2e       	mov	r14, r24
    2262:	f1 2c       	mov	r15, r1
    2264:	ec 0e       	add	r14, r28
    2266:	fd 1e       	adc	r15, r29
    2268:	ce 01       	movw	r24, r28
    226a:	01 96       	adiw	r24, 0x01	; 1
    226c:	b7 01       	movw	r22, r14
    226e:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    2272:	8e 01       	movw	r16, r28
    2274:	0f 5e       	subi	r16, 0xEF	; 239
    2276:	1f 4f       	sbci	r17, 0xFF	; 255
    2278:	ce 01       	movw	r24, r28
    227a:	05 96       	adiw	r24, 0x05	; 5
    227c:	b8 01       	movw	r22, r16
    227e:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    2282:	89 85       	ldd	r24, Y+9	; 0x09
    2284:	82 30       	cpi	r24, 0x02	; 2
    2286:	40 f0       	brcs	.+16     	; 0x2298 <__gtsf2+0x56>
    2288:	89 89       	ldd	r24, Y+17	; 0x11
    228a:	82 30       	cpi	r24, 0x02	; 2
    228c:	28 f0       	brcs	.+10     	; 0x2298 <__gtsf2+0x56>
    228e:	c7 01       	movw	r24, r14
    2290:	b8 01       	movw	r22, r16
    2292:	0e 94 52 13 	call	0x26a4	; 0x26a4 <__fpcmp_parts_f>
    2296:	01 c0       	rjmp	.+2      	; 0x229a <__gtsf2+0x58>
    2298:	8f ef       	ldi	r24, 0xFF	; 255
    229a:	68 96       	adiw	r28, 0x18	; 24
    229c:	e6 e0       	ldi	r30, 0x06	; 6
    229e:	0c 94 5e 38 	jmp	0x70bc	; 0x70bc <__epilogue_restores__+0x18>

000022a2 <__gesf2>:
    22a2:	a8 e1       	ldi	r26, 0x18	; 24
    22a4:	b0 e0       	ldi	r27, 0x00	; 0
    22a6:	e7 e5       	ldi	r30, 0x57	; 87
    22a8:	f1 e1       	ldi	r31, 0x11	; 17
    22aa:	0c 94 42 38 	jmp	0x7084	; 0x7084 <__prologue_saves__+0x18>
    22ae:	69 83       	std	Y+1, r22	; 0x01
    22b0:	7a 83       	std	Y+2, r23	; 0x02
    22b2:	8b 83       	std	Y+3, r24	; 0x03
    22b4:	9c 83       	std	Y+4, r25	; 0x04
    22b6:	2d 83       	std	Y+5, r18	; 0x05
    22b8:	3e 83       	std	Y+6, r19	; 0x06
    22ba:	4f 83       	std	Y+7, r20	; 0x07
    22bc:	58 87       	std	Y+8, r21	; 0x08
    22be:	89 e0       	ldi	r24, 0x09	; 9
    22c0:	e8 2e       	mov	r14, r24
    22c2:	f1 2c       	mov	r15, r1
    22c4:	ec 0e       	add	r14, r28
    22c6:	fd 1e       	adc	r15, r29
    22c8:	ce 01       	movw	r24, r28
    22ca:	01 96       	adiw	r24, 0x01	; 1
    22cc:	b7 01       	movw	r22, r14
    22ce:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    22d2:	8e 01       	movw	r16, r28
    22d4:	0f 5e       	subi	r16, 0xEF	; 239
    22d6:	1f 4f       	sbci	r17, 0xFF	; 255
    22d8:	ce 01       	movw	r24, r28
    22da:	05 96       	adiw	r24, 0x05	; 5
    22dc:	b8 01       	movw	r22, r16
    22de:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    22e2:	89 85       	ldd	r24, Y+9	; 0x09
    22e4:	82 30       	cpi	r24, 0x02	; 2
    22e6:	40 f0       	brcs	.+16     	; 0x22f8 <__gesf2+0x56>
    22e8:	89 89       	ldd	r24, Y+17	; 0x11
    22ea:	82 30       	cpi	r24, 0x02	; 2
    22ec:	28 f0       	brcs	.+10     	; 0x22f8 <__gesf2+0x56>
    22ee:	c7 01       	movw	r24, r14
    22f0:	b8 01       	movw	r22, r16
    22f2:	0e 94 52 13 	call	0x26a4	; 0x26a4 <__fpcmp_parts_f>
    22f6:	01 c0       	rjmp	.+2      	; 0x22fa <__gesf2+0x58>
    22f8:	8f ef       	ldi	r24, 0xFF	; 255
    22fa:	68 96       	adiw	r28, 0x18	; 24
    22fc:	e6 e0       	ldi	r30, 0x06	; 6
    22fe:	0c 94 5e 38 	jmp	0x70bc	; 0x70bc <__epilogue_restores__+0x18>

00002302 <__ltsf2>:
    2302:	a8 e1       	ldi	r26, 0x18	; 24
    2304:	b0 e0       	ldi	r27, 0x00	; 0
    2306:	e7 e8       	ldi	r30, 0x87	; 135
    2308:	f1 e1       	ldi	r31, 0x11	; 17
    230a:	0c 94 42 38 	jmp	0x7084	; 0x7084 <__prologue_saves__+0x18>
    230e:	69 83       	std	Y+1, r22	; 0x01
    2310:	7a 83       	std	Y+2, r23	; 0x02
    2312:	8b 83       	std	Y+3, r24	; 0x03
    2314:	9c 83       	std	Y+4, r25	; 0x04
    2316:	2d 83       	std	Y+5, r18	; 0x05
    2318:	3e 83       	std	Y+6, r19	; 0x06
    231a:	4f 83       	std	Y+7, r20	; 0x07
    231c:	58 87       	std	Y+8, r21	; 0x08
    231e:	89 e0       	ldi	r24, 0x09	; 9
    2320:	e8 2e       	mov	r14, r24
    2322:	f1 2c       	mov	r15, r1
    2324:	ec 0e       	add	r14, r28
    2326:	fd 1e       	adc	r15, r29
    2328:	ce 01       	movw	r24, r28
    232a:	01 96       	adiw	r24, 0x01	; 1
    232c:	b7 01       	movw	r22, r14
    232e:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    2332:	8e 01       	movw	r16, r28
    2334:	0f 5e       	subi	r16, 0xEF	; 239
    2336:	1f 4f       	sbci	r17, 0xFF	; 255
    2338:	ce 01       	movw	r24, r28
    233a:	05 96       	adiw	r24, 0x05	; 5
    233c:	b8 01       	movw	r22, r16
    233e:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    2342:	89 85       	ldd	r24, Y+9	; 0x09
    2344:	82 30       	cpi	r24, 0x02	; 2
    2346:	40 f0       	brcs	.+16     	; 0x2358 <__ltsf2+0x56>
    2348:	89 89       	ldd	r24, Y+17	; 0x11
    234a:	82 30       	cpi	r24, 0x02	; 2
    234c:	28 f0       	brcs	.+10     	; 0x2358 <__ltsf2+0x56>
    234e:	c7 01       	movw	r24, r14
    2350:	b8 01       	movw	r22, r16
    2352:	0e 94 52 13 	call	0x26a4	; 0x26a4 <__fpcmp_parts_f>
    2356:	01 c0       	rjmp	.+2      	; 0x235a <__ltsf2+0x58>
    2358:	81 e0       	ldi	r24, 0x01	; 1
    235a:	68 96       	adiw	r28, 0x18	; 24
    235c:	e6 e0       	ldi	r30, 0x06	; 6
    235e:	0c 94 5e 38 	jmp	0x70bc	; 0x70bc <__epilogue_restores__+0x18>

00002362 <__fixsfsi>:
    2362:	ac e0       	ldi	r26, 0x0C	; 12
    2364:	b0 e0       	ldi	r27, 0x00	; 0
    2366:	e7 eb       	ldi	r30, 0xB7	; 183
    2368:	f1 e1       	ldi	r31, 0x11	; 17
    236a:	0c 94 46 38 	jmp	0x708c	; 0x708c <__prologue_saves__+0x20>
    236e:	69 83       	std	Y+1, r22	; 0x01
    2370:	7a 83       	std	Y+2, r23	; 0x02
    2372:	8b 83       	std	Y+3, r24	; 0x03
    2374:	9c 83       	std	Y+4, r25	; 0x04
    2376:	ce 01       	movw	r24, r28
    2378:	01 96       	adiw	r24, 0x01	; 1
    237a:	be 01       	movw	r22, r28
    237c:	6b 5f       	subi	r22, 0xFB	; 251
    237e:	7f 4f       	sbci	r23, 0xFF	; 255
    2380:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__unpack_f>
    2384:	8d 81       	ldd	r24, Y+5	; 0x05
    2386:	82 30       	cpi	r24, 0x02	; 2
    2388:	61 f1       	breq	.+88     	; 0x23e2 <__fixsfsi+0x80>
    238a:	82 30       	cpi	r24, 0x02	; 2
    238c:	50 f1       	brcs	.+84     	; 0x23e2 <__fixsfsi+0x80>
    238e:	84 30       	cpi	r24, 0x04	; 4
    2390:	21 f4       	brne	.+8      	; 0x239a <__fixsfsi+0x38>
    2392:	8e 81       	ldd	r24, Y+6	; 0x06
    2394:	88 23       	and	r24, r24
    2396:	51 f1       	breq	.+84     	; 0x23ec <__fixsfsi+0x8a>
    2398:	2e c0       	rjmp	.+92     	; 0x23f6 <__fixsfsi+0x94>
    239a:	2f 81       	ldd	r18, Y+7	; 0x07
    239c:	38 85       	ldd	r19, Y+8	; 0x08
    239e:	37 fd       	sbrc	r19, 7
    23a0:	20 c0       	rjmp	.+64     	; 0x23e2 <__fixsfsi+0x80>
    23a2:	6e 81       	ldd	r22, Y+6	; 0x06
    23a4:	2f 31       	cpi	r18, 0x1F	; 31
    23a6:	31 05       	cpc	r19, r1
    23a8:	1c f0       	brlt	.+6      	; 0x23b0 <__fixsfsi+0x4e>
    23aa:	66 23       	and	r22, r22
    23ac:	f9 f0       	breq	.+62     	; 0x23ec <__fixsfsi+0x8a>
    23ae:	23 c0       	rjmp	.+70     	; 0x23f6 <__fixsfsi+0x94>
    23b0:	8e e1       	ldi	r24, 0x1E	; 30
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	82 1b       	sub	r24, r18
    23b6:	93 0b       	sbc	r25, r19
    23b8:	29 85       	ldd	r18, Y+9	; 0x09
    23ba:	3a 85       	ldd	r19, Y+10	; 0x0a
    23bc:	4b 85       	ldd	r20, Y+11	; 0x0b
    23be:	5c 85       	ldd	r21, Y+12	; 0x0c
    23c0:	04 c0       	rjmp	.+8      	; 0x23ca <__fixsfsi+0x68>
    23c2:	56 95       	lsr	r21
    23c4:	47 95       	ror	r20
    23c6:	37 95       	ror	r19
    23c8:	27 95       	ror	r18
    23ca:	8a 95       	dec	r24
    23cc:	d2 f7       	brpl	.-12     	; 0x23c2 <__fixsfsi+0x60>
    23ce:	66 23       	and	r22, r22
    23d0:	b1 f0       	breq	.+44     	; 0x23fe <__fixsfsi+0x9c>
    23d2:	50 95       	com	r21
    23d4:	40 95       	com	r20
    23d6:	30 95       	com	r19
    23d8:	21 95       	neg	r18
    23da:	3f 4f       	sbci	r19, 0xFF	; 255
    23dc:	4f 4f       	sbci	r20, 0xFF	; 255
    23de:	5f 4f       	sbci	r21, 0xFF	; 255
    23e0:	0e c0       	rjmp	.+28     	; 0x23fe <__fixsfsi+0x9c>
    23e2:	20 e0       	ldi	r18, 0x00	; 0
    23e4:	30 e0       	ldi	r19, 0x00	; 0
    23e6:	40 e0       	ldi	r20, 0x00	; 0
    23e8:	50 e0       	ldi	r21, 0x00	; 0
    23ea:	09 c0       	rjmp	.+18     	; 0x23fe <__fixsfsi+0x9c>
    23ec:	2f ef       	ldi	r18, 0xFF	; 255
    23ee:	3f ef       	ldi	r19, 0xFF	; 255
    23f0:	4f ef       	ldi	r20, 0xFF	; 255
    23f2:	5f e7       	ldi	r21, 0x7F	; 127
    23f4:	04 c0       	rjmp	.+8      	; 0x23fe <__fixsfsi+0x9c>
    23f6:	20 e0       	ldi	r18, 0x00	; 0
    23f8:	30 e0       	ldi	r19, 0x00	; 0
    23fa:	40 e0       	ldi	r20, 0x00	; 0
    23fc:	50 e8       	ldi	r21, 0x80	; 128
    23fe:	b9 01       	movw	r22, r18
    2400:	ca 01       	movw	r24, r20
    2402:	2c 96       	adiw	r28, 0x0c	; 12
    2404:	e2 e0       	ldi	r30, 0x02	; 2
    2406:	0c 94 62 38 	jmp	0x70c4	; 0x70c4 <__epilogue_restores__+0x20>

0000240a <__pack_f>:
    240a:	df 92       	push	r13
    240c:	ef 92       	push	r14
    240e:	ff 92       	push	r15
    2410:	0f 93       	push	r16
    2412:	1f 93       	push	r17
    2414:	fc 01       	movw	r30, r24
    2416:	e4 80       	ldd	r14, Z+4	; 0x04
    2418:	f5 80       	ldd	r15, Z+5	; 0x05
    241a:	06 81       	ldd	r16, Z+6	; 0x06
    241c:	17 81       	ldd	r17, Z+7	; 0x07
    241e:	d1 80       	ldd	r13, Z+1	; 0x01
    2420:	80 81       	ld	r24, Z
    2422:	82 30       	cpi	r24, 0x02	; 2
    2424:	48 f4       	brcc	.+18     	; 0x2438 <__pack_f+0x2e>
    2426:	80 e0       	ldi	r24, 0x00	; 0
    2428:	90 e0       	ldi	r25, 0x00	; 0
    242a:	a0 e1       	ldi	r26, 0x10	; 16
    242c:	b0 e0       	ldi	r27, 0x00	; 0
    242e:	e8 2a       	or	r14, r24
    2430:	f9 2a       	or	r15, r25
    2432:	0a 2b       	or	r16, r26
    2434:	1b 2b       	or	r17, r27
    2436:	a5 c0       	rjmp	.+330    	; 0x2582 <__pack_f+0x178>
    2438:	84 30       	cpi	r24, 0x04	; 4
    243a:	09 f4       	brne	.+2      	; 0x243e <__pack_f+0x34>
    243c:	9f c0       	rjmp	.+318    	; 0x257c <__pack_f+0x172>
    243e:	82 30       	cpi	r24, 0x02	; 2
    2440:	21 f4       	brne	.+8      	; 0x244a <__pack_f+0x40>
    2442:	ee 24       	eor	r14, r14
    2444:	ff 24       	eor	r15, r15
    2446:	87 01       	movw	r16, r14
    2448:	05 c0       	rjmp	.+10     	; 0x2454 <__pack_f+0x4a>
    244a:	e1 14       	cp	r14, r1
    244c:	f1 04       	cpc	r15, r1
    244e:	01 05       	cpc	r16, r1
    2450:	11 05       	cpc	r17, r1
    2452:	19 f4       	brne	.+6      	; 0x245a <__pack_f+0x50>
    2454:	e0 e0       	ldi	r30, 0x00	; 0
    2456:	f0 e0       	ldi	r31, 0x00	; 0
    2458:	96 c0       	rjmp	.+300    	; 0x2586 <__pack_f+0x17c>
    245a:	62 81       	ldd	r22, Z+2	; 0x02
    245c:	73 81       	ldd	r23, Z+3	; 0x03
    245e:	9f ef       	ldi	r25, 0xFF	; 255
    2460:	62 38       	cpi	r22, 0x82	; 130
    2462:	79 07       	cpc	r23, r25
    2464:	0c f0       	brlt	.+2      	; 0x2468 <__pack_f+0x5e>
    2466:	5b c0       	rjmp	.+182    	; 0x251e <__pack_f+0x114>
    2468:	22 e8       	ldi	r18, 0x82	; 130
    246a:	3f ef       	ldi	r19, 0xFF	; 255
    246c:	26 1b       	sub	r18, r22
    246e:	37 0b       	sbc	r19, r23
    2470:	2a 31       	cpi	r18, 0x1A	; 26
    2472:	31 05       	cpc	r19, r1
    2474:	2c f0       	brlt	.+10     	; 0x2480 <__pack_f+0x76>
    2476:	20 e0       	ldi	r18, 0x00	; 0
    2478:	30 e0       	ldi	r19, 0x00	; 0
    247a:	40 e0       	ldi	r20, 0x00	; 0
    247c:	50 e0       	ldi	r21, 0x00	; 0
    247e:	2a c0       	rjmp	.+84     	; 0x24d4 <__pack_f+0xca>
    2480:	b8 01       	movw	r22, r16
    2482:	a7 01       	movw	r20, r14
    2484:	02 2e       	mov	r0, r18
    2486:	04 c0       	rjmp	.+8      	; 0x2490 <__pack_f+0x86>
    2488:	76 95       	lsr	r23
    248a:	67 95       	ror	r22
    248c:	57 95       	ror	r21
    248e:	47 95       	ror	r20
    2490:	0a 94       	dec	r0
    2492:	d2 f7       	brpl	.-12     	; 0x2488 <__pack_f+0x7e>
    2494:	81 e0       	ldi	r24, 0x01	; 1
    2496:	90 e0       	ldi	r25, 0x00	; 0
    2498:	a0 e0       	ldi	r26, 0x00	; 0
    249a:	b0 e0       	ldi	r27, 0x00	; 0
    249c:	04 c0       	rjmp	.+8      	; 0x24a6 <__pack_f+0x9c>
    249e:	88 0f       	add	r24, r24
    24a0:	99 1f       	adc	r25, r25
    24a2:	aa 1f       	adc	r26, r26
    24a4:	bb 1f       	adc	r27, r27
    24a6:	2a 95       	dec	r18
    24a8:	d2 f7       	brpl	.-12     	; 0x249e <__pack_f+0x94>
    24aa:	01 97       	sbiw	r24, 0x01	; 1
    24ac:	a1 09       	sbc	r26, r1
    24ae:	b1 09       	sbc	r27, r1
    24b0:	8e 21       	and	r24, r14
    24b2:	9f 21       	and	r25, r15
    24b4:	a0 23       	and	r26, r16
    24b6:	b1 23       	and	r27, r17
    24b8:	00 97       	sbiw	r24, 0x00	; 0
    24ba:	a1 05       	cpc	r26, r1
    24bc:	b1 05       	cpc	r27, r1
    24be:	21 f0       	breq	.+8      	; 0x24c8 <__pack_f+0xbe>
    24c0:	81 e0       	ldi	r24, 0x01	; 1
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	a0 e0       	ldi	r26, 0x00	; 0
    24c6:	b0 e0       	ldi	r27, 0x00	; 0
    24c8:	9a 01       	movw	r18, r20
    24ca:	ab 01       	movw	r20, r22
    24cc:	28 2b       	or	r18, r24
    24ce:	39 2b       	or	r19, r25
    24d0:	4a 2b       	or	r20, r26
    24d2:	5b 2b       	or	r21, r27
    24d4:	da 01       	movw	r26, r20
    24d6:	c9 01       	movw	r24, r18
    24d8:	8f 77       	andi	r24, 0x7F	; 127
    24da:	90 70       	andi	r25, 0x00	; 0
    24dc:	a0 70       	andi	r26, 0x00	; 0
    24de:	b0 70       	andi	r27, 0x00	; 0
    24e0:	80 34       	cpi	r24, 0x40	; 64
    24e2:	91 05       	cpc	r25, r1
    24e4:	a1 05       	cpc	r26, r1
    24e6:	b1 05       	cpc	r27, r1
    24e8:	39 f4       	brne	.+14     	; 0x24f8 <__pack_f+0xee>
    24ea:	27 ff       	sbrs	r18, 7
    24ec:	09 c0       	rjmp	.+18     	; 0x2500 <__pack_f+0xf6>
    24ee:	20 5c       	subi	r18, 0xC0	; 192
    24f0:	3f 4f       	sbci	r19, 0xFF	; 255
    24f2:	4f 4f       	sbci	r20, 0xFF	; 255
    24f4:	5f 4f       	sbci	r21, 0xFF	; 255
    24f6:	04 c0       	rjmp	.+8      	; 0x2500 <__pack_f+0xf6>
    24f8:	21 5c       	subi	r18, 0xC1	; 193
    24fa:	3f 4f       	sbci	r19, 0xFF	; 255
    24fc:	4f 4f       	sbci	r20, 0xFF	; 255
    24fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2500:	e0 e0       	ldi	r30, 0x00	; 0
    2502:	f0 e0       	ldi	r31, 0x00	; 0
    2504:	20 30       	cpi	r18, 0x00	; 0
    2506:	a0 e0       	ldi	r26, 0x00	; 0
    2508:	3a 07       	cpc	r19, r26
    250a:	a0 e0       	ldi	r26, 0x00	; 0
    250c:	4a 07       	cpc	r20, r26
    250e:	a0 e4       	ldi	r26, 0x40	; 64
    2510:	5a 07       	cpc	r21, r26
    2512:	10 f0       	brcs	.+4      	; 0x2518 <__pack_f+0x10e>
    2514:	e1 e0       	ldi	r30, 0x01	; 1
    2516:	f0 e0       	ldi	r31, 0x00	; 0
    2518:	79 01       	movw	r14, r18
    251a:	8a 01       	movw	r16, r20
    251c:	27 c0       	rjmp	.+78     	; 0x256c <__pack_f+0x162>
    251e:	60 38       	cpi	r22, 0x80	; 128
    2520:	71 05       	cpc	r23, r1
    2522:	64 f5       	brge	.+88     	; 0x257c <__pack_f+0x172>
    2524:	fb 01       	movw	r30, r22
    2526:	e1 58       	subi	r30, 0x81	; 129
    2528:	ff 4f       	sbci	r31, 0xFF	; 255
    252a:	d8 01       	movw	r26, r16
    252c:	c7 01       	movw	r24, r14
    252e:	8f 77       	andi	r24, 0x7F	; 127
    2530:	90 70       	andi	r25, 0x00	; 0
    2532:	a0 70       	andi	r26, 0x00	; 0
    2534:	b0 70       	andi	r27, 0x00	; 0
    2536:	80 34       	cpi	r24, 0x40	; 64
    2538:	91 05       	cpc	r25, r1
    253a:	a1 05       	cpc	r26, r1
    253c:	b1 05       	cpc	r27, r1
    253e:	39 f4       	brne	.+14     	; 0x254e <__pack_f+0x144>
    2540:	e7 fe       	sbrs	r14, 7
    2542:	0d c0       	rjmp	.+26     	; 0x255e <__pack_f+0x154>
    2544:	80 e4       	ldi	r24, 0x40	; 64
    2546:	90 e0       	ldi	r25, 0x00	; 0
    2548:	a0 e0       	ldi	r26, 0x00	; 0
    254a:	b0 e0       	ldi	r27, 0x00	; 0
    254c:	04 c0       	rjmp	.+8      	; 0x2556 <__pack_f+0x14c>
    254e:	8f e3       	ldi	r24, 0x3F	; 63
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	a0 e0       	ldi	r26, 0x00	; 0
    2554:	b0 e0       	ldi	r27, 0x00	; 0
    2556:	e8 0e       	add	r14, r24
    2558:	f9 1e       	adc	r15, r25
    255a:	0a 1f       	adc	r16, r26
    255c:	1b 1f       	adc	r17, r27
    255e:	17 ff       	sbrs	r17, 7
    2560:	05 c0       	rjmp	.+10     	; 0x256c <__pack_f+0x162>
    2562:	16 95       	lsr	r17
    2564:	07 95       	ror	r16
    2566:	f7 94       	ror	r15
    2568:	e7 94       	ror	r14
    256a:	31 96       	adiw	r30, 0x01	; 1
    256c:	87 e0       	ldi	r24, 0x07	; 7
    256e:	16 95       	lsr	r17
    2570:	07 95       	ror	r16
    2572:	f7 94       	ror	r15
    2574:	e7 94       	ror	r14
    2576:	8a 95       	dec	r24
    2578:	d1 f7       	brne	.-12     	; 0x256e <__pack_f+0x164>
    257a:	05 c0       	rjmp	.+10     	; 0x2586 <__pack_f+0x17c>
    257c:	ee 24       	eor	r14, r14
    257e:	ff 24       	eor	r15, r15
    2580:	87 01       	movw	r16, r14
    2582:	ef ef       	ldi	r30, 0xFF	; 255
    2584:	f0 e0       	ldi	r31, 0x00	; 0
    2586:	6e 2f       	mov	r22, r30
    2588:	67 95       	ror	r22
    258a:	66 27       	eor	r22, r22
    258c:	67 95       	ror	r22
    258e:	90 2f       	mov	r25, r16
    2590:	9f 77       	andi	r25, 0x7F	; 127
    2592:	d7 94       	ror	r13
    2594:	dd 24       	eor	r13, r13
    2596:	d7 94       	ror	r13
    2598:	8e 2f       	mov	r24, r30
    259a:	86 95       	lsr	r24
    259c:	49 2f       	mov	r20, r25
    259e:	46 2b       	or	r20, r22
    25a0:	58 2f       	mov	r21, r24
    25a2:	5d 29       	or	r21, r13
    25a4:	b7 01       	movw	r22, r14
    25a6:	ca 01       	movw	r24, r20
    25a8:	1f 91       	pop	r17
    25aa:	0f 91       	pop	r16
    25ac:	ff 90       	pop	r15
    25ae:	ef 90       	pop	r14
    25b0:	df 90       	pop	r13
    25b2:	08 95       	ret

000025b4 <__unpack_f>:
    25b4:	fc 01       	movw	r30, r24
    25b6:	db 01       	movw	r26, r22
    25b8:	40 81       	ld	r20, Z
    25ba:	51 81       	ldd	r21, Z+1	; 0x01
    25bc:	22 81       	ldd	r18, Z+2	; 0x02
    25be:	62 2f       	mov	r22, r18
    25c0:	6f 77       	andi	r22, 0x7F	; 127
    25c2:	70 e0       	ldi	r23, 0x00	; 0
    25c4:	22 1f       	adc	r18, r18
    25c6:	22 27       	eor	r18, r18
    25c8:	22 1f       	adc	r18, r18
    25ca:	93 81       	ldd	r25, Z+3	; 0x03
    25cc:	89 2f       	mov	r24, r25
    25ce:	88 0f       	add	r24, r24
    25d0:	82 2b       	or	r24, r18
    25d2:	28 2f       	mov	r18, r24
    25d4:	30 e0       	ldi	r19, 0x00	; 0
    25d6:	99 1f       	adc	r25, r25
    25d8:	99 27       	eor	r25, r25
    25da:	99 1f       	adc	r25, r25
    25dc:	11 96       	adiw	r26, 0x01	; 1
    25de:	9c 93       	st	X, r25
    25e0:	11 97       	sbiw	r26, 0x01	; 1
    25e2:	21 15       	cp	r18, r1
    25e4:	31 05       	cpc	r19, r1
    25e6:	a9 f5       	brne	.+106    	; 0x2652 <__unpack_f+0x9e>
    25e8:	41 15       	cp	r20, r1
    25ea:	51 05       	cpc	r21, r1
    25ec:	61 05       	cpc	r22, r1
    25ee:	71 05       	cpc	r23, r1
    25f0:	11 f4       	brne	.+4      	; 0x25f6 <__unpack_f+0x42>
    25f2:	82 e0       	ldi	r24, 0x02	; 2
    25f4:	37 c0       	rjmp	.+110    	; 0x2664 <__unpack_f+0xb0>
    25f6:	82 e8       	ldi	r24, 0x82	; 130
    25f8:	9f ef       	ldi	r25, 0xFF	; 255
    25fa:	13 96       	adiw	r26, 0x03	; 3
    25fc:	9c 93       	st	X, r25
    25fe:	8e 93       	st	-X, r24
    2600:	12 97       	sbiw	r26, 0x02	; 2
    2602:	9a 01       	movw	r18, r20
    2604:	ab 01       	movw	r20, r22
    2606:	67 e0       	ldi	r22, 0x07	; 7
    2608:	22 0f       	add	r18, r18
    260a:	33 1f       	adc	r19, r19
    260c:	44 1f       	adc	r20, r20
    260e:	55 1f       	adc	r21, r21
    2610:	6a 95       	dec	r22
    2612:	d1 f7       	brne	.-12     	; 0x2608 <__unpack_f+0x54>
    2614:	83 e0       	ldi	r24, 0x03	; 3
    2616:	8c 93       	st	X, r24
    2618:	0d c0       	rjmp	.+26     	; 0x2634 <__unpack_f+0x80>
    261a:	22 0f       	add	r18, r18
    261c:	33 1f       	adc	r19, r19
    261e:	44 1f       	adc	r20, r20
    2620:	55 1f       	adc	r21, r21
    2622:	12 96       	adiw	r26, 0x02	; 2
    2624:	8d 91       	ld	r24, X+
    2626:	9c 91       	ld	r25, X
    2628:	13 97       	sbiw	r26, 0x03	; 3
    262a:	01 97       	sbiw	r24, 0x01	; 1
    262c:	13 96       	adiw	r26, 0x03	; 3
    262e:	9c 93       	st	X, r25
    2630:	8e 93       	st	-X, r24
    2632:	12 97       	sbiw	r26, 0x02	; 2
    2634:	20 30       	cpi	r18, 0x00	; 0
    2636:	80 e0       	ldi	r24, 0x00	; 0
    2638:	38 07       	cpc	r19, r24
    263a:	80 e0       	ldi	r24, 0x00	; 0
    263c:	48 07       	cpc	r20, r24
    263e:	80 e4       	ldi	r24, 0x40	; 64
    2640:	58 07       	cpc	r21, r24
    2642:	58 f3       	brcs	.-42     	; 0x261a <__unpack_f+0x66>
    2644:	14 96       	adiw	r26, 0x04	; 4
    2646:	2d 93       	st	X+, r18
    2648:	3d 93       	st	X+, r19
    264a:	4d 93       	st	X+, r20
    264c:	5c 93       	st	X, r21
    264e:	17 97       	sbiw	r26, 0x07	; 7
    2650:	08 95       	ret
    2652:	2f 3f       	cpi	r18, 0xFF	; 255
    2654:	31 05       	cpc	r19, r1
    2656:	79 f4       	brne	.+30     	; 0x2676 <__unpack_f+0xc2>
    2658:	41 15       	cp	r20, r1
    265a:	51 05       	cpc	r21, r1
    265c:	61 05       	cpc	r22, r1
    265e:	71 05       	cpc	r23, r1
    2660:	19 f4       	brne	.+6      	; 0x2668 <__unpack_f+0xb4>
    2662:	84 e0       	ldi	r24, 0x04	; 4
    2664:	8c 93       	st	X, r24
    2666:	08 95       	ret
    2668:	64 ff       	sbrs	r22, 4
    266a:	03 c0       	rjmp	.+6      	; 0x2672 <__unpack_f+0xbe>
    266c:	81 e0       	ldi	r24, 0x01	; 1
    266e:	8c 93       	st	X, r24
    2670:	12 c0       	rjmp	.+36     	; 0x2696 <__unpack_f+0xe2>
    2672:	1c 92       	st	X, r1
    2674:	10 c0       	rjmp	.+32     	; 0x2696 <__unpack_f+0xe2>
    2676:	2f 57       	subi	r18, 0x7F	; 127
    2678:	30 40       	sbci	r19, 0x00	; 0
    267a:	13 96       	adiw	r26, 0x03	; 3
    267c:	3c 93       	st	X, r19
    267e:	2e 93       	st	-X, r18
    2680:	12 97       	sbiw	r26, 0x02	; 2
    2682:	83 e0       	ldi	r24, 0x03	; 3
    2684:	8c 93       	st	X, r24
    2686:	87 e0       	ldi	r24, 0x07	; 7
    2688:	44 0f       	add	r20, r20
    268a:	55 1f       	adc	r21, r21
    268c:	66 1f       	adc	r22, r22
    268e:	77 1f       	adc	r23, r23
    2690:	8a 95       	dec	r24
    2692:	d1 f7       	brne	.-12     	; 0x2688 <__unpack_f+0xd4>
    2694:	70 64       	ori	r23, 0x40	; 64
    2696:	14 96       	adiw	r26, 0x04	; 4
    2698:	4d 93       	st	X+, r20
    269a:	5d 93       	st	X+, r21
    269c:	6d 93       	st	X+, r22
    269e:	7c 93       	st	X, r23
    26a0:	17 97       	sbiw	r26, 0x07	; 7
    26a2:	08 95       	ret

000026a4 <__fpcmp_parts_f>:
    26a4:	1f 93       	push	r17
    26a6:	dc 01       	movw	r26, r24
    26a8:	fb 01       	movw	r30, r22
    26aa:	9c 91       	ld	r25, X
    26ac:	92 30       	cpi	r25, 0x02	; 2
    26ae:	08 f4       	brcc	.+2      	; 0x26b2 <__fpcmp_parts_f+0xe>
    26b0:	47 c0       	rjmp	.+142    	; 0x2740 <__fpcmp_parts_f+0x9c>
    26b2:	80 81       	ld	r24, Z
    26b4:	82 30       	cpi	r24, 0x02	; 2
    26b6:	08 f4       	brcc	.+2      	; 0x26ba <__fpcmp_parts_f+0x16>
    26b8:	43 c0       	rjmp	.+134    	; 0x2740 <__fpcmp_parts_f+0x9c>
    26ba:	94 30       	cpi	r25, 0x04	; 4
    26bc:	51 f4       	brne	.+20     	; 0x26d2 <__fpcmp_parts_f+0x2e>
    26be:	11 96       	adiw	r26, 0x01	; 1
    26c0:	1c 91       	ld	r17, X
    26c2:	84 30       	cpi	r24, 0x04	; 4
    26c4:	99 f5       	brne	.+102    	; 0x272c <__fpcmp_parts_f+0x88>
    26c6:	81 81       	ldd	r24, Z+1	; 0x01
    26c8:	68 2f       	mov	r22, r24
    26ca:	70 e0       	ldi	r23, 0x00	; 0
    26cc:	61 1b       	sub	r22, r17
    26ce:	71 09       	sbc	r23, r1
    26d0:	3f c0       	rjmp	.+126    	; 0x2750 <__fpcmp_parts_f+0xac>
    26d2:	84 30       	cpi	r24, 0x04	; 4
    26d4:	21 f0       	breq	.+8      	; 0x26de <__fpcmp_parts_f+0x3a>
    26d6:	92 30       	cpi	r25, 0x02	; 2
    26d8:	31 f4       	brne	.+12     	; 0x26e6 <__fpcmp_parts_f+0x42>
    26da:	82 30       	cpi	r24, 0x02	; 2
    26dc:	b9 f1       	breq	.+110    	; 0x274c <__fpcmp_parts_f+0xa8>
    26de:	81 81       	ldd	r24, Z+1	; 0x01
    26e0:	88 23       	and	r24, r24
    26e2:	89 f1       	breq	.+98     	; 0x2746 <__fpcmp_parts_f+0xa2>
    26e4:	2d c0       	rjmp	.+90     	; 0x2740 <__fpcmp_parts_f+0x9c>
    26e6:	11 96       	adiw	r26, 0x01	; 1
    26e8:	1c 91       	ld	r17, X
    26ea:	11 97       	sbiw	r26, 0x01	; 1
    26ec:	82 30       	cpi	r24, 0x02	; 2
    26ee:	f1 f0       	breq	.+60     	; 0x272c <__fpcmp_parts_f+0x88>
    26f0:	81 81       	ldd	r24, Z+1	; 0x01
    26f2:	18 17       	cp	r17, r24
    26f4:	d9 f4       	brne	.+54     	; 0x272c <__fpcmp_parts_f+0x88>
    26f6:	12 96       	adiw	r26, 0x02	; 2
    26f8:	2d 91       	ld	r18, X+
    26fa:	3c 91       	ld	r19, X
    26fc:	13 97       	sbiw	r26, 0x03	; 3
    26fe:	82 81       	ldd	r24, Z+2	; 0x02
    2700:	93 81       	ldd	r25, Z+3	; 0x03
    2702:	82 17       	cp	r24, r18
    2704:	93 07       	cpc	r25, r19
    2706:	94 f0       	brlt	.+36     	; 0x272c <__fpcmp_parts_f+0x88>
    2708:	28 17       	cp	r18, r24
    270a:	39 07       	cpc	r19, r25
    270c:	bc f0       	brlt	.+46     	; 0x273c <__fpcmp_parts_f+0x98>
    270e:	14 96       	adiw	r26, 0x04	; 4
    2710:	8d 91       	ld	r24, X+
    2712:	9d 91       	ld	r25, X+
    2714:	0d 90       	ld	r0, X+
    2716:	bc 91       	ld	r27, X
    2718:	a0 2d       	mov	r26, r0
    271a:	24 81       	ldd	r18, Z+4	; 0x04
    271c:	35 81       	ldd	r19, Z+5	; 0x05
    271e:	46 81       	ldd	r20, Z+6	; 0x06
    2720:	57 81       	ldd	r21, Z+7	; 0x07
    2722:	28 17       	cp	r18, r24
    2724:	39 07       	cpc	r19, r25
    2726:	4a 07       	cpc	r20, r26
    2728:	5b 07       	cpc	r21, r27
    272a:	18 f4       	brcc	.+6      	; 0x2732 <__fpcmp_parts_f+0x8e>
    272c:	11 23       	and	r17, r17
    272e:	41 f0       	breq	.+16     	; 0x2740 <__fpcmp_parts_f+0x9c>
    2730:	0a c0       	rjmp	.+20     	; 0x2746 <__fpcmp_parts_f+0xa2>
    2732:	82 17       	cp	r24, r18
    2734:	93 07       	cpc	r25, r19
    2736:	a4 07       	cpc	r26, r20
    2738:	b5 07       	cpc	r27, r21
    273a:	40 f4       	brcc	.+16     	; 0x274c <__fpcmp_parts_f+0xa8>
    273c:	11 23       	and	r17, r17
    273e:	19 f0       	breq	.+6      	; 0x2746 <__fpcmp_parts_f+0xa2>
    2740:	61 e0       	ldi	r22, 0x01	; 1
    2742:	70 e0       	ldi	r23, 0x00	; 0
    2744:	05 c0       	rjmp	.+10     	; 0x2750 <__fpcmp_parts_f+0xac>
    2746:	6f ef       	ldi	r22, 0xFF	; 255
    2748:	7f ef       	ldi	r23, 0xFF	; 255
    274a:	02 c0       	rjmp	.+4      	; 0x2750 <__fpcmp_parts_f+0xac>
    274c:	60 e0       	ldi	r22, 0x00	; 0
    274e:	70 e0       	ldi	r23, 0x00	; 0
    2750:	cb 01       	movw	r24, r22
    2752:	1f 91       	pop	r17
    2754:	08 95       	ret

00002756 <PORT_Init>:
 * Description     : Function responsible for initializing all Pins with initial configurations
 * Parameters(IN)  : None
 * Parameters(OUT) : None
 *******************************************************************************************/
void PORT_Init(void)
{
    2756:	df 93       	push	r29
    2758:	cf 93       	push	r28
    275a:	cd b7       	in	r28, 0x3d	; 61
    275c:	de b7       	in	r29, 0x3e	; 62
#define  PORT_INPUT_FLOATING 0
#define  PORT_INPUT_PULLUP   0


//set the initial direction of all Pins by using ConC function like macro in std_types.h
	DDRA=CONC(PORT_PIN7_CONFIG,PORT_PIN6_CONFIG,PORT_PIN5_CONFIG,PORT_PIN4_CONFIG,PORT_PIN3_CONFIG,PORT_PIN2_CONFIG,PORT_PIN1_CONFIG,PORT_PIN0_CONFIG);
    275e:	ea e3       	ldi	r30, 0x3A	; 58
    2760:	f0 e0       	ldi	r31, 0x00	; 0
    2762:	8e ef       	ldi	r24, 0xFE	; 254
    2764:	80 83       	st	Z, r24
	DDRB=CONC(PORT_PIN15_CONFIG,PORT_PIN14_CONFIG,PORT_PIN13_CONFIG,PORT_PIN12_CONFIG,PORT_PIN11_CONFIG,PORT_PIN10_CONFIG,PORT_PIN9_CONFIG,PORT_PIN8_CONFIG);
    2766:	e7 e3       	ldi	r30, 0x37	; 55
    2768:	f0 e0       	ldi	r31, 0x00	; 0
    276a:	8f ef       	ldi	r24, 0xFF	; 255
    276c:	80 83       	st	Z, r24
	DDRC=CONC(PORT_PIN23_CONFIG,PORT_PIN22_CONFIG,PORT_PIN21_CONFIG,PORT_PIN20_CONFIG,PORT_PIN19_CONFIG,PORT_PIN18_CONFIG,PORT_PIN17_CONFIG,PORT_PIN16_CONFIG);
    276e:	e4 e3       	ldi	r30, 0x34	; 52
    2770:	f0 e0       	ldi	r31, 0x00	; 0
    2772:	8f ef       	ldi	r24, 0xFF	; 255
    2774:	80 83       	st	Z, r24
	DDRD=CONC(PORT_PIN31_CONFIG,PORT_PIN30_CONFIG,PORT_PIN29_CONFIG,PORT_PIN28_CONFIG,PORT_PIN27_CONFIG,PORT_PIN26_CONFIG,PORT_PIN25_CONFIG,PORT_PIN24_CONFIG);
    2776:	e1 e3       	ldi	r30, 0x31	; 49
    2778:	f0 e0       	ldi	r31, 0x00	; 0
    277a:	8f ef       	ldi	r24, 0xFF	; 255
    277c:	80 83       	st	Z, r24
#define PORT_INPUT_FLOATING               0
#define PORT_INPUT_PULLUP                 1


//set the initial mode of all Pins by using ConC function like macro in std_types.h
	PORTA=CONC(PORT_PIN7_CONFIG,PORT_PIN6_CONFIG,PORT_PIN5_CONFIG,PORT_PIN4_CONFIG,PORT_PIN3_CONFIG,PORT_PIN2_CONFIG,PORT_PIN1_CONFIG,PORT_PIN0_CONFIG);
    277e:	eb e3       	ldi	r30, 0x3B	; 59
    2780:	f0 e0       	ldi	r31, 0x00	; 0
    2782:	10 82       	st	Z, r1
	PORTB=CONC(PORT_PIN15_CONFIG,PORT_PIN14_CONFIG,PORT_PIN13_CONFIG,PORT_PIN12_CONFIG,PORT_PIN11_CONFIG,PORT_PIN10_CONFIG,PORT_PIN9_CONFIG,PORT_PIN8_CONFIG);
    2784:	e8 e3       	ldi	r30, 0x38	; 56
    2786:	f0 e0       	ldi	r31, 0x00	; 0
    2788:	10 82       	st	Z, r1
	PORTC=CONC(PORT_PIN23_CONFIG,PORT_PIN22_CONFIG,PORT_PIN21_CONFIG,PORT_PIN20_CONFIG,PORT_PIN19_CONFIG,PORT_PIN18_CONFIG,PORT_PIN17_CONFIG,PORT_PIN16_CONFIG);
    278a:	e5 e3       	ldi	r30, 0x35	; 53
    278c:	f0 e0       	ldi	r31, 0x00	; 0
    278e:	10 82       	st	Z, r1
	PORTD=CONC(PORT_PIN31_CONFIG,PORT_PIN30_CONFIG,PORT_PIN29_CONFIG,PORT_PIN28_CONFIG,PORT_PIN27_CONFIG,PORT_PIN26_CONFIG,PORT_PIN25_CONFIG,PORT_PIN24_CONFIG);
    2790:	e2 e3       	ldi	r30, 0x32	; 50
    2792:	f0 e0       	ldi	r31, 0x00	; 0
    2794:	10 82       	st	Z, r1

#define PORT_OUTPUT_HIGH                  2
#define PORT_OUTPUT_LOW			          3
#define PORT_INPUT_FLOATING               4
#define PORT_INPUT_PULLUP                 5
}
    2796:	cf 91       	pop	r28
    2798:	df 91       	pop	r29
    279a:	08 95       	ret

0000279c <PORT_enuSetPinMode>:
 * Parameters(IN)  : 1.Copy_u8PinId   --> channel Number
 *                   2.Copy_u8PinMode --> Mode
 * Parameters(OUT) : value of enum type PORT_tenuLOC_u8ErrorStatus
 *******************************************************************************************/
PORT_tenuErrorStatus PORT_enuSetPinMode(PortPinType Copy_u8PinId,PortPinType Copy_u8PinMode  )
{
    279c:	df 93       	push	r29
    279e:	cf 93       	push	r28
    27a0:	cd b7       	in	r28, 0x3d	; 61
    27a2:	de b7       	in	r29, 0x3e	; 62
    27a4:	2f 97       	sbiw	r28, 0x0f	; 15
    27a6:	0f b6       	in	r0, 0x3f	; 63
    27a8:	f8 94       	cli
    27aa:	de bf       	out	0x3e, r29	; 62
    27ac:	0f be       	out	0x3f, r0	; 63
    27ae:	cd bf       	out	0x3d, r28	; 61
    27b0:	8c 83       	std	Y+4, r24	; 0x04
    27b2:	6d 83       	std	Y+5, r22	; 0x05
	//local variable for Error status
	uint8 LOC_u8ErrorStatus=PORT_enuOK;
    27b4:	1b 82       	std	Y+3, r1	; 0x03
	//local variables for port and pin indexes
	uint8 PortIndex=0,PinIndex=0;
    27b6:	1a 82       	std	Y+2, r1	; 0x02
    27b8:	19 82       	std	Y+1, r1	; 0x01

	//get the port index from the pin id
	PortIndex=(Copy_u8PinId/8);
    27ba:	8c 81       	ldd	r24, Y+4	; 0x04
    27bc:	86 95       	lsr	r24
    27be:	86 95       	lsr	r24
    27c0:	86 95       	lsr	r24
    27c2:	8a 83       	std	Y+2, r24	; 0x02

	//get the pin index from the pin id ---pin index 0---7
	PinIndex=Copy_u8PinId%8;
    27c4:	8c 81       	ldd	r24, Y+4	; 0x04
    27c6:	87 70       	andi	r24, 0x07	; 7
    27c8:	89 83       	std	Y+1, r24	; 0x01

	//check if pin id invalid
	if(Copy_u8PinId>PORT_NUMBER_OF_PINS)
    27ca:	8c 81       	ldd	r24, Y+4	; 0x04
    27cc:	81 32       	cpi	r24, 0x21	; 33
    27ce:	10 f0       	brcs	.+4      	; 0x27d4 <PORT_enuSetPinMode+0x38>
	{
		LOC_u8ErrorStatus=PORT_enuPinError;
    27d0:	81 e0       	ldi	r24, 0x01	; 1
    27d2:	8b 83       	std	Y+3, r24	; 0x03
	}

	//check if port id invalid
	if(PortIndex>PORT_NUMBER_OF_PORTS)
    27d4:	8a 81       	ldd	r24, Y+2	; 0x02
    27d6:	85 30       	cpi	r24, 0x05	; 5
    27d8:	10 f0       	brcs	.+4      	; 0x27de <PORT_enuSetPinMode+0x42>
	{
		LOC_u8ErrorStatus=PORT_enuPortError;
    27da:	82 e0       	ldi	r24, 0x02	; 2
    27dc:	8b 83       	std	Y+3, r24	; 0x03
	}

	//check if the mode invalid
	if(Copy_u8PinMode>5 ||Copy_u8PinMode<2)
    27de:	8d 81       	ldd	r24, Y+5	; 0x05
    27e0:	86 30       	cpi	r24, 0x06	; 6
    27e2:	18 f4       	brcc	.+6      	; 0x27ea <PORT_enuSetPinMode+0x4e>
    27e4:	8d 81       	ldd	r24, Y+5	; 0x05
    27e6:	82 30       	cpi	r24, 0x02	; 2
    27e8:	10 f4       	brcc	.+4      	; 0x27ee <PORT_enuSetPinMode+0x52>
	{
		LOC_u8ErrorStatus=PORT_enuModeError;
    27ea:	83 e0       	ldi	r24, 0x03	; 3
    27ec:	8b 83       	std	Y+3, r24	; 0x03

	}

	//which Port
	switch(PortIndex)
    27ee:	8a 81       	ldd	r24, Y+2	; 0x02
    27f0:	28 2f       	mov	r18, r24
    27f2:	30 e0       	ldi	r19, 0x00	; 0
    27f4:	3f 87       	std	Y+15, r19	; 0x0f
    27f6:	2e 87       	std	Y+14, r18	; 0x0e
    27f8:	8e 85       	ldd	r24, Y+14	; 0x0e
    27fa:	9f 85       	ldd	r25, Y+15	; 0x0f
    27fc:	81 30       	cpi	r24, 0x01	; 1
    27fe:	91 05       	cpc	r25, r1
    2800:	09 f4       	brne	.+2      	; 0x2804 <PORT_enuSetPinMode+0x68>
    2802:	d6 c0       	rjmp	.+428    	; 0x29b0 <PORT_enuSetPinMode+0x214>
    2804:	2e 85       	ldd	r18, Y+14	; 0x0e
    2806:	3f 85       	ldd	r19, Y+15	; 0x0f
    2808:	22 30       	cpi	r18, 0x02	; 2
    280a:	31 05       	cpc	r19, r1
    280c:	2c f4       	brge	.+10     	; 0x2818 <PORT_enuSetPinMode+0x7c>
    280e:	8e 85       	ldd	r24, Y+14	; 0x0e
    2810:	9f 85       	ldd	r25, Y+15	; 0x0f
    2812:	00 97       	sbiw	r24, 0x00	; 0
    2814:	71 f0       	breq	.+28     	; 0x2832 <PORT_enuSetPinMode+0x96>
    2816:	08 c3       	rjmp	.+1552   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
    2818:	2e 85       	ldd	r18, Y+14	; 0x0e
    281a:	3f 85       	ldd	r19, Y+15	; 0x0f
    281c:	22 30       	cpi	r18, 0x02	; 2
    281e:	31 05       	cpc	r19, r1
    2820:	09 f4       	brne	.+2      	; 0x2824 <PORT_enuSetPinMode+0x88>
    2822:	85 c1       	rjmp	.+778    	; 0x2b2e <PORT_enuSetPinMode+0x392>
    2824:	8e 85       	ldd	r24, Y+14	; 0x0e
    2826:	9f 85       	ldd	r25, Y+15	; 0x0f
    2828:	83 30       	cpi	r24, 0x03	; 3
    282a:	91 05       	cpc	r25, r1
    282c:	09 f4       	brne	.+2      	; 0x2830 <PORT_enuSetPinMode+0x94>
    282e:	3e c2       	rjmp	.+1148   	; 0x2cac <PORT_enuSetPinMode+0x510>
    2830:	fb c2       	rjmp	.+1526   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
	{
	//if Port A
	case PORT_A:
		//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
		switch(Copy_u8PinMode)
    2832:	8d 81       	ldd	r24, Y+5	; 0x05
    2834:	28 2f       	mov	r18, r24
    2836:	30 e0       	ldi	r19, 0x00	; 0
    2838:	3d 87       	std	Y+13, r19	; 0x0d
    283a:	2c 87       	std	Y+12, r18	; 0x0c
    283c:	8c 85       	ldd	r24, Y+12	; 0x0c
    283e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2840:	83 30       	cpi	r24, 0x03	; 3
    2842:	91 05       	cpc	r25, r1
    2844:	09 f4       	brne	.+2      	; 0x2848 <PORT_enuSetPinMode+0xac>
    2846:	3e c0       	rjmp	.+124    	; 0x28c4 <PORT_enuSetPinMode+0x128>
    2848:	2c 85       	ldd	r18, Y+12	; 0x0c
    284a:	3d 85       	ldd	r19, Y+13	; 0x0d
    284c:	24 30       	cpi	r18, 0x04	; 4
    284e:	31 05       	cpc	r19, r1
    2850:	34 f4       	brge	.+12     	; 0x285e <PORT_enuSetPinMode+0xc2>
    2852:	8c 85       	ldd	r24, Y+12	; 0x0c
    2854:	9d 85       	ldd	r25, Y+13	; 0x0d
    2856:	82 30       	cpi	r24, 0x02	; 2
    2858:	91 05       	cpc	r25, r1
    285a:	71 f0       	breq	.+28     	; 0x2878 <PORT_enuSetPinMode+0xdc>
    285c:	e5 c2       	rjmp	.+1482   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
    285e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2860:	3d 85       	ldd	r19, Y+13	; 0x0d
    2862:	24 30       	cpi	r18, 0x04	; 4
    2864:	31 05       	cpc	r19, r1
    2866:	09 f4       	brne	.+2      	; 0x286a <PORT_enuSetPinMode+0xce>
    2868:	54 c0       	rjmp	.+168    	; 0x2912 <PORT_enuSetPinMode+0x176>
    286a:	8c 85       	ldd	r24, Y+12	; 0x0c
    286c:	9d 85       	ldd	r25, Y+13	; 0x0d
    286e:	85 30       	cpi	r24, 0x05	; 5
    2870:	91 05       	cpc	r25, r1
    2872:	09 f4       	brne	.+2      	; 0x2876 <PORT_enuSetPinMode+0xda>
    2874:	76 c0       	rjmp	.+236    	; 0x2962 <PORT_enuSetPinMode+0x1c6>
    2876:	d8 c2       	rjmp	.+1456   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
		{

		case PORT_OUTPUT_HIGH:
			//set output direction
			SET_BIT(DDRA,PinIndex);
    2878:	aa e3       	ldi	r26, 0x3A	; 58
    287a:	b0 e0       	ldi	r27, 0x00	; 0
    287c:	ea e3       	ldi	r30, 0x3A	; 58
    287e:	f0 e0       	ldi	r31, 0x00	; 0
    2880:	80 81       	ld	r24, Z
    2882:	48 2f       	mov	r20, r24
    2884:	89 81       	ldd	r24, Y+1	; 0x01
    2886:	28 2f       	mov	r18, r24
    2888:	30 e0       	ldi	r19, 0x00	; 0
    288a:	81 e0       	ldi	r24, 0x01	; 1
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	02 c0       	rjmp	.+4      	; 0x2894 <PORT_enuSetPinMode+0xf8>
    2890:	88 0f       	add	r24, r24
    2892:	99 1f       	adc	r25, r25
    2894:	2a 95       	dec	r18
    2896:	e2 f7       	brpl	.-8      	; 0x2890 <PORT_enuSetPinMode+0xf4>
    2898:	84 2b       	or	r24, r20
    289a:	8c 93       	st	X, r24
			//set high value
			SET_BIT(PORTA,PinIndex);
    289c:	ab e3       	ldi	r26, 0x3B	; 59
    289e:	b0 e0       	ldi	r27, 0x00	; 0
    28a0:	eb e3       	ldi	r30, 0x3B	; 59
    28a2:	f0 e0       	ldi	r31, 0x00	; 0
    28a4:	80 81       	ld	r24, Z
    28a6:	48 2f       	mov	r20, r24
    28a8:	89 81       	ldd	r24, Y+1	; 0x01
    28aa:	28 2f       	mov	r18, r24
    28ac:	30 e0       	ldi	r19, 0x00	; 0
    28ae:	81 e0       	ldi	r24, 0x01	; 1
    28b0:	90 e0       	ldi	r25, 0x00	; 0
    28b2:	02 2e       	mov	r0, r18
    28b4:	02 c0       	rjmp	.+4      	; 0x28ba <PORT_enuSetPinMode+0x11e>
    28b6:	88 0f       	add	r24, r24
    28b8:	99 1f       	adc	r25, r25
    28ba:	0a 94       	dec	r0
    28bc:	e2 f7       	brpl	.-8      	; 0x28b6 <PORT_enuSetPinMode+0x11a>
    28be:	84 2b       	or	r24, r20
    28c0:	8c 93       	st	X, r24
    28c2:	b2 c2       	rjmp	.+1380   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
			break;

		case PORT_OUTPUT_LOW:
			//set output direction
			SET_BIT(DDRA,PinIndex);
    28c4:	aa e3       	ldi	r26, 0x3A	; 58
    28c6:	b0 e0       	ldi	r27, 0x00	; 0
    28c8:	ea e3       	ldi	r30, 0x3A	; 58
    28ca:	f0 e0       	ldi	r31, 0x00	; 0
    28cc:	80 81       	ld	r24, Z
    28ce:	48 2f       	mov	r20, r24
    28d0:	89 81       	ldd	r24, Y+1	; 0x01
    28d2:	28 2f       	mov	r18, r24
    28d4:	30 e0       	ldi	r19, 0x00	; 0
    28d6:	81 e0       	ldi	r24, 0x01	; 1
    28d8:	90 e0       	ldi	r25, 0x00	; 0
    28da:	02 c0       	rjmp	.+4      	; 0x28e0 <PORT_enuSetPinMode+0x144>
    28dc:	88 0f       	add	r24, r24
    28de:	99 1f       	adc	r25, r25
    28e0:	2a 95       	dec	r18
    28e2:	e2 f7       	brpl	.-8      	; 0x28dc <PORT_enuSetPinMode+0x140>
    28e4:	84 2b       	or	r24, r20
    28e6:	8c 93       	st	X, r24
			//set LOW value
			CLEAR_BIT(PORTA,PinIndex);
    28e8:	ab e3       	ldi	r26, 0x3B	; 59
    28ea:	b0 e0       	ldi	r27, 0x00	; 0
    28ec:	eb e3       	ldi	r30, 0x3B	; 59
    28ee:	f0 e0       	ldi	r31, 0x00	; 0
    28f0:	80 81       	ld	r24, Z
    28f2:	48 2f       	mov	r20, r24
    28f4:	89 81       	ldd	r24, Y+1	; 0x01
    28f6:	28 2f       	mov	r18, r24
    28f8:	30 e0       	ldi	r19, 0x00	; 0
    28fa:	81 e0       	ldi	r24, 0x01	; 1
    28fc:	90 e0       	ldi	r25, 0x00	; 0
    28fe:	02 2e       	mov	r0, r18
    2900:	02 c0       	rjmp	.+4      	; 0x2906 <PORT_enuSetPinMode+0x16a>
    2902:	88 0f       	add	r24, r24
    2904:	99 1f       	adc	r25, r25
    2906:	0a 94       	dec	r0
    2908:	e2 f7       	brpl	.-8      	; 0x2902 <PORT_enuSetPinMode+0x166>
    290a:	80 95       	com	r24
    290c:	84 23       	and	r24, r20
    290e:	8c 93       	st	X, r24
    2910:	8b c2       	rjmp	.+1302   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
			break;

		case PORT_INPUT_FLOATING:
			//set input direction
			CLEAR_BIT(DDRA,PinIndex);
    2912:	aa e3       	ldi	r26, 0x3A	; 58
    2914:	b0 e0       	ldi	r27, 0x00	; 0
    2916:	ea e3       	ldi	r30, 0x3A	; 58
    2918:	f0 e0       	ldi	r31, 0x00	; 0
    291a:	80 81       	ld	r24, Z
    291c:	48 2f       	mov	r20, r24
    291e:	89 81       	ldd	r24, Y+1	; 0x01
    2920:	28 2f       	mov	r18, r24
    2922:	30 e0       	ldi	r19, 0x00	; 0
    2924:	81 e0       	ldi	r24, 0x01	; 1
    2926:	90 e0       	ldi	r25, 0x00	; 0
    2928:	02 c0       	rjmp	.+4      	; 0x292e <PORT_enuSetPinMode+0x192>
    292a:	88 0f       	add	r24, r24
    292c:	99 1f       	adc	r25, r25
    292e:	2a 95       	dec	r18
    2930:	e2 f7       	brpl	.-8      	; 0x292a <PORT_enuSetPinMode+0x18e>
    2932:	80 95       	com	r24
    2934:	84 23       	and	r24, r20
    2936:	8c 93       	st	X, r24
			//set Low value
			CLEAR_BIT(PORTA,PinIndex);
    2938:	ab e3       	ldi	r26, 0x3B	; 59
    293a:	b0 e0       	ldi	r27, 0x00	; 0
    293c:	eb e3       	ldi	r30, 0x3B	; 59
    293e:	f0 e0       	ldi	r31, 0x00	; 0
    2940:	80 81       	ld	r24, Z
    2942:	48 2f       	mov	r20, r24
    2944:	89 81       	ldd	r24, Y+1	; 0x01
    2946:	28 2f       	mov	r18, r24
    2948:	30 e0       	ldi	r19, 0x00	; 0
    294a:	81 e0       	ldi	r24, 0x01	; 1
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	02 2e       	mov	r0, r18
    2950:	02 c0       	rjmp	.+4      	; 0x2956 <PORT_enuSetPinMode+0x1ba>
    2952:	88 0f       	add	r24, r24
    2954:	99 1f       	adc	r25, r25
    2956:	0a 94       	dec	r0
    2958:	e2 f7       	brpl	.-8      	; 0x2952 <PORT_enuSetPinMode+0x1b6>
    295a:	80 95       	com	r24
    295c:	84 23       	and	r24, r20
    295e:	8c 93       	st	X, r24
    2960:	63 c2       	rjmp	.+1222   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
			break;

		case PORT_INPUT_PULLUP:
			//set input direction
			CLEAR_BIT(DDRA,PinIndex);
    2962:	aa e3       	ldi	r26, 0x3A	; 58
    2964:	b0 e0       	ldi	r27, 0x00	; 0
    2966:	ea e3       	ldi	r30, 0x3A	; 58
    2968:	f0 e0       	ldi	r31, 0x00	; 0
    296a:	80 81       	ld	r24, Z
    296c:	48 2f       	mov	r20, r24
    296e:	89 81       	ldd	r24, Y+1	; 0x01
    2970:	28 2f       	mov	r18, r24
    2972:	30 e0       	ldi	r19, 0x00	; 0
    2974:	81 e0       	ldi	r24, 0x01	; 1
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	02 c0       	rjmp	.+4      	; 0x297e <PORT_enuSetPinMode+0x1e2>
    297a:	88 0f       	add	r24, r24
    297c:	99 1f       	adc	r25, r25
    297e:	2a 95       	dec	r18
    2980:	e2 f7       	brpl	.-8      	; 0x297a <PORT_enuSetPinMode+0x1de>
    2982:	80 95       	com	r24
    2984:	84 23       	and	r24, r20
    2986:	8c 93       	st	X, r24
			//set pullup
			SET_BIT(PORTA,PinIndex);
    2988:	ab e3       	ldi	r26, 0x3B	; 59
    298a:	b0 e0       	ldi	r27, 0x00	; 0
    298c:	eb e3       	ldi	r30, 0x3B	; 59
    298e:	f0 e0       	ldi	r31, 0x00	; 0
    2990:	80 81       	ld	r24, Z
    2992:	48 2f       	mov	r20, r24
    2994:	89 81       	ldd	r24, Y+1	; 0x01
    2996:	28 2f       	mov	r18, r24
    2998:	30 e0       	ldi	r19, 0x00	; 0
    299a:	81 e0       	ldi	r24, 0x01	; 1
    299c:	90 e0       	ldi	r25, 0x00	; 0
    299e:	02 2e       	mov	r0, r18
    29a0:	02 c0       	rjmp	.+4      	; 0x29a6 <PORT_enuSetPinMode+0x20a>
    29a2:	88 0f       	add	r24, r24
    29a4:	99 1f       	adc	r25, r25
    29a6:	0a 94       	dec	r0
    29a8:	e2 f7       	brpl	.-8      	; 0x29a2 <PORT_enuSetPinMode+0x206>
    29aa:	84 2b       	or	r24, r20
    29ac:	8c 93       	st	X, r24
    29ae:	3c c2       	rjmp	.+1144   	; 0x2e28 <PORT_enuSetPinMode+0x68c>

		//if port B
		case PORT_B:

			//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
			switch(Copy_u8PinMode)
    29b0:	8d 81       	ldd	r24, Y+5	; 0x05
    29b2:	28 2f       	mov	r18, r24
    29b4:	30 e0       	ldi	r19, 0x00	; 0
    29b6:	3b 87       	std	Y+11, r19	; 0x0b
    29b8:	2a 87       	std	Y+10, r18	; 0x0a
    29ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    29bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    29be:	83 30       	cpi	r24, 0x03	; 3
    29c0:	91 05       	cpc	r25, r1
    29c2:	09 f4       	brne	.+2      	; 0x29c6 <PORT_enuSetPinMode+0x22a>
    29c4:	3e c0       	rjmp	.+124    	; 0x2a42 <PORT_enuSetPinMode+0x2a6>
    29c6:	2a 85       	ldd	r18, Y+10	; 0x0a
    29c8:	3b 85       	ldd	r19, Y+11	; 0x0b
    29ca:	24 30       	cpi	r18, 0x04	; 4
    29cc:	31 05       	cpc	r19, r1
    29ce:	34 f4       	brge	.+12     	; 0x29dc <PORT_enuSetPinMode+0x240>
    29d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    29d2:	9b 85       	ldd	r25, Y+11	; 0x0b
    29d4:	82 30       	cpi	r24, 0x02	; 2
    29d6:	91 05       	cpc	r25, r1
    29d8:	71 f0       	breq	.+28     	; 0x29f6 <PORT_enuSetPinMode+0x25a>
    29da:	26 c2       	rjmp	.+1100   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
    29dc:	2a 85       	ldd	r18, Y+10	; 0x0a
    29de:	3b 85       	ldd	r19, Y+11	; 0x0b
    29e0:	24 30       	cpi	r18, 0x04	; 4
    29e2:	31 05       	cpc	r19, r1
    29e4:	09 f4       	brne	.+2      	; 0x29e8 <PORT_enuSetPinMode+0x24c>
    29e6:	54 c0       	rjmp	.+168    	; 0x2a90 <PORT_enuSetPinMode+0x2f4>
    29e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    29ea:	9b 85       	ldd	r25, Y+11	; 0x0b
    29ec:	85 30       	cpi	r24, 0x05	; 5
    29ee:	91 05       	cpc	r25, r1
    29f0:	09 f4       	brne	.+2      	; 0x29f4 <PORT_enuSetPinMode+0x258>
    29f2:	76 c0       	rjmp	.+236    	; 0x2ae0 <PORT_enuSetPinMode+0x344>
    29f4:	19 c2       	rjmp	.+1074   	; 0x2e28 <PORT_enuSetPinMode+0x68c>
			{
			case PORT_OUTPUT_HIGH:
				//set output direction
				SET_BIT(DDRB,PinIndex);
    29f6:	a7 e3       	ldi	r26, 0x37	; 55
    29f8:	b0 e0       	ldi	r27, 0x00	; 0
    29fa:	e7 e3       	ldi	r30, 0x37	; 55
    29fc:	f0 e0       	ldi	r31, 0x00	; 0
    29fe:	80 81       	ld	r24, Z
    2a00:	48 2f       	mov	r20, r24
    2a02:	89 81       	ldd	r24, Y+1	; 0x01
    2a04:	28 2f       	mov	r18, r24
    2a06:	30 e0       	ldi	r19, 0x00	; 0
    2a08:	81 e0       	ldi	r24, 0x01	; 1
    2a0a:	90 e0       	ldi	r25, 0x00	; 0
    2a0c:	02 c0       	rjmp	.+4      	; 0x2a12 <PORT_enuSetPinMode+0x276>
    2a0e:	88 0f       	add	r24, r24
    2a10:	99 1f       	adc	r25, r25
    2a12:	2a 95       	dec	r18
    2a14:	e2 f7       	brpl	.-8      	; 0x2a0e <PORT_enuSetPinMode+0x272>
    2a16:	84 2b       	or	r24, r20
    2a18:	8c 93       	st	X, r24
				SET_BIT(PORTB,PinIndex);
    2a1a:	a8 e3       	ldi	r26, 0x38	; 56
    2a1c:	b0 e0       	ldi	r27, 0x00	; 0
    2a1e:	e8 e3       	ldi	r30, 0x38	; 56
    2a20:	f0 e0       	ldi	r31, 0x00	; 0
    2a22:	80 81       	ld	r24, Z
    2a24:	48 2f       	mov	r20, r24
    2a26:	89 81       	ldd	r24, Y+1	; 0x01
    2a28:	28 2f       	mov	r18, r24
    2a2a:	30 e0       	ldi	r19, 0x00	; 0
    2a2c:	81 e0       	ldi	r24, 0x01	; 1
    2a2e:	90 e0       	ldi	r25, 0x00	; 0
    2a30:	02 2e       	mov	r0, r18
    2a32:	02 c0       	rjmp	.+4      	; 0x2a38 <PORT_enuSetPinMode+0x29c>
    2a34:	88 0f       	add	r24, r24
    2a36:	99 1f       	adc	r25, r25
    2a38:	0a 94       	dec	r0
    2a3a:	e2 f7       	brpl	.-8      	; 0x2a34 <PORT_enuSetPinMode+0x298>
    2a3c:	84 2b       	or	r24, r20
    2a3e:	8c 93       	st	X, r24
    2a40:	f3 c1       	rjmp	.+998    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
				break;
			case PORT_OUTPUT_LOW:
				SET_BIT(DDRB,PinIndex);
    2a42:	a7 e3       	ldi	r26, 0x37	; 55
    2a44:	b0 e0       	ldi	r27, 0x00	; 0
    2a46:	e7 e3       	ldi	r30, 0x37	; 55
    2a48:	f0 e0       	ldi	r31, 0x00	; 0
    2a4a:	80 81       	ld	r24, Z
    2a4c:	48 2f       	mov	r20, r24
    2a4e:	89 81       	ldd	r24, Y+1	; 0x01
    2a50:	28 2f       	mov	r18, r24
    2a52:	30 e0       	ldi	r19, 0x00	; 0
    2a54:	81 e0       	ldi	r24, 0x01	; 1
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	02 c0       	rjmp	.+4      	; 0x2a5e <PORT_enuSetPinMode+0x2c2>
    2a5a:	88 0f       	add	r24, r24
    2a5c:	99 1f       	adc	r25, r25
    2a5e:	2a 95       	dec	r18
    2a60:	e2 f7       	brpl	.-8      	; 0x2a5a <PORT_enuSetPinMode+0x2be>
    2a62:	84 2b       	or	r24, r20
    2a64:	8c 93       	st	X, r24
				CLEAR_BIT(PORTB,PinIndex);
    2a66:	a8 e3       	ldi	r26, 0x38	; 56
    2a68:	b0 e0       	ldi	r27, 0x00	; 0
    2a6a:	e8 e3       	ldi	r30, 0x38	; 56
    2a6c:	f0 e0       	ldi	r31, 0x00	; 0
    2a6e:	80 81       	ld	r24, Z
    2a70:	48 2f       	mov	r20, r24
    2a72:	89 81       	ldd	r24, Y+1	; 0x01
    2a74:	28 2f       	mov	r18, r24
    2a76:	30 e0       	ldi	r19, 0x00	; 0
    2a78:	81 e0       	ldi	r24, 0x01	; 1
    2a7a:	90 e0       	ldi	r25, 0x00	; 0
    2a7c:	02 2e       	mov	r0, r18
    2a7e:	02 c0       	rjmp	.+4      	; 0x2a84 <PORT_enuSetPinMode+0x2e8>
    2a80:	88 0f       	add	r24, r24
    2a82:	99 1f       	adc	r25, r25
    2a84:	0a 94       	dec	r0
    2a86:	e2 f7       	brpl	.-8      	; 0x2a80 <PORT_enuSetPinMode+0x2e4>
    2a88:	80 95       	com	r24
    2a8a:	84 23       	and	r24, r20
    2a8c:	8c 93       	st	X, r24
    2a8e:	cc c1       	rjmp	.+920    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
				break;
			case PORT_INPUT_FLOATING:
				CLEAR_BIT(DDRB,PinIndex);
    2a90:	a7 e3       	ldi	r26, 0x37	; 55
    2a92:	b0 e0       	ldi	r27, 0x00	; 0
    2a94:	e7 e3       	ldi	r30, 0x37	; 55
    2a96:	f0 e0       	ldi	r31, 0x00	; 0
    2a98:	80 81       	ld	r24, Z
    2a9a:	48 2f       	mov	r20, r24
    2a9c:	89 81       	ldd	r24, Y+1	; 0x01
    2a9e:	28 2f       	mov	r18, r24
    2aa0:	30 e0       	ldi	r19, 0x00	; 0
    2aa2:	81 e0       	ldi	r24, 0x01	; 1
    2aa4:	90 e0       	ldi	r25, 0x00	; 0
    2aa6:	02 c0       	rjmp	.+4      	; 0x2aac <PORT_enuSetPinMode+0x310>
    2aa8:	88 0f       	add	r24, r24
    2aaa:	99 1f       	adc	r25, r25
    2aac:	2a 95       	dec	r18
    2aae:	e2 f7       	brpl	.-8      	; 0x2aa8 <PORT_enuSetPinMode+0x30c>
    2ab0:	80 95       	com	r24
    2ab2:	84 23       	and	r24, r20
    2ab4:	8c 93       	st	X, r24
				CLEAR_BIT(PORTB,PinIndex);
    2ab6:	a8 e3       	ldi	r26, 0x38	; 56
    2ab8:	b0 e0       	ldi	r27, 0x00	; 0
    2aba:	e8 e3       	ldi	r30, 0x38	; 56
    2abc:	f0 e0       	ldi	r31, 0x00	; 0
    2abe:	80 81       	ld	r24, Z
    2ac0:	48 2f       	mov	r20, r24
    2ac2:	89 81       	ldd	r24, Y+1	; 0x01
    2ac4:	28 2f       	mov	r18, r24
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	81 e0       	ldi	r24, 0x01	; 1
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	02 2e       	mov	r0, r18
    2ace:	02 c0       	rjmp	.+4      	; 0x2ad4 <PORT_enuSetPinMode+0x338>
    2ad0:	88 0f       	add	r24, r24
    2ad2:	99 1f       	adc	r25, r25
    2ad4:	0a 94       	dec	r0
    2ad6:	e2 f7       	brpl	.-8      	; 0x2ad0 <PORT_enuSetPinMode+0x334>
    2ad8:	80 95       	com	r24
    2ada:	84 23       	and	r24, r20
    2adc:	8c 93       	st	X, r24
    2ade:	a4 c1       	rjmp	.+840    	; 0x2e28 <PORT_enuSetPinMode+0x68c>

				break;
			case PORT_INPUT_PULLUP:
				CLEAR_BIT(DDRB,PinIndex);
    2ae0:	a7 e3       	ldi	r26, 0x37	; 55
    2ae2:	b0 e0       	ldi	r27, 0x00	; 0
    2ae4:	e7 e3       	ldi	r30, 0x37	; 55
    2ae6:	f0 e0       	ldi	r31, 0x00	; 0
    2ae8:	80 81       	ld	r24, Z
    2aea:	48 2f       	mov	r20, r24
    2aec:	89 81       	ldd	r24, Y+1	; 0x01
    2aee:	28 2f       	mov	r18, r24
    2af0:	30 e0       	ldi	r19, 0x00	; 0
    2af2:	81 e0       	ldi	r24, 0x01	; 1
    2af4:	90 e0       	ldi	r25, 0x00	; 0
    2af6:	02 c0       	rjmp	.+4      	; 0x2afc <PORT_enuSetPinMode+0x360>
    2af8:	88 0f       	add	r24, r24
    2afa:	99 1f       	adc	r25, r25
    2afc:	2a 95       	dec	r18
    2afe:	e2 f7       	brpl	.-8      	; 0x2af8 <PORT_enuSetPinMode+0x35c>
    2b00:	80 95       	com	r24
    2b02:	84 23       	and	r24, r20
    2b04:	8c 93       	st	X, r24
				SET_BIT(PORTB,PinIndex);
    2b06:	a8 e3       	ldi	r26, 0x38	; 56
    2b08:	b0 e0       	ldi	r27, 0x00	; 0
    2b0a:	e8 e3       	ldi	r30, 0x38	; 56
    2b0c:	f0 e0       	ldi	r31, 0x00	; 0
    2b0e:	80 81       	ld	r24, Z
    2b10:	48 2f       	mov	r20, r24
    2b12:	89 81       	ldd	r24, Y+1	; 0x01
    2b14:	28 2f       	mov	r18, r24
    2b16:	30 e0       	ldi	r19, 0x00	; 0
    2b18:	81 e0       	ldi	r24, 0x01	; 1
    2b1a:	90 e0       	ldi	r25, 0x00	; 0
    2b1c:	02 2e       	mov	r0, r18
    2b1e:	02 c0       	rjmp	.+4      	; 0x2b24 <PORT_enuSetPinMode+0x388>
    2b20:	88 0f       	add	r24, r24
    2b22:	99 1f       	adc	r25, r25
    2b24:	0a 94       	dec	r0
    2b26:	e2 f7       	brpl	.-8      	; 0x2b20 <PORT_enuSetPinMode+0x384>
    2b28:	84 2b       	or	r24, r20
    2b2a:	8c 93       	st	X, r24
    2b2c:	7d c1       	rjmp	.+762    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
			}
			break;

			case PORT_C:
				//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
				switch(Copy_u8PinMode)
    2b2e:	8d 81       	ldd	r24, Y+5	; 0x05
    2b30:	28 2f       	mov	r18, r24
    2b32:	30 e0       	ldi	r19, 0x00	; 0
    2b34:	39 87       	std	Y+9, r19	; 0x09
    2b36:	28 87       	std	Y+8, r18	; 0x08
    2b38:	88 85       	ldd	r24, Y+8	; 0x08
    2b3a:	99 85       	ldd	r25, Y+9	; 0x09
    2b3c:	83 30       	cpi	r24, 0x03	; 3
    2b3e:	91 05       	cpc	r25, r1
    2b40:	09 f4       	brne	.+2      	; 0x2b44 <PORT_enuSetPinMode+0x3a8>
    2b42:	3e c0       	rjmp	.+124    	; 0x2bc0 <PORT_enuSetPinMode+0x424>
    2b44:	28 85       	ldd	r18, Y+8	; 0x08
    2b46:	39 85       	ldd	r19, Y+9	; 0x09
    2b48:	24 30       	cpi	r18, 0x04	; 4
    2b4a:	31 05       	cpc	r19, r1
    2b4c:	34 f4       	brge	.+12     	; 0x2b5a <PORT_enuSetPinMode+0x3be>
    2b4e:	88 85       	ldd	r24, Y+8	; 0x08
    2b50:	99 85       	ldd	r25, Y+9	; 0x09
    2b52:	82 30       	cpi	r24, 0x02	; 2
    2b54:	91 05       	cpc	r25, r1
    2b56:	71 f0       	breq	.+28     	; 0x2b74 <PORT_enuSetPinMode+0x3d8>
    2b58:	67 c1       	rjmp	.+718    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
    2b5a:	28 85       	ldd	r18, Y+8	; 0x08
    2b5c:	39 85       	ldd	r19, Y+9	; 0x09
    2b5e:	24 30       	cpi	r18, 0x04	; 4
    2b60:	31 05       	cpc	r19, r1
    2b62:	09 f4       	brne	.+2      	; 0x2b66 <PORT_enuSetPinMode+0x3ca>
    2b64:	54 c0       	rjmp	.+168    	; 0x2c0e <PORT_enuSetPinMode+0x472>
    2b66:	88 85       	ldd	r24, Y+8	; 0x08
    2b68:	99 85       	ldd	r25, Y+9	; 0x09
    2b6a:	85 30       	cpi	r24, 0x05	; 5
    2b6c:	91 05       	cpc	r25, r1
    2b6e:	09 f4       	brne	.+2      	; 0x2b72 <PORT_enuSetPinMode+0x3d6>
    2b70:	76 c0       	rjmp	.+236    	; 0x2c5e <PORT_enuSetPinMode+0x4c2>
    2b72:	5a c1       	rjmp	.+692    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
				{
				case PORT_OUTPUT_HIGH:
					//set output direction
					SET_BIT(DDRC,PinIndex);
    2b74:	a4 e3       	ldi	r26, 0x34	; 52
    2b76:	b0 e0       	ldi	r27, 0x00	; 0
    2b78:	e4 e3       	ldi	r30, 0x34	; 52
    2b7a:	f0 e0       	ldi	r31, 0x00	; 0
    2b7c:	80 81       	ld	r24, Z
    2b7e:	48 2f       	mov	r20, r24
    2b80:	89 81       	ldd	r24, Y+1	; 0x01
    2b82:	28 2f       	mov	r18, r24
    2b84:	30 e0       	ldi	r19, 0x00	; 0
    2b86:	81 e0       	ldi	r24, 0x01	; 1
    2b88:	90 e0       	ldi	r25, 0x00	; 0
    2b8a:	02 c0       	rjmp	.+4      	; 0x2b90 <PORT_enuSetPinMode+0x3f4>
    2b8c:	88 0f       	add	r24, r24
    2b8e:	99 1f       	adc	r25, r25
    2b90:	2a 95       	dec	r18
    2b92:	e2 f7       	brpl	.-8      	; 0x2b8c <PORT_enuSetPinMode+0x3f0>
    2b94:	84 2b       	or	r24, r20
    2b96:	8c 93       	st	X, r24
					SET_BIT(PORTC,PinIndex);
    2b98:	a5 e3       	ldi	r26, 0x35	; 53
    2b9a:	b0 e0       	ldi	r27, 0x00	; 0
    2b9c:	e5 e3       	ldi	r30, 0x35	; 53
    2b9e:	f0 e0       	ldi	r31, 0x00	; 0
    2ba0:	80 81       	ld	r24, Z
    2ba2:	48 2f       	mov	r20, r24
    2ba4:	89 81       	ldd	r24, Y+1	; 0x01
    2ba6:	28 2f       	mov	r18, r24
    2ba8:	30 e0       	ldi	r19, 0x00	; 0
    2baa:	81 e0       	ldi	r24, 0x01	; 1
    2bac:	90 e0       	ldi	r25, 0x00	; 0
    2bae:	02 2e       	mov	r0, r18
    2bb0:	02 c0       	rjmp	.+4      	; 0x2bb6 <PORT_enuSetPinMode+0x41a>
    2bb2:	88 0f       	add	r24, r24
    2bb4:	99 1f       	adc	r25, r25
    2bb6:	0a 94       	dec	r0
    2bb8:	e2 f7       	brpl	.-8      	; 0x2bb2 <PORT_enuSetPinMode+0x416>
    2bba:	84 2b       	or	r24, r20
    2bbc:	8c 93       	st	X, r24
    2bbe:	34 c1       	rjmp	.+616    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
					break;
				case PORT_OUTPUT_LOW:
					SET_BIT(DDRC,PinIndex);
    2bc0:	a4 e3       	ldi	r26, 0x34	; 52
    2bc2:	b0 e0       	ldi	r27, 0x00	; 0
    2bc4:	e4 e3       	ldi	r30, 0x34	; 52
    2bc6:	f0 e0       	ldi	r31, 0x00	; 0
    2bc8:	80 81       	ld	r24, Z
    2bca:	48 2f       	mov	r20, r24
    2bcc:	89 81       	ldd	r24, Y+1	; 0x01
    2bce:	28 2f       	mov	r18, r24
    2bd0:	30 e0       	ldi	r19, 0x00	; 0
    2bd2:	81 e0       	ldi	r24, 0x01	; 1
    2bd4:	90 e0       	ldi	r25, 0x00	; 0
    2bd6:	02 c0       	rjmp	.+4      	; 0x2bdc <PORT_enuSetPinMode+0x440>
    2bd8:	88 0f       	add	r24, r24
    2bda:	99 1f       	adc	r25, r25
    2bdc:	2a 95       	dec	r18
    2bde:	e2 f7       	brpl	.-8      	; 0x2bd8 <PORT_enuSetPinMode+0x43c>
    2be0:	84 2b       	or	r24, r20
    2be2:	8c 93       	st	X, r24
					CLEAR_BIT(PORTC,PinIndex);
    2be4:	a5 e3       	ldi	r26, 0x35	; 53
    2be6:	b0 e0       	ldi	r27, 0x00	; 0
    2be8:	e5 e3       	ldi	r30, 0x35	; 53
    2bea:	f0 e0       	ldi	r31, 0x00	; 0
    2bec:	80 81       	ld	r24, Z
    2bee:	48 2f       	mov	r20, r24
    2bf0:	89 81       	ldd	r24, Y+1	; 0x01
    2bf2:	28 2f       	mov	r18, r24
    2bf4:	30 e0       	ldi	r19, 0x00	; 0
    2bf6:	81 e0       	ldi	r24, 0x01	; 1
    2bf8:	90 e0       	ldi	r25, 0x00	; 0
    2bfa:	02 2e       	mov	r0, r18
    2bfc:	02 c0       	rjmp	.+4      	; 0x2c02 <PORT_enuSetPinMode+0x466>
    2bfe:	88 0f       	add	r24, r24
    2c00:	99 1f       	adc	r25, r25
    2c02:	0a 94       	dec	r0
    2c04:	e2 f7       	brpl	.-8      	; 0x2bfe <PORT_enuSetPinMode+0x462>
    2c06:	80 95       	com	r24
    2c08:	84 23       	and	r24, r20
    2c0a:	8c 93       	st	X, r24
    2c0c:	0d c1       	rjmp	.+538    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
					break;
				case PORT_INPUT_FLOATING:
					CLEAR_BIT(DDRC,PinIndex);
    2c0e:	a4 e3       	ldi	r26, 0x34	; 52
    2c10:	b0 e0       	ldi	r27, 0x00	; 0
    2c12:	e4 e3       	ldi	r30, 0x34	; 52
    2c14:	f0 e0       	ldi	r31, 0x00	; 0
    2c16:	80 81       	ld	r24, Z
    2c18:	48 2f       	mov	r20, r24
    2c1a:	89 81       	ldd	r24, Y+1	; 0x01
    2c1c:	28 2f       	mov	r18, r24
    2c1e:	30 e0       	ldi	r19, 0x00	; 0
    2c20:	81 e0       	ldi	r24, 0x01	; 1
    2c22:	90 e0       	ldi	r25, 0x00	; 0
    2c24:	02 c0       	rjmp	.+4      	; 0x2c2a <PORT_enuSetPinMode+0x48e>
    2c26:	88 0f       	add	r24, r24
    2c28:	99 1f       	adc	r25, r25
    2c2a:	2a 95       	dec	r18
    2c2c:	e2 f7       	brpl	.-8      	; 0x2c26 <PORT_enuSetPinMode+0x48a>
    2c2e:	80 95       	com	r24
    2c30:	84 23       	and	r24, r20
    2c32:	8c 93       	st	X, r24
					CLEAR_BIT(PORTC,PinIndex);
    2c34:	a5 e3       	ldi	r26, 0x35	; 53
    2c36:	b0 e0       	ldi	r27, 0x00	; 0
    2c38:	e5 e3       	ldi	r30, 0x35	; 53
    2c3a:	f0 e0       	ldi	r31, 0x00	; 0
    2c3c:	80 81       	ld	r24, Z
    2c3e:	48 2f       	mov	r20, r24
    2c40:	89 81       	ldd	r24, Y+1	; 0x01
    2c42:	28 2f       	mov	r18, r24
    2c44:	30 e0       	ldi	r19, 0x00	; 0
    2c46:	81 e0       	ldi	r24, 0x01	; 1
    2c48:	90 e0       	ldi	r25, 0x00	; 0
    2c4a:	02 2e       	mov	r0, r18
    2c4c:	02 c0       	rjmp	.+4      	; 0x2c52 <PORT_enuSetPinMode+0x4b6>
    2c4e:	88 0f       	add	r24, r24
    2c50:	99 1f       	adc	r25, r25
    2c52:	0a 94       	dec	r0
    2c54:	e2 f7       	brpl	.-8      	; 0x2c4e <PORT_enuSetPinMode+0x4b2>
    2c56:	80 95       	com	r24
    2c58:	84 23       	and	r24, r20
    2c5a:	8c 93       	st	X, r24
    2c5c:	e5 c0       	rjmp	.+458    	; 0x2e28 <PORT_enuSetPinMode+0x68c>

					break;
				case PORT_INPUT_PULLUP:
					CLEAR_BIT(DDRC,PinIndex);
    2c5e:	a4 e3       	ldi	r26, 0x34	; 52
    2c60:	b0 e0       	ldi	r27, 0x00	; 0
    2c62:	e4 e3       	ldi	r30, 0x34	; 52
    2c64:	f0 e0       	ldi	r31, 0x00	; 0
    2c66:	80 81       	ld	r24, Z
    2c68:	48 2f       	mov	r20, r24
    2c6a:	89 81       	ldd	r24, Y+1	; 0x01
    2c6c:	28 2f       	mov	r18, r24
    2c6e:	30 e0       	ldi	r19, 0x00	; 0
    2c70:	81 e0       	ldi	r24, 0x01	; 1
    2c72:	90 e0       	ldi	r25, 0x00	; 0
    2c74:	02 c0       	rjmp	.+4      	; 0x2c7a <PORT_enuSetPinMode+0x4de>
    2c76:	88 0f       	add	r24, r24
    2c78:	99 1f       	adc	r25, r25
    2c7a:	2a 95       	dec	r18
    2c7c:	e2 f7       	brpl	.-8      	; 0x2c76 <PORT_enuSetPinMode+0x4da>
    2c7e:	80 95       	com	r24
    2c80:	84 23       	and	r24, r20
    2c82:	8c 93       	st	X, r24
					SET_BIT(PORTC,PinIndex);
    2c84:	a5 e3       	ldi	r26, 0x35	; 53
    2c86:	b0 e0       	ldi	r27, 0x00	; 0
    2c88:	e5 e3       	ldi	r30, 0x35	; 53
    2c8a:	f0 e0       	ldi	r31, 0x00	; 0
    2c8c:	80 81       	ld	r24, Z
    2c8e:	48 2f       	mov	r20, r24
    2c90:	89 81       	ldd	r24, Y+1	; 0x01
    2c92:	28 2f       	mov	r18, r24
    2c94:	30 e0       	ldi	r19, 0x00	; 0
    2c96:	81 e0       	ldi	r24, 0x01	; 1
    2c98:	90 e0       	ldi	r25, 0x00	; 0
    2c9a:	02 2e       	mov	r0, r18
    2c9c:	02 c0       	rjmp	.+4      	; 0x2ca2 <PORT_enuSetPinMode+0x506>
    2c9e:	88 0f       	add	r24, r24
    2ca0:	99 1f       	adc	r25, r25
    2ca2:	0a 94       	dec	r0
    2ca4:	e2 f7       	brpl	.-8      	; 0x2c9e <PORT_enuSetPinMode+0x502>
    2ca6:	84 2b       	or	r24, r20
    2ca8:	8c 93       	st	X, r24
    2caa:	be c0       	rjmp	.+380    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
				}
				break;

				case PORT_D:
					//which mode ---PORT_OUTPUT_HIGH---PORT_OUTPUT_LOW----PORT_INPUT_FLOATING----PORT_INPUT_PULLUP
					switch(Copy_u8PinMode)
    2cac:	8d 81       	ldd	r24, Y+5	; 0x05
    2cae:	28 2f       	mov	r18, r24
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	3f 83       	std	Y+7, r19	; 0x07
    2cb4:	2e 83       	std	Y+6, r18	; 0x06
    2cb6:	8e 81       	ldd	r24, Y+6	; 0x06
    2cb8:	9f 81       	ldd	r25, Y+7	; 0x07
    2cba:	83 30       	cpi	r24, 0x03	; 3
    2cbc:	91 05       	cpc	r25, r1
    2cbe:	09 f4       	brne	.+2      	; 0x2cc2 <PORT_enuSetPinMode+0x526>
    2cc0:	3e c0       	rjmp	.+124    	; 0x2d3e <PORT_enuSetPinMode+0x5a2>
    2cc2:	2e 81       	ldd	r18, Y+6	; 0x06
    2cc4:	3f 81       	ldd	r19, Y+7	; 0x07
    2cc6:	24 30       	cpi	r18, 0x04	; 4
    2cc8:	31 05       	cpc	r19, r1
    2cca:	34 f4       	brge	.+12     	; 0x2cd8 <PORT_enuSetPinMode+0x53c>
    2ccc:	8e 81       	ldd	r24, Y+6	; 0x06
    2cce:	9f 81       	ldd	r25, Y+7	; 0x07
    2cd0:	82 30       	cpi	r24, 0x02	; 2
    2cd2:	91 05       	cpc	r25, r1
    2cd4:	71 f0       	breq	.+28     	; 0x2cf2 <PORT_enuSetPinMode+0x556>
    2cd6:	a8 c0       	rjmp	.+336    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
    2cd8:	2e 81       	ldd	r18, Y+6	; 0x06
    2cda:	3f 81       	ldd	r19, Y+7	; 0x07
    2cdc:	24 30       	cpi	r18, 0x04	; 4
    2cde:	31 05       	cpc	r19, r1
    2ce0:	09 f4       	brne	.+2      	; 0x2ce4 <PORT_enuSetPinMode+0x548>
    2ce2:	54 c0       	rjmp	.+168    	; 0x2d8c <PORT_enuSetPinMode+0x5f0>
    2ce4:	8e 81       	ldd	r24, Y+6	; 0x06
    2ce6:	9f 81       	ldd	r25, Y+7	; 0x07
    2ce8:	85 30       	cpi	r24, 0x05	; 5
    2cea:	91 05       	cpc	r25, r1
    2cec:	09 f4       	brne	.+2      	; 0x2cf0 <PORT_enuSetPinMode+0x554>
    2cee:	76 c0       	rjmp	.+236    	; 0x2ddc <PORT_enuSetPinMode+0x640>
    2cf0:	9b c0       	rjmp	.+310    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
					{
					case PORT_OUTPUT_HIGH:
						//set output direction
						SET_BIT(DDRD,PinIndex);
    2cf2:	a1 e3       	ldi	r26, 0x31	; 49
    2cf4:	b0 e0       	ldi	r27, 0x00	; 0
    2cf6:	e1 e3       	ldi	r30, 0x31	; 49
    2cf8:	f0 e0       	ldi	r31, 0x00	; 0
    2cfa:	80 81       	ld	r24, Z
    2cfc:	48 2f       	mov	r20, r24
    2cfe:	89 81       	ldd	r24, Y+1	; 0x01
    2d00:	28 2f       	mov	r18, r24
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	81 e0       	ldi	r24, 0x01	; 1
    2d06:	90 e0       	ldi	r25, 0x00	; 0
    2d08:	02 c0       	rjmp	.+4      	; 0x2d0e <PORT_enuSetPinMode+0x572>
    2d0a:	88 0f       	add	r24, r24
    2d0c:	99 1f       	adc	r25, r25
    2d0e:	2a 95       	dec	r18
    2d10:	e2 f7       	brpl	.-8      	; 0x2d0a <PORT_enuSetPinMode+0x56e>
    2d12:	84 2b       	or	r24, r20
    2d14:	8c 93       	st	X, r24
						SET_BIT(PORTD,PinIndex);
    2d16:	a2 e3       	ldi	r26, 0x32	; 50
    2d18:	b0 e0       	ldi	r27, 0x00	; 0
    2d1a:	e2 e3       	ldi	r30, 0x32	; 50
    2d1c:	f0 e0       	ldi	r31, 0x00	; 0
    2d1e:	80 81       	ld	r24, Z
    2d20:	48 2f       	mov	r20, r24
    2d22:	89 81       	ldd	r24, Y+1	; 0x01
    2d24:	28 2f       	mov	r18, r24
    2d26:	30 e0       	ldi	r19, 0x00	; 0
    2d28:	81 e0       	ldi	r24, 0x01	; 1
    2d2a:	90 e0       	ldi	r25, 0x00	; 0
    2d2c:	02 2e       	mov	r0, r18
    2d2e:	02 c0       	rjmp	.+4      	; 0x2d34 <PORT_enuSetPinMode+0x598>
    2d30:	88 0f       	add	r24, r24
    2d32:	99 1f       	adc	r25, r25
    2d34:	0a 94       	dec	r0
    2d36:	e2 f7       	brpl	.-8      	; 0x2d30 <PORT_enuSetPinMode+0x594>
    2d38:	84 2b       	or	r24, r20
    2d3a:	8c 93       	st	X, r24
    2d3c:	75 c0       	rjmp	.+234    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
						break;
					case PORT_OUTPUT_LOW:
						SET_BIT(DDRD,PinIndex);
    2d3e:	a1 e3       	ldi	r26, 0x31	; 49
    2d40:	b0 e0       	ldi	r27, 0x00	; 0
    2d42:	e1 e3       	ldi	r30, 0x31	; 49
    2d44:	f0 e0       	ldi	r31, 0x00	; 0
    2d46:	80 81       	ld	r24, Z
    2d48:	48 2f       	mov	r20, r24
    2d4a:	89 81       	ldd	r24, Y+1	; 0x01
    2d4c:	28 2f       	mov	r18, r24
    2d4e:	30 e0       	ldi	r19, 0x00	; 0
    2d50:	81 e0       	ldi	r24, 0x01	; 1
    2d52:	90 e0       	ldi	r25, 0x00	; 0
    2d54:	02 c0       	rjmp	.+4      	; 0x2d5a <PORT_enuSetPinMode+0x5be>
    2d56:	88 0f       	add	r24, r24
    2d58:	99 1f       	adc	r25, r25
    2d5a:	2a 95       	dec	r18
    2d5c:	e2 f7       	brpl	.-8      	; 0x2d56 <PORT_enuSetPinMode+0x5ba>
    2d5e:	84 2b       	or	r24, r20
    2d60:	8c 93       	st	X, r24
						CLEAR_BIT(PORTD,PinIndex);
    2d62:	a2 e3       	ldi	r26, 0x32	; 50
    2d64:	b0 e0       	ldi	r27, 0x00	; 0
    2d66:	e2 e3       	ldi	r30, 0x32	; 50
    2d68:	f0 e0       	ldi	r31, 0x00	; 0
    2d6a:	80 81       	ld	r24, Z
    2d6c:	48 2f       	mov	r20, r24
    2d6e:	89 81       	ldd	r24, Y+1	; 0x01
    2d70:	28 2f       	mov	r18, r24
    2d72:	30 e0       	ldi	r19, 0x00	; 0
    2d74:	81 e0       	ldi	r24, 0x01	; 1
    2d76:	90 e0       	ldi	r25, 0x00	; 0
    2d78:	02 2e       	mov	r0, r18
    2d7a:	02 c0       	rjmp	.+4      	; 0x2d80 <PORT_enuSetPinMode+0x5e4>
    2d7c:	88 0f       	add	r24, r24
    2d7e:	99 1f       	adc	r25, r25
    2d80:	0a 94       	dec	r0
    2d82:	e2 f7       	brpl	.-8      	; 0x2d7c <PORT_enuSetPinMode+0x5e0>
    2d84:	80 95       	com	r24
    2d86:	84 23       	and	r24, r20
    2d88:	8c 93       	st	X, r24
    2d8a:	4e c0       	rjmp	.+156    	; 0x2e28 <PORT_enuSetPinMode+0x68c>
						break;
					case PORT_INPUT_FLOATING:
						CLEAR_BIT(DDRD,PinIndex);
    2d8c:	a1 e3       	ldi	r26, 0x31	; 49
    2d8e:	b0 e0       	ldi	r27, 0x00	; 0
    2d90:	e1 e3       	ldi	r30, 0x31	; 49
    2d92:	f0 e0       	ldi	r31, 0x00	; 0
    2d94:	80 81       	ld	r24, Z
    2d96:	48 2f       	mov	r20, r24
    2d98:	89 81       	ldd	r24, Y+1	; 0x01
    2d9a:	28 2f       	mov	r18, r24
    2d9c:	30 e0       	ldi	r19, 0x00	; 0
    2d9e:	81 e0       	ldi	r24, 0x01	; 1
    2da0:	90 e0       	ldi	r25, 0x00	; 0
    2da2:	02 c0       	rjmp	.+4      	; 0x2da8 <PORT_enuSetPinMode+0x60c>
    2da4:	88 0f       	add	r24, r24
    2da6:	99 1f       	adc	r25, r25
    2da8:	2a 95       	dec	r18
    2daa:	e2 f7       	brpl	.-8      	; 0x2da4 <PORT_enuSetPinMode+0x608>
    2dac:	80 95       	com	r24
    2dae:	84 23       	and	r24, r20
    2db0:	8c 93       	st	X, r24
						CLEAR_BIT(PORTD,PinIndex);
    2db2:	a2 e3       	ldi	r26, 0x32	; 50
    2db4:	b0 e0       	ldi	r27, 0x00	; 0
    2db6:	e2 e3       	ldi	r30, 0x32	; 50
    2db8:	f0 e0       	ldi	r31, 0x00	; 0
    2dba:	80 81       	ld	r24, Z
    2dbc:	48 2f       	mov	r20, r24
    2dbe:	89 81       	ldd	r24, Y+1	; 0x01
    2dc0:	28 2f       	mov	r18, r24
    2dc2:	30 e0       	ldi	r19, 0x00	; 0
    2dc4:	81 e0       	ldi	r24, 0x01	; 1
    2dc6:	90 e0       	ldi	r25, 0x00	; 0
    2dc8:	02 2e       	mov	r0, r18
    2dca:	02 c0       	rjmp	.+4      	; 0x2dd0 <PORT_enuSetPinMode+0x634>
    2dcc:	88 0f       	add	r24, r24
    2dce:	99 1f       	adc	r25, r25
    2dd0:	0a 94       	dec	r0
    2dd2:	e2 f7       	brpl	.-8      	; 0x2dcc <PORT_enuSetPinMode+0x630>
    2dd4:	80 95       	com	r24
    2dd6:	84 23       	and	r24, r20
    2dd8:	8c 93       	st	X, r24
    2dda:	26 c0       	rjmp	.+76     	; 0x2e28 <PORT_enuSetPinMode+0x68c>

						break;
					case PORT_INPUT_PULLUP:
						CLEAR_BIT(DDRD,PinIndex);
    2ddc:	a1 e3       	ldi	r26, 0x31	; 49
    2dde:	b0 e0       	ldi	r27, 0x00	; 0
    2de0:	e1 e3       	ldi	r30, 0x31	; 49
    2de2:	f0 e0       	ldi	r31, 0x00	; 0
    2de4:	80 81       	ld	r24, Z
    2de6:	48 2f       	mov	r20, r24
    2de8:	89 81       	ldd	r24, Y+1	; 0x01
    2dea:	28 2f       	mov	r18, r24
    2dec:	30 e0       	ldi	r19, 0x00	; 0
    2dee:	81 e0       	ldi	r24, 0x01	; 1
    2df0:	90 e0       	ldi	r25, 0x00	; 0
    2df2:	02 c0       	rjmp	.+4      	; 0x2df8 <PORT_enuSetPinMode+0x65c>
    2df4:	88 0f       	add	r24, r24
    2df6:	99 1f       	adc	r25, r25
    2df8:	2a 95       	dec	r18
    2dfa:	e2 f7       	brpl	.-8      	; 0x2df4 <PORT_enuSetPinMode+0x658>
    2dfc:	80 95       	com	r24
    2dfe:	84 23       	and	r24, r20
    2e00:	8c 93       	st	X, r24
						SET_BIT(PORTD,PinIndex);
    2e02:	a2 e3       	ldi	r26, 0x32	; 50
    2e04:	b0 e0       	ldi	r27, 0x00	; 0
    2e06:	e2 e3       	ldi	r30, 0x32	; 50
    2e08:	f0 e0       	ldi	r31, 0x00	; 0
    2e0a:	80 81       	ld	r24, Z
    2e0c:	48 2f       	mov	r20, r24
    2e0e:	89 81       	ldd	r24, Y+1	; 0x01
    2e10:	28 2f       	mov	r18, r24
    2e12:	30 e0       	ldi	r19, 0x00	; 0
    2e14:	81 e0       	ldi	r24, 0x01	; 1
    2e16:	90 e0       	ldi	r25, 0x00	; 0
    2e18:	02 2e       	mov	r0, r18
    2e1a:	02 c0       	rjmp	.+4      	; 0x2e20 <PORT_enuSetPinMode+0x684>
    2e1c:	88 0f       	add	r24, r24
    2e1e:	99 1f       	adc	r25, r25
    2e20:	0a 94       	dec	r0
    2e22:	e2 f7       	brpl	.-8      	; 0x2e1c <PORT_enuSetPinMode+0x680>
    2e24:	84 2b       	or	r24, r20
    2e26:	8c 93       	st	X, r24
					}
					break;

	}
	//return Error Status
	return LOC_u8ErrorStatus;
    2e28:	8b 81       	ldd	r24, Y+3	; 0x03

}
    2e2a:	2f 96       	adiw	r28, 0x0f	; 15
    2e2c:	0f b6       	in	r0, 0x3f	; 63
    2e2e:	f8 94       	cli
    2e30:	de bf       	out	0x3e, r29	; 62
    2e32:	0f be       	out	0x3f, r0	; 63
    2e34:	cd bf       	out	0x3d, r28	; 61
    2e36:	cf 91       	pop	r28
    2e38:	df 91       	pop	r29
    2e3a:	08 95       	ret

00002e3c <PORT_enuSetDirection>:
 *                   2.Copy_u8PinDirection --> Direction
 * Parameters(OUT) : value of enum type PORT_tenuLOC_u8ErrorStatus
 *******************************************************************************************/

PORT_tenuErrorStatus PORT_enuSetDirection(PortPinType Copy_u8PinId,PortPinType Copy_u8PinDirection)
{
    2e3c:	df 93       	push	r29
    2e3e:	cf 93       	push	r28
    2e40:	cd b7       	in	r28, 0x3d	; 61
    2e42:	de b7       	in	r29, 0x3e	; 62
    2e44:	2f 97       	sbiw	r28, 0x0f	; 15
    2e46:	0f b6       	in	r0, 0x3f	; 63
    2e48:	f8 94       	cli
    2e4a:	de bf       	out	0x3e, r29	; 62
    2e4c:	0f be       	out	0x3f, r0	; 63
    2e4e:	cd bf       	out	0x3d, r28	; 61
    2e50:	8c 83       	std	Y+4, r24	; 0x04
    2e52:	6d 83       	std	Y+5, r22	; 0x05
	//local variable for Error status
	uint8 LOC_u8ErrorStatus=PORT_enuOK;
    2e54:	1b 82       	std	Y+3, r1	; 0x03

	uint8 PortIndex=0,PinIndex=0;
    2e56:	1a 82       	std	Y+2, r1	; 0x02
    2e58:	19 82       	std	Y+1, r1	; 0x01

	PortIndex=(Copy_u8PinId/8);
    2e5a:	8c 81       	ldd	r24, Y+4	; 0x04
    2e5c:	86 95       	lsr	r24
    2e5e:	86 95       	lsr	r24
    2e60:	86 95       	lsr	r24
    2e62:	8a 83       	std	Y+2, r24	; 0x02

	PinIndex=Copy_u8PinId%8;
    2e64:	8c 81       	ldd	r24, Y+4	; 0x04
    2e66:	87 70       	andi	r24, 0x07	; 7
    2e68:	89 83       	std	Y+1, r24	; 0x01


	if(Copy_u8PinId>PORT_NUMBER_OF_PINS)
    2e6a:	8c 81       	ldd	r24, Y+4	; 0x04
    2e6c:	81 32       	cpi	r24, 0x21	; 33
    2e6e:	10 f0       	brcs	.+4      	; 0x2e74 <PORT_enuSetDirection+0x38>
	{
		LOC_u8ErrorStatus=PORT_enuPinError;
    2e70:	81 e0       	ldi	r24, 0x01	; 1
    2e72:	8b 83       	std	Y+3, r24	; 0x03
	}

	if(PortIndex>PORT_NUMBER_OF_PORTS)
    2e74:	8a 81       	ldd	r24, Y+2	; 0x02
    2e76:	85 30       	cpi	r24, 0x05	; 5
    2e78:	10 f0       	brcs	.+4      	; 0x2e7e <PORT_enuSetDirection+0x42>
	{
		LOC_u8ErrorStatus=PORT_enuPortError;
    2e7a:	82 e0       	ldi	r24, 0x02	; 2
    2e7c:	8b 83       	std	Y+3, r24	; 0x03
	}

	if((Copy_u8PinDirection != PORT_INPUT_Direction) ||(Copy_u8PinDirection != PORT_OUTPUT_Direction))
    2e7e:	8d 81       	ldd	r24, Y+5	; 0x05
    2e80:	86 30       	cpi	r24, 0x06	; 6
    2e82:	19 f4       	brne	.+6      	; 0x2e8a <PORT_enuSetDirection+0x4e>
    2e84:	8d 81       	ldd	r24, Y+5	; 0x05
    2e86:	87 30       	cpi	r24, 0x07	; 7
    2e88:	11 f0       	breq	.+4      	; 0x2e8e <PORT_enuSetDirection+0x52>
	{
		LOC_u8ErrorStatus=Por_enuDirectionError;
    2e8a:	84 e0       	ldi	r24, 0x04	; 4
    2e8c:	8b 83       	std	Y+3, r24	; 0x03

	}


	switch(PortIndex)
    2e8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2e90:	28 2f       	mov	r18, r24
    2e92:	30 e0       	ldi	r19, 0x00	; 0
    2e94:	3f 87       	std	Y+15, r19	; 0x0f
    2e96:	2e 87       	std	Y+14, r18	; 0x0e
    2e98:	8e 85       	ldd	r24, Y+14	; 0x0e
    2e9a:	9f 85       	ldd	r25, Y+15	; 0x0f
    2e9c:	81 30       	cpi	r24, 0x01	; 1
    2e9e:	91 05       	cpc	r25, r1
    2ea0:	09 f4       	brne	.+2      	; 0x2ea4 <PORT_enuSetDirection+0x68>
    2ea2:	50 c0       	rjmp	.+160    	; 0x2f44 <PORT_enuSetDirection+0x108>
    2ea4:	2e 85       	ldd	r18, Y+14	; 0x0e
    2ea6:	3f 85       	ldd	r19, Y+15	; 0x0f
    2ea8:	22 30       	cpi	r18, 0x02	; 2
    2eaa:	31 05       	cpc	r19, r1
    2eac:	2c f4       	brge	.+10     	; 0x2eb8 <PORT_enuSetDirection+0x7c>
    2eae:	8e 85       	ldd	r24, Y+14	; 0x0e
    2eb0:	9f 85       	ldd	r25, Y+15	; 0x0f
    2eb2:	00 97       	sbiw	r24, 0x00	; 0
    2eb4:	71 f0       	breq	.+28     	; 0x2ed2 <PORT_enuSetDirection+0x96>
    2eb6:	f0 c0       	rjmp	.+480    	; 0x3098 <PORT_enuSetDirection+0x25c>
    2eb8:	2e 85       	ldd	r18, Y+14	; 0x0e
    2eba:	3f 85       	ldd	r19, Y+15	; 0x0f
    2ebc:	22 30       	cpi	r18, 0x02	; 2
    2ebe:	31 05       	cpc	r19, r1
    2ec0:	09 f4       	brne	.+2      	; 0x2ec4 <PORT_enuSetDirection+0x88>
    2ec2:	79 c0       	rjmp	.+242    	; 0x2fb6 <PORT_enuSetDirection+0x17a>
    2ec4:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ec6:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ec8:	83 30       	cpi	r24, 0x03	; 3
    2eca:	91 05       	cpc	r25, r1
    2ecc:	09 f4       	brne	.+2      	; 0x2ed0 <PORT_enuSetDirection+0x94>
    2ece:	ac c0       	rjmp	.+344    	; 0x3028 <PORT_enuSetDirection+0x1ec>
    2ed0:	e3 c0       	rjmp	.+454    	; 0x3098 <PORT_enuSetDirection+0x25c>
	{

	case PORT_A:

		switch(Copy_u8PinDirection)
    2ed2:	8d 81       	ldd	r24, Y+5	; 0x05
    2ed4:	28 2f       	mov	r18, r24
    2ed6:	30 e0       	ldi	r19, 0x00	; 0
    2ed8:	3d 87       	std	Y+13, r19	; 0x0d
    2eda:	2c 87       	std	Y+12, r18	; 0x0c
    2edc:	8c 85       	ldd	r24, Y+12	; 0x0c
    2ede:	9d 85       	ldd	r25, Y+13	; 0x0d
    2ee0:	86 30       	cpi	r24, 0x06	; 6
    2ee2:	91 05       	cpc	r25, r1
    2ee4:	31 f0       	breq	.+12     	; 0x2ef2 <PORT_enuSetDirection+0xb6>
    2ee6:	2c 85       	ldd	r18, Y+12	; 0x0c
    2ee8:	3d 85       	ldd	r19, Y+13	; 0x0d
    2eea:	27 30       	cpi	r18, 0x07	; 7
    2eec:	31 05       	cpc	r19, r1
    2eee:	b1 f0       	breq	.+44     	; 0x2f1c <PORT_enuSetDirection+0xe0>
    2ef0:	d3 c0       	rjmp	.+422    	; 0x3098 <PORT_enuSetDirection+0x25c>
		{
		case PORT_INPUT_Direction:
			CLEAR_BIT(DDRA,PinIndex);
    2ef2:	aa e3       	ldi	r26, 0x3A	; 58
    2ef4:	b0 e0       	ldi	r27, 0x00	; 0
    2ef6:	ea e3       	ldi	r30, 0x3A	; 58
    2ef8:	f0 e0       	ldi	r31, 0x00	; 0
    2efa:	80 81       	ld	r24, Z
    2efc:	48 2f       	mov	r20, r24
    2efe:	89 81       	ldd	r24, Y+1	; 0x01
    2f00:	28 2f       	mov	r18, r24
    2f02:	30 e0       	ldi	r19, 0x00	; 0
    2f04:	81 e0       	ldi	r24, 0x01	; 1
    2f06:	90 e0       	ldi	r25, 0x00	; 0
    2f08:	02 2e       	mov	r0, r18
    2f0a:	02 c0       	rjmp	.+4      	; 0x2f10 <PORT_enuSetDirection+0xd4>
    2f0c:	88 0f       	add	r24, r24
    2f0e:	99 1f       	adc	r25, r25
    2f10:	0a 94       	dec	r0
    2f12:	e2 f7       	brpl	.-8      	; 0x2f0c <PORT_enuSetDirection+0xd0>
    2f14:	80 95       	com	r24
    2f16:	84 23       	and	r24, r20
    2f18:	8c 93       	st	X, r24
    2f1a:	be c0       	rjmp	.+380    	; 0x3098 <PORT_enuSetDirection+0x25c>
			break;
		case PORT_OUTPUT_Direction:
			SET_BIT(PORTA,PinIndex);
    2f1c:	ab e3       	ldi	r26, 0x3B	; 59
    2f1e:	b0 e0       	ldi	r27, 0x00	; 0
    2f20:	eb e3       	ldi	r30, 0x3B	; 59
    2f22:	f0 e0       	ldi	r31, 0x00	; 0
    2f24:	80 81       	ld	r24, Z
    2f26:	48 2f       	mov	r20, r24
    2f28:	89 81       	ldd	r24, Y+1	; 0x01
    2f2a:	28 2f       	mov	r18, r24
    2f2c:	30 e0       	ldi	r19, 0x00	; 0
    2f2e:	81 e0       	ldi	r24, 0x01	; 1
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	02 2e       	mov	r0, r18
    2f34:	02 c0       	rjmp	.+4      	; 0x2f3a <PORT_enuSetDirection+0xfe>
    2f36:	88 0f       	add	r24, r24
    2f38:	99 1f       	adc	r25, r25
    2f3a:	0a 94       	dec	r0
    2f3c:	e2 f7       	brpl	.-8      	; 0x2f36 <PORT_enuSetDirection+0xfa>
    2f3e:	84 2b       	or	r24, r20
    2f40:	8c 93       	st	X, r24
    2f42:	aa c0       	rjmp	.+340    	; 0x3098 <PORT_enuSetDirection+0x25c>
		}
		break;

		case PORT_B:

			switch(Copy_u8PinDirection)
    2f44:	8d 81       	ldd	r24, Y+5	; 0x05
    2f46:	28 2f       	mov	r18, r24
    2f48:	30 e0       	ldi	r19, 0x00	; 0
    2f4a:	3b 87       	std	Y+11, r19	; 0x0b
    2f4c:	2a 87       	std	Y+10, r18	; 0x0a
    2f4e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f50:	9b 85       	ldd	r25, Y+11	; 0x0b
    2f52:	86 30       	cpi	r24, 0x06	; 6
    2f54:	91 05       	cpc	r25, r1
    2f56:	31 f0       	breq	.+12     	; 0x2f64 <PORT_enuSetDirection+0x128>
    2f58:	2a 85       	ldd	r18, Y+10	; 0x0a
    2f5a:	3b 85       	ldd	r19, Y+11	; 0x0b
    2f5c:	27 30       	cpi	r18, 0x07	; 7
    2f5e:	31 05       	cpc	r19, r1
    2f60:	b1 f0       	breq	.+44     	; 0x2f8e <PORT_enuSetDirection+0x152>
    2f62:	9a c0       	rjmp	.+308    	; 0x3098 <PORT_enuSetDirection+0x25c>
			{
			case PORT_INPUT_Direction:
				CLEAR_BIT(DDRB,PinIndex);
    2f64:	a7 e3       	ldi	r26, 0x37	; 55
    2f66:	b0 e0       	ldi	r27, 0x00	; 0
    2f68:	e7 e3       	ldi	r30, 0x37	; 55
    2f6a:	f0 e0       	ldi	r31, 0x00	; 0
    2f6c:	80 81       	ld	r24, Z
    2f6e:	48 2f       	mov	r20, r24
    2f70:	89 81       	ldd	r24, Y+1	; 0x01
    2f72:	28 2f       	mov	r18, r24
    2f74:	30 e0       	ldi	r19, 0x00	; 0
    2f76:	81 e0       	ldi	r24, 0x01	; 1
    2f78:	90 e0       	ldi	r25, 0x00	; 0
    2f7a:	02 2e       	mov	r0, r18
    2f7c:	02 c0       	rjmp	.+4      	; 0x2f82 <PORT_enuSetDirection+0x146>
    2f7e:	88 0f       	add	r24, r24
    2f80:	99 1f       	adc	r25, r25
    2f82:	0a 94       	dec	r0
    2f84:	e2 f7       	brpl	.-8      	; 0x2f7e <PORT_enuSetDirection+0x142>
    2f86:	80 95       	com	r24
    2f88:	84 23       	and	r24, r20
    2f8a:	8c 93       	st	X, r24
    2f8c:	85 c0       	rjmp	.+266    	; 0x3098 <PORT_enuSetDirection+0x25c>
				break;
			case PORT_OUTPUT_Direction:
				SET_BIT(PORTB,PinIndex);
    2f8e:	a8 e3       	ldi	r26, 0x38	; 56
    2f90:	b0 e0       	ldi	r27, 0x00	; 0
    2f92:	e8 e3       	ldi	r30, 0x38	; 56
    2f94:	f0 e0       	ldi	r31, 0x00	; 0
    2f96:	80 81       	ld	r24, Z
    2f98:	48 2f       	mov	r20, r24
    2f9a:	89 81       	ldd	r24, Y+1	; 0x01
    2f9c:	28 2f       	mov	r18, r24
    2f9e:	30 e0       	ldi	r19, 0x00	; 0
    2fa0:	81 e0       	ldi	r24, 0x01	; 1
    2fa2:	90 e0       	ldi	r25, 0x00	; 0
    2fa4:	02 2e       	mov	r0, r18
    2fa6:	02 c0       	rjmp	.+4      	; 0x2fac <PORT_enuSetDirection+0x170>
    2fa8:	88 0f       	add	r24, r24
    2faa:	99 1f       	adc	r25, r25
    2fac:	0a 94       	dec	r0
    2fae:	e2 f7       	brpl	.-8      	; 0x2fa8 <PORT_enuSetDirection+0x16c>
    2fb0:	84 2b       	or	r24, r20
    2fb2:	8c 93       	st	X, r24
    2fb4:	71 c0       	rjmp	.+226    	; 0x3098 <PORT_enuSetDirection+0x25c>

			break;

			case PORT_C:

				switch(Copy_u8PinDirection)
    2fb6:	8d 81       	ldd	r24, Y+5	; 0x05
    2fb8:	28 2f       	mov	r18, r24
    2fba:	30 e0       	ldi	r19, 0x00	; 0
    2fbc:	39 87       	std	Y+9, r19	; 0x09
    2fbe:	28 87       	std	Y+8, r18	; 0x08
    2fc0:	88 85       	ldd	r24, Y+8	; 0x08
    2fc2:	99 85       	ldd	r25, Y+9	; 0x09
    2fc4:	86 30       	cpi	r24, 0x06	; 6
    2fc6:	91 05       	cpc	r25, r1
    2fc8:	31 f0       	breq	.+12     	; 0x2fd6 <PORT_enuSetDirection+0x19a>
    2fca:	28 85       	ldd	r18, Y+8	; 0x08
    2fcc:	39 85       	ldd	r19, Y+9	; 0x09
    2fce:	27 30       	cpi	r18, 0x07	; 7
    2fd0:	31 05       	cpc	r19, r1
    2fd2:	b1 f0       	breq	.+44     	; 0x3000 <PORT_enuSetDirection+0x1c4>
    2fd4:	61 c0       	rjmp	.+194    	; 0x3098 <PORT_enuSetDirection+0x25c>
				{
				case PORT_INPUT_Direction:
					CLEAR_BIT(DDRC,PinIndex);
    2fd6:	a4 e3       	ldi	r26, 0x34	; 52
    2fd8:	b0 e0       	ldi	r27, 0x00	; 0
    2fda:	e4 e3       	ldi	r30, 0x34	; 52
    2fdc:	f0 e0       	ldi	r31, 0x00	; 0
    2fde:	80 81       	ld	r24, Z
    2fe0:	48 2f       	mov	r20, r24
    2fe2:	89 81       	ldd	r24, Y+1	; 0x01
    2fe4:	28 2f       	mov	r18, r24
    2fe6:	30 e0       	ldi	r19, 0x00	; 0
    2fe8:	81 e0       	ldi	r24, 0x01	; 1
    2fea:	90 e0       	ldi	r25, 0x00	; 0
    2fec:	02 2e       	mov	r0, r18
    2fee:	02 c0       	rjmp	.+4      	; 0x2ff4 <PORT_enuSetDirection+0x1b8>
    2ff0:	88 0f       	add	r24, r24
    2ff2:	99 1f       	adc	r25, r25
    2ff4:	0a 94       	dec	r0
    2ff6:	e2 f7       	brpl	.-8      	; 0x2ff0 <PORT_enuSetDirection+0x1b4>
    2ff8:	80 95       	com	r24
    2ffa:	84 23       	and	r24, r20
    2ffc:	8c 93       	st	X, r24
    2ffe:	4c c0       	rjmp	.+152    	; 0x3098 <PORT_enuSetDirection+0x25c>
					break;
				case PORT_OUTPUT_Direction:
					SET_BIT(PORTC,PinIndex);
    3000:	a5 e3       	ldi	r26, 0x35	; 53
    3002:	b0 e0       	ldi	r27, 0x00	; 0
    3004:	e5 e3       	ldi	r30, 0x35	; 53
    3006:	f0 e0       	ldi	r31, 0x00	; 0
    3008:	80 81       	ld	r24, Z
    300a:	48 2f       	mov	r20, r24
    300c:	89 81       	ldd	r24, Y+1	; 0x01
    300e:	28 2f       	mov	r18, r24
    3010:	30 e0       	ldi	r19, 0x00	; 0
    3012:	81 e0       	ldi	r24, 0x01	; 1
    3014:	90 e0       	ldi	r25, 0x00	; 0
    3016:	02 2e       	mov	r0, r18
    3018:	02 c0       	rjmp	.+4      	; 0x301e <PORT_enuSetDirection+0x1e2>
    301a:	88 0f       	add	r24, r24
    301c:	99 1f       	adc	r25, r25
    301e:	0a 94       	dec	r0
    3020:	e2 f7       	brpl	.-8      	; 0x301a <PORT_enuSetDirection+0x1de>
    3022:	84 2b       	or	r24, r20
    3024:	8c 93       	st	X, r24
    3026:	38 c0       	rjmp	.+112    	; 0x3098 <PORT_enuSetDirection+0x25c>
				}
				break;

				case PORT_D:

					switch(Copy_u8PinDirection)
    3028:	8d 81       	ldd	r24, Y+5	; 0x05
    302a:	28 2f       	mov	r18, r24
    302c:	30 e0       	ldi	r19, 0x00	; 0
    302e:	3f 83       	std	Y+7, r19	; 0x07
    3030:	2e 83       	std	Y+6, r18	; 0x06
    3032:	8e 81       	ldd	r24, Y+6	; 0x06
    3034:	9f 81       	ldd	r25, Y+7	; 0x07
    3036:	86 30       	cpi	r24, 0x06	; 6
    3038:	91 05       	cpc	r25, r1
    303a:	31 f0       	breq	.+12     	; 0x3048 <PORT_enuSetDirection+0x20c>
    303c:	2e 81       	ldd	r18, Y+6	; 0x06
    303e:	3f 81       	ldd	r19, Y+7	; 0x07
    3040:	27 30       	cpi	r18, 0x07	; 7
    3042:	31 05       	cpc	r19, r1
    3044:	b1 f0       	breq	.+44     	; 0x3072 <PORT_enuSetDirection+0x236>
    3046:	28 c0       	rjmp	.+80     	; 0x3098 <PORT_enuSetDirection+0x25c>
					{
					case PORT_INPUT_Direction:
						CLEAR_BIT(DDRD,PinIndex);
    3048:	a1 e3       	ldi	r26, 0x31	; 49
    304a:	b0 e0       	ldi	r27, 0x00	; 0
    304c:	e1 e3       	ldi	r30, 0x31	; 49
    304e:	f0 e0       	ldi	r31, 0x00	; 0
    3050:	80 81       	ld	r24, Z
    3052:	48 2f       	mov	r20, r24
    3054:	89 81       	ldd	r24, Y+1	; 0x01
    3056:	28 2f       	mov	r18, r24
    3058:	30 e0       	ldi	r19, 0x00	; 0
    305a:	81 e0       	ldi	r24, 0x01	; 1
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	02 2e       	mov	r0, r18
    3060:	02 c0       	rjmp	.+4      	; 0x3066 <PORT_enuSetDirection+0x22a>
    3062:	88 0f       	add	r24, r24
    3064:	99 1f       	adc	r25, r25
    3066:	0a 94       	dec	r0
    3068:	e2 f7       	brpl	.-8      	; 0x3062 <PORT_enuSetDirection+0x226>
    306a:	80 95       	com	r24
    306c:	84 23       	and	r24, r20
    306e:	8c 93       	st	X, r24
    3070:	13 c0       	rjmp	.+38     	; 0x3098 <PORT_enuSetDirection+0x25c>
						break;
					case PORT_OUTPUT_Direction:
						SET_BIT(PORTD,PinIndex);
    3072:	a2 e3       	ldi	r26, 0x32	; 50
    3074:	b0 e0       	ldi	r27, 0x00	; 0
    3076:	e2 e3       	ldi	r30, 0x32	; 50
    3078:	f0 e0       	ldi	r31, 0x00	; 0
    307a:	80 81       	ld	r24, Z
    307c:	48 2f       	mov	r20, r24
    307e:	89 81       	ldd	r24, Y+1	; 0x01
    3080:	28 2f       	mov	r18, r24
    3082:	30 e0       	ldi	r19, 0x00	; 0
    3084:	81 e0       	ldi	r24, 0x01	; 1
    3086:	90 e0       	ldi	r25, 0x00	; 0
    3088:	02 2e       	mov	r0, r18
    308a:	02 c0       	rjmp	.+4      	; 0x3090 <PORT_enuSetDirection+0x254>
    308c:	88 0f       	add	r24, r24
    308e:	99 1f       	adc	r25, r25
    3090:	0a 94       	dec	r0
    3092:	e2 f7       	brpl	.-8      	; 0x308c <PORT_enuSetDirection+0x250>
    3094:	84 2b       	or	r24, r20
    3096:	8c 93       	st	X, r24
					}
					break;

	}

	return LOC_u8ErrorStatus;
    3098:	8b 81       	ldd	r24, Y+3	; 0x03
}
    309a:	2f 96       	adiw	r28, 0x0f	; 15
    309c:	0f b6       	in	r0, 0x3f	; 63
    309e:	f8 94       	cli
    30a0:	de bf       	out	0x3e, r29	; 62
    30a2:	0f be       	out	0x3f, r0	; 63
    30a4:	cd bf       	out	0x3d, r28	; 61
    30a6:	cf 91       	pop	r28
    30a8:	df 91       	pop	r29
    30aa:	08 95       	ret

000030ac <GIE_enuInit>:
#include "../../../Services/Lib/common_macros.h"
#include "../Includes/GIE_Cfg.h"
#include "../Includes/GIE_Prv.h"

void  GIE_enuInit(void)
{
    30ac:	df 93       	push	r29
    30ae:	cf 93       	push	r28
    30b0:	cd b7       	in	r28, 0x3d	; 61
    30b2:	de b7       	in	r29, 0x3e	; 62
#if(GIE_MODE==GIE_ENABLE)
	SET_BIT(SREG,GIE_BIT);
    30b4:	af e5       	ldi	r26, 0x5F	; 95
    30b6:	b0 e0       	ldi	r27, 0x00	; 0
    30b8:	ef e5       	ldi	r30, 0x5F	; 95
    30ba:	f0 e0       	ldi	r31, 0x00	; 0
    30bc:	80 81       	ld	r24, Z
    30be:	80 68       	ori	r24, 0x80	; 128
    30c0:	8c 93       	st	X, r24
#elif(GIE_MODE==GIE_DISABLE)
	CLEAR_BIT(SREG,GIE_BIT);
#endif
}
    30c2:	cf 91       	pop	r28
    30c4:	df 91       	pop	r29
    30c6:	08 95       	ret

000030c8 <GIE_enuSetResetGie>:



GIE_tenuErrorStatus GIE_enuSetResetGie(uint8 Copy_u8GieStatus)
{
    30c8:	df 93       	push	r29
    30ca:	cf 93       	push	r28
    30cc:	00 d0       	rcall	.+0      	; 0x30ce <GIE_enuSetResetGie+0x6>
    30ce:	00 d0       	rcall	.+0      	; 0x30d0 <GIE_enuSetResetGie+0x8>
    30d0:	cd b7       	in	r28, 0x3d	; 61
    30d2:	de b7       	in	r29, 0x3e	; 62
    30d4:	8a 83       	std	Y+2, r24	; 0x02
	uint8 ErrorStatus=GIE_enuOK;
    30d6:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8GieStatus)
    30d8:	8a 81       	ldd	r24, Y+2	; 0x02
    30da:	28 2f       	mov	r18, r24
    30dc:	30 e0       	ldi	r19, 0x00	; 0
    30de:	3c 83       	std	Y+4, r19	; 0x04
    30e0:	2b 83       	std	Y+3, r18	; 0x03
    30e2:	8b 81       	ldd	r24, Y+3	; 0x03
    30e4:	9c 81       	ldd	r25, Y+4	; 0x04
    30e6:	00 97       	sbiw	r24, 0x00	; 0
    30e8:	69 f0       	breq	.+26     	; 0x3104 <GIE_enuSetResetGie+0x3c>
    30ea:	2b 81       	ldd	r18, Y+3	; 0x03
    30ec:	3c 81       	ldd	r19, Y+4	; 0x04
    30ee:	21 30       	cpi	r18, 0x01	; 1
    30f0:	31 05       	cpc	r19, r1
    30f2:	81 f4       	brne	.+32     	; 0x3114 <GIE_enuSetResetGie+0x4c>
	{
	case GIE_ENABLE:
		SET_BIT(SREG,GIE_BIT);
    30f4:	af e5       	ldi	r26, 0x5F	; 95
    30f6:	b0 e0       	ldi	r27, 0x00	; 0
    30f8:	ef e5       	ldi	r30, 0x5F	; 95
    30fa:	f0 e0       	ldi	r31, 0x00	; 0
    30fc:	80 81       	ld	r24, Z
    30fe:	80 68       	ori	r24, 0x80	; 128
    3100:	8c 93       	st	X, r24
    3102:	0a c0       	rjmp	.+20     	; 0x3118 <GIE_enuSetResetGie+0x50>
		break;
	case GIE_DISABLE:
		CLEAR_BIT(SREG,GIE_BIT);
    3104:	af e5       	ldi	r26, 0x5F	; 95
    3106:	b0 e0       	ldi	r27, 0x00	; 0
    3108:	ef e5       	ldi	r30, 0x5F	; 95
    310a:	f0 e0       	ldi	r31, 0x00	; 0
    310c:	80 81       	ld	r24, Z
    310e:	8f 77       	andi	r24, 0x7F	; 127
    3110:	8c 93       	st	X, r24
    3112:	02 c0       	rjmp	.+4      	; 0x3118 <GIE_enuSetResetGie+0x50>
		break;
default:
	ErrorStatus=GIE_enuWrongStatus;
    3114:	81 e0       	ldi	r24, 0x01	; 1
    3116:	89 83       	std	Y+1, r24	; 0x01
	break;
	}
	return ErrorStatus;
    3118:	89 81       	ldd	r24, Y+1	; 0x01
}
    311a:	0f 90       	pop	r0
    311c:	0f 90       	pop	r0
    311e:	0f 90       	pop	r0
    3120:	0f 90       	pop	r0
    3122:	cf 91       	pop	r28
    3124:	df 91       	pop	r29
    3126:	08 95       	ret

00003128 <Dio_enuWriteChannel>:
 * Parameters(IN)  : 1.Copy_u8ChannelId -->channel number
 *                   2.Copy_u8Level     --> High or LOW
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuWriteChannel(DioPinType Copy_u8ChannelId,DioPinType Copy_u8Level)
{
    3128:	df 93       	push	r29
    312a:	cf 93       	push	r28
    312c:	cd b7       	in	r28, 0x3d	; 61
    312e:	de b7       	in	r29, 0x3e	; 62
    3130:	27 97       	sbiw	r28, 0x07	; 7
    3132:	0f b6       	in	r0, 0x3f	; 63
    3134:	f8 94       	cli
    3136:	de bf       	out	0x3e, r29	; 62
    3138:	0f be       	out	0x3f, r0	; 63
    313a:	cd bf       	out	0x3d, r28	; 61
    313c:	8c 83       	std	Y+4, r24	; 0x04
    313e:	6d 83       	std	Y+5, r22	; 0x05
	uint8 ErrorStatus=Dio_enuOK;
    3140:	1b 82       	std	Y+3, r1	; 0x03
	uint8 PortIndex=0,PinIndex=0;
    3142:	1a 82       	std	Y+2, r1	; 0x02
    3144:	19 82       	std	Y+1, r1	; 0x01
	PortIndex=(Copy_u8ChannelId/8);
    3146:	8c 81       	ldd	r24, Y+4	; 0x04
    3148:	86 95       	lsr	r24
    314a:	86 95       	lsr	r24
    314c:	86 95       	lsr	r24
    314e:	8a 83       	std	Y+2, r24	; 0x02
	PinIndex=Copy_u8ChannelId%8;
    3150:	8c 81       	ldd	r24, Y+4	; 0x04
    3152:	87 70       	andi	r24, 0x07	; 7
    3154:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8ChannelId>DIO_NUMBER_OF_PINS)
    3156:	8c 81       	ldd	r24, Y+4	; 0x04
    3158:	81 32       	cpi	r24, 0x21	; 33
    315a:	10 f0       	brcs	.+4      	; 0x3160 <Dio_enuWriteChannel+0x38>
	{
		ErrorStatus=Dio_enuPinError;
    315c:	81 e0       	ldi	r24, 0x01	; 1
    315e:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(PortIndex>DIO_NUMBER_OF_PORTS)
    3160:	8a 81       	ldd	r24, Y+2	; 0x02
    3162:	85 30       	cpi	r24, 0x05	; 5
    3164:	10 f0       	brcs	.+4      	; 0x316a <Dio_enuWriteChannel+0x42>
	{
		ErrorStatus=Dio_enuPortError;
    3166:	82 e0       	ldi	r24, 0x02	; 2
    3168:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(Copy_u8Level !=DIO_LOGIC_HIGH ||Copy_u8Level !=DIO_LOGIC_LOW )
    316a:	8d 81       	ldd	r24, Y+5	; 0x05
    316c:	81 30       	cpi	r24, 0x01	; 1
    316e:	19 f4       	brne	.+6      	; 0x3176 <Dio_enuWriteChannel+0x4e>
    3170:	8d 81       	ldd	r24, Y+5	; 0x05
    3172:	88 23       	and	r24, r24
    3174:	11 f0       	breq	.+4      	; 0x317a <Dio_enuWriteChannel+0x52>
	{
		ErrorStatus=DIO_enuDirectionError;
    3176:	83 e0       	ldi	r24, 0x03	; 3
    3178:	8b 83       	std	Y+3, r24	; 0x03
	}
	switch(PortIndex)
    317a:	8a 81       	ldd	r24, Y+2	; 0x02
    317c:	28 2f       	mov	r18, r24
    317e:	30 e0       	ldi	r19, 0x00	; 0
    3180:	3f 83       	std	Y+7, r19	; 0x07
    3182:	2e 83       	std	Y+6, r18	; 0x06
    3184:	4e 81       	ldd	r20, Y+6	; 0x06
    3186:	5f 81       	ldd	r21, Y+7	; 0x07
    3188:	41 30       	cpi	r20, 0x01	; 1
    318a:	51 05       	cpc	r21, r1
    318c:	09 f4       	brne	.+2      	; 0x3190 <Dio_enuWriteChannel+0x68>
    318e:	69 c0       	rjmp	.+210    	; 0x3262 <Dio_enuWriteChannel+0x13a>
    3190:	8e 81       	ldd	r24, Y+6	; 0x06
    3192:	9f 81       	ldd	r25, Y+7	; 0x07
    3194:	82 30       	cpi	r24, 0x02	; 2
    3196:	91 05       	cpc	r25, r1
    3198:	34 f4       	brge	.+12     	; 0x31a6 <Dio_enuWriteChannel+0x7e>
    319a:	2e 81       	ldd	r18, Y+6	; 0x06
    319c:	3f 81       	ldd	r19, Y+7	; 0x07
    319e:	21 15       	cp	r18, r1
    31a0:	31 05       	cpc	r19, r1
    31a2:	71 f0       	breq	.+28     	; 0x31c0 <Dio_enuWriteChannel+0x98>
    31a4:	4f c1       	rjmp	.+670    	; 0x3444 <Dio_enuWriteChannel+0x31c>
    31a6:	4e 81       	ldd	r20, Y+6	; 0x06
    31a8:	5f 81       	ldd	r21, Y+7	; 0x07
    31aa:	42 30       	cpi	r20, 0x02	; 2
    31ac:	51 05       	cpc	r21, r1
    31ae:	09 f4       	brne	.+2      	; 0x31b2 <Dio_enuWriteChannel+0x8a>
    31b0:	a9 c0       	rjmp	.+338    	; 0x3304 <Dio_enuWriteChannel+0x1dc>
    31b2:	8e 81       	ldd	r24, Y+6	; 0x06
    31b4:	9f 81       	ldd	r25, Y+7	; 0x07
    31b6:	83 30       	cpi	r24, 0x03	; 3
    31b8:	91 05       	cpc	r25, r1
    31ba:	09 f4       	brne	.+2      	; 0x31be <Dio_enuWriteChannel+0x96>
    31bc:	f4 c0       	rjmp	.+488    	; 0x33a6 <Dio_enuWriteChannel+0x27e>
    31be:	42 c1       	rjmp	.+644    	; 0x3444 <Dio_enuWriteChannel+0x31c>
	{
	case Dio_PORTA:
		if(GET_BIT(DDRA,PinIndex)==0)
    31c0:	ea e3       	ldi	r30, 0x3A	; 58
    31c2:	f0 e0       	ldi	r31, 0x00	; 0
    31c4:	80 81       	ld	r24, Z
    31c6:	48 2f       	mov	r20, r24
    31c8:	50 e0       	ldi	r21, 0x00	; 0
    31ca:	89 81       	ldd	r24, Y+1	; 0x01
    31cc:	28 2f       	mov	r18, r24
    31ce:	30 e0       	ldi	r19, 0x00	; 0
    31d0:	81 e0       	ldi	r24, 0x01	; 1
    31d2:	90 e0       	ldi	r25, 0x00	; 0
    31d4:	02 c0       	rjmp	.+4      	; 0x31da <Dio_enuWriteChannel+0xb2>
    31d6:	88 0f       	add	r24, r24
    31d8:	99 1f       	adc	r25, r25
    31da:	2a 95       	dec	r18
    31dc:	e2 f7       	brpl	.-8      	; 0x31d6 <Dio_enuWriteChannel+0xae>
    31de:	9a 01       	movw	r18, r20
    31e0:	28 23       	and	r18, r24
    31e2:	39 23       	and	r19, r25
    31e4:	89 81       	ldd	r24, Y+1	; 0x01
    31e6:	88 2f       	mov	r24, r24
    31e8:	90 e0       	ldi	r25, 0x00	; 0
    31ea:	a9 01       	movw	r20, r18
    31ec:	02 c0       	rjmp	.+4      	; 0x31f2 <Dio_enuWriteChannel+0xca>
    31ee:	55 95       	asr	r21
    31f0:	47 95       	ror	r20
    31f2:	8a 95       	dec	r24
    31f4:	e2 f7       	brpl	.-8      	; 0x31ee <Dio_enuWriteChannel+0xc6>
    31f6:	ca 01       	movw	r24, r20
    31f8:	00 97       	sbiw	r24, 0x00	; 0
    31fa:	19 f4       	brne	.+6      	; 0x3202 <Dio_enuWriteChannel+0xda>
			ErrorStatus=DIO_enuDirectionError;
    31fc:	83 e0       	ldi	r24, 0x03	; 3
    31fe:	8b 83       	std	Y+3, r24	; 0x03
    3200:	21 c1       	rjmp	.+578    	; 0x3444 <Dio_enuWriteChannel+0x31c>

		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    3202:	8d 81       	ldd	r24, Y+5	; 0x05
    3204:	81 30       	cpi	r24, 0x01	; 1
    3206:	a1 f4       	brne	.+40     	; 0x3230 <Dio_enuWriteChannel+0x108>
			SET_BIT(PORTA,PinIndex);
    3208:	ab e3       	ldi	r26, 0x3B	; 59
    320a:	b0 e0       	ldi	r27, 0x00	; 0
    320c:	eb e3       	ldi	r30, 0x3B	; 59
    320e:	f0 e0       	ldi	r31, 0x00	; 0
    3210:	80 81       	ld	r24, Z
    3212:	48 2f       	mov	r20, r24
    3214:	89 81       	ldd	r24, Y+1	; 0x01
    3216:	28 2f       	mov	r18, r24
    3218:	30 e0       	ldi	r19, 0x00	; 0
    321a:	81 e0       	ldi	r24, 0x01	; 1
    321c:	90 e0       	ldi	r25, 0x00	; 0
    321e:	02 2e       	mov	r0, r18
    3220:	02 c0       	rjmp	.+4      	; 0x3226 <Dio_enuWriteChannel+0xfe>
    3222:	88 0f       	add	r24, r24
    3224:	99 1f       	adc	r25, r25
    3226:	0a 94       	dec	r0
    3228:	e2 f7       	brpl	.-8      	; 0x3222 <Dio_enuWriteChannel+0xfa>
    322a:	84 2b       	or	r24, r20
    322c:	8c 93       	st	X, r24
    322e:	0a c1       	rjmp	.+532    	; 0x3444 <Dio_enuWriteChannel+0x31c>

		else if(Copy_u8Level==DIO_LOGIC_LOW)
    3230:	8d 81       	ldd	r24, Y+5	; 0x05
    3232:	88 23       	and	r24, r24
    3234:	09 f0       	breq	.+2      	; 0x3238 <Dio_enuWriteChannel+0x110>
    3236:	06 c1       	rjmp	.+524    	; 0x3444 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTA,PinIndex);
    3238:	ab e3       	ldi	r26, 0x3B	; 59
    323a:	b0 e0       	ldi	r27, 0x00	; 0
    323c:	eb e3       	ldi	r30, 0x3B	; 59
    323e:	f0 e0       	ldi	r31, 0x00	; 0
    3240:	80 81       	ld	r24, Z
    3242:	48 2f       	mov	r20, r24
    3244:	89 81       	ldd	r24, Y+1	; 0x01
    3246:	28 2f       	mov	r18, r24
    3248:	30 e0       	ldi	r19, 0x00	; 0
    324a:	81 e0       	ldi	r24, 0x01	; 1
    324c:	90 e0       	ldi	r25, 0x00	; 0
    324e:	02 2e       	mov	r0, r18
    3250:	02 c0       	rjmp	.+4      	; 0x3256 <Dio_enuWriteChannel+0x12e>
    3252:	88 0f       	add	r24, r24
    3254:	99 1f       	adc	r25, r25
    3256:	0a 94       	dec	r0
    3258:	e2 f7       	brpl	.-8      	; 0x3252 <Dio_enuWriteChannel+0x12a>
    325a:	80 95       	com	r24
    325c:	84 23       	and	r24, r20
    325e:	8c 93       	st	X, r24
    3260:	f1 c0       	rjmp	.+482    	; 0x3444 <Dio_enuWriteChannel+0x31c>
		break;
	case Dio_PORTB:
		 if(GET_BIT(DDRB,PinIndex)==0)
    3262:	e7 e3       	ldi	r30, 0x37	; 55
    3264:	f0 e0       	ldi	r31, 0x00	; 0
    3266:	80 81       	ld	r24, Z
    3268:	48 2f       	mov	r20, r24
    326a:	50 e0       	ldi	r21, 0x00	; 0
    326c:	89 81       	ldd	r24, Y+1	; 0x01
    326e:	28 2f       	mov	r18, r24
    3270:	30 e0       	ldi	r19, 0x00	; 0
    3272:	81 e0       	ldi	r24, 0x01	; 1
    3274:	90 e0       	ldi	r25, 0x00	; 0
    3276:	02 c0       	rjmp	.+4      	; 0x327c <Dio_enuWriteChannel+0x154>
    3278:	88 0f       	add	r24, r24
    327a:	99 1f       	adc	r25, r25
    327c:	2a 95       	dec	r18
    327e:	e2 f7       	brpl	.-8      	; 0x3278 <Dio_enuWriteChannel+0x150>
    3280:	9a 01       	movw	r18, r20
    3282:	28 23       	and	r18, r24
    3284:	39 23       	and	r19, r25
    3286:	89 81       	ldd	r24, Y+1	; 0x01
    3288:	88 2f       	mov	r24, r24
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	a9 01       	movw	r20, r18
    328e:	02 c0       	rjmp	.+4      	; 0x3294 <Dio_enuWriteChannel+0x16c>
    3290:	55 95       	asr	r21
    3292:	47 95       	ror	r20
    3294:	8a 95       	dec	r24
    3296:	e2 f7       	brpl	.-8      	; 0x3290 <Dio_enuWriteChannel+0x168>
    3298:	ca 01       	movw	r24, r20
    329a:	00 97       	sbiw	r24, 0x00	; 0
    329c:	19 f4       	brne	.+6      	; 0x32a4 <Dio_enuWriteChannel+0x17c>
			ErrorStatus=DIO_enuDirectionError;
    329e:	83 e0       	ldi	r24, 0x03	; 3
    32a0:	8b 83       	std	Y+3, r24	; 0x03
    32a2:	d0 c0       	rjmp	.+416    	; 0x3444 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    32a4:	8d 81       	ldd	r24, Y+5	; 0x05
    32a6:	81 30       	cpi	r24, 0x01	; 1
    32a8:	a1 f4       	brne	.+40     	; 0x32d2 <Dio_enuWriteChannel+0x1aa>
			SET_BIT(PORTB,PinIndex);
    32aa:	a8 e3       	ldi	r26, 0x38	; 56
    32ac:	b0 e0       	ldi	r27, 0x00	; 0
    32ae:	e8 e3       	ldi	r30, 0x38	; 56
    32b0:	f0 e0       	ldi	r31, 0x00	; 0
    32b2:	80 81       	ld	r24, Z
    32b4:	48 2f       	mov	r20, r24
    32b6:	89 81       	ldd	r24, Y+1	; 0x01
    32b8:	28 2f       	mov	r18, r24
    32ba:	30 e0       	ldi	r19, 0x00	; 0
    32bc:	81 e0       	ldi	r24, 0x01	; 1
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	02 2e       	mov	r0, r18
    32c2:	02 c0       	rjmp	.+4      	; 0x32c8 <Dio_enuWriteChannel+0x1a0>
    32c4:	88 0f       	add	r24, r24
    32c6:	99 1f       	adc	r25, r25
    32c8:	0a 94       	dec	r0
    32ca:	e2 f7       	brpl	.-8      	; 0x32c4 <Dio_enuWriteChannel+0x19c>
    32cc:	84 2b       	or	r24, r20
    32ce:	8c 93       	st	X, r24
    32d0:	b9 c0       	rjmp	.+370    	; 0x3444 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_LOW)
    32d2:	8d 81       	ldd	r24, Y+5	; 0x05
    32d4:	88 23       	and	r24, r24
    32d6:	09 f0       	breq	.+2      	; 0x32da <Dio_enuWriteChannel+0x1b2>
    32d8:	b5 c0       	rjmp	.+362    	; 0x3444 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTB,PinIndex);
    32da:	a8 e3       	ldi	r26, 0x38	; 56
    32dc:	b0 e0       	ldi	r27, 0x00	; 0
    32de:	e8 e3       	ldi	r30, 0x38	; 56
    32e0:	f0 e0       	ldi	r31, 0x00	; 0
    32e2:	80 81       	ld	r24, Z
    32e4:	48 2f       	mov	r20, r24
    32e6:	89 81       	ldd	r24, Y+1	; 0x01
    32e8:	28 2f       	mov	r18, r24
    32ea:	30 e0       	ldi	r19, 0x00	; 0
    32ec:	81 e0       	ldi	r24, 0x01	; 1
    32ee:	90 e0       	ldi	r25, 0x00	; 0
    32f0:	02 2e       	mov	r0, r18
    32f2:	02 c0       	rjmp	.+4      	; 0x32f8 <Dio_enuWriteChannel+0x1d0>
    32f4:	88 0f       	add	r24, r24
    32f6:	99 1f       	adc	r25, r25
    32f8:	0a 94       	dec	r0
    32fa:	e2 f7       	brpl	.-8      	; 0x32f4 <Dio_enuWriteChannel+0x1cc>
    32fc:	80 95       	com	r24
    32fe:	84 23       	and	r24, r20
    3300:	8c 93       	st	X, r24
    3302:	a0 c0       	rjmp	.+320    	; 0x3444 <Dio_enuWriteChannel+0x31c>
		break;
	case Dio_PORTC:
		if(GET_BIT(DDRC,PinIndex)==0)
    3304:	e4 e3       	ldi	r30, 0x34	; 52
    3306:	f0 e0       	ldi	r31, 0x00	; 0
    3308:	80 81       	ld	r24, Z
    330a:	48 2f       	mov	r20, r24
    330c:	50 e0       	ldi	r21, 0x00	; 0
    330e:	89 81       	ldd	r24, Y+1	; 0x01
    3310:	28 2f       	mov	r18, r24
    3312:	30 e0       	ldi	r19, 0x00	; 0
    3314:	81 e0       	ldi	r24, 0x01	; 1
    3316:	90 e0       	ldi	r25, 0x00	; 0
    3318:	02 c0       	rjmp	.+4      	; 0x331e <Dio_enuWriteChannel+0x1f6>
    331a:	88 0f       	add	r24, r24
    331c:	99 1f       	adc	r25, r25
    331e:	2a 95       	dec	r18
    3320:	e2 f7       	brpl	.-8      	; 0x331a <Dio_enuWriteChannel+0x1f2>
    3322:	9a 01       	movw	r18, r20
    3324:	28 23       	and	r18, r24
    3326:	39 23       	and	r19, r25
    3328:	89 81       	ldd	r24, Y+1	; 0x01
    332a:	88 2f       	mov	r24, r24
    332c:	90 e0       	ldi	r25, 0x00	; 0
    332e:	a9 01       	movw	r20, r18
    3330:	02 c0       	rjmp	.+4      	; 0x3336 <Dio_enuWriteChannel+0x20e>
    3332:	55 95       	asr	r21
    3334:	47 95       	ror	r20
    3336:	8a 95       	dec	r24
    3338:	e2 f7       	brpl	.-8      	; 0x3332 <Dio_enuWriteChannel+0x20a>
    333a:	ca 01       	movw	r24, r20
    333c:	00 97       	sbiw	r24, 0x00	; 0
    333e:	19 f4       	brne	.+6      	; 0x3346 <Dio_enuWriteChannel+0x21e>
			ErrorStatus=DIO_enuDirectionError;
    3340:	83 e0       	ldi	r24, 0x03	; 3
    3342:	8b 83       	std	Y+3, r24	; 0x03
    3344:	7f c0       	rjmp	.+254    	; 0x3444 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    3346:	8d 81       	ldd	r24, Y+5	; 0x05
    3348:	81 30       	cpi	r24, 0x01	; 1
    334a:	a1 f4       	brne	.+40     	; 0x3374 <Dio_enuWriteChannel+0x24c>
			SET_BIT(PORTC,PinIndex);
    334c:	a5 e3       	ldi	r26, 0x35	; 53
    334e:	b0 e0       	ldi	r27, 0x00	; 0
    3350:	e5 e3       	ldi	r30, 0x35	; 53
    3352:	f0 e0       	ldi	r31, 0x00	; 0
    3354:	80 81       	ld	r24, Z
    3356:	48 2f       	mov	r20, r24
    3358:	89 81       	ldd	r24, Y+1	; 0x01
    335a:	28 2f       	mov	r18, r24
    335c:	30 e0       	ldi	r19, 0x00	; 0
    335e:	81 e0       	ldi	r24, 0x01	; 1
    3360:	90 e0       	ldi	r25, 0x00	; 0
    3362:	02 2e       	mov	r0, r18
    3364:	02 c0       	rjmp	.+4      	; 0x336a <Dio_enuWriteChannel+0x242>
    3366:	88 0f       	add	r24, r24
    3368:	99 1f       	adc	r25, r25
    336a:	0a 94       	dec	r0
    336c:	e2 f7       	brpl	.-8      	; 0x3366 <Dio_enuWriteChannel+0x23e>
    336e:	84 2b       	or	r24, r20
    3370:	8c 93       	st	X, r24
    3372:	68 c0       	rjmp	.+208    	; 0x3444 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_LOW)
    3374:	8d 81       	ldd	r24, Y+5	; 0x05
    3376:	88 23       	and	r24, r24
    3378:	09 f0       	breq	.+2      	; 0x337c <Dio_enuWriteChannel+0x254>
    337a:	64 c0       	rjmp	.+200    	; 0x3444 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTC,PinIndex);
    337c:	a5 e3       	ldi	r26, 0x35	; 53
    337e:	b0 e0       	ldi	r27, 0x00	; 0
    3380:	e5 e3       	ldi	r30, 0x35	; 53
    3382:	f0 e0       	ldi	r31, 0x00	; 0
    3384:	80 81       	ld	r24, Z
    3386:	48 2f       	mov	r20, r24
    3388:	89 81       	ldd	r24, Y+1	; 0x01
    338a:	28 2f       	mov	r18, r24
    338c:	30 e0       	ldi	r19, 0x00	; 0
    338e:	81 e0       	ldi	r24, 0x01	; 1
    3390:	90 e0       	ldi	r25, 0x00	; 0
    3392:	02 2e       	mov	r0, r18
    3394:	02 c0       	rjmp	.+4      	; 0x339a <Dio_enuWriteChannel+0x272>
    3396:	88 0f       	add	r24, r24
    3398:	99 1f       	adc	r25, r25
    339a:	0a 94       	dec	r0
    339c:	e2 f7       	brpl	.-8      	; 0x3396 <Dio_enuWriteChannel+0x26e>
    339e:	80 95       	com	r24
    33a0:	84 23       	and	r24, r20
    33a2:	8c 93       	st	X, r24
    33a4:	4f c0       	rjmp	.+158    	; 0x3444 <Dio_enuWriteChannel+0x31c>
		break;
	case Dio_PORTD:
		if(GET_BIT(DDRD,PinIndex)==0)
    33a6:	e1 e3       	ldi	r30, 0x31	; 49
    33a8:	f0 e0       	ldi	r31, 0x00	; 0
    33aa:	80 81       	ld	r24, Z
    33ac:	48 2f       	mov	r20, r24
    33ae:	50 e0       	ldi	r21, 0x00	; 0
    33b0:	89 81       	ldd	r24, Y+1	; 0x01
    33b2:	28 2f       	mov	r18, r24
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	81 e0       	ldi	r24, 0x01	; 1
    33b8:	90 e0       	ldi	r25, 0x00	; 0
    33ba:	02 c0       	rjmp	.+4      	; 0x33c0 <Dio_enuWriteChannel+0x298>
    33bc:	88 0f       	add	r24, r24
    33be:	99 1f       	adc	r25, r25
    33c0:	2a 95       	dec	r18
    33c2:	e2 f7       	brpl	.-8      	; 0x33bc <Dio_enuWriteChannel+0x294>
    33c4:	9a 01       	movw	r18, r20
    33c6:	28 23       	and	r18, r24
    33c8:	39 23       	and	r19, r25
    33ca:	89 81       	ldd	r24, Y+1	; 0x01
    33cc:	88 2f       	mov	r24, r24
    33ce:	90 e0       	ldi	r25, 0x00	; 0
    33d0:	a9 01       	movw	r20, r18
    33d2:	02 c0       	rjmp	.+4      	; 0x33d8 <Dio_enuWriteChannel+0x2b0>
    33d4:	55 95       	asr	r21
    33d6:	47 95       	ror	r20
    33d8:	8a 95       	dec	r24
    33da:	e2 f7       	brpl	.-8      	; 0x33d4 <Dio_enuWriteChannel+0x2ac>
    33dc:	ca 01       	movw	r24, r20
    33de:	00 97       	sbiw	r24, 0x00	; 0
    33e0:	19 f4       	brne	.+6      	; 0x33e8 <Dio_enuWriteChannel+0x2c0>
			ErrorStatus=DIO_enuDirectionError;
    33e2:	83 e0       	ldi	r24, 0x03	; 3
    33e4:	8b 83       	std	Y+3, r24	; 0x03
    33e6:	2e c0       	rjmp	.+92     	; 0x3444 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_HIGH)
    33e8:	8d 81       	ldd	r24, Y+5	; 0x05
    33ea:	81 30       	cpi	r24, 0x01	; 1
    33ec:	a1 f4       	brne	.+40     	; 0x3416 <Dio_enuWriteChannel+0x2ee>
			SET_BIT(PORTD,PinIndex);
    33ee:	a2 e3       	ldi	r26, 0x32	; 50
    33f0:	b0 e0       	ldi	r27, 0x00	; 0
    33f2:	e2 e3       	ldi	r30, 0x32	; 50
    33f4:	f0 e0       	ldi	r31, 0x00	; 0
    33f6:	80 81       	ld	r24, Z
    33f8:	48 2f       	mov	r20, r24
    33fa:	89 81       	ldd	r24, Y+1	; 0x01
    33fc:	28 2f       	mov	r18, r24
    33fe:	30 e0       	ldi	r19, 0x00	; 0
    3400:	81 e0       	ldi	r24, 0x01	; 1
    3402:	90 e0       	ldi	r25, 0x00	; 0
    3404:	02 2e       	mov	r0, r18
    3406:	02 c0       	rjmp	.+4      	; 0x340c <Dio_enuWriteChannel+0x2e4>
    3408:	88 0f       	add	r24, r24
    340a:	99 1f       	adc	r25, r25
    340c:	0a 94       	dec	r0
    340e:	e2 f7       	brpl	.-8      	; 0x3408 <Dio_enuWriteChannel+0x2e0>
    3410:	84 2b       	or	r24, r20
    3412:	8c 93       	st	X, r24
    3414:	17 c0       	rjmp	.+46     	; 0x3444 <Dio_enuWriteChannel+0x31c>
		else if(Copy_u8Level==DIO_LOGIC_LOW)
    3416:	8d 81       	ldd	r24, Y+5	; 0x05
    3418:	88 23       	and	r24, r24
    341a:	a1 f4       	brne	.+40     	; 0x3444 <Dio_enuWriteChannel+0x31c>
			CLEAR_BIT(PORTD,PinIndex);
    341c:	a2 e3       	ldi	r26, 0x32	; 50
    341e:	b0 e0       	ldi	r27, 0x00	; 0
    3420:	e2 e3       	ldi	r30, 0x32	; 50
    3422:	f0 e0       	ldi	r31, 0x00	; 0
    3424:	80 81       	ld	r24, Z
    3426:	48 2f       	mov	r20, r24
    3428:	89 81       	ldd	r24, Y+1	; 0x01
    342a:	28 2f       	mov	r18, r24
    342c:	30 e0       	ldi	r19, 0x00	; 0
    342e:	81 e0       	ldi	r24, 0x01	; 1
    3430:	90 e0       	ldi	r25, 0x00	; 0
    3432:	02 2e       	mov	r0, r18
    3434:	02 c0       	rjmp	.+4      	; 0x343a <Dio_enuWriteChannel+0x312>
    3436:	88 0f       	add	r24, r24
    3438:	99 1f       	adc	r25, r25
    343a:	0a 94       	dec	r0
    343c:	e2 f7       	brpl	.-8      	; 0x3436 <Dio_enuWriteChannel+0x30e>
    343e:	80 95       	com	r24
    3440:	84 23       	and	r24, r20
    3442:	8c 93       	st	X, r24
		break;
	}
	return ErrorStatus;
    3444:	8b 81       	ldd	r24, Y+3	; 0x03
}
    3446:	27 96       	adiw	r28, 0x07	; 7
    3448:	0f b6       	in	r0, 0x3f	; 63
    344a:	f8 94       	cli
    344c:	de bf       	out	0x3e, r29	; 62
    344e:	0f be       	out	0x3f, r0	; 63
    3450:	cd bf       	out	0x3d, r28	; 61
    3452:	cf 91       	pop	r28
    3454:	df 91       	pop	r29
    3456:	08 95       	ret

00003458 <Dio_enuReadChannel>:
 * Parameters(IN)  : 1.Copy_u8ChannelId        -->channel number
 *                   2.Add_pu8ChannelLevel     --> pointer to address of value carry
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuReadChannel(DioPinType Copy_u8ChannelId,pu8 Add_pu8ChannelLevel)
{
    3458:	df 93       	push	r29
    345a:	cf 93       	push	r28
    345c:	cd b7       	in	r28, 0x3d	; 61
    345e:	de b7       	in	r29, 0x3e	; 62
    3460:	28 97       	sbiw	r28, 0x08	; 8
    3462:	0f b6       	in	r0, 0x3f	; 63
    3464:	f8 94       	cli
    3466:	de bf       	out	0x3e, r29	; 62
    3468:	0f be       	out	0x3f, r0	; 63
    346a:	cd bf       	out	0x3d, r28	; 61
    346c:	8c 83       	std	Y+4, r24	; 0x04
    346e:	7e 83       	std	Y+6, r23	; 0x06
    3470:	6d 83       	std	Y+5, r22	; 0x05
	uint8 ErrorStatus=Dio_enuOK;
    3472:	1b 82       	std	Y+3, r1	; 0x03
		uint8 PortIndex=0,PinIndex=0;
    3474:	1a 82       	std	Y+2, r1	; 0x02
    3476:	19 82       	std	Y+1, r1	; 0x01
		PortIndex=(Copy_u8ChannelId/8);
    3478:	8c 81       	ldd	r24, Y+4	; 0x04
    347a:	86 95       	lsr	r24
    347c:	86 95       	lsr	r24
    347e:	86 95       	lsr	r24
    3480:	8a 83       	std	Y+2, r24	; 0x02
		PinIndex=Copy_u8ChannelId%8;
    3482:	8c 81       	ldd	r24, Y+4	; 0x04
    3484:	87 70       	andi	r24, 0x07	; 7
    3486:	89 83       	std	Y+1, r24	; 0x01
		if(Copy_u8ChannelId>DIO_NUMBER_OF_PINS)
    3488:	8c 81       	ldd	r24, Y+4	; 0x04
    348a:	81 32       	cpi	r24, 0x21	; 33
    348c:	10 f0       	brcs	.+4      	; 0x3492 <Dio_enuReadChannel+0x3a>
		{
			ErrorStatus=Dio_enuPinError;
    348e:	81 e0       	ldi	r24, 0x01	; 1
    3490:	8b 83       	std	Y+3, r24	; 0x03
		}
		if(PortIndex>DIO_NUMBER_OF_PORTS)
    3492:	8a 81       	ldd	r24, Y+2	; 0x02
    3494:	85 30       	cpi	r24, 0x05	; 5
    3496:	10 f0       	brcs	.+4      	; 0x349c <Dio_enuReadChannel+0x44>
		{
			ErrorStatus=Dio_enuPortError;
    3498:	82 e0       	ldi	r24, 0x02	; 2
    349a:	8b 83       	std	Y+3, r24	; 0x03
		}
		if( Add_pu8ChannelLevel ==Null_ptr)
    349c:	8d 81       	ldd	r24, Y+5	; 0x05
    349e:	9e 81       	ldd	r25, Y+6	; 0x06
    34a0:	00 97       	sbiw	r24, 0x00	; 0
    34a2:	11 f4       	brne	.+4      	; 0x34a8 <Dio_enuReadChannel+0x50>
		{
			ErrorStatus=DIO_enuNullPtr;
    34a4:	84 e0       	ldi	r24, 0x04	; 4
    34a6:	8b 83       	std	Y+3, r24	; 0x03
		}
		switch(PortIndex)
    34a8:	8a 81       	ldd	r24, Y+2	; 0x02
    34aa:	28 2f       	mov	r18, r24
    34ac:	30 e0       	ldi	r19, 0x00	; 0
    34ae:	38 87       	std	Y+8, r19	; 0x08
    34b0:	2f 83       	std	Y+7, r18	; 0x07
    34b2:	4f 81       	ldd	r20, Y+7	; 0x07
    34b4:	58 85       	ldd	r21, Y+8	; 0x08
    34b6:	41 30       	cpi	r20, 0x01	; 1
    34b8:	51 05       	cpc	r21, r1
    34ba:	09 f4       	brne	.+2      	; 0x34be <Dio_enuReadChannel+0x66>
    34bc:	5a c0       	rjmp	.+180    	; 0x3572 <Dio_enuReadChannel+0x11a>
    34be:	8f 81       	ldd	r24, Y+7	; 0x07
    34c0:	98 85       	ldd	r25, Y+8	; 0x08
    34c2:	82 30       	cpi	r24, 0x02	; 2
    34c4:	91 05       	cpc	r25, r1
    34c6:	34 f4       	brge	.+12     	; 0x34d4 <Dio_enuReadChannel+0x7c>
    34c8:	2f 81       	ldd	r18, Y+7	; 0x07
    34ca:	38 85       	ldd	r19, Y+8	; 0x08
    34cc:	21 15       	cp	r18, r1
    34ce:	31 05       	cpc	r19, r1
    34d0:	71 f0       	breq	.+28     	; 0x34ee <Dio_enuReadChannel+0x96>
    34d2:	14 c1       	rjmp	.+552    	; 0x36fc <Dio_enuReadChannel+0x2a4>
    34d4:	4f 81       	ldd	r20, Y+7	; 0x07
    34d6:	58 85       	ldd	r21, Y+8	; 0x08
    34d8:	42 30       	cpi	r20, 0x02	; 2
    34da:	51 05       	cpc	r21, r1
    34dc:	09 f4       	brne	.+2      	; 0x34e0 <Dio_enuReadChannel+0x88>
    34de:	8b c0       	rjmp	.+278    	; 0x35f6 <Dio_enuReadChannel+0x19e>
    34e0:	8f 81       	ldd	r24, Y+7	; 0x07
    34e2:	98 85       	ldd	r25, Y+8	; 0x08
    34e4:	83 30       	cpi	r24, 0x03	; 3
    34e6:	91 05       	cpc	r25, r1
    34e8:	09 f4       	brne	.+2      	; 0x34ec <Dio_enuReadChannel+0x94>
    34ea:	c7 c0       	rjmp	.+398    	; 0x367a <Dio_enuReadChannel+0x222>
    34ec:	07 c1       	rjmp	.+526    	; 0x36fc <Dio_enuReadChannel+0x2a4>
		{
		case Dio_PORTA:
			if(GET_BIT(DDRA,PinIndex)==1)
    34ee:	ea e3       	ldi	r30, 0x3A	; 58
    34f0:	f0 e0       	ldi	r31, 0x00	; 0
    34f2:	80 81       	ld	r24, Z
    34f4:	48 2f       	mov	r20, r24
    34f6:	50 e0       	ldi	r21, 0x00	; 0
    34f8:	89 81       	ldd	r24, Y+1	; 0x01
    34fa:	28 2f       	mov	r18, r24
    34fc:	30 e0       	ldi	r19, 0x00	; 0
    34fe:	81 e0       	ldi	r24, 0x01	; 1
    3500:	90 e0       	ldi	r25, 0x00	; 0
    3502:	02 c0       	rjmp	.+4      	; 0x3508 <Dio_enuReadChannel+0xb0>
    3504:	88 0f       	add	r24, r24
    3506:	99 1f       	adc	r25, r25
    3508:	2a 95       	dec	r18
    350a:	e2 f7       	brpl	.-8      	; 0x3504 <Dio_enuReadChannel+0xac>
    350c:	9a 01       	movw	r18, r20
    350e:	28 23       	and	r18, r24
    3510:	39 23       	and	r19, r25
    3512:	89 81       	ldd	r24, Y+1	; 0x01
    3514:	88 2f       	mov	r24, r24
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	a9 01       	movw	r20, r18
    351a:	02 c0       	rjmp	.+4      	; 0x3520 <Dio_enuReadChannel+0xc8>
    351c:	55 95       	asr	r21
    351e:	47 95       	ror	r20
    3520:	8a 95       	dec	r24
    3522:	e2 f7       	brpl	.-8      	; 0x351c <Dio_enuReadChannel+0xc4>
    3524:	ca 01       	movw	r24, r20
    3526:	81 30       	cpi	r24, 0x01	; 1
    3528:	91 05       	cpc	r25, r1
    352a:	19 f4       	brne	.+6      	; 0x3532 <Dio_enuReadChannel+0xda>
				ErrorStatus=DIO_enuDirectionError;
    352c:	83 e0       	ldi	r24, 0x03	; 3
    352e:	8b 83       	std	Y+3, r24	; 0x03
    3530:	e5 c0       	rjmp	.+458    	; 0x36fc <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PINA,PinIndex);
    3532:	e9 e3       	ldi	r30, 0x39	; 57
    3534:	f0 e0       	ldi	r31, 0x00	; 0
    3536:	80 81       	ld	r24, Z
    3538:	48 2f       	mov	r20, r24
    353a:	50 e0       	ldi	r21, 0x00	; 0
    353c:	89 81       	ldd	r24, Y+1	; 0x01
    353e:	28 2f       	mov	r18, r24
    3540:	30 e0       	ldi	r19, 0x00	; 0
    3542:	81 e0       	ldi	r24, 0x01	; 1
    3544:	90 e0       	ldi	r25, 0x00	; 0
    3546:	02 c0       	rjmp	.+4      	; 0x354c <Dio_enuReadChannel+0xf4>
    3548:	88 0f       	add	r24, r24
    354a:	99 1f       	adc	r25, r25
    354c:	2a 95       	dec	r18
    354e:	e2 f7       	brpl	.-8      	; 0x3548 <Dio_enuReadChannel+0xf0>
    3550:	9a 01       	movw	r18, r20
    3552:	28 23       	and	r18, r24
    3554:	39 23       	and	r19, r25
    3556:	89 81       	ldd	r24, Y+1	; 0x01
    3558:	88 2f       	mov	r24, r24
    355a:	90 e0       	ldi	r25, 0x00	; 0
    355c:	a9 01       	movw	r20, r18
    355e:	02 c0       	rjmp	.+4      	; 0x3564 <Dio_enuReadChannel+0x10c>
    3560:	55 95       	asr	r21
    3562:	47 95       	ror	r20
    3564:	8a 95       	dec	r24
    3566:	e2 f7       	brpl	.-8      	; 0x3560 <Dio_enuReadChannel+0x108>
    3568:	ca 01       	movw	r24, r20
    356a:	ed 81       	ldd	r30, Y+5	; 0x05
    356c:	fe 81       	ldd	r31, Y+6	; 0x06
    356e:	80 83       	st	Z, r24
    3570:	c5 c0       	rjmp	.+394    	; 0x36fc <Dio_enuReadChannel+0x2a4>

			break;
		case Dio_PORTB:
			if(GET_BIT(DDRB,PinIndex)==1)
    3572:	e7 e3       	ldi	r30, 0x37	; 55
    3574:	f0 e0       	ldi	r31, 0x00	; 0
    3576:	80 81       	ld	r24, Z
    3578:	48 2f       	mov	r20, r24
    357a:	50 e0       	ldi	r21, 0x00	; 0
    357c:	89 81       	ldd	r24, Y+1	; 0x01
    357e:	28 2f       	mov	r18, r24
    3580:	30 e0       	ldi	r19, 0x00	; 0
    3582:	81 e0       	ldi	r24, 0x01	; 1
    3584:	90 e0       	ldi	r25, 0x00	; 0
    3586:	02 c0       	rjmp	.+4      	; 0x358c <Dio_enuReadChannel+0x134>
    3588:	88 0f       	add	r24, r24
    358a:	99 1f       	adc	r25, r25
    358c:	2a 95       	dec	r18
    358e:	e2 f7       	brpl	.-8      	; 0x3588 <Dio_enuReadChannel+0x130>
    3590:	9a 01       	movw	r18, r20
    3592:	28 23       	and	r18, r24
    3594:	39 23       	and	r19, r25
    3596:	89 81       	ldd	r24, Y+1	; 0x01
    3598:	88 2f       	mov	r24, r24
    359a:	90 e0       	ldi	r25, 0x00	; 0
    359c:	a9 01       	movw	r20, r18
    359e:	02 c0       	rjmp	.+4      	; 0x35a4 <Dio_enuReadChannel+0x14c>
    35a0:	55 95       	asr	r21
    35a2:	47 95       	ror	r20
    35a4:	8a 95       	dec	r24
    35a6:	e2 f7       	brpl	.-8      	; 0x35a0 <Dio_enuReadChannel+0x148>
    35a8:	ca 01       	movw	r24, r20
    35aa:	81 30       	cpi	r24, 0x01	; 1
    35ac:	91 05       	cpc	r25, r1
    35ae:	19 f4       	brne	.+6      	; 0x35b6 <Dio_enuReadChannel+0x15e>
				ErrorStatus=DIO_enuDirectionError;
    35b0:	83 e0       	ldi	r24, 0x03	; 3
    35b2:	8b 83       	std	Y+3, r24	; 0x03
    35b4:	a3 c0       	rjmp	.+326    	; 0x36fc <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PINB,PinIndex);
    35b6:	e6 e3       	ldi	r30, 0x36	; 54
    35b8:	f0 e0       	ldi	r31, 0x00	; 0
    35ba:	80 81       	ld	r24, Z
    35bc:	48 2f       	mov	r20, r24
    35be:	50 e0       	ldi	r21, 0x00	; 0
    35c0:	89 81       	ldd	r24, Y+1	; 0x01
    35c2:	28 2f       	mov	r18, r24
    35c4:	30 e0       	ldi	r19, 0x00	; 0
    35c6:	81 e0       	ldi	r24, 0x01	; 1
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	02 c0       	rjmp	.+4      	; 0x35d0 <Dio_enuReadChannel+0x178>
    35cc:	88 0f       	add	r24, r24
    35ce:	99 1f       	adc	r25, r25
    35d0:	2a 95       	dec	r18
    35d2:	e2 f7       	brpl	.-8      	; 0x35cc <Dio_enuReadChannel+0x174>
    35d4:	9a 01       	movw	r18, r20
    35d6:	28 23       	and	r18, r24
    35d8:	39 23       	and	r19, r25
    35da:	89 81       	ldd	r24, Y+1	; 0x01
    35dc:	88 2f       	mov	r24, r24
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	a9 01       	movw	r20, r18
    35e2:	02 c0       	rjmp	.+4      	; 0x35e8 <Dio_enuReadChannel+0x190>
    35e4:	55 95       	asr	r21
    35e6:	47 95       	ror	r20
    35e8:	8a 95       	dec	r24
    35ea:	e2 f7       	brpl	.-8      	; 0x35e4 <Dio_enuReadChannel+0x18c>
    35ec:	ca 01       	movw	r24, r20
    35ee:	ed 81       	ldd	r30, Y+5	; 0x05
    35f0:	fe 81       	ldd	r31, Y+6	; 0x06
    35f2:	80 83       	st	Z, r24
    35f4:	83 c0       	rjmp	.+262    	; 0x36fc <Dio_enuReadChannel+0x2a4>

			break;
		case Dio_PORTC:
			if(GET_BIT(DDRC,PinIndex)==1)
    35f6:	e4 e3       	ldi	r30, 0x34	; 52
    35f8:	f0 e0       	ldi	r31, 0x00	; 0
    35fa:	80 81       	ld	r24, Z
    35fc:	48 2f       	mov	r20, r24
    35fe:	50 e0       	ldi	r21, 0x00	; 0
    3600:	89 81       	ldd	r24, Y+1	; 0x01
    3602:	28 2f       	mov	r18, r24
    3604:	30 e0       	ldi	r19, 0x00	; 0
    3606:	81 e0       	ldi	r24, 0x01	; 1
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	02 c0       	rjmp	.+4      	; 0x3610 <Dio_enuReadChannel+0x1b8>
    360c:	88 0f       	add	r24, r24
    360e:	99 1f       	adc	r25, r25
    3610:	2a 95       	dec	r18
    3612:	e2 f7       	brpl	.-8      	; 0x360c <Dio_enuReadChannel+0x1b4>
    3614:	9a 01       	movw	r18, r20
    3616:	28 23       	and	r18, r24
    3618:	39 23       	and	r19, r25
    361a:	89 81       	ldd	r24, Y+1	; 0x01
    361c:	88 2f       	mov	r24, r24
    361e:	90 e0       	ldi	r25, 0x00	; 0
    3620:	a9 01       	movw	r20, r18
    3622:	02 c0       	rjmp	.+4      	; 0x3628 <Dio_enuReadChannel+0x1d0>
    3624:	55 95       	asr	r21
    3626:	47 95       	ror	r20
    3628:	8a 95       	dec	r24
    362a:	e2 f7       	brpl	.-8      	; 0x3624 <Dio_enuReadChannel+0x1cc>
    362c:	ca 01       	movw	r24, r20
    362e:	81 30       	cpi	r24, 0x01	; 1
    3630:	91 05       	cpc	r25, r1
    3632:	19 f4       	brne	.+6      	; 0x363a <Dio_enuReadChannel+0x1e2>
				ErrorStatus=DIO_enuDirectionError;
    3634:	83 e0       	ldi	r24, 0x03	; 3
    3636:	8b 83       	std	Y+3, r24	; 0x03
    3638:	61 c0       	rjmp	.+194    	; 0x36fc <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PINC,PinIndex);
    363a:	e3 e3       	ldi	r30, 0x33	; 51
    363c:	f0 e0       	ldi	r31, 0x00	; 0
    363e:	80 81       	ld	r24, Z
    3640:	48 2f       	mov	r20, r24
    3642:	50 e0       	ldi	r21, 0x00	; 0
    3644:	89 81       	ldd	r24, Y+1	; 0x01
    3646:	28 2f       	mov	r18, r24
    3648:	30 e0       	ldi	r19, 0x00	; 0
    364a:	81 e0       	ldi	r24, 0x01	; 1
    364c:	90 e0       	ldi	r25, 0x00	; 0
    364e:	02 c0       	rjmp	.+4      	; 0x3654 <Dio_enuReadChannel+0x1fc>
    3650:	88 0f       	add	r24, r24
    3652:	99 1f       	adc	r25, r25
    3654:	2a 95       	dec	r18
    3656:	e2 f7       	brpl	.-8      	; 0x3650 <Dio_enuReadChannel+0x1f8>
    3658:	9a 01       	movw	r18, r20
    365a:	28 23       	and	r18, r24
    365c:	39 23       	and	r19, r25
    365e:	89 81       	ldd	r24, Y+1	; 0x01
    3660:	88 2f       	mov	r24, r24
    3662:	90 e0       	ldi	r25, 0x00	; 0
    3664:	a9 01       	movw	r20, r18
    3666:	02 c0       	rjmp	.+4      	; 0x366c <Dio_enuReadChannel+0x214>
    3668:	55 95       	asr	r21
    366a:	47 95       	ror	r20
    366c:	8a 95       	dec	r24
    366e:	e2 f7       	brpl	.-8      	; 0x3668 <Dio_enuReadChannel+0x210>
    3670:	ca 01       	movw	r24, r20
    3672:	ed 81       	ldd	r30, Y+5	; 0x05
    3674:	fe 81       	ldd	r31, Y+6	; 0x06
    3676:	80 83       	st	Z, r24
    3678:	41 c0       	rjmp	.+130    	; 0x36fc <Dio_enuReadChannel+0x2a4>

			break;
		case Dio_PORTD:
			if(GET_BIT(DDRD,PinIndex)==1)
    367a:	e1 e3       	ldi	r30, 0x31	; 49
    367c:	f0 e0       	ldi	r31, 0x00	; 0
    367e:	80 81       	ld	r24, Z
    3680:	48 2f       	mov	r20, r24
    3682:	50 e0       	ldi	r21, 0x00	; 0
    3684:	89 81       	ldd	r24, Y+1	; 0x01
    3686:	28 2f       	mov	r18, r24
    3688:	30 e0       	ldi	r19, 0x00	; 0
    368a:	81 e0       	ldi	r24, 0x01	; 1
    368c:	90 e0       	ldi	r25, 0x00	; 0
    368e:	02 c0       	rjmp	.+4      	; 0x3694 <Dio_enuReadChannel+0x23c>
    3690:	88 0f       	add	r24, r24
    3692:	99 1f       	adc	r25, r25
    3694:	2a 95       	dec	r18
    3696:	e2 f7       	brpl	.-8      	; 0x3690 <Dio_enuReadChannel+0x238>
    3698:	9a 01       	movw	r18, r20
    369a:	28 23       	and	r18, r24
    369c:	39 23       	and	r19, r25
    369e:	89 81       	ldd	r24, Y+1	; 0x01
    36a0:	88 2f       	mov	r24, r24
    36a2:	90 e0       	ldi	r25, 0x00	; 0
    36a4:	a9 01       	movw	r20, r18
    36a6:	02 c0       	rjmp	.+4      	; 0x36ac <Dio_enuReadChannel+0x254>
    36a8:	55 95       	asr	r21
    36aa:	47 95       	ror	r20
    36ac:	8a 95       	dec	r24
    36ae:	e2 f7       	brpl	.-8      	; 0x36a8 <Dio_enuReadChannel+0x250>
    36b0:	ca 01       	movw	r24, r20
    36b2:	81 30       	cpi	r24, 0x01	; 1
    36b4:	91 05       	cpc	r25, r1
    36b6:	19 f4       	brne	.+6      	; 0x36be <Dio_enuReadChannel+0x266>
				ErrorStatus=DIO_enuDirectionError;
    36b8:	83 e0       	ldi	r24, 0x03	; 3
    36ba:	8b 83       	std	Y+3, r24	; 0x03
    36bc:	1f c0       	rjmp	.+62     	; 0x36fc <Dio_enuReadChannel+0x2a4>
			else
			*Add_pu8ChannelLevel=GET_BIT(PIND,PinIndex);
    36be:	e0 e3       	ldi	r30, 0x30	; 48
    36c0:	f0 e0       	ldi	r31, 0x00	; 0
    36c2:	80 81       	ld	r24, Z
    36c4:	48 2f       	mov	r20, r24
    36c6:	50 e0       	ldi	r21, 0x00	; 0
    36c8:	89 81       	ldd	r24, Y+1	; 0x01
    36ca:	28 2f       	mov	r18, r24
    36cc:	30 e0       	ldi	r19, 0x00	; 0
    36ce:	81 e0       	ldi	r24, 0x01	; 1
    36d0:	90 e0       	ldi	r25, 0x00	; 0
    36d2:	02 c0       	rjmp	.+4      	; 0x36d8 <Dio_enuReadChannel+0x280>
    36d4:	88 0f       	add	r24, r24
    36d6:	99 1f       	adc	r25, r25
    36d8:	2a 95       	dec	r18
    36da:	e2 f7       	brpl	.-8      	; 0x36d4 <Dio_enuReadChannel+0x27c>
    36dc:	9a 01       	movw	r18, r20
    36de:	28 23       	and	r18, r24
    36e0:	39 23       	and	r19, r25
    36e2:	89 81       	ldd	r24, Y+1	; 0x01
    36e4:	88 2f       	mov	r24, r24
    36e6:	90 e0       	ldi	r25, 0x00	; 0
    36e8:	a9 01       	movw	r20, r18
    36ea:	02 c0       	rjmp	.+4      	; 0x36f0 <Dio_enuReadChannel+0x298>
    36ec:	55 95       	asr	r21
    36ee:	47 95       	ror	r20
    36f0:	8a 95       	dec	r24
    36f2:	e2 f7       	brpl	.-8      	; 0x36ec <Dio_enuReadChannel+0x294>
    36f4:	ca 01       	movw	r24, r20
    36f6:	ed 81       	ldd	r30, Y+5	; 0x05
    36f8:	fe 81       	ldd	r31, Y+6	; 0x06
    36fa:	80 83       	st	Z, r24

			break;
		}
		return ErrorStatus;
    36fc:	8b 81       	ldd	r24, Y+3	; 0x03

}
    36fe:	28 96       	adiw	r28, 0x08	; 8
    3700:	0f b6       	in	r0, 0x3f	; 63
    3702:	f8 94       	cli
    3704:	de bf       	out	0x3e, r29	; 62
    3706:	0f be       	out	0x3f, r0	; 63
    3708:	cd bf       	out	0x3d, r28	; 61
    370a:	cf 91       	pop	r28
    370c:	df 91       	pop	r29
    370e:	08 95       	ret

00003710 <Dio_enuWritePort>:
 * Parameters(IN)  : 1.Copy_u8PortlId -->port number
 *                   2.Copy_u8Level     --> High or LOW
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuWritePort(DioPinType Copy_u8PortlId,DioPinType Copy_u8Level)
{
    3710:	df 93       	push	r29
    3712:	cf 93       	push	r28
    3714:	cd b7       	in	r28, 0x3d	; 61
    3716:	de b7       	in	r29, 0x3e	; 62
    3718:	29 97       	sbiw	r28, 0x09	; 9
    371a:	0f b6       	in	r0, 0x3f	; 63
    371c:	f8 94       	cli
    371e:	de bf       	out	0x3e, r29	; 62
    3720:	0f be       	out	0x3f, r0	; 63
    3722:	cd bf       	out	0x3d, r28	; 61
    3724:	8a 83       	std	Y+2, r24	; 0x02
    3726:	6b 83       	std	Y+3, r22	; 0x03
	uint8 ErrorStatus=Dio_enuOK;
    3728:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8PortlId>DIO_NUMBER_OF_PORTS)
    372a:	8a 81       	ldd	r24, Y+2	; 0x02
    372c:	85 30       	cpi	r24, 0x05	; 5
    372e:	10 f0       	brcs	.+4      	; 0x3734 <Dio_enuWritePort+0x24>
			{
				ErrorStatus=Dio_enuPortError;
    3730:	82 e0       	ldi	r24, 0x02	; 2
    3732:	89 83       	std	Y+1, r24	; 0x01
			}
	switch(Copy_u8PortlId)
    3734:	8a 81       	ldd	r24, Y+2	; 0x02
    3736:	28 2f       	mov	r18, r24
    3738:	30 e0       	ldi	r19, 0x00	; 0
    373a:	39 87       	std	Y+9, r19	; 0x09
    373c:	28 87       	std	Y+8, r18	; 0x08
    373e:	88 85       	ldd	r24, Y+8	; 0x08
    3740:	99 85       	ldd	r25, Y+9	; 0x09
    3742:	81 30       	cpi	r24, 0x01	; 1
    3744:	91 05       	cpc	r25, r1
    3746:	e9 f0       	breq	.+58     	; 0x3782 <Dio_enuWritePort+0x72>
    3748:	28 85       	ldd	r18, Y+8	; 0x08
    374a:	39 85       	ldd	r19, Y+9	; 0x09
    374c:	22 30       	cpi	r18, 0x02	; 2
    374e:	31 05       	cpc	r19, r1
    3750:	2c f4       	brge	.+10     	; 0x375c <Dio_enuWritePort+0x4c>
    3752:	88 85       	ldd	r24, Y+8	; 0x08
    3754:	99 85       	ldd	r25, Y+9	; 0x09
    3756:	00 97       	sbiw	r24, 0x00	; 0
    3758:	61 f0       	breq	.+24     	; 0x3772 <Dio_enuWritePort+0x62>
    375a:	2a c0       	rjmp	.+84     	; 0x37b0 <Dio_enuWritePort+0xa0>
    375c:	28 85       	ldd	r18, Y+8	; 0x08
    375e:	39 85       	ldd	r19, Y+9	; 0x09
    3760:	22 30       	cpi	r18, 0x02	; 2
    3762:	31 05       	cpc	r19, r1
    3764:	b1 f0       	breq	.+44     	; 0x3792 <Dio_enuWritePort+0x82>
    3766:	88 85       	ldd	r24, Y+8	; 0x08
    3768:	99 85       	ldd	r25, Y+9	; 0x09
    376a:	83 30       	cpi	r24, 0x03	; 3
    376c:	91 05       	cpc	r25, r1
    376e:	c9 f0       	breq	.+50     	; 0x37a2 <Dio_enuWritePort+0x92>
    3770:	1f c0       	rjmp	.+62     	; 0x37b0 <Dio_enuWritePort+0xa0>
			{
			case Dio_PORTA:
				ASSIGN_REG(PORTA,Copy_u8Level);
    3772:	eb e3       	ldi	r30, 0x3B	; 59
    3774:	f0 e0       	ldi	r31, 0x00	; 0
    3776:	90 81       	ld	r25, Z
    3778:	eb e3       	ldi	r30, 0x3B	; 59
    377a:	f0 e0       	ldi	r31, 0x00	; 0
    377c:	8b 81       	ldd	r24, Y+3	; 0x03
    377e:	80 83       	st	Z, r24
    3780:	17 c0       	rjmp	.+46     	; 0x37b0 <Dio_enuWritePort+0xa0>

				break;
			case Dio_PORTB:
				ASSIGN_REG(PORTB,Copy_u8Level);
    3782:	e8 e3       	ldi	r30, 0x38	; 56
    3784:	f0 e0       	ldi	r31, 0x00	; 0
    3786:	20 81       	ld	r18, Z
    3788:	e8 e3       	ldi	r30, 0x38	; 56
    378a:	f0 e0       	ldi	r31, 0x00	; 0
    378c:	8b 81       	ldd	r24, Y+3	; 0x03
    378e:	80 83       	st	Z, r24
    3790:	0f c0       	rjmp	.+30     	; 0x37b0 <Dio_enuWritePort+0xa0>

				break;
			case Dio_PORTC:
				ASSIGN_REG(PORTC,Copy_u8Level);
    3792:	e5 e3       	ldi	r30, 0x35	; 53
    3794:	f0 e0       	ldi	r31, 0x00	; 0
    3796:	30 81       	ld	r19, Z
    3798:	e5 e3       	ldi	r30, 0x35	; 53
    379a:	f0 e0       	ldi	r31, 0x00	; 0
    379c:	8b 81       	ldd	r24, Y+3	; 0x03
    379e:	80 83       	st	Z, r24
    37a0:	07 c0       	rjmp	.+14     	; 0x37b0 <Dio_enuWritePort+0xa0>


				break;
			case Dio_PORTD:
				ASSIGN_REG(PORTD,Copy_u8Level);
    37a2:	e2 e3       	ldi	r30, 0x32	; 50
    37a4:	f0 e0       	ldi	r31, 0x00	; 0
    37a6:	80 81       	ld	r24, Z
    37a8:	e2 e3       	ldi	r30, 0x32	; 50
    37aa:	f0 e0       	ldi	r31, 0x00	; 0
    37ac:	8b 81       	ldd	r24, Y+3	; 0x03
    37ae:	80 83       	st	Z, r24

				break;
			}
			return ErrorStatus;
    37b0:	89 81       	ldd	r24, Y+1	; 0x01
}
    37b2:	29 96       	adiw	r28, 0x09	; 9
    37b4:	0f b6       	in	r0, 0x3f	; 63
    37b6:	f8 94       	cli
    37b8:	de bf       	out	0x3e, r29	; 62
    37ba:	0f be       	out	0x3f, r0	; 63
    37bc:	cd bf       	out	0x3d, r28	; 61
    37be:	cf 91       	pop	r28
    37c0:	df 91       	pop	r29
    37c2:	08 95       	ret

000037c4 <Dio_enuReadPort>:
 * Parameters(IN)  : 1.Copy_u8PortlId        -->port number
 *                   2.Add_pu8ChannelLevel     --> pointer to address of value carry
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_enuReadPort(DioPinType Copy_u8PortlId,pu8 Add_pu8PortLevel)
{
    37c4:	df 93       	push	r29
    37c6:	cf 93       	push	r28
    37c8:	00 d0       	rcall	.+0      	; 0x37ca <Dio_enuReadPort+0x6>
    37ca:	00 d0       	rcall	.+0      	; 0x37cc <Dio_enuReadPort+0x8>
    37cc:	00 d0       	rcall	.+0      	; 0x37ce <Dio_enuReadPort+0xa>
    37ce:	cd b7       	in	r28, 0x3d	; 61
    37d0:	de b7       	in	r29, 0x3e	; 62
    37d2:	8a 83       	std	Y+2, r24	; 0x02
    37d4:	7c 83       	std	Y+4, r23	; 0x04
    37d6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 ErrorStatus=Dio_enuOK;
    37d8:	19 82       	std	Y+1, r1	; 0x01
		if(Copy_u8PortlId>DIO_NUMBER_OF_PORTS)
    37da:	8a 81       	ldd	r24, Y+2	; 0x02
    37dc:	85 30       	cpi	r24, 0x05	; 5
    37de:	10 f0       	brcs	.+4      	; 0x37e4 <Dio_enuReadPort+0x20>
				{
					ErrorStatus=Dio_enuPortError;
    37e0:	82 e0       	ldi	r24, 0x02	; 2
    37e2:	89 83       	std	Y+1, r24	; 0x01
				}
		if( Add_pu8PortLevel ==Null_ptr)
    37e4:	8b 81       	ldd	r24, Y+3	; 0x03
    37e6:	9c 81       	ldd	r25, Y+4	; 0x04
    37e8:	00 97       	sbiw	r24, 0x00	; 0
    37ea:	11 f4       	brne	.+4      	; 0x37f0 <Dio_enuReadPort+0x2c>
				{
					ErrorStatus=DIO_enuNullPtr;
    37ec:	84 e0       	ldi	r24, 0x04	; 4
    37ee:	89 83       	std	Y+1, r24	; 0x01
				}
		switch(Copy_u8PortlId)
    37f0:	8a 81       	ldd	r24, Y+2	; 0x02
    37f2:	28 2f       	mov	r18, r24
    37f4:	30 e0       	ldi	r19, 0x00	; 0
    37f6:	3e 83       	std	Y+6, r19	; 0x06
    37f8:	2d 83       	std	Y+5, r18	; 0x05
    37fa:	8d 81       	ldd	r24, Y+5	; 0x05
    37fc:	9e 81       	ldd	r25, Y+6	; 0x06
    37fe:	81 30       	cpi	r24, 0x01	; 1
    3800:	91 05       	cpc	r25, r1
    3802:	e1 f0       	breq	.+56     	; 0x383c <Dio_enuReadPort+0x78>
    3804:	2d 81       	ldd	r18, Y+5	; 0x05
    3806:	3e 81       	ldd	r19, Y+6	; 0x06
    3808:	22 30       	cpi	r18, 0x02	; 2
    380a:	31 05       	cpc	r19, r1
    380c:	2c f4       	brge	.+10     	; 0x3818 <Dio_enuReadPort+0x54>
    380e:	8d 81       	ldd	r24, Y+5	; 0x05
    3810:	9e 81       	ldd	r25, Y+6	; 0x06
    3812:	00 97       	sbiw	r24, 0x00	; 0
    3814:	61 f0       	breq	.+24     	; 0x382e <Dio_enuReadPort+0x6a>
    3816:	26 c0       	rjmp	.+76     	; 0x3864 <Dio_enuReadPort+0xa0>
    3818:	2d 81       	ldd	r18, Y+5	; 0x05
    381a:	3e 81       	ldd	r19, Y+6	; 0x06
    381c:	22 30       	cpi	r18, 0x02	; 2
    381e:	31 05       	cpc	r19, r1
    3820:	a1 f0       	breq	.+40     	; 0x384a <Dio_enuReadPort+0x86>
    3822:	8d 81       	ldd	r24, Y+5	; 0x05
    3824:	9e 81       	ldd	r25, Y+6	; 0x06
    3826:	83 30       	cpi	r24, 0x03	; 3
    3828:	91 05       	cpc	r25, r1
    382a:	b1 f0       	breq	.+44     	; 0x3858 <Dio_enuReadPort+0x94>
    382c:	1b c0       	rjmp	.+54     	; 0x3864 <Dio_enuReadPort+0xa0>
				{
				case Dio_PORTA:
					*Add_pu8PortLevel=PINA;
    382e:	e9 e3       	ldi	r30, 0x39	; 57
    3830:	f0 e0       	ldi	r31, 0x00	; 0
    3832:	80 81       	ld	r24, Z
    3834:	eb 81       	ldd	r30, Y+3	; 0x03
    3836:	fc 81       	ldd	r31, Y+4	; 0x04
    3838:	80 83       	st	Z, r24
    383a:	14 c0       	rjmp	.+40     	; 0x3864 <Dio_enuReadPort+0xa0>
					break;
				case Dio_PORTB:
					*Add_pu8PortLevel=PINB;
    383c:	e6 e3       	ldi	r30, 0x36	; 54
    383e:	f0 e0       	ldi	r31, 0x00	; 0
    3840:	80 81       	ld	r24, Z
    3842:	eb 81       	ldd	r30, Y+3	; 0x03
    3844:	fc 81       	ldd	r31, Y+4	; 0x04
    3846:	80 83       	st	Z, r24
    3848:	0d c0       	rjmp	.+26     	; 0x3864 <Dio_enuReadPort+0xa0>

					break;
				case Dio_PORTC:
					*Add_pu8PortLevel=PINC;
    384a:	e3 e3       	ldi	r30, 0x33	; 51
    384c:	f0 e0       	ldi	r31, 0x00	; 0
    384e:	80 81       	ld	r24, Z
    3850:	eb 81       	ldd	r30, Y+3	; 0x03
    3852:	fc 81       	ldd	r31, Y+4	; 0x04
    3854:	80 83       	st	Z, r24
    3856:	06 c0       	rjmp	.+12     	; 0x3864 <Dio_enuReadPort+0xa0>


					break;
				case Dio_PORTD:
					*Add_pu8PortLevel=PIND;
    3858:	e0 e3       	ldi	r30, 0x30	; 48
    385a:	f0 e0       	ldi	r31, 0x00	; 0
    385c:	80 81       	ld	r24, Z
    385e:	eb 81       	ldd	r30, Y+3	; 0x03
    3860:	fc 81       	ldd	r31, Y+4	; 0x04
    3862:	80 83       	st	Z, r24

					break;
				}
				return ErrorStatus;
    3864:	89 81       	ldd	r24, Y+1	; 0x01
}
    3866:	26 96       	adiw	r28, 0x06	; 6
    3868:	0f b6       	in	r0, 0x3f	; 63
    386a:	f8 94       	cli
    386c:	de bf       	out	0x3e, r29	; 62
    386e:	0f be       	out	0x3f, r0	; 63
    3870:	cd bf       	out	0x3d, r28	; 61
    3872:	cf 91       	pop	r28
    3874:	df 91       	pop	r29
    3876:	08 95       	ret

00003878 <Dio_eneFlipChannel>:
 * Description     : Function responsible for flip pin
 * Parameters(IN)  : 1.Copy_u8ChannelId -->pin number
 * Parameters(OUT) : value of enum type PORT_tenuErrorStatus
 *******************************************************************************************/
Dio_tenuErrorStatus Dio_eneFlipChannel(DioPinType Copy_u8ChannelId)
{
    3878:	df 93       	push	r29
    387a:	cf 93       	push	r28
    387c:	00 d0       	rcall	.+0      	; 0x387e <Dio_eneFlipChannel+0x6>
    387e:	00 d0       	rcall	.+0      	; 0x3880 <Dio_eneFlipChannel+0x8>
    3880:	00 d0       	rcall	.+0      	; 0x3882 <Dio_eneFlipChannel+0xa>
    3882:	cd b7       	in	r28, 0x3d	; 61
    3884:	de b7       	in	r29, 0x3e	; 62
    3886:	8c 83       	std	Y+4, r24	; 0x04
	uint8 ErrorStatus=Dio_enuOK;
    3888:	1b 82       	std	Y+3, r1	; 0x03
			uint8 PortIndex=0,PinIndex=0;
    388a:	1a 82       	std	Y+2, r1	; 0x02
    388c:	19 82       	std	Y+1, r1	; 0x01
			PortIndex=(Copy_u8ChannelId/8);
    388e:	8c 81       	ldd	r24, Y+4	; 0x04
    3890:	86 95       	lsr	r24
    3892:	86 95       	lsr	r24
    3894:	86 95       	lsr	r24
    3896:	8a 83       	std	Y+2, r24	; 0x02
			PinIndex=Copy_u8ChannelId%8;
    3898:	8c 81       	ldd	r24, Y+4	; 0x04
    389a:	87 70       	andi	r24, 0x07	; 7
    389c:	89 83       	std	Y+1, r24	; 0x01
			if(Copy_u8ChannelId>DIO_NUMBER_OF_PINS)
    389e:	8c 81       	ldd	r24, Y+4	; 0x04
    38a0:	81 32       	cpi	r24, 0x21	; 33
    38a2:	10 f0       	brcs	.+4      	; 0x38a8 <Dio_eneFlipChannel+0x30>
			{
				ErrorStatus=Dio_enuPinError;
    38a4:	81 e0       	ldi	r24, 0x01	; 1
    38a6:	8b 83       	std	Y+3, r24	; 0x03
			}
			if(PortIndex>DIO_NUMBER_OF_PORTS)
    38a8:	8a 81       	ldd	r24, Y+2	; 0x02
    38aa:	85 30       	cpi	r24, 0x05	; 5
    38ac:	10 f0       	brcs	.+4      	; 0x38b2 <Dio_eneFlipChannel+0x3a>
			{
				ErrorStatus=Dio_enuPortError;
    38ae:	82 e0       	ldi	r24, 0x02	; 2
    38b0:	8b 83       	std	Y+3, r24	; 0x03
			}
			switch(PortIndex)
    38b2:	8a 81       	ldd	r24, Y+2	; 0x02
    38b4:	28 2f       	mov	r18, r24
    38b6:	30 e0       	ldi	r19, 0x00	; 0
    38b8:	3e 83       	std	Y+6, r19	; 0x06
    38ba:	2d 83       	std	Y+5, r18	; 0x05
    38bc:	8d 81       	ldd	r24, Y+5	; 0x05
    38be:	9e 81       	ldd	r25, Y+6	; 0x06
    38c0:	81 30       	cpi	r24, 0x01	; 1
    38c2:	91 05       	cpc	r25, r1
    38c4:	49 f1       	breq	.+82     	; 0x3918 <Dio_eneFlipChannel+0xa0>
    38c6:	2d 81       	ldd	r18, Y+5	; 0x05
    38c8:	3e 81       	ldd	r19, Y+6	; 0x06
    38ca:	22 30       	cpi	r18, 0x02	; 2
    38cc:	31 05       	cpc	r19, r1
    38ce:	2c f4       	brge	.+10     	; 0x38da <Dio_eneFlipChannel+0x62>
    38d0:	8d 81       	ldd	r24, Y+5	; 0x05
    38d2:	9e 81       	ldd	r25, Y+6	; 0x06
    38d4:	00 97       	sbiw	r24, 0x00	; 0
    38d6:	61 f0       	breq	.+24     	; 0x38f0 <Dio_eneFlipChannel+0x78>
    38d8:	5a c0       	rjmp	.+180    	; 0x398e <Dio_eneFlipChannel+0x116>
    38da:	2d 81       	ldd	r18, Y+5	; 0x05
    38dc:	3e 81       	ldd	r19, Y+6	; 0x06
    38de:	22 30       	cpi	r18, 0x02	; 2
    38e0:	31 05       	cpc	r19, r1
    38e2:	71 f1       	breq	.+92     	; 0x3940 <Dio_eneFlipChannel+0xc8>
    38e4:	8d 81       	ldd	r24, Y+5	; 0x05
    38e6:	9e 81       	ldd	r25, Y+6	; 0x06
    38e8:	83 30       	cpi	r24, 0x03	; 3
    38ea:	91 05       	cpc	r25, r1
    38ec:	e9 f1       	breq	.+122    	; 0x3968 <Dio_eneFlipChannel+0xf0>
    38ee:	4f c0       	rjmp	.+158    	; 0x398e <Dio_eneFlipChannel+0x116>
					{
					case Dio_PORTA:
						TOGGLE_BIT(DDRA,PinIndex);
    38f0:	aa e3       	ldi	r26, 0x3A	; 58
    38f2:	b0 e0       	ldi	r27, 0x00	; 0
    38f4:	ea e3       	ldi	r30, 0x3A	; 58
    38f6:	f0 e0       	ldi	r31, 0x00	; 0
    38f8:	80 81       	ld	r24, Z
    38fa:	48 2f       	mov	r20, r24
    38fc:	89 81       	ldd	r24, Y+1	; 0x01
    38fe:	28 2f       	mov	r18, r24
    3900:	30 e0       	ldi	r19, 0x00	; 0
    3902:	81 e0       	ldi	r24, 0x01	; 1
    3904:	90 e0       	ldi	r25, 0x00	; 0
    3906:	02 2e       	mov	r0, r18
    3908:	02 c0       	rjmp	.+4      	; 0x390e <Dio_eneFlipChannel+0x96>
    390a:	88 0f       	add	r24, r24
    390c:	99 1f       	adc	r25, r25
    390e:	0a 94       	dec	r0
    3910:	e2 f7       	brpl	.-8      	; 0x390a <Dio_eneFlipChannel+0x92>
    3912:	84 27       	eor	r24, r20
    3914:	8c 93       	st	X, r24
    3916:	3b c0       	rjmp	.+118    	; 0x398e <Dio_eneFlipChannel+0x116>

						break;
					case Dio_PORTB:
						TOGGLE_BIT(DDRB,PinIndex);
    3918:	a7 e3       	ldi	r26, 0x37	; 55
    391a:	b0 e0       	ldi	r27, 0x00	; 0
    391c:	e7 e3       	ldi	r30, 0x37	; 55
    391e:	f0 e0       	ldi	r31, 0x00	; 0
    3920:	80 81       	ld	r24, Z
    3922:	48 2f       	mov	r20, r24
    3924:	89 81       	ldd	r24, Y+1	; 0x01
    3926:	28 2f       	mov	r18, r24
    3928:	30 e0       	ldi	r19, 0x00	; 0
    392a:	81 e0       	ldi	r24, 0x01	; 1
    392c:	90 e0       	ldi	r25, 0x00	; 0
    392e:	02 2e       	mov	r0, r18
    3930:	02 c0       	rjmp	.+4      	; 0x3936 <Dio_eneFlipChannel+0xbe>
    3932:	88 0f       	add	r24, r24
    3934:	99 1f       	adc	r25, r25
    3936:	0a 94       	dec	r0
    3938:	e2 f7       	brpl	.-8      	; 0x3932 <Dio_eneFlipChannel+0xba>
    393a:	84 27       	eor	r24, r20
    393c:	8c 93       	st	X, r24
    393e:	27 c0       	rjmp	.+78     	; 0x398e <Dio_eneFlipChannel+0x116>

						break;
					case Dio_PORTC:
						TOGGLE_BIT(DDRC,PinIndex);
    3940:	a4 e3       	ldi	r26, 0x34	; 52
    3942:	b0 e0       	ldi	r27, 0x00	; 0
    3944:	e4 e3       	ldi	r30, 0x34	; 52
    3946:	f0 e0       	ldi	r31, 0x00	; 0
    3948:	80 81       	ld	r24, Z
    394a:	48 2f       	mov	r20, r24
    394c:	89 81       	ldd	r24, Y+1	; 0x01
    394e:	28 2f       	mov	r18, r24
    3950:	30 e0       	ldi	r19, 0x00	; 0
    3952:	81 e0       	ldi	r24, 0x01	; 1
    3954:	90 e0       	ldi	r25, 0x00	; 0
    3956:	02 2e       	mov	r0, r18
    3958:	02 c0       	rjmp	.+4      	; 0x395e <Dio_eneFlipChannel+0xe6>
    395a:	88 0f       	add	r24, r24
    395c:	99 1f       	adc	r25, r25
    395e:	0a 94       	dec	r0
    3960:	e2 f7       	brpl	.-8      	; 0x395a <Dio_eneFlipChannel+0xe2>
    3962:	84 27       	eor	r24, r20
    3964:	8c 93       	st	X, r24
    3966:	13 c0       	rjmp	.+38     	; 0x398e <Dio_eneFlipChannel+0x116>

						break;
					case Dio_PORTD:
						TOGGLE_BIT(DDRD,PinIndex);
    3968:	a1 e3       	ldi	r26, 0x31	; 49
    396a:	b0 e0       	ldi	r27, 0x00	; 0
    396c:	e1 e3       	ldi	r30, 0x31	; 49
    396e:	f0 e0       	ldi	r31, 0x00	; 0
    3970:	80 81       	ld	r24, Z
    3972:	48 2f       	mov	r20, r24
    3974:	89 81       	ldd	r24, Y+1	; 0x01
    3976:	28 2f       	mov	r18, r24
    3978:	30 e0       	ldi	r19, 0x00	; 0
    397a:	81 e0       	ldi	r24, 0x01	; 1
    397c:	90 e0       	ldi	r25, 0x00	; 0
    397e:	02 2e       	mov	r0, r18
    3980:	02 c0       	rjmp	.+4      	; 0x3986 <Dio_eneFlipChannel+0x10e>
    3982:	88 0f       	add	r24, r24
    3984:	99 1f       	adc	r25, r25
    3986:	0a 94       	dec	r0
    3988:	e2 f7       	brpl	.-8      	; 0x3982 <Dio_eneFlipChannel+0x10a>
    398a:	84 27       	eor	r24, r20
    398c:	8c 93       	st	X, r24

						break;
					}
					return ErrorStatus;
    398e:	8b 81       	ldd	r24, Y+3	; 0x03
}
    3990:	26 96       	adiw	r28, 0x06	; 6
    3992:	0f b6       	in	r0, 0x3f	; 63
    3994:	f8 94       	cli
    3996:	de bf       	out	0x3e, r29	; 62
    3998:	0f be       	out	0x3f, r0	; 63
    399a:	cd bf       	out	0x3d, r28	; 61
    399c:	cf 91       	pop	r28
    399e:	df 91       	pop	r29
    39a0:	08 95       	ret

000039a2 <Lcd_Init>:
#include "../Includes/LCD_Cfg.h"
#include "../Includes/LCD_Prv.h"


void Lcd_Init(void)
{
    39a2:	df 93       	push	r29
    39a4:	cf 93       	push	r28
    39a6:	cd b7       	in	r28, 0x3d	; 61
    39a8:	de b7       	in	r29, 0x3e	; 62
	//	_delay_ms(50);


#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
	Lcd_VidSendCommand(LCD_4_BIT_2_LINES_INIT1_COMMAND);
    39aa:	83 e3       	ldi	r24, 0x33	; 51
    39ac:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
	Lcd_VidSendCommand(LCD_4_BIT_2_LINES_INIT2_COMMAND);
    39b0:	82 e3       	ldi	r24, 0x32	; 50
    39b2:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
	Lcd_VidSendCommand(LCD_4_BIT_MODE_SELECTION);
    39b6:	88 e2       	ldi	r24, 0x28	; 40
    39b8:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
#elif(LCD_DATA_MODE==LCD_EIGHT_BIT_MODE)

	Lcd_VidSendCommand(LCD_8_BIT_MODE_SELECTION);

#endif
	Lcd_VidSendCommand(LCD_CURSOR_OFF_COMMAND);
    39bc:	8c e0       	ldi	r24, 0x0C	; 12
    39be:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
	Lcd_VidSendCommand(LCD_CLEAR_SCREEN_COMMAND);
    39c2:	81 e0       	ldi	r24, 0x01	; 1
    39c4:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>

}
    39c8:	cf 91       	pop	r28
    39ca:	df 91       	pop	r29
    39cc:	08 95       	ret

000039ce <Lcd_VidSendCommand>:

void Lcd_VidSendCommand(uint8 Copy_u8Command)
{
    39ce:	0f 93       	push	r16
    39d0:	1f 93       	push	r17
    39d2:	df 93       	push	r29
    39d4:	cf 93       	push	r28
    39d6:	cd b7       	in	r28, 0x3d	; 61
    39d8:	de b7       	in	r29, 0x3e	; 62
    39da:	c3 56       	subi	r28, 0x63	; 99
    39dc:	d0 40       	sbci	r29, 0x00	; 0
    39de:	0f b6       	in	r0, 0x3f	; 63
    39e0:	f8 94       	cli
    39e2:	de bf       	out	0x3e, r29	; 62
    39e4:	0f be       	out	0x3f, r0	; 63
    39e6:	cd bf       	out	0x3d, r28	; 61
    39e8:	fe 01       	movw	r30, r28
    39ea:	ed 59       	subi	r30, 0x9D	; 157
    39ec:	ff 4f       	sbci	r31, 0xFF	; 255
    39ee:	80 83       	st	Z, r24
	Dio_enuWriteChannel(LCD_RS_PIN_NUM,DIO_LOGIC_LOW);
    39f0:	80 e1       	ldi	r24, 0x10	; 16
    39f2:	60 e0       	ldi	r22, 0x00	; 0
    39f4:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    39f8:	fe 01       	movw	r30, r28
    39fa:	e1 5a       	subi	r30, 0xA1	; 161
    39fc:	ff 4f       	sbci	r31, 0xFF	; 255
    39fe:	80 e0       	ldi	r24, 0x00	; 0
    3a00:	90 e0       	ldi	r25, 0x00	; 0
    3a02:	a0 e8       	ldi	r26, 0x80	; 128
    3a04:	bf e3       	ldi	r27, 0x3F	; 63
    3a06:	80 83       	st	Z, r24
    3a08:	91 83       	std	Z+1, r25	; 0x01
    3a0a:	a2 83       	std	Z+2, r26	; 0x02
    3a0c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a0e:	8e 01       	movw	r16, r28
    3a10:	05 5a       	subi	r16, 0xA5	; 165
    3a12:	1f 4f       	sbci	r17, 0xFF	; 255
    3a14:	fe 01       	movw	r30, r28
    3a16:	e1 5a       	subi	r30, 0xA1	; 161
    3a18:	ff 4f       	sbci	r31, 0xFF	; 255
    3a1a:	60 81       	ld	r22, Z
    3a1c:	71 81       	ldd	r23, Z+1	; 0x01
    3a1e:	82 81       	ldd	r24, Z+2	; 0x02
    3a20:	93 81       	ldd	r25, Z+3	; 0x03
    3a22:	20 e0       	ldi	r18, 0x00	; 0
    3a24:	30 e0       	ldi	r19, 0x00	; 0
    3a26:	4a e7       	ldi	r20, 0x7A	; 122
    3a28:	53 e4       	ldi	r21, 0x43	; 67
    3a2a:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3a2e:	dc 01       	movw	r26, r24
    3a30:	cb 01       	movw	r24, r22
    3a32:	f8 01       	movw	r30, r16
    3a34:	80 83       	st	Z, r24
    3a36:	91 83       	std	Z+1, r25	; 0x01
    3a38:	a2 83       	std	Z+2, r26	; 0x02
    3a3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a3c:	fe 01       	movw	r30, r28
    3a3e:	e5 5a       	subi	r30, 0xA5	; 165
    3a40:	ff 4f       	sbci	r31, 0xFF	; 255
    3a42:	60 81       	ld	r22, Z
    3a44:	71 81       	ldd	r23, Z+1	; 0x01
    3a46:	82 81       	ldd	r24, Z+2	; 0x02
    3a48:	93 81       	ldd	r25, Z+3	; 0x03
    3a4a:	20 e0       	ldi	r18, 0x00	; 0
    3a4c:	30 e0       	ldi	r19, 0x00	; 0
    3a4e:	40 e8       	ldi	r20, 0x80	; 128
    3a50:	5f e3       	ldi	r21, 0x3F	; 63
    3a52:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    3a56:	88 23       	and	r24, r24
    3a58:	44 f4       	brge	.+16     	; 0x3a6a <Lcd_VidSendCommand+0x9c>
		__ticks = 1;
    3a5a:	fe 01       	movw	r30, r28
    3a5c:	e7 5a       	subi	r30, 0xA7	; 167
    3a5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a60:	81 e0       	ldi	r24, 0x01	; 1
    3a62:	90 e0       	ldi	r25, 0x00	; 0
    3a64:	91 83       	std	Z+1, r25	; 0x01
    3a66:	80 83       	st	Z, r24
    3a68:	64 c0       	rjmp	.+200    	; 0x3b32 <Lcd_VidSendCommand+0x164>
	else if (__tmp > 65535)
    3a6a:	fe 01       	movw	r30, r28
    3a6c:	e5 5a       	subi	r30, 0xA5	; 165
    3a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a70:	60 81       	ld	r22, Z
    3a72:	71 81       	ldd	r23, Z+1	; 0x01
    3a74:	82 81       	ldd	r24, Z+2	; 0x02
    3a76:	93 81       	ldd	r25, Z+3	; 0x03
    3a78:	20 e0       	ldi	r18, 0x00	; 0
    3a7a:	3f ef       	ldi	r19, 0xFF	; 255
    3a7c:	4f e7       	ldi	r20, 0x7F	; 127
    3a7e:	57 e4       	ldi	r21, 0x47	; 71
    3a80:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    3a84:	18 16       	cp	r1, r24
    3a86:	0c f0       	brlt	.+2      	; 0x3a8a <Lcd_VidSendCommand+0xbc>
    3a88:	43 c0       	rjmp	.+134    	; 0x3b10 <Lcd_VidSendCommand+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a8a:	fe 01       	movw	r30, r28
    3a8c:	e1 5a       	subi	r30, 0xA1	; 161
    3a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a90:	60 81       	ld	r22, Z
    3a92:	71 81       	ldd	r23, Z+1	; 0x01
    3a94:	82 81       	ldd	r24, Z+2	; 0x02
    3a96:	93 81       	ldd	r25, Z+3	; 0x03
    3a98:	20 e0       	ldi	r18, 0x00	; 0
    3a9a:	30 e0       	ldi	r19, 0x00	; 0
    3a9c:	40 e2       	ldi	r20, 0x20	; 32
    3a9e:	51 e4       	ldi	r21, 0x41	; 65
    3aa0:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3aa4:	dc 01       	movw	r26, r24
    3aa6:	cb 01       	movw	r24, r22
    3aa8:	8e 01       	movw	r16, r28
    3aaa:	07 5a       	subi	r16, 0xA7	; 167
    3aac:	1f 4f       	sbci	r17, 0xFF	; 255
    3aae:	bc 01       	movw	r22, r24
    3ab0:	cd 01       	movw	r24, r26
    3ab2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3ab6:	dc 01       	movw	r26, r24
    3ab8:	cb 01       	movw	r24, r22
    3aba:	f8 01       	movw	r30, r16
    3abc:	91 83       	std	Z+1, r25	; 0x01
    3abe:	80 83       	st	Z, r24
    3ac0:	1f c0       	rjmp	.+62     	; 0x3b00 <Lcd_VidSendCommand+0x132>
    3ac2:	fe 01       	movw	r30, r28
    3ac4:	e9 5a       	subi	r30, 0xA9	; 169
    3ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac8:	89 e1       	ldi	r24, 0x19	; 25
    3aca:	90 e0       	ldi	r25, 0x00	; 0
    3acc:	91 83       	std	Z+1, r25	; 0x01
    3ace:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3ad0:	fe 01       	movw	r30, r28
    3ad2:	e9 5a       	subi	r30, 0xA9	; 169
    3ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad6:	80 81       	ld	r24, Z
    3ad8:	91 81       	ldd	r25, Z+1	; 0x01
    3ada:	01 97       	sbiw	r24, 0x01	; 1
    3adc:	f1 f7       	brne	.-4      	; 0x3ada <Lcd_VidSendCommand+0x10c>
    3ade:	fe 01       	movw	r30, r28
    3ae0:	e9 5a       	subi	r30, 0xA9	; 169
    3ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae4:	91 83       	std	Z+1, r25	; 0x01
    3ae6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ae8:	de 01       	movw	r26, r28
    3aea:	a7 5a       	subi	r26, 0xA7	; 167
    3aec:	bf 4f       	sbci	r27, 0xFF	; 255
    3aee:	fe 01       	movw	r30, r28
    3af0:	e7 5a       	subi	r30, 0xA7	; 167
    3af2:	ff 4f       	sbci	r31, 0xFF	; 255
    3af4:	80 81       	ld	r24, Z
    3af6:	91 81       	ldd	r25, Z+1	; 0x01
    3af8:	01 97       	sbiw	r24, 0x01	; 1
    3afa:	11 96       	adiw	r26, 0x01	; 1
    3afc:	9c 93       	st	X, r25
    3afe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b00:	fe 01       	movw	r30, r28
    3b02:	e7 5a       	subi	r30, 0xA7	; 167
    3b04:	ff 4f       	sbci	r31, 0xFF	; 255
    3b06:	80 81       	ld	r24, Z
    3b08:	91 81       	ldd	r25, Z+1	; 0x01
    3b0a:	00 97       	sbiw	r24, 0x00	; 0
    3b0c:	d1 f6       	brne	.-76     	; 0x3ac2 <Lcd_VidSendCommand+0xf4>
    3b0e:	27 c0       	rjmp	.+78     	; 0x3b5e <Lcd_VidSendCommand+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b10:	8e 01       	movw	r16, r28
    3b12:	07 5a       	subi	r16, 0xA7	; 167
    3b14:	1f 4f       	sbci	r17, 0xFF	; 255
    3b16:	fe 01       	movw	r30, r28
    3b18:	e5 5a       	subi	r30, 0xA5	; 165
    3b1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1c:	60 81       	ld	r22, Z
    3b1e:	71 81       	ldd	r23, Z+1	; 0x01
    3b20:	82 81       	ldd	r24, Z+2	; 0x02
    3b22:	93 81       	ldd	r25, Z+3	; 0x03
    3b24:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3b28:	dc 01       	movw	r26, r24
    3b2a:	cb 01       	movw	r24, r22
    3b2c:	f8 01       	movw	r30, r16
    3b2e:	91 83       	std	Z+1, r25	; 0x01
    3b30:	80 83       	st	Z, r24
    3b32:	de 01       	movw	r26, r28
    3b34:	ab 5a       	subi	r26, 0xAB	; 171
    3b36:	bf 4f       	sbci	r27, 0xFF	; 255
    3b38:	fe 01       	movw	r30, r28
    3b3a:	e7 5a       	subi	r30, 0xA7	; 167
    3b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b3e:	80 81       	ld	r24, Z
    3b40:	91 81       	ldd	r25, Z+1	; 0x01
    3b42:	8d 93       	st	X+, r24
    3b44:	9c 93       	st	X, r25
    3b46:	fe 01       	movw	r30, r28
    3b48:	eb 5a       	subi	r30, 0xAB	; 171
    3b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b4c:	80 81       	ld	r24, Z
    3b4e:	91 81       	ldd	r25, Z+1	; 0x01
    3b50:	01 97       	sbiw	r24, 0x01	; 1
    3b52:	f1 f7       	brne	.-4      	; 0x3b50 <Lcd_VidSendCommand+0x182>
    3b54:	fe 01       	movw	r30, r28
    3b56:	eb 5a       	subi	r30, 0xAB	; 171
    3b58:	ff 4f       	sbci	r31, 0xFF	; 255
    3b5a:	91 83       	std	Z+1, r25	; 0x01
    3b5c:	80 83       	st	Z, r24
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    3b5e:	81 e1       	ldi	r24, 0x11	; 17
    3b60:	61 e0       	ldi	r22, 0x01	; 1
    3b62:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    3b66:	fe 01       	movw	r30, r28
    3b68:	ef 5a       	subi	r30, 0xAF	; 175
    3b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b6c:	80 e0       	ldi	r24, 0x00	; 0
    3b6e:	90 e0       	ldi	r25, 0x00	; 0
    3b70:	a0 e8       	ldi	r26, 0x80	; 128
    3b72:	bf e3       	ldi	r27, 0x3F	; 63
    3b74:	80 83       	st	Z, r24
    3b76:	91 83       	std	Z+1, r25	; 0x01
    3b78:	a2 83       	std	Z+2, r26	; 0x02
    3b7a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b7c:	8e 01       	movw	r16, r28
    3b7e:	03 5b       	subi	r16, 0xB3	; 179
    3b80:	1f 4f       	sbci	r17, 0xFF	; 255
    3b82:	fe 01       	movw	r30, r28
    3b84:	ef 5a       	subi	r30, 0xAF	; 175
    3b86:	ff 4f       	sbci	r31, 0xFF	; 255
    3b88:	60 81       	ld	r22, Z
    3b8a:	71 81       	ldd	r23, Z+1	; 0x01
    3b8c:	82 81       	ldd	r24, Z+2	; 0x02
    3b8e:	93 81       	ldd	r25, Z+3	; 0x03
    3b90:	20 e0       	ldi	r18, 0x00	; 0
    3b92:	30 e0       	ldi	r19, 0x00	; 0
    3b94:	4a e7       	ldi	r20, 0x7A	; 122
    3b96:	53 e4       	ldi	r21, 0x43	; 67
    3b98:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3b9c:	dc 01       	movw	r26, r24
    3b9e:	cb 01       	movw	r24, r22
    3ba0:	f8 01       	movw	r30, r16
    3ba2:	80 83       	st	Z, r24
    3ba4:	91 83       	std	Z+1, r25	; 0x01
    3ba6:	a2 83       	std	Z+2, r26	; 0x02
    3ba8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3baa:	fe 01       	movw	r30, r28
    3bac:	e3 5b       	subi	r30, 0xB3	; 179
    3bae:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb0:	60 81       	ld	r22, Z
    3bb2:	71 81       	ldd	r23, Z+1	; 0x01
    3bb4:	82 81       	ldd	r24, Z+2	; 0x02
    3bb6:	93 81       	ldd	r25, Z+3	; 0x03
    3bb8:	20 e0       	ldi	r18, 0x00	; 0
    3bba:	30 e0       	ldi	r19, 0x00	; 0
    3bbc:	40 e8       	ldi	r20, 0x80	; 128
    3bbe:	5f e3       	ldi	r21, 0x3F	; 63
    3bc0:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    3bc4:	88 23       	and	r24, r24
    3bc6:	44 f4       	brge	.+16     	; 0x3bd8 <Lcd_VidSendCommand+0x20a>
		__ticks = 1;
    3bc8:	fe 01       	movw	r30, r28
    3bca:	e5 5b       	subi	r30, 0xB5	; 181
    3bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bce:	81 e0       	ldi	r24, 0x01	; 1
    3bd0:	90 e0       	ldi	r25, 0x00	; 0
    3bd2:	91 83       	std	Z+1, r25	; 0x01
    3bd4:	80 83       	st	Z, r24
    3bd6:	64 c0       	rjmp	.+200    	; 0x3ca0 <Lcd_VidSendCommand+0x2d2>
	else if (__tmp > 65535)
    3bd8:	fe 01       	movw	r30, r28
    3bda:	e3 5b       	subi	r30, 0xB3	; 179
    3bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bde:	60 81       	ld	r22, Z
    3be0:	71 81       	ldd	r23, Z+1	; 0x01
    3be2:	82 81       	ldd	r24, Z+2	; 0x02
    3be4:	93 81       	ldd	r25, Z+3	; 0x03
    3be6:	20 e0       	ldi	r18, 0x00	; 0
    3be8:	3f ef       	ldi	r19, 0xFF	; 255
    3bea:	4f e7       	ldi	r20, 0x7F	; 127
    3bec:	57 e4       	ldi	r21, 0x47	; 71
    3bee:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    3bf2:	18 16       	cp	r1, r24
    3bf4:	0c f0       	brlt	.+2      	; 0x3bf8 <Lcd_VidSendCommand+0x22a>
    3bf6:	43 c0       	rjmp	.+134    	; 0x3c7e <Lcd_VidSendCommand+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bf8:	fe 01       	movw	r30, r28
    3bfa:	ef 5a       	subi	r30, 0xAF	; 175
    3bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bfe:	60 81       	ld	r22, Z
    3c00:	71 81       	ldd	r23, Z+1	; 0x01
    3c02:	82 81       	ldd	r24, Z+2	; 0x02
    3c04:	93 81       	ldd	r25, Z+3	; 0x03
    3c06:	20 e0       	ldi	r18, 0x00	; 0
    3c08:	30 e0       	ldi	r19, 0x00	; 0
    3c0a:	40 e2       	ldi	r20, 0x20	; 32
    3c0c:	51 e4       	ldi	r21, 0x41	; 65
    3c0e:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3c12:	dc 01       	movw	r26, r24
    3c14:	cb 01       	movw	r24, r22
    3c16:	8e 01       	movw	r16, r28
    3c18:	05 5b       	subi	r16, 0xB5	; 181
    3c1a:	1f 4f       	sbci	r17, 0xFF	; 255
    3c1c:	bc 01       	movw	r22, r24
    3c1e:	cd 01       	movw	r24, r26
    3c20:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3c24:	dc 01       	movw	r26, r24
    3c26:	cb 01       	movw	r24, r22
    3c28:	f8 01       	movw	r30, r16
    3c2a:	91 83       	std	Z+1, r25	; 0x01
    3c2c:	80 83       	st	Z, r24
    3c2e:	1f c0       	rjmp	.+62     	; 0x3c6e <Lcd_VidSendCommand+0x2a0>
    3c30:	fe 01       	movw	r30, r28
    3c32:	e7 5b       	subi	r30, 0xB7	; 183
    3c34:	ff 4f       	sbci	r31, 0xFF	; 255
    3c36:	89 e1       	ldi	r24, 0x19	; 25
    3c38:	90 e0       	ldi	r25, 0x00	; 0
    3c3a:	91 83       	std	Z+1, r25	; 0x01
    3c3c:	80 83       	st	Z, r24
    3c3e:	fe 01       	movw	r30, r28
    3c40:	e7 5b       	subi	r30, 0xB7	; 183
    3c42:	ff 4f       	sbci	r31, 0xFF	; 255
    3c44:	80 81       	ld	r24, Z
    3c46:	91 81       	ldd	r25, Z+1	; 0x01
    3c48:	01 97       	sbiw	r24, 0x01	; 1
    3c4a:	f1 f7       	brne	.-4      	; 0x3c48 <Lcd_VidSendCommand+0x27a>
    3c4c:	fe 01       	movw	r30, r28
    3c4e:	e7 5b       	subi	r30, 0xB7	; 183
    3c50:	ff 4f       	sbci	r31, 0xFF	; 255
    3c52:	91 83       	std	Z+1, r25	; 0x01
    3c54:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c56:	de 01       	movw	r26, r28
    3c58:	a5 5b       	subi	r26, 0xB5	; 181
    3c5a:	bf 4f       	sbci	r27, 0xFF	; 255
    3c5c:	fe 01       	movw	r30, r28
    3c5e:	e5 5b       	subi	r30, 0xB5	; 181
    3c60:	ff 4f       	sbci	r31, 0xFF	; 255
    3c62:	80 81       	ld	r24, Z
    3c64:	91 81       	ldd	r25, Z+1	; 0x01
    3c66:	01 97       	sbiw	r24, 0x01	; 1
    3c68:	11 96       	adiw	r26, 0x01	; 1
    3c6a:	9c 93       	st	X, r25
    3c6c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c6e:	fe 01       	movw	r30, r28
    3c70:	e5 5b       	subi	r30, 0xB5	; 181
    3c72:	ff 4f       	sbci	r31, 0xFF	; 255
    3c74:	80 81       	ld	r24, Z
    3c76:	91 81       	ldd	r25, Z+1	; 0x01
    3c78:	00 97       	sbiw	r24, 0x00	; 0
    3c7a:	d1 f6       	brne	.-76     	; 0x3c30 <Lcd_VidSendCommand+0x262>
    3c7c:	27 c0       	rjmp	.+78     	; 0x3ccc <Lcd_VidSendCommand+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c7e:	8e 01       	movw	r16, r28
    3c80:	05 5b       	subi	r16, 0xB5	; 181
    3c82:	1f 4f       	sbci	r17, 0xFF	; 255
    3c84:	fe 01       	movw	r30, r28
    3c86:	e3 5b       	subi	r30, 0xB3	; 179
    3c88:	ff 4f       	sbci	r31, 0xFF	; 255
    3c8a:	60 81       	ld	r22, Z
    3c8c:	71 81       	ldd	r23, Z+1	; 0x01
    3c8e:	82 81       	ldd	r24, Z+2	; 0x02
    3c90:	93 81       	ldd	r25, Z+3	; 0x03
    3c92:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3c96:	dc 01       	movw	r26, r24
    3c98:	cb 01       	movw	r24, r22
    3c9a:	f8 01       	movw	r30, r16
    3c9c:	91 83       	std	Z+1, r25	; 0x01
    3c9e:	80 83       	st	Z, r24
    3ca0:	de 01       	movw	r26, r28
    3ca2:	a9 5b       	subi	r26, 0xB9	; 185
    3ca4:	bf 4f       	sbci	r27, 0xFF	; 255
    3ca6:	fe 01       	movw	r30, r28
    3ca8:	e5 5b       	subi	r30, 0xB5	; 181
    3caa:	ff 4f       	sbci	r31, 0xFF	; 255
    3cac:	80 81       	ld	r24, Z
    3cae:	91 81       	ldd	r25, Z+1	; 0x01
    3cb0:	8d 93       	st	X+, r24
    3cb2:	9c 93       	st	X, r25
    3cb4:	fe 01       	movw	r30, r28
    3cb6:	e9 5b       	subi	r30, 0xB9	; 185
    3cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cba:	80 81       	ld	r24, Z
    3cbc:	91 81       	ldd	r25, Z+1	; 0x01
    3cbe:	01 97       	sbiw	r24, 0x01	; 1
    3cc0:	f1 f7       	brne	.-4      	; 0x3cbe <Lcd_VidSendCommand+0x2f0>
    3cc2:	fe 01       	movw	r30, r28
    3cc4:	e9 5b       	subi	r30, 0xB9	; 185
    3cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc8:	91 83       	std	Z+1, r25	; 0x01
    3cca:	80 83       	st	Z, r24
	_delay_ms(1);
#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,4));
    3ccc:	fe 01       	movw	r30, r28
    3cce:	ed 59       	subi	r30, 0x9D	; 157
    3cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd2:	80 81       	ld	r24, Z
    3cd4:	88 2f       	mov	r24, r24
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	80 71       	andi	r24, 0x10	; 16
    3cda:	90 70       	andi	r25, 0x00	; 0
    3cdc:	95 95       	asr	r25
    3cde:	87 95       	ror	r24
    3ce0:	95 95       	asr	r25
    3ce2:	87 95       	ror	r24
    3ce4:	95 95       	asr	r25
    3ce6:	87 95       	ror	r24
    3ce8:	95 95       	asr	r25
    3cea:	87 95       	ror	r24
    3cec:	98 2f       	mov	r25, r24
    3cee:	82 e1       	ldi	r24, 0x12	; 18
    3cf0:	69 2f       	mov	r22, r25
    3cf2:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,5));
    3cf6:	fe 01       	movw	r30, r28
    3cf8:	ed 59       	subi	r30, 0x9D	; 157
    3cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    3cfc:	80 81       	ld	r24, Z
    3cfe:	88 2f       	mov	r24, r24
    3d00:	90 e0       	ldi	r25, 0x00	; 0
    3d02:	80 72       	andi	r24, 0x20	; 32
    3d04:	90 70       	andi	r25, 0x00	; 0
    3d06:	95 95       	asr	r25
    3d08:	87 95       	ror	r24
    3d0a:	95 95       	asr	r25
    3d0c:	87 95       	ror	r24
    3d0e:	95 95       	asr	r25
    3d10:	87 95       	ror	r24
    3d12:	95 95       	asr	r25
    3d14:	87 95       	ror	r24
    3d16:	95 95       	asr	r25
    3d18:	87 95       	ror	r24
    3d1a:	98 2f       	mov	r25, r24
    3d1c:	83 e1       	ldi	r24, 0x13	; 19
    3d1e:	69 2f       	mov	r22, r25
    3d20:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,6));
    3d24:	fe 01       	movw	r30, r28
    3d26:	ed 59       	subi	r30, 0x9D	; 157
    3d28:	ff 4f       	sbci	r31, 0xFF	; 255
    3d2a:	80 81       	ld	r24, Z
    3d2c:	88 2f       	mov	r24, r24
    3d2e:	90 e0       	ldi	r25, 0x00	; 0
    3d30:	80 74       	andi	r24, 0x40	; 64
    3d32:	90 70       	andi	r25, 0x00	; 0
    3d34:	08 2e       	mov	r0, r24
    3d36:	89 2f       	mov	r24, r25
    3d38:	00 0c       	add	r0, r0
    3d3a:	88 1f       	adc	r24, r24
    3d3c:	99 0b       	sbc	r25, r25
    3d3e:	00 0c       	add	r0, r0
    3d40:	88 1f       	adc	r24, r24
    3d42:	99 1f       	adc	r25, r25
    3d44:	98 2f       	mov	r25, r24
    3d46:	84 e1       	ldi	r24, 0x14	; 20
    3d48:	69 2f       	mov	r22, r25
    3d4a:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,7));
    3d4e:	fe 01       	movw	r30, r28
    3d50:	ed 59       	subi	r30, 0x9D	; 157
    3d52:	ff 4f       	sbci	r31, 0xFF	; 255
    3d54:	80 81       	ld	r24, Z
    3d56:	98 2f       	mov	r25, r24
    3d58:	99 1f       	adc	r25, r25
    3d5a:	99 27       	eor	r25, r25
    3d5c:	99 1f       	adc	r25, r25
    3d5e:	85 e1       	ldi	r24, 0x15	; 21
    3d60:	69 2f       	mov	r22, r25
    3d62:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    3d66:	fe 01       	movw	r30, r28
    3d68:	ed 5b       	subi	r30, 0xBD	; 189
    3d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6c:	80 e0       	ldi	r24, 0x00	; 0
    3d6e:	90 e0       	ldi	r25, 0x00	; 0
    3d70:	a0 e8       	ldi	r26, 0x80	; 128
    3d72:	bf e3       	ldi	r27, 0x3F	; 63
    3d74:	80 83       	st	Z, r24
    3d76:	91 83       	std	Z+1, r25	; 0x01
    3d78:	a2 83       	std	Z+2, r26	; 0x02
    3d7a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d7c:	8e 01       	movw	r16, r28
    3d7e:	01 5c       	subi	r16, 0xC1	; 193
    3d80:	1f 4f       	sbci	r17, 0xFF	; 255
    3d82:	fe 01       	movw	r30, r28
    3d84:	ed 5b       	subi	r30, 0xBD	; 189
    3d86:	ff 4f       	sbci	r31, 0xFF	; 255
    3d88:	60 81       	ld	r22, Z
    3d8a:	71 81       	ldd	r23, Z+1	; 0x01
    3d8c:	82 81       	ldd	r24, Z+2	; 0x02
    3d8e:	93 81       	ldd	r25, Z+3	; 0x03
    3d90:	20 e0       	ldi	r18, 0x00	; 0
    3d92:	30 e0       	ldi	r19, 0x00	; 0
    3d94:	4a e7       	ldi	r20, 0x7A	; 122
    3d96:	53 e4       	ldi	r21, 0x43	; 67
    3d98:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3d9c:	dc 01       	movw	r26, r24
    3d9e:	cb 01       	movw	r24, r22
    3da0:	f8 01       	movw	r30, r16
    3da2:	80 83       	st	Z, r24
    3da4:	91 83       	std	Z+1, r25	; 0x01
    3da6:	a2 83       	std	Z+2, r26	; 0x02
    3da8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3daa:	fe 01       	movw	r30, r28
    3dac:	ff 96       	adiw	r30, 0x3f	; 63
    3dae:	60 81       	ld	r22, Z
    3db0:	71 81       	ldd	r23, Z+1	; 0x01
    3db2:	82 81       	ldd	r24, Z+2	; 0x02
    3db4:	93 81       	ldd	r25, Z+3	; 0x03
    3db6:	20 e0       	ldi	r18, 0x00	; 0
    3db8:	30 e0       	ldi	r19, 0x00	; 0
    3dba:	40 e8       	ldi	r20, 0x80	; 128
    3dbc:	5f e3       	ldi	r21, 0x3F	; 63
    3dbe:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    3dc2:	88 23       	and	r24, r24
    3dc4:	2c f4       	brge	.+10     	; 0x3dd0 <Lcd_VidSendCommand+0x402>
		__ticks = 1;
    3dc6:	81 e0       	ldi	r24, 0x01	; 1
    3dc8:	90 e0       	ldi	r25, 0x00	; 0
    3dca:	9e af       	std	Y+62, r25	; 0x3e
    3dcc:	8d af       	std	Y+61, r24	; 0x3d
    3dce:	46 c0       	rjmp	.+140    	; 0x3e5c <Lcd_VidSendCommand+0x48e>
	else if (__tmp > 65535)
    3dd0:	fe 01       	movw	r30, r28
    3dd2:	ff 96       	adiw	r30, 0x3f	; 63
    3dd4:	60 81       	ld	r22, Z
    3dd6:	71 81       	ldd	r23, Z+1	; 0x01
    3dd8:	82 81       	ldd	r24, Z+2	; 0x02
    3dda:	93 81       	ldd	r25, Z+3	; 0x03
    3ddc:	20 e0       	ldi	r18, 0x00	; 0
    3dde:	3f ef       	ldi	r19, 0xFF	; 255
    3de0:	4f e7       	ldi	r20, 0x7F	; 127
    3de2:	57 e4       	ldi	r21, 0x47	; 71
    3de4:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    3de8:	18 16       	cp	r1, r24
    3dea:	64 f5       	brge	.+88     	; 0x3e44 <Lcd_VidSendCommand+0x476>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dec:	fe 01       	movw	r30, r28
    3dee:	ed 5b       	subi	r30, 0xBD	; 189
    3df0:	ff 4f       	sbci	r31, 0xFF	; 255
    3df2:	60 81       	ld	r22, Z
    3df4:	71 81       	ldd	r23, Z+1	; 0x01
    3df6:	82 81       	ldd	r24, Z+2	; 0x02
    3df8:	93 81       	ldd	r25, Z+3	; 0x03
    3dfa:	20 e0       	ldi	r18, 0x00	; 0
    3dfc:	30 e0       	ldi	r19, 0x00	; 0
    3dfe:	40 e2       	ldi	r20, 0x20	; 32
    3e00:	51 e4       	ldi	r21, 0x41	; 65
    3e02:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3e06:	dc 01       	movw	r26, r24
    3e08:	cb 01       	movw	r24, r22
    3e0a:	bc 01       	movw	r22, r24
    3e0c:	cd 01       	movw	r24, r26
    3e0e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3e12:	dc 01       	movw	r26, r24
    3e14:	cb 01       	movw	r24, r22
    3e16:	9e af       	std	Y+62, r25	; 0x3e
    3e18:	8d af       	std	Y+61, r24	; 0x3d
    3e1a:	0f c0       	rjmp	.+30     	; 0x3e3a <Lcd_VidSendCommand+0x46c>
    3e1c:	89 e1       	ldi	r24, 0x19	; 25
    3e1e:	90 e0       	ldi	r25, 0x00	; 0
    3e20:	9c af       	std	Y+60, r25	; 0x3c
    3e22:	8b af       	std	Y+59, r24	; 0x3b
    3e24:	8b ad       	ldd	r24, Y+59	; 0x3b
    3e26:	9c ad       	ldd	r25, Y+60	; 0x3c
    3e28:	01 97       	sbiw	r24, 0x01	; 1
    3e2a:	f1 f7       	brne	.-4      	; 0x3e28 <Lcd_VidSendCommand+0x45a>
    3e2c:	9c af       	std	Y+60, r25	; 0x3c
    3e2e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e30:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e32:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e34:	01 97       	sbiw	r24, 0x01	; 1
    3e36:	9e af       	std	Y+62, r25	; 0x3e
    3e38:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e3a:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e3c:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e3e:	00 97       	sbiw	r24, 0x00	; 0
    3e40:	69 f7       	brne	.-38     	; 0x3e1c <Lcd_VidSendCommand+0x44e>
    3e42:	16 c0       	rjmp	.+44     	; 0x3e70 <Lcd_VidSendCommand+0x4a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e44:	fe 01       	movw	r30, r28
    3e46:	ff 96       	adiw	r30, 0x3f	; 63
    3e48:	60 81       	ld	r22, Z
    3e4a:	71 81       	ldd	r23, Z+1	; 0x01
    3e4c:	82 81       	ldd	r24, Z+2	; 0x02
    3e4e:	93 81       	ldd	r25, Z+3	; 0x03
    3e50:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3e54:	dc 01       	movw	r26, r24
    3e56:	cb 01       	movw	r24, r22
    3e58:	9e af       	std	Y+62, r25	; 0x3e
    3e5a:	8d af       	std	Y+61, r24	; 0x3d
    3e5c:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e5e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e60:	9a af       	std	Y+58, r25	; 0x3a
    3e62:	89 af       	std	Y+57, r24	; 0x39
    3e64:	89 ad       	ldd	r24, Y+57	; 0x39
    3e66:	9a ad       	ldd	r25, Y+58	; 0x3a
    3e68:	01 97       	sbiw	r24, 0x01	; 1
    3e6a:	f1 f7       	brne	.-4      	; 0x3e68 <Lcd_VidSendCommand+0x49a>
    3e6c:	9a af       	std	Y+58, r25	; 0x3a
    3e6e:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    3e70:	81 e1       	ldi	r24, 0x11	; 17
    3e72:	60 e0       	ldi	r22, 0x00	; 0
    3e74:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    3e78:	80 e0       	ldi	r24, 0x00	; 0
    3e7a:	90 e0       	ldi	r25, 0x00	; 0
    3e7c:	a0 e8       	ldi	r26, 0x80	; 128
    3e7e:	bf e3       	ldi	r27, 0x3F	; 63
    3e80:	8d ab       	std	Y+53, r24	; 0x35
    3e82:	9e ab       	std	Y+54, r25	; 0x36
    3e84:	af ab       	std	Y+55, r26	; 0x37
    3e86:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e88:	6d a9       	ldd	r22, Y+53	; 0x35
    3e8a:	7e a9       	ldd	r23, Y+54	; 0x36
    3e8c:	8f a9       	ldd	r24, Y+55	; 0x37
    3e8e:	98 ad       	ldd	r25, Y+56	; 0x38
    3e90:	20 e0       	ldi	r18, 0x00	; 0
    3e92:	30 e0       	ldi	r19, 0x00	; 0
    3e94:	4a e7       	ldi	r20, 0x7A	; 122
    3e96:	53 e4       	ldi	r21, 0x43	; 67
    3e98:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3e9c:	dc 01       	movw	r26, r24
    3e9e:	cb 01       	movw	r24, r22
    3ea0:	89 ab       	std	Y+49, r24	; 0x31
    3ea2:	9a ab       	std	Y+50, r25	; 0x32
    3ea4:	ab ab       	std	Y+51, r26	; 0x33
    3ea6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3ea8:	69 a9       	ldd	r22, Y+49	; 0x31
    3eaa:	7a a9       	ldd	r23, Y+50	; 0x32
    3eac:	8b a9       	ldd	r24, Y+51	; 0x33
    3eae:	9c a9       	ldd	r25, Y+52	; 0x34
    3eb0:	20 e0       	ldi	r18, 0x00	; 0
    3eb2:	30 e0       	ldi	r19, 0x00	; 0
    3eb4:	40 e8       	ldi	r20, 0x80	; 128
    3eb6:	5f e3       	ldi	r21, 0x3F	; 63
    3eb8:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    3ebc:	88 23       	and	r24, r24
    3ebe:	2c f4       	brge	.+10     	; 0x3eca <Lcd_VidSendCommand+0x4fc>
		__ticks = 1;
    3ec0:	81 e0       	ldi	r24, 0x01	; 1
    3ec2:	90 e0       	ldi	r25, 0x00	; 0
    3ec4:	98 ab       	std	Y+48, r25	; 0x30
    3ec6:	8f a7       	std	Y+47, r24	; 0x2f
    3ec8:	3f c0       	rjmp	.+126    	; 0x3f48 <Lcd_VidSendCommand+0x57a>
	else if (__tmp > 65535)
    3eca:	69 a9       	ldd	r22, Y+49	; 0x31
    3ecc:	7a a9       	ldd	r23, Y+50	; 0x32
    3ece:	8b a9       	ldd	r24, Y+51	; 0x33
    3ed0:	9c a9       	ldd	r25, Y+52	; 0x34
    3ed2:	20 e0       	ldi	r18, 0x00	; 0
    3ed4:	3f ef       	ldi	r19, 0xFF	; 255
    3ed6:	4f e7       	ldi	r20, 0x7F	; 127
    3ed8:	57 e4       	ldi	r21, 0x47	; 71
    3eda:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    3ede:	18 16       	cp	r1, r24
    3ee0:	4c f5       	brge	.+82     	; 0x3f34 <Lcd_VidSendCommand+0x566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ee2:	6d a9       	ldd	r22, Y+53	; 0x35
    3ee4:	7e a9       	ldd	r23, Y+54	; 0x36
    3ee6:	8f a9       	ldd	r24, Y+55	; 0x37
    3ee8:	98 ad       	ldd	r25, Y+56	; 0x38
    3eea:	20 e0       	ldi	r18, 0x00	; 0
    3eec:	30 e0       	ldi	r19, 0x00	; 0
    3eee:	40 e2       	ldi	r20, 0x20	; 32
    3ef0:	51 e4       	ldi	r21, 0x41	; 65
    3ef2:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3ef6:	dc 01       	movw	r26, r24
    3ef8:	cb 01       	movw	r24, r22
    3efa:	bc 01       	movw	r22, r24
    3efc:	cd 01       	movw	r24, r26
    3efe:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3f02:	dc 01       	movw	r26, r24
    3f04:	cb 01       	movw	r24, r22
    3f06:	98 ab       	std	Y+48, r25	; 0x30
    3f08:	8f a7       	std	Y+47, r24	; 0x2f
    3f0a:	0f c0       	rjmp	.+30     	; 0x3f2a <Lcd_VidSendCommand+0x55c>
    3f0c:	89 e1       	ldi	r24, 0x19	; 25
    3f0e:	90 e0       	ldi	r25, 0x00	; 0
    3f10:	9e a7       	std	Y+46, r25	; 0x2e
    3f12:	8d a7       	std	Y+45, r24	; 0x2d
    3f14:	8d a5       	ldd	r24, Y+45	; 0x2d
    3f16:	9e a5       	ldd	r25, Y+46	; 0x2e
    3f18:	01 97       	sbiw	r24, 0x01	; 1
    3f1a:	f1 f7       	brne	.-4      	; 0x3f18 <Lcd_VidSendCommand+0x54a>
    3f1c:	9e a7       	std	Y+46, r25	; 0x2e
    3f1e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f20:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f22:	98 a9       	ldd	r25, Y+48	; 0x30
    3f24:	01 97       	sbiw	r24, 0x01	; 1
    3f26:	98 ab       	std	Y+48, r25	; 0x30
    3f28:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f2a:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f2c:	98 a9       	ldd	r25, Y+48	; 0x30
    3f2e:	00 97       	sbiw	r24, 0x00	; 0
    3f30:	69 f7       	brne	.-38     	; 0x3f0c <Lcd_VidSendCommand+0x53e>
    3f32:	14 c0       	rjmp	.+40     	; 0x3f5c <Lcd_VidSendCommand+0x58e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f34:	69 a9       	ldd	r22, Y+49	; 0x31
    3f36:	7a a9       	ldd	r23, Y+50	; 0x32
    3f38:	8b a9       	ldd	r24, Y+51	; 0x33
    3f3a:	9c a9       	ldd	r25, Y+52	; 0x34
    3f3c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3f40:	dc 01       	movw	r26, r24
    3f42:	cb 01       	movw	r24, r22
    3f44:	98 ab       	std	Y+48, r25	; 0x30
    3f46:	8f a7       	std	Y+47, r24	; 0x2f
    3f48:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f4a:	98 a9       	ldd	r25, Y+48	; 0x30
    3f4c:	9c a7       	std	Y+44, r25	; 0x2c
    3f4e:	8b a7       	std	Y+43, r24	; 0x2b
    3f50:	8b a5       	ldd	r24, Y+43	; 0x2b
    3f52:	9c a5       	ldd	r25, Y+44	; 0x2c
    3f54:	01 97       	sbiw	r24, 0x01	; 1
    3f56:	f1 f7       	brne	.-4      	; 0x3f54 <Lcd_VidSendCommand+0x586>
    3f58:	9c a7       	std	Y+44, r25	; 0x2c
    3f5a:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    3f5c:	81 e1       	ldi	r24, 0x11	; 17
    3f5e:	61 e0       	ldi	r22, 0x01	; 1
    3f60:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    3f64:	80 e0       	ldi	r24, 0x00	; 0
    3f66:	90 e0       	ldi	r25, 0x00	; 0
    3f68:	a0 e8       	ldi	r26, 0x80	; 128
    3f6a:	bf e3       	ldi	r27, 0x3F	; 63
    3f6c:	8f a3       	std	Y+39, r24	; 0x27
    3f6e:	98 a7       	std	Y+40, r25	; 0x28
    3f70:	a9 a7       	std	Y+41, r26	; 0x29
    3f72:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f74:	6f a1       	ldd	r22, Y+39	; 0x27
    3f76:	78 a5       	ldd	r23, Y+40	; 0x28
    3f78:	89 a5       	ldd	r24, Y+41	; 0x29
    3f7a:	9a a5       	ldd	r25, Y+42	; 0x2a
    3f7c:	20 e0       	ldi	r18, 0x00	; 0
    3f7e:	30 e0       	ldi	r19, 0x00	; 0
    3f80:	4a e7       	ldi	r20, 0x7A	; 122
    3f82:	53 e4       	ldi	r21, 0x43	; 67
    3f84:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3f88:	dc 01       	movw	r26, r24
    3f8a:	cb 01       	movw	r24, r22
    3f8c:	8b a3       	std	Y+35, r24	; 0x23
    3f8e:	9c a3       	std	Y+36, r25	; 0x24
    3f90:	ad a3       	std	Y+37, r26	; 0x25
    3f92:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3f94:	6b a1       	ldd	r22, Y+35	; 0x23
    3f96:	7c a1       	ldd	r23, Y+36	; 0x24
    3f98:	8d a1       	ldd	r24, Y+37	; 0x25
    3f9a:	9e a1       	ldd	r25, Y+38	; 0x26
    3f9c:	20 e0       	ldi	r18, 0x00	; 0
    3f9e:	30 e0       	ldi	r19, 0x00	; 0
    3fa0:	40 e8       	ldi	r20, 0x80	; 128
    3fa2:	5f e3       	ldi	r21, 0x3F	; 63
    3fa4:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    3fa8:	88 23       	and	r24, r24
    3faa:	2c f4       	brge	.+10     	; 0x3fb6 <Lcd_VidSendCommand+0x5e8>
		__ticks = 1;
    3fac:	81 e0       	ldi	r24, 0x01	; 1
    3fae:	90 e0       	ldi	r25, 0x00	; 0
    3fb0:	9a a3       	std	Y+34, r25	; 0x22
    3fb2:	89 a3       	std	Y+33, r24	; 0x21
    3fb4:	3f c0       	rjmp	.+126    	; 0x4034 <Lcd_VidSendCommand+0x666>
	else if (__tmp > 65535)
    3fb6:	6b a1       	ldd	r22, Y+35	; 0x23
    3fb8:	7c a1       	ldd	r23, Y+36	; 0x24
    3fba:	8d a1       	ldd	r24, Y+37	; 0x25
    3fbc:	9e a1       	ldd	r25, Y+38	; 0x26
    3fbe:	20 e0       	ldi	r18, 0x00	; 0
    3fc0:	3f ef       	ldi	r19, 0xFF	; 255
    3fc2:	4f e7       	ldi	r20, 0x7F	; 127
    3fc4:	57 e4       	ldi	r21, 0x47	; 71
    3fc6:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    3fca:	18 16       	cp	r1, r24
    3fcc:	4c f5       	brge	.+82     	; 0x4020 <Lcd_VidSendCommand+0x652>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fce:	6f a1       	ldd	r22, Y+39	; 0x27
    3fd0:	78 a5       	ldd	r23, Y+40	; 0x28
    3fd2:	89 a5       	ldd	r24, Y+41	; 0x29
    3fd4:	9a a5       	ldd	r25, Y+42	; 0x2a
    3fd6:	20 e0       	ldi	r18, 0x00	; 0
    3fd8:	30 e0       	ldi	r19, 0x00	; 0
    3fda:	40 e2       	ldi	r20, 0x20	; 32
    3fdc:	51 e4       	ldi	r21, 0x41	; 65
    3fde:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    3fe2:	dc 01       	movw	r26, r24
    3fe4:	cb 01       	movw	r24, r22
    3fe6:	bc 01       	movw	r22, r24
    3fe8:	cd 01       	movw	r24, r26
    3fea:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3fee:	dc 01       	movw	r26, r24
    3ff0:	cb 01       	movw	r24, r22
    3ff2:	9a a3       	std	Y+34, r25	; 0x22
    3ff4:	89 a3       	std	Y+33, r24	; 0x21
    3ff6:	0f c0       	rjmp	.+30     	; 0x4016 <Lcd_VidSendCommand+0x648>
    3ff8:	89 e1       	ldi	r24, 0x19	; 25
    3ffa:	90 e0       	ldi	r25, 0x00	; 0
    3ffc:	98 a3       	std	Y+32, r25	; 0x20
    3ffe:	8f 8f       	std	Y+31, r24	; 0x1f
    4000:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4002:	98 a1       	ldd	r25, Y+32	; 0x20
    4004:	01 97       	sbiw	r24, 0x01	; 1
    4006:	f1 f7       	brne	.-4      	; 0x4004 <Lcd_VidSendCommand+0x636>
    4008:	98 a3       	std	Y+32, r25	; 0x20
    400a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    400c:	89 a1       	ldd	r24, Y+33	; 0x21
    400e:	9a a1       	ldd	r25, Y+34	; 0x22
    4010:	01 97       	sbiw	r24, 0x01	; 1
    4012:	9a a3       	std	Y+34, r25	; 0x22
    4014:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4016:	89 a1       	ldd	r24, Y+33	; 0x21
    4018:	9a a1       	ldd	r25, Y+34	; 0x22
    401a:	00 97       	sbiw	r24, 0x00	; 0
    401c:	69 f7       	brne	.-38     	; 0x3ff8 <Lcd_VidSendCommand+0x62a>
    401e:	14 c0       	rjmp	.+40     	; 0x4048 <Lcd_VidSendCommand+0x67a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4020:	6b a1       	ldd	r22, Y+35	; 0x23
    4022:	7c a1       	ldd	r23, Y+36	; 0x24
    4024:	8d a1       	ldd	r24, Y+37	; 0x25
    4026:	9e a1       	ldd	r25, Y+38	; 0x26
    4028:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    402c:	dc 01       	movw	r26, r24
    402e:	cb 01       	movw	r24, r22
    4030:	9a a3       	std	Y+34, r25	; 0x22
    4032:	89 a3       	std	Y+33, r24	; 0x21
    4034:	89 a1       	ldd	r24, Y+33	; 0x21
    4036:	9a a1       	ldd	r25, Y+34	; 0x22
    4038:	9e 8f       	std	Y+30, r25	; 0x1e
    403a:	8d 8f       	std	Y+29, r24	; 0x1d
    403c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    403e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4040:	01 97       	sbiw	r24, 0x01	; 1
    4042:	f1 f7       	brne	.-4      	; 0x4040 <Lcd_VidSendCommand+0x672>
    4044:	9e 8f       	std	Y+30, r25	; 0x1e
    4046:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,0));
    4048:	fe 01       	movw	r30, r28
    404a:	ed 59       	subi	r30, 0x9D	; 157
    404c:	ff 4f       	sbci	r31, 0xFF	; 255
    404e:	80 81       	ld	r24, Z
    4050:	98 2f       	mov	r25, r24
    4052:	91 70       	andi	r25, 0x01	; 1
    4054:	82 e1       	ldi	r24, 0x12	; 18
    4056:	69 2f       	mov	r22, r25
    4058:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,1));
    405c:	fe 01       	movw	r30, r28
    405e:	ed 59       	subi	r30, 0x9D	; 157
    4060:	ff 4f       	sbci	r31, 0xFF	; 255
    4062:	80 81       	ld	r24, Z
    4064:	88 2f       	mov	r24, r24
    4066:	90 e0       	ldi	r25, 0x00	; 0
    4068:	82 70       	andi	r24, 0x02	; 2
    406a:	90 70       	andi	r25, 0x00	; 0
    406c:	95 95       	asr	r25
    406e:	87 95       	ror	r24
    4070:	98 2f       	mov	r25, r24
    4072:	83 e1       	ldi	r24, 0x13	; 19
    4074:	69 2f       	mov	r22, r25
    4076:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,2));
    407a:	fe 01       	movw	r30, r28
    407c:	ed 59       	subi	r30, 0x9D	; 157
    407e:	ff 4f       	sbci	r31, 0xFF	; 255
    4080:	80 81       	ld	r24, Z
    4082:	88 2f       	mov	r24, r24
    4084:	90 e0       	ldi	r25, 0x00	; 0
    4086:	84 70       	andi	r24, 0x04	; 4
    4088:	90 70       	andi	r25, 0x00	; 0
    408a:	95 95       	asr	r25
    408c:	87 95       	ror	r24
    408e:	95 95       	asr	r25
    4090:	87 95       	ror	r24
    4092:	98 2f       	mov	r25, r24
    4094:	84 e1       	ldi	r24, 0x14	; 20
    4096:	69 2f       	mov	r22, r25
    4098:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,3));
    409c:	fe 01       	movw	r30, r28
    409e:	ed 59       	subi	r30, 0x9D	; 157
    40a0:	ff 4f       	sbci	r31, 0xFF	; 255
    40a2:	80 81       	ld	r24, Z
    40a4:	88 2f       	mov	r24, r24
    40a6:	90 e0       	ldi	r25, 0x00	; 0
    40a8:	88 70       	andi	r24, 0x08	; 8
    40aa:	90 70       	andi	r25, 0x00	; 0
    40ac:	95 95       	asr	r25
    40ae:	87 95       	ror	r24
    40b0:	95 95       	asr	r25
    40b2:	87 95       	ror	r24
    40b4:	95 95       	asr	r25
    40b6:	87 95       	ror	r24
    40b8:	98 2f       	mov	r25, r24
    40ba:	85 e1       	ldi	r24, 0x15	; 21
    40bc:	69 2f       	mov	r22, r25
    40be:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    40c2:	80 e0       	ldi	r24, 0x00	; 0
    40c4:	90 e0       	ldi	r25, 0x00	; 0
    40c6:	a0 e8       	ldi	r26, 0x80	; 128
    40c8:	bf e3       	ldi	r27, 0x3F	; 63
    40ca:	89 8f       	std	Y+25, r24	; 0x19
    40cc:	9a 8f       	std	Y+26, r25	; 0x1a
    40ce:	ab 8f       	std	Y+27, r26	; 0x1b
    40d0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40d2:	69 8d       	ldd	r22, Y+25	; 0x19
    40d4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    40d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    40d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    40da:	20 e0       	ldi	r18, 0x00	; 0
    40dc:	30 e0       	ldi	r19, 0x00	; 0
    40de:	4a e7       	ldi	r20, 0x7A	; 122
    40e0:	53 e4       	ldi	r21, 0x43	; 67
    40e2:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    40e6:	dc 01       	movw	r26, r24
    40e8:	cb 01       	movw	r24, r22
    40ea:	8d 8b       	std	Y+21, r24	; 0x15
    40ec:	9e 8b       	std	Y+22, r25	; 0x16
    40ee:	af 8b       	std	Y+23, r26	; 0x17
    40f0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    40f2:	6d 89       	ldd	r22, Y+21	; 0x15
    40f4:	7e 89       	ldd	r23, Y+22	; 0x16
    40f6:	8f 89       	ldd	r24, Y+23	; 0x17
    40f8:	98 8d       	ldd	r25, Y+24	; 0x18
    40fa:	20 e0       	ldi	r18, 0x00	; 0
    40fc:	30 e0       	ldi	r19, 0x00	; 0
    40fe:	40 e8       	ldi	r20, 0x80	; 128
    4100:	5f e3       	ldi	r21, 0x3F	; 63
    4102:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    4106:	88 23       	and	r24, r24
    4108:	2c f4       	brge	.+10     	; 0x4114 <Lcd_VidSendCommand+0x746>
		__ticks = 1;
    410a:	81 e0       	ldi	r24, 0x01	; 1
    410c:	90 e0       	ldi	r25, 0x00	; 0
    410e:	9c 8b       	std	Y+20, r25	; 0x14
    4110:	8b 8b       	std	Y+19, r24	; 0x13
    4112:	3f c0       	rjmp	.+126    	; 0x4192 <Lcd_VidSendCommand+0x7c4>
	else if (__tmp > 65535)
    4114:	6d 89       	ldd	r22, Y+21	; 0x15
    4116:	7e 89       	ldd	r23, Y+22	; 0x16
    4118:	8f 89       	ldd	r24, Y+23	; 0x17
    411a:	98 8d       	ldd	r25, Y+24	; 0x18
    411c:	20 e0       	ldi	r18, 0x00	; 0
    411e:	3f ef       	ldi	r19, 0xFF	; 255
    4120:	4f e7       	ldi	r20, 0x7F	; 127
    4122:	57 e4       	ldi	r21, 0x47	; 71
    4124:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    4128:	18 16       	cp	r1, r24
    412a:	4c f5       	brge	.+82     	; 0x417e <Lcd_VidSendCommand+0x7b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    412c:	69 8d       	ldd	r22, Y+25	; 0x19
    412e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4130:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4132:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4134:	20 e0       	ldi	r18, 0x00	; 0
    4136:	30 e0       	ldi	r19, 0x00	; 0
    4138:	40 e2       	ldi	r20, 0x20	; 32
    413a:	51 e4       	ldi	r21, 0x41	; 65
    413c:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4140:	dc 01       	movw	r26, r24
    4142:	cb 01       	movw	r24, r22
    4144:	bc 01       	movw	r22, r24
    4146:	cd 01       	movw	r24, r26
    4148:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    414c:	dc 01       	movw	r26, r24
    414e:	cb 01       	movw	r24, r22
    4150:	9c 8b       	std	Y+20, r25	; 0x14
    4152:	8b 8b       	std	Y+19, r24	; 0x13
    4154:	0f c0       	rjmp	.+30     	; 0x4174 <Lcd_VidSendCommand+0x7a6>
    4156:	89 e1       	ldi	r24, 0x19	; 25
    4158:	90 e0       	ldi	r25, 0x00	; 0
    415a:	9a 8b       	std	Y+18, r25	; 0x12
    415c:	89 8b       	std	Y+17, r24	; 0x11
    415e:	89 89       	ldd	r24, Y+17	; 0x11
    4160:	9a 89       	ldd	r25, Y+18	; 0x12
    4162:	01 97       	sbiw	r24, 0x01	; 1
    4164:	f1 f7       	brne	.-4      	; 0x4162 <Lcd_VidSendCommand+0x794>
    4166:	9a 8b       	std	Y+18, r25	; 0x12
    4168:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    416a:	8b 89       	ldd	r24, Y+19	; 0x13
    416c:	9c 89       	ldd	r25, Y+20	; 0x14
    416e:	01 97       	sbiw	r24, 0x01	; 1
    4170:	9c 8b       	std	Y+20, r25	; 0x14
    4172:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4174:	8b 89       	ldd	r24, Y+19	; 0x13
    4176:	9c 89       	ldd	r25, Y+20	; 0x14
    4178:	00 97       	sbiw	r24, 0x00	; 0
    417a:	69 f7       	brne	.-38     	; 0x4156 <Lcd_VidSendCommand+0x788>
    417c:	14 c0       	rjmp	.+40     	; 0x41a6 <Lcd_VidSendCommand+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    417e:	6d 89       	ldd	r22, Y+21	; 0x15
    4180:	7e 89       	ldd	r23, Y+22	; 0x16
    4182:	8f 89       	ldd	r24, Y+23	; 0x17
    4184:	98 8d       	ldd	r25, Y+24	; 0x18
    4186:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    418a:	dc 01       	movw	r26, r24
    418c:	cb 01       	movw	r24, r22
    418e:	9c 8b       	std	Y+20, r25	; 0x14
    4190:	8b 8b       	std	Y+19, r24	; 0x13
    4192:	8b 89       	ldd	r24, Y+19	; 0x13
    4194:	9c 89       	ldd	r25, Y+20	; 0x14
    4196:	98 8b       	std	Y+16, r25	; 0x10
    4198:	8f 87       	std	Y+15, r24	; 0x0f
    419a:	8f 85       	ldd	r24, Y+15	; 0x0f
    419c:	98 89       	ldd	r25, Y+16	; 0x10
    419e:	01 97       	sbiw	r24, 0x01	; 1
    41a0:	f1 f7       	brne	.-4      	; 0x419e <Lcd_VidSendCommand+0x7d0>
    41a2:	98 8b       	std	Y+16, r25	; 0x10
    41a4:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    41a6:	81 e1       	ldi	r24, 0x11	; 17
    41a8:	60 e0       	ldi	r22, 0x00	; 0
    41aa:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    41ae:	80 e0       	ldi	r24, 0x00	; 0
    41b0:	90 e0       	ldi	r25, 0x00	; 0
    41b2:	a0 e8       	ldi	r26, 0x80	; 128
    41b4:	bf e3       	ldi	r27, 0x3F	; 63
    41b6:	8b 87       	std	Y+11, r24	; 0x0b
    41b8:	9c 87       	std	Y+12, r25	; 0x0c
    41ba:	ad 87       	std	Y+13, r26	; 0x0d
    41bc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41be:	6b 85       	ldd	r22, Y+11	; 0x0b
    41c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    41c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    41c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    41c6:	20 e0       	ldi	r18, 0x00	; 0
    41c8:	30 e0       	ldi	r19, 0x00	; 0
    41ca:	4a e7       	ldi	r20, 0x7A	; 122
    41cc:	53 e4       	ldi	r21, 0x43	; 67
    41ce:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    41d2:	dc 01       	movw	r26, r24
    41d4:	cb 01       	movw	r24, r22
    41d6:	8f 83       	std	Y+7, r24	; 0x07
    41d8:	98 87       	std	Y+8, r25	; 0x08
    41da:	a9 87       	std	Y+9, r26	; 0x09
    41dc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    41de:	6f 81       	ldd	r22, Y+7	; 0x07
    41e0:	78 85       	ldd	r23, Y+8	; 0x08
    41e2:	89 85       	ldd	r24, Y+9	; 0x09
    41e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    41e6:	20 e0       	ldi	r18, 0x00	; 0
    41e8:	30 e0       	ldi	r19, 0x00	; 0
    41ea:	40 e8       	ldi	r20, 0x80	; 128
    41ec:	5f e3       	ldi	r21, 0x3F	; 63
    41ee:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    41f2:	88 23       	and	r24, r24
    41f4:	2c f4       	brge	.+10     	; 0x4200 <Lcd_VidSendCommand+0x832>
		__ticks = 1;
    41f6:	81 e0       	ldi	r24, 0x01	; 1
    41f8:	90 e0       	ldi	r25, 0x00	; 0
    41fa:	9e 83       	std	Y+6, r25	; 0x06
    41fc:	8d 83       	std	Y+5, r24	; 0x05
    41fe:	3f c0       	rjmp	.+126    	; 0x427e <Lcd_VidSendCommand+0x8b0>
	else if (__tmp > 65535)
    4200:	6f 81       	ldd	r22, Y+7	; 0x07
    4202:	78 85       	ldd	r23, Y+8	; 0x08
    4204:	89 85       	ldd	r24, Y+9	; 0x09
    4206:	9a 85       	ldd	r25, Y+10	; 0x0a
    4208:	20 e0       	ldi	r18, 0x00	; 0
    420a:	3f ef       	ldi	r19, 0xFF	; 255
    420c:	4f e7       	ldi	r20, 0x7F	; 127
    420e:	57 e4       	ldi	r21, 0x47	; 71
    4210:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    4214:	18 16       	cp	r1, r24
    4216:	4c f5       	brge	.+82     	; 0x426a <Lcd_VidSendCommand+0x89c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4218:	6b 85       	ldd	r22, Y+11	; 0x0b
    421a:	7c 85       	ldd	r23, Y+12	; 0x0c
    421c:	8d 85       	ldd	r24, Y+13	; 0x0d
    421e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4220:	20 e0       	ldi	r18, 0x00	; 0
    4222:	30 e0       	ldi	r19, 0x00	; 0
    4224:	40 e2       	ldi	r20, 0x20	; 32
    4226:	51 e4       	ldi	r21, 0x41	; 65
    4228:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    422c:	dc 01       	movw	r26, r24
    422e:	cb 01       	movw	r24, r22
    4230:	bc 01       	movw	r22, r24
    4232:	cd 01       	movw	r24, r26
    4234:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4238:	dc 01       	movw	r26, r24
    423a:	cb 01       	movw	r24, r22
    423c:	9e 83       	std	Y+6, r25	; 0x06
    423e:	8d 83       	std	Y+5, r24	; 0x05
    4240:	0f c0       	rjmp	.+30     	; 0x4260 <Lcd_VidSendCommand+0x892>
    4242:	89 e1       	ldi	r24, 0x19	; 25
    4244:	90 e0       	ldi	r25, 0x00	; 0
    4246:	9c 83       	std	Y+4, r25	; 0x04
    4248:	8b 83       	std	Y+3, r24	; 0x03
    424a:	8b 81       	ldd	r24, Y+3	; 0x03
    424c:	9c 81       	ldd	r25, Y+4	; 0x04
    424e:	01 97       	sbiw	r24, 0x01	; 1
    4250:	f1 f7       	brne	.-4      	; 0x424e <Lcd_VidSendCommand+0x880>
    4252:	9c 83       	std	Y+4, r25	; 0x04
    4254:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4256:	8d 81       	ldd	r24, Y+5	; 0x05
    4258:	9e 81       	ldd	r25, Y+6	; 0x06
    425a:	01 97       	sbiw	r24, 0x01	; 1
    425c:	9e 83       	std	Y+6, r25	; 0x06
    425e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4260:	8d 81       	ldd	r24, Y+5	; 0x05
    4262:	9e 81       	ldd	r25, Y+6	; 0x06
    4264:	00 97       	sbiw	r24, 0x00	; 0
    4266:	69 f7       	brne	.-38     	; 0x4242 <Lcd_VidSendCommand+0x874>
    4268:	14 c0       	rjmp	.+40     	; 0x4292 <Lcd_VidSendCommand+0x8c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    426a:	6f 81       	ldd	r22, Y+7	; 0x07
    426c:	78 85       	ldd	r23, Y+8	; 0x08
    426e:	89 85       	ldd	r24, Y+9	; 0x09
    4270:	9a 85       	ldd	r25, Y+10	; 0x0a
    4272:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4276:	dc 01       	movw	r26, r24
    4278:	cb 01       	movw	r24, r22
    427a:	9e 83       	std	Y+6, r25	; 0x06
    427c:	8d 83       	std	Y+5, r24	; 0x05
    427e:	8d 81       	ldd	r24, Y+5	; 0x05
    4280:	9e 81       	ldd	r25, Y+6	; 0x06
    4282:	9a 83       	std	Y+2, r25	; 0x02
    4284:	89 83       	std	Y+1, r24	; 0x01
    4286:	89 81       	ldd	r24, Y+1	; 0x01
    4288:	9a 81       	ldd	r25, Y+2	; 0x02
    428a:	01 97       	sbiw	r24, 0x01	; 1
    428c:	f1 f7       	brne	.-4      	; 0x428a <Lcd_VidSendCommand+0x8bc>
    428e:	9a 83       	std	Y+2, r25	; 0x02
    4290:	89 83       	std	Y+1, r24	; 0x01
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
	LCD_Delay(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
	LCD_Delay(2);
#endif
}
    4292:	cd 59       	subi	r28, 0x9D	; 157
    4294:	df 4f       	sbci	r29, 0xFF	; 255
    4296:	0f b6       	in	r0, 0x3f	; 63
    4298:	f8 94       	cli
    429a:	de bf       	out	0x3e, r29	; 62
    429c:	0f be       	out	0x3f, r0	; 63
    429e:	cd bf       	out	0x3d, r28	; 61
    42a0:	cf 91       	pop	r28
    42a2:	df 91       	pop	r29
    42a4:	1f 91       	pop	r17
    42a6:	0f 91       	pop	r16
    42a8:	08 95       	ret

000042aa <Lcd_VidDisplayChracter>:

void Lcd_VidDisplayChracter(uint8 Copy_u8Command)
{
    42aa:	0f 93       	push	r16
    42ac:	1f 93       	push	r17
    42ae:	df 93       	push	r29
    42b0:	cf 93       	push	r28
    42b2:	cd b7       	in	r28, 0x3d	; 61
    42b4:	de b7       	in	r29, 0x3e	; 62
    42b6:	c3 56       	subi	r28, 0x63	; 99
    42b8:	d0 40       	sbci	r29, 0x00	; 0
    42ba:	0f b6       	in	r0, 0x3f	; 63
    42bc:	f8 94       	cli
    42be:	de bf       	out	0x3e, r29	; 62
    42c0:	0f be       	out	0x3f, r0	; 63
    42c2:	cd bf       	out	0x3d, r28	; 61
    42c4:	fe 01       	movw	r30, r28
    42c6:	ed 59       	subi	r30, 0x9D	; 157
    42c8:	ff 4f       	sbci	r31, 0xFF	; 255
    42ca:	80 83       	st	Z, r24
	Dio_enuWriteChannel(LCD_RS_PIN_NUM,DIO_LOGIC_HIGH);
    42cc:	80 e1       	ldi	r24, 0x10	; 16
    42ce:	61 e0       	ldi	r22, 0x01	; 1
    42d0:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    42d4:	fe 01       	movw	r30, r28
    42d6:	e1 5a       	subi	r30, 0xA1	; 161
    42d8:	ff 4f       	sbci	r31, 0xFF	; 255
    42da:	80 e0       	ldi	r24, 0x00	; 0
    42dc:	90 e0       	ldi	r25, 0x00	; 0
    42de:	a0 e8       	ldi	r26, 0x80	; 128
    42e0:	bf e3       	ldi	r27, 0x3F	; 63
    42e2:	80 83       	st	Z, r24
    42e4:	91 83       	std	Z+1, r25	; 0x01
    42e6:	a2 83       	std	Z+2, r26	; 0x02
    42e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42ea:	8e 01       	movw	r16, r28
    42ec:	05 5a       	subi	r16, 0xA5	; 165
    42ee:	1f 4f       	sbci	r17, 0xFF	; 255
    42f0:	fe 01       	movw	r30, r28
    42f2:	e1 5a       	subi	r30, 0xA1	; 161
    42f4:	ff 4f       	sbci	r31, 0xFF	; 255
    42f6:	60 81       	ld	r22, Z
    42f8:	71 81       	ldd	r23, Z+1	; 0x01
    42fa:	82 81       	ldd	r24, Z+2	; 0x02
    42fc:	93 81       	ldd	r25, Z+3	; 0x03
    42fe:	20 e0       	ldi	r18, 0x00	; 0
    4300:	30 e0       	ldi	r19, 0x00	; 0
    4302:	4a e7       	ldi	r20, 0x7A	; 122
    4304:	53 e4       	ldi	r21, 0x43	; 67
    4306:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    430a:	dc 01       	movw	r26, r24
    430c:	cb 01       	movw	r24, r22
    430e:	f8 01       	movw	r30, r16
    4310:	80 83       	st	Z, r24
    4312:	91 83       	std	Z+1, r25	; 0x01
    4314:	a2 83       	std	Z+2, r26	; 0x02
    4316:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4318:	fe 01       	movw	r30, r28
    431a:	e5 5a       	subi	r30, 0xA5	; 165
    431c:	ff 4f       	sbci	r31, 0xFF	; 255
    431e:	60 81       	ld	r22, Z
    4320:	71 81       	ldd	r23, Z+1	; 0x01
    4322:	82 81       	ldd	r24, Z+2	; 0x02
    4324:	93 81       	ldd	r25, Z+3	; 0x03
    4326:	20 e0       	ldi	r18, 0x00	; 0
    4328:	30 e0       	ldi	r19, 0x00	; 0
    432a:	40 e8       	ldi	r20, 0x80	; 128
    432c:	5f e3       	ldi	r21, 0x3F	; 63
    432e:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    4332:	88 23       	and	r24, r24
    4334:	44 f4       	brge	.+16     	; 0x4346 <Lcd_VidDisplayChracter+0x9c>
		__ticks = 1;
    4336:	fe 01       	movw	r30, r28
    4338:	e7 5a       	subi	r30, 0xA7	; 167
    433a:	ff 4f       	sbci	r31, 0xFF	; 255
    433c:	81 e0       	ldi	r24, 0x01	; 1
    433e:	90 e0       	ldi	r25, 0x00	; 0
    4340:	91 83       	std	Z+1, r25	; 0x01
    4342:	80 83       	st	Z, r24
    4344:	64 c0       	rjmp	.+200    	; 0x440e <Lcd_VidDisplayChracter+0x164>
	else if (__tmp > 65535)
    4346:	fe 01       	movw	r30, r28
    4348:	e5 5a       	subi	r30, 0xA5	; 165
    434a:	ff 4f       	sbci	r31, 0xFF	; 255
    434c:	60 81       	ld	r22, Z
    434e:	71 81       	ldd	r23, Z+1	; 0x01
    4350:	82 81       	ldd	r24, Z+2	; 0x02
    4352:	93 81       	ldd	r25, Z+3	; 0x03
    4354:	20 e0       	ldi	r18, 0x00	; 0
    4356:	3f ef       	ldi	r19, 0xFF	; 255
    4358:	4f e7       	ldi	r20, 0x7F	; 127
    435a:	57 e4       	ldi	r21, 0x47	; 71
    435c:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    4360:	18 16       	cp	r1, r24
    4362:	0c f0       	brlt	.+2      	; 0x4366 <Lcd_VidDisplayChracter+0xbc>
    4364:	43 c0       	rjmp	.+134    	; 0x43ec <Lcd_VidDisplayChracter+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4366:	fe 01       	movw	r30, r28
    4368:	e1 5a       	subi	r30, 0xA1	; 161
    436a:	ff 4f       	sbci	r31, 0xFF	; 255
    436c:	60 81       	ld	r22, Z
    436e:	71 81       	ldd	r23, Z+1	; 0x01
    4370:	82 81       	ldd	r24, Z+2	; 0x02
    4372:	93 81       	ldd	r25, Z+3	; 0x03
    4374:	20 e0       	ldi	r18, 0x00	; 0
    4376:	30 e0       	ldi	r19, 0x00	; 0
    4378:	40 e2       	ldi	r20, 0x20	; 32
    437a:	51 e4       	ldi	r21, 0x41	; 65
    437c:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4380:	dc 01       	movw	r26, r24
    4382:	cb 01       	movw	r24, r22
    4384:	8e 01       	movw	r16, r28
    4386:	07 5a       	subi	r16, 0xA7	; 167
    4388:	1f 4f       	sbci	r17, 0xFF	; 255
    438a:	bc 01       	movw	r22, r24
    438c:	cd 01       	movw	r24, r26
    438e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4392:	dc 01       	movw	r26, r24
    4394:	cb 01       	movw	r24, r22
    4396:	f8 01       	movw	r30, r16
    4398:	91 83       	std	Z+1, r25	; 0x01
    439a:	80 83       	st	Z, r24
    439c:	1f c0       	rjmp	.+62     	; 0x43dc <Lcd_VidDisplayChracter+0x132>
    439e:	fe 01       	movw	r30, r28
    43a0:	e9 5a       	subi	r30, 0xA9	; 169
    43a2:	ff 4f       	sbci	r31, 0xFF	; 255
    43a4:	89 e1       	ldi	r24, 0x19	; 25
    43a6:	90 e0       	ldi	r25, 0x00	; 0
    43a8:	91 83       	std	Z+1, r25	; 0x01
    43aa:	80 83       	st	Z, r24
    43ac:	fe 01       	movw	r30, r28
    43ae:	e9 5a       	subi	r30, 0xA9	; 169
    43b0:	ff 4f       	sbci	r31, 0xFF	; 255
    43b2:	80 81       	ld	r24, Z
    43b4:	91 81       	ldd	r25, Z+1	; 0x01
    43b6:	01 97       	sbiw	r24, 0x01	; 1
    43b8:	f1 f7       	brne	.-4      	; 0x43b6 <Lcd_VidDisplayChracter+0x10c>
    43ba:	fe 01       	movw	r30, r28
    43bc:	e9 5a       	subi	r30, 0xA9	; 169
    43be:	ff 4f       	sbci	r31, 0xFF	; 255
    43c0:	91 83       	std	Z+1, r25	; 0x01
    43c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43c4:	de 01       	movw	r26, r28
    43c6:	a7 5a       	subi	r26, 0xA7	; 167
    43c8:	bf 4f       	sbci	r27, 0xFF	; 255
    43ca:	fe 01       	movw	r30, r28
    43cc:	e7 5a       	subi	r30, 0xA7	; 167
    43ce:	ff 4f       	sbci	r31, 0xFF	; 255
    43d0:	80 81       	ld	r24, Z
    43d2:	91 81       	ldd	r25, Z+1	; 0x01
    43d4:	01 97       	sbiw	r24, 0x01	; 1
    43d6:	11 96       	adiw	r26, 0x01	; 1
    43d8:	9c 93       	st	X, r25
    43da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43dc:	fe 01       	movw	r30, r28
    43de:	e7 5a       	subi	r30, 0xA7	; 167
    43e0:	ff 4f       	sbci	r31, 0xFF	; 255
    43e2:	80 81       	ld	r24, Z
    43e4:	91 81       	ldd	r25, Z+1	; 0x01
    43e6:	00 97       	sbiw	r24, 0x00	; 0
    43e8:	d1 f6       	brne	.-76     	; 0x439e <Lcd_VidDisplayChracter+0xf4>
    43ea:	27 c0       	rjmp	.+78     	; 0x443a <Lcd_VidDisplayChracter+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43ec:	8e 01       	movw	r16, r28
    43ee:	07 5a       	subi	r16, 0xA7	; 167
    43f0:	1f 4f       	sbci	r17, 0xFF	; 255
    43f2:	fe 01       	movw	r30, r28
    43f4:	e5 5a       	subi	r30, 0xA5	; 165
    43f6:	ff 4f       	sbci	r31, 0xFF	; 255
    43f8:	60 81       	ld	r22, Z
    43fa:	71 81       	ldd	r23, Z+1	; 0x01
    43fc:	82 81       	ldd	r24, Z+2	; 0x02
    43fe:	93 81       	ldd	r25, Z+3	; 0x03
    4400:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4404:	dc 01       	movw	r26, r24
    4406:	cb 01       	movw	r24, r22
    4408:	f8 01       	movw	r30, r16
    440a:	91 83       	std	Z+1, r25	; 0x01
    440c:	80 83       	st	Z, r24
    440e:	de 01       	movw	r26, r28
    4410:	ab 5a       	subi	r26, 0xAB	; 171
    4412:	bf 4f       	sbci	r27, 0xFF	; 255
    4414:	fe 01       	movw	r30, r28
    4416:	e7 5a       	subi	r30, 0xA7	; 167
    4418:	ff 4f       	sbci	r31, 0xFF	; 255
    441a:	80 81       	ld	r24, Z
    441c:	91 81       	ldd	r25, Z+1	; 0x01
    441e:	8d 93       	st	X+, r24
    4420:	9c 93       	st	X, r25
    4422:	fe 01       	movw	r30, r28
    4424:	eb 5a       	subi	r30, 0xAB	; 171
    4426:	ff 4f       	sbci	r31, 0xFF	; 255
    4428:	80 81       	ld	r24, Z
    442a:	91 81       	ldd	r25, Z+1	; 0x01
    442c:	01 97       	sbiw	r24, 0x01	; 1
    442e:	f1 f7       	brne	.-4      	; 0x442c <Lcd_VidDisplayChracter+0x182>
    4430:	fe 01       	movw	r30, r28
    4432:	eb 5a       	subi	r30, 0xAB	; 171
    4434:	ff 4f       	sbci	r31, 0xFF	; 255
    4436:	91 83       	std	Z+1, r25	; 0x01
    4438:	80 83       	st	Z, r24
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    443a:	81 e1       	ldi	r24, 0x11	; 17
    443c:	61 e0       	ldi	r22, 0x01	; 1
    443e:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    4442:	fe 01       	movw	r30, r28
    4444:	ef 5a       	subi	r30, 0xAF	; 175
    4446:	ff 4f       	sbci	r31, 0xFF	; 255
    4448:	80 e0       	ldi	r24, 0x00	; 0
    444a:	90 e0       	ldi	r25, 0x00	; 0
    444c:	a0 e8       	ldi	r26, 0x80	; 128
    444e:	bf e3       	ldi	r27, 0x3F	; 63
    4450:	80 83       	st	Z, r24
    4452:	91 83       	std	Z+1, r25	; 0x01
    4454:	a2 83       	std	Z+2, r26	; 0x02
    4456:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4458:	8e 01       	movw	r16, r28
    445a:	03 5b       	subi	r16, 0xB3	; 179
    445c:	1f 4f       	sbci	r17, 0xFF	; 255
    445e:	fe 01       	movw	r30, r28
    4460:	ef 5a       	subi	r30, 0xAF	; 175
    4462:	ff 4f       	sbci	r31, 0xFF	; 255
    4464:	60 81       	ld	r22, Z
    4466:	71 81       	ldd	r23, Z+1	; 0x01
    4468:	82 81       	ldd	r24, Z+2	; 0x02
    446a:	93 81       	ldd	r25, Z+3	; 0x03
    446c:	20 e0       	ldi	r18, 0x00	; 0
    446e:	30 e0       	ldi	r19, 0x00	; 0
    4470:	4a e7       	ldi	r20, 0x7A	; 122
    4472:	53 e4       	ldi	r21, 0x43	; 67
    4474:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4478:	dc 01       	movw	r26, r24
    447a:	cb 01       	movw	r24, r22
    447c:	f8 01       	movw	r30, r16
    447e:	80 83       	st	Z, r24
    4480:	91 83       	std	Z+1, r25	; 0x01
    4482:	a2 83       	std	Z+2, r26	; 0x02
    4484:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4486:	fe 01       	movw	r30, r28
    4488:	e3 5b       	subi	r30, 0xB3	; 179
    448a:	ff 4f       	sbci	r31, 0xFF	; 255
    448c:	60 81       	ld	r22, Z
    448e:	71 81       	ldd	r23, Z+1	; 0x01
    4490:	82 81       	ldd	r24, Z+2	; 0x02
    4492:	93 81       	ldd	r25, Z+3	; 0x03
    4494:	20 e0       	ldi	r18, 0x00	; 0
    4496:	30 e0       	ldi	r19, 0x00	; 0
    4498:	40 e8       	ldi	r20, 0x80	; 128
    449a:	5f e3       	ldi	r21, 0x3F	; 63
    449c:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    44a0:	88 23       	and	r24, r24
    44a2:	44 f4       	brge	.+16     	; 0x44b4 <Lcd_VidDisplayChracter+0x20a>
		__ticks = 1;
    44a4:	fe 01       	movw	r30, r28
    44a6:	e5 5b       	subi	r30, 0xB5	; 181
    44a8:	ff 4f       	sbci	r31, 0xFF	; 255
    44aa:	81 e0       	ldi	r24, 0x01	; 1
    44ac:	90 e0       	ldi	r25, 0x00	; 0
    44ae:	91 83       	std	Z+1, r25	; 0x01
    44b0:	80 83       	st	Z, r24
    44b2:	64 c0       	rjmp	.+200    	; 0x457c <Lcd_VidDisplayChracter+0x2d2>
	else if (__tmp > 65535)
    44b4:	fe 01       	movw	r30, r28
    44b6:	e3 5b       	subi	r30, 0xB3	; 179
    44b8:	ff 4f       	sbci	r31, 0xFF	; 255
    44ba:	60 81       	ld	r22, Z
    44bc:	71 81       	ldd	r23, Z+1	; 0x01
    44be:	82 81       	ldd	r24, Z+2	; 0x02
    44c0:	93 81       	ldd	r25, Z+3	; 0x03
    44c2:	20 e0       	ldi	r18, 0x00	; 0
    44c4:	3f ef       	ldi	r19, 0xFF	; 255
    44c6:	4f e7       	ldi	r20, 0x7F	; 127
    44c8:	57 e4       	ldi	r21, 0x47	; 71
    44ca:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    44ce:	18 16       	cp	r1, r24
    44d0:	0c f0       	brlt	.+2      	; 0x44d4 <Lcd_VidDisplayChracter+0x22a>
    44d2:	43 c0       	rjmp	.+134    	; 0x455a <Lcd_VidDisplayChracter+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44d4:	fe 01       	movw	r30, r28
    44d6:	ef 5a       	subi	r30, 0xAF	; 175
    44d8:	ff 4f       	sbci	r31, 0xFF	; 255
    44da:	60 81       	ld	r22, Z
    44dc:	71 81       	ldd	r23, Z+1	; 0x01
    44de:	82 81       	ldd	r24, Z+2	; 0x02
    44e0:	93 81       	ldd	r25, Z+3	; 0x03
    44e2:	20 e0       	ldi	r18, 0x00	; 0
    44e4:	30 e0       	ldi	r19, 0x00	; 0
    44e6:	40 e2       	ldi	r20, 0x20	; 32
    44e8:	51 e4       	ldi	r21, 0x41	; 65
    44ea:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    44ee:	dc 01       	movw	r26, r24
    44f0:	cb 01       	movw	r24, r22
    44f2:	8e 01       	movw	r16, r28
    44f4:	05 5b       	subi	r16, 0xB5	; 181
    44f6:	1f 4f       	sbci	r17, 0xFF	; 255
    44f8:	bc 01       	movw	r22, r24
    44fa:	cd 01       	movw	r24, r26
    44fc:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4500:	dc 01       	movw	r26, r24
    4502:	cb 01       	movw	r24, r22
    4504:	f8 01       	movw	r30, r16
    4506:	91 83       	std	Z+1, r25	; 0x01
    4508:	80 83       	st	Z, r24
    450a:	1f c0       	rjmp	.+62     	; 0x454a <Lcd_VidDisplayChracter+0x2a0>
    450c:	fe 01       	movw	r30, r28
    450e:	e7 5b       	subi	r30, 0xB7	; 183
    4510:	ff 4f       	sbci	r31, 0xFF	; 255
    4512:	89 e1       	ldi	r24, 0x19	; 25
    4514:	90 e0       	ldi	r25, 0x00	; 0
    4516:	91 83       	std	Z+1, r25	; 0x01
    4518:	80 83       	st	Z, r24
    451a:	fe 01       	movw	r30, r28
    451c:	e7 5b       	subi	r30, 0xB7	; 183
    451e:	ff 4f       	sbci	r31, 0xFF	; 255
    4520:	80 81       	ld	r24, Z
    4522:	91 81       	ldd	r25, Z+1	; 0x01
    4524:	01 97       	sbiw	r24, 0x01	; 1
    4526:	f1 f7       	brne	.-4      	; 0x4524 <Lcd_VidDisplayChracter+0x27a>
    4528:	fe 01       	movw	r30, r28
    452a:	e7 5b       	subi	r30, 0xB7	; 183
    452c:	ff 4f       	sbci	r31, 0xFF	; 255
    452e:	91 83       	std	Z+1, r25	; 0x01
    4530:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4532:	de 01       	movw	r26, r28
    4534:	a5 5b       	subi	r26, 0xB5	; 181
    4536:	bf 4f       	sbci	r27, 0xFF	; 255
    4538:	fe 01       	movw	r30, r28
    453a:	e5 5b       	subi	r30, 0xB5	; 181
    453c:	ff 4f       	sbci	r31, 0xFF	; 255
    453e:	80 81       	ld	r24, Z
    4540:	91 81       	ldd	r25, Z+1	; 0x01
    4542:	01 97       	sbiw	r24, 0x01	; 1
    4544:	11 96       	adiw	r26, 0x01	; 1
    4546:	9c 93       	st	X, r25
    4548:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    454a:	fe 01       	movw	r30, r28
    454c:	e5 5b       	subi	r30, 0xB5	; 181
    454e:	ff 4f       	sbci	r31, 0xFF	; 255
    4550:	80 81       	ld	r24, Z
    4552:	91 81       	ldd	r25, Z+1	; 0x01
    4554:	00 97       	sbiw	r24, 0x00	; 0
    4556:	d1 f6       	brne	.-76     	; 0x450c <Lcd_VidDisplayChracter+0x262>
    4558:	27 c0       	rjmp	.+78     	; 0x45a8 <Lcd_VidDisplayChracter+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    455a:	8e 01       	movw	r16, r28
    455c:	05 5b       	subi	r16, 0xB5	; 181
    455e:	1f 4f       	sbci	r17, 0xFF	; 255
    4560:	fe 01       	movw	r30, r28
    4562:	e3 5b       	subi	r30, 0xB3	; 179
    4564:	ff 4f       	sbci	r31, 0xFF	; 255
    4566:	60 81       	ld	r22, Z
    4568:	71 81       	ldd	r23, Z+1	; 0x01
    456a:	82 81       	ldd	r24, Z+2	; 0x02
    456c:	93 81       	ldd	r25, Z+3	; 0x03
    456e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4572:	dc 01       	movw	r26, r24
    4574:	cb 01       	movw	r24, r22
    4576:	f8 01       	movw	r30, r16
    4578:	91 83       	std	Z+1, r25	; 0x01
    457a:	80 83       	st	Z, r24
    457c:	de 01       	movw	r26, r28
    457e:	a9 5b       	subi	r26, 0xB9	; 185
    4580:	bf 4f       	sbci	r27, 0xFF	; 255
    4582:	fe 01       	movw	r30, r28
    4584:	e5 5b       	subi	r30, 0xB5	; 181
    4586:	ff 4f       	sbci	r31, 0xFF	; 255
    4588:	80 81       	ld	r24, Z
    458a:	91 81       	ldd	r25, Z+1	; 0x01
    458c:	8d 93       	st	X+, r24
    458e:	9c 93       	st	X, r25
    4590:	fe 01       	movw	r30, r28
    4592:	e9 5b       	subi	r30, 0xB9	; 185
    4594:	ff 4f       	sbci	r31, 0xFF	; 255
    4596:	80 81       	ld	r24, Z
    4598:	91 81       	ldd	r25, Z+1	; 0x01
    459a:	01 97       	sbiw	r24, 0x01	; 1
    459c:	f1 f7       	brne	.-4      	; 0x459a <Lcd_VidDisplayChracter+0x2f0>
    459e:	fe 01       	movw	r30, r28
    45a0:	e9 5b       	subi	r30, 0xB9	; 185
    45a2:	ff 4f       	sbci	r31, 0xFF	; 255
    45a4:	91 83       	std	Z+1, r25	; 0x01
    45a6:	80 83       	st	Z, r24
	_delay_ms(1);
#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,4));
    45a8:	fe 01       	movw	r30, r28
    45aa:	ed 59       	subi	r30, 0x9D	; 157
    45ac:	ff 4f       	sbci	r31, 0xFF	; 255
    45ae:	80 81       	ld	r24, Z
    45b0:	88 2f       	mov	r24, r24
    45b2:	90 e0       	ldi	r25, 0x00	; 0
    45b4:	80 71       	andi	r24, 0x10	; 16
    45b6:	90 70       	andi	r25, 0x00	; 0
    45b8:	95 95       	asr	r25
    45ba:	87 95       	ror	r24
    45bc:	95 95       	asr	r25
    45be:	87 95       	ror	r24
    45c0:	95 95       	asr	r25
    45c2:	87 95       	ror	r24
    45c4:	95 95       	asr	r25
    45c6:	87 95       	ror	r24
    45c8:	98 2f       	mov	r25, r24
    45ca:	82 e1       	ldi	r24, 0x12	; 18
    45cc:	69 2f       	mov	r22, r25
    45ce:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,5));
    45d2:	fe 01       	movw	r30, r28
    45d4:	ed 59       	subi	r30, 0x9D	; 157
    45d6:	ff 4f       	sbci	r31, 0xFF	; 255
    45d8:	80 81       	ld	r24, Z
    45da:	88 2f       	mov	r24, r24
    45dc:	90 e0       	ldi	r25, 0x00	; 0
    45de:	80 72       	andi	r24, 0x20	; 32
    45e0:	90 70       	andi	r25, 0x00	; 0
    45e2:	95 95       	asr	r25
    45e4:	87 95       	ror	r24
    45e6:	95 95       	asr	r25
    45e8:	87 95       	ror	r24
    45ea:	95 95       	asr	r25
    45ec:	87 95       	ror	r24
    45ee:	95 95       	asr	r25
    45f0:	87 95       	ror	r24
    45f2:	95 95       	asr	r25
    45f4:	87 95       	ror	r24
    45f6:	98 2f       	mov	r25, r24
    45f8:	83 e1       	ldi	r24, 0x13	; 19
    45fa:	69 2f       	mov	r22, r25
    45fc:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,6));
    4600:	fe 01       	movw	r30, r28
    4602:	ed 59       	subi	r30, 0x9D	; 157
    4604:	ff 4f       	sbci	r31, 0xFF	; 255
    4606:	80 81       	ld	r24, Z
    4608:	88 2f       	mov	r24, r24
    460a:	90 e0       	ldi	r25, 0x00	; 0
    460c:	80 74       	andi	r24, 0x40	; 64
    460e:	90 70       	andi	r25, 0x00	; 0
    4610:	08 2e       	mov	r0, r24
    4612:	89 2f       	mov	r24, r25
    4614:	00 0c       	add	r0, r0
    4616:	88 1f       	adc	r24, r24
    4618:	99 0b       	sbc	r25, r25
    461a:	00 0c       	add	r0, r0
    461c:	88 1f       	adc	r24, r24
    461e:	99 1f       	adc	r25, r25
    4620:	98 2f       	mov	r25, r24
    4622:	84 e1       	ldi	r24, 0x14	; 20
    4624:	69 2f       	mov	r22, r25
    4626:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,7));
    462a:	fe 01       	movw	r30, r28
    462c:	ed 59       	subi	r30, 0x9D	; 157
    462e:	ff 4f       	sbci	r31, 0xFF	; 255
    4630:	80 81       	ld	r24, Z
    4632:	98 2f       	mov	r25, r24
    4634:	99 1f       	adc	r25, r25
    4636:	99 27       	eor	r25, r25
    4638:	99 1f       	adc	r25, r25
    463a:	85 e1       	ldi	r24, 0x15	; 21
    463c:	69 2f       	mov	r22, r25
    463e:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    4642:	fe 01       	movw	r30, r28
    4644:	ed 5b       	subi	r30, 0xBD	; 189
    4646:	ff 4f       	sbci	r31, 0xFF	; 255
    4648:	80 e0       	ldi	r24, 0x00	; 0
    464a:	90 e0       	ldi	r25, 0x00	; 0
    464c:	a0 e8       	ldi	r26, 0x80	; 128
    464e:	bf e3       	ldi	r27, 0x3F	; 63
    4650:	80 83       	st	Z, r24
    4652:	91 83       	std	Z+1, r25	; 0x01
    4654:	a2 83       	std	Z+2, r26	; 0x02
    4656:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4658:	8e 01       	movw	r16, r28
    465a:	01 5c       	subi	r16, 0xC1	; 193
    465c:	1f 4f       	sbci	r17, 0xFF	; 255
    465e:	fe 01       	movw	r30, r28
    4660:	ed 5b       	subi	r30, 0xBD	; 189
    4662:	ff 4f       	sbci	r31, 0xFF	; 255
    4664:	60 81       	ld	r22, Z
    4666:	71 81       	ldd	r23, Z+1	; 0x01
    4668:	82 81       	ldd	r24, Z+2	; 0x02
    466a:	93 81       	ldd	r25, Z+3	; 0x03
    466c:	20 e0       	ldi	r18, 0x00	; 0
    466e:	30 e0       	ldi	r19, 0x00	; 0
    4670:	4a e7       	ldi	r20, 0x7A	; 122
    4672:	53 e4       	ldi	r21, 0x43	; 67
    4674:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4678:	dc 01       	movw	r26, r24
    467a:	cb 01       	movw	r24, r22
    467c:	f8 01       	movw	r30, r16
    467e:	80 83       	st	Z, r24
    4680:	91 83       	std	Z+1, r25	; 0x01
    4682:	a2 83       	std	Z+2, r26	; 0x02
    4684:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4686:	fe 01       	movw	r30, r28
    4688:	ff 96       	adiw	r30, 0x3f	; 63
    468a:	60 81       	ld	r22, Z
    468c:	71 81       	ldd	r23, Z+1	; 0x01
    468e:	82 81       	ldd	r24, Z+2	; 0x02
    4690:	93 81       	ldd	r25, Z+3	; 0x03
    4692:	20 e0       	ldi	r18, 0x00	; 0
    4694:	30 e0       	ldi	r19, 0x00	; 0
    4696:	40 e8       	ldi	r20, 0x80	; 128
    4698:	5f e3       	ldi	r21, 0x3F	; 63
    469a:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    469e:	88 23       	and	r24, r24
    46a0:	2c f4       	brge	.+10     	; 0x46ac <Lcd_VidDisplayChracter+0x402>
		__ticks = 1;
    46a2:	81 e0       	ldi	r24, 0x01	; 1
    46a4:	90 e0       	ldi	r25, 0x00	; 0
    46a6:	9e af       	std	Y+62, r25	; 0x3e
    46a8:	8d af       	std	Y+61, r24	; 0x3d
    46aa:	46 c0       	rjmp	.+140    	; 0x4738 <Lcd_VidDisplayChracter+0x48e>
	else if (__tmp > 65535)
    46ac:	fe 01       	movw	r30, r28
    46ae:	ff 96       	adiw	r30, 0x3f	; 63
    46b0:	60 81       	ld	r22, Z
    46b2:	71 81       	ldd	r23, Z+1	; 0x01
    46b4:	82 81       	ldd	r24, Z+2	; 0x02
    46b6:	93 81       	ldd	r25, Z+3	; 0x03
    46b8:	20 e0       	ldi	r18, 0x00	; 0
    46ba:	3f ef       	ldi	r19, 0xFF	; 255
    46bc:	4f e7       	ldi	r20, 0x7F	; 127
    46be:	57 e4       	ldi	r21, 0x47	; 71
    46c0:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    46c4:	18 16       	cp	r1, r24
    46c6:	64 f5       	brge	.+88     	; 0x4720 <Lcd_VidDisplayChracter+0x476>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46c8:	fe 01       	movw	r30, r28
    46ca:	ed 5b       	subi	r30, 0xBD	; 189
    46cc:	ff 4f       	sbci	r31, 0xFF	; 255
    46ce:	60 81       	ld	r22, Z
    46d0:	71 81       	ldd	r23, Z+1	; 0x01
    46d2:	82 81       	ldd	r24, Z+2	; 0x02
    46d4:	93 81       	ldd	r25, Z+3	; 0x03
    46d6:	20 e0       	ldi	r18, 0x00	; 0
    46d8:	30 e0       	ldi	r19, 0x00	; 0
    46da:	40 e2       	ldi	r20, 0x20	; 32
    46dc:	51 e4       	ldi	r21, 0x41	; 65
    46de:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    46e2:	dc 01       	movw	r26, r24
    46e4:	cb 01       	movw	r24, r22
    46e6:	bc 01       	movw	r22, r24
    46e8:	cd 01       	movw	r24, r26
    46ea:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    46ee:	dc 01       	movw	r26, r24
    46f0:	cb 01       	movw	r24, r22
    46f2:	9e af       	std	Y+62, r25	; 0x3e
    46f4:	8d af       	std	Y+61, r24	; 0x3d
    46f6:	0f c0       	rjmp	.+30     	; 0x4716 <Lcd_VidDisplayChracter+0x46c>
    46f8:	89 e1       	ldi	r24, 0x19	; 25
    46fa:	90 e0       	ldi	r25, 0x00	; 0
    46fc:	9c af       	std	Y+60, r25	; 0x3c
    46fe:	8b af       	std	Y+59, r24	; 0x3b
    4700:	8b ad       	ldd	r24, Y+59	; 0x3b
    4702:	9c ad       	ldd	r25, Y+60	; 0x3c
    4704:	01 97       	sbiw	r24, 0x01	; 1
    4706:	f1 f7       	brne	.-4      	; 0x4704 <Lcd_VidDisplayChracter+0x45a>
    4708:	9c af       	std	Y+60, r25	; 0x3c
    470a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    470c:	8d ad       	ldd	r24, Y+61	; 0x3d
    470e:	9e ad       	ldd	r25, Y+62	; 0x3e
    4710:	01 97       	sbiw	r24, 0x01	; 1
    4712:	9e af       	std	Y+62, r25	; 0x3e
    4714:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4716:	8d ad       	ldd	r24, Y+61	; 0x3d
    4718:	9e ad       	ldd	r25, Y+62	; 0x3e
    471a:	00 97       	sbiw	r24, 0x00	; 0
    471c:	69 f7       	brne	.-38     	; 0x46f8 <Lcd_VidDisplayChracter+0x44e>
    471e:	16 c0       	rjmp	.+44     	; 0x474c <Lcd_VidDisplayChracter+0x4a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4720:	fe 01       	movw	r30, r28
    4722:	ff 96       	adiw	r30, 0x3f	; 63
    4724:	60 81       	ld	r22, Z
    4726:	71 81       	ldd	r23, Z+1	; 0x01
    4728:	82 81       	ldd	r24, Z+2	; 0x02
    472a:	93 81       	ldd	r25, Z+3	; 0x03
    472c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4730:	dc 01       	movw	r26, r24
    4732:	cb 01       	movw	r24, r22
    4734:	9e af       	std	Y+62, r25	; 0x3e
    4736:	8d af       	std	Y+61, r24	; 0x3d
    4738:	8d ad       	ldd	r24, Y+61	; 0x3d
    473a:	9e ad       	ldd	r25, Y+62	; 0x3e
    473c:	9a af       	std	Y+58, r25	; 0x3a
    473e:	89 af       	std	Y+57, r24	; 0x39
    4740:	89 ad       	ldd	r24, Y+57	; 0x39
    4742:	9a ad       	ldd	r25, Y+58	; 0x3a
    4744:	01 97       	sbiw	r24, 0x01	; 1
    4746:	f1 f7       	brne	.-4      	; 0x4744 <Lcd_VidDisplayChracter+0x49a>
    4748:	9a af       	std	Y+58, r25	; 0x3a
    474a:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    474c:	81 e1       	ldi	r24, 0x11	; 17
    474e:	60 e0       	ldi	r22, 0x00	; 0
    4750:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    4754:	80 e0       	ldi	r24, 0x00	; 0
    4756:	90 e0       	ldi	r25, 0x00	; 0
    4758:	a0 e8       	ldi	r26, 0x80	; 128
    475a:	bf e3       	ldi	r27, 0x3F	; 63
    475c:	8d ab       	std	Y+53, r24	; 0x35
    475e:	9e ab       	std	Y+54, r25	; 0x36
    4760:	af ab       	std	Y+55, r26	; 0x37
    4762:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4764:	6d a9       	ldd	r22, Y+53	; 0x35
    4766:	7e a9       	ldd	r23, Y+54	; 0x36
    4768:	8f a9       	ldd	r24, Y+55	; 0x37
    476a:	98 ad       	ldd	r25, Y+56	; 0x38
    476c:	20 e0       	ldi	r18, 0x00	; 0
    476e:	30 e0       	ldi	r19, 0x00	; 0
    4770:	4a e7       	ldi	r20, 0x7A	; 122
    4772:	53 e4       	ldi	r21, 0x43	; 67
    4774:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4778:	dc 01       	movw	r26, r24
    477a:	cb 01       	movw	r24, r22
    477c:	89 ab       	std	Y+49, r24	; 0x31
    477e:	9a ab       	std	Y+50, r25	; 0x32
    4780:	ab ab       	std	Y+51, r26	; 0x33
    4782:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4784:	69 a9       	ldd	r22, Y+49	; 0x31
    4786:	7a a9       	ldd	r23, Y+50	; 0x32
    4788:	8b a9       	ldd	r24, Y+51	; 0x33
    478a:	9c a9       	ldd	r25, Y+52	; 0x34
    478c:	20 e0       	ldi	r18, 0x00	; 0
    478e:	30 e0       	ldi	r19, 0x00	; 0
    4790:	40 e8       	ldi	r20, 0x80	; 128
    4792:	5f e3       	ldi	r21, 0x3F	; 63
    4794:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    4798:	88 23       	and	r24, r24
    479a:	2c f4       	brge	.+10     	; 0x47a6 <Lcd_VidDisplayChracter+0x4fc>
		__ticks = 1;
    479c:	81 e0       	ldi	r24, 0x01	; 1
    479e:	90 e0       	ldi	r25, 0x00	; 0
    47a0:	98 ab       	std	Y+48, r25	; 0x30
    47a2:	8f a7       	std	Y+47, r24	; 0x2f
    47a4:	3f c0       	rjmp	.+126    	; 0x4824 <Lcd_VidDisplayChracter+0x57a>
	else if (__tmp > 65535)
    47a6:	69 a9       	ldd	r22, Y+49	; 0x31
    47a8:	7a a9       	ldd	r23, Y+50	; 0x32
    47aa:	8b a9       	ldd	r24, Y+51	; 0x33
    47ac:	9c a9       	ldd	r25, Y+52	; 0x34
    47ae:	20 e0       	ldi	r18, 0x00	; 0
    47b0:	3f ef       	ldi	r19, 0xFF	; 255
    47b2:	4f e7       	ldi	r20, 0x7F	; 127
    47b4:	57 e4       	ldi	r21, 0x47	; 71
    47b6:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    47ba:	18 16       	cp	r1, r24
    47bc:	4c f5       	brge	.+82     	; 0x4810 <Lcd_VidDisplayChracter+0x566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47be:	6d a9       	ldd	r22, Y+53	; 0x35
    47c0:	7e a9       	ldd	r23, Y+54	; 0x36
    47c2:	8f a9       	ldd	r24, Y+55	; 0x37
    47c4:	98 ad       	ldd	r25, Y+56	; 0x38
    47c6:	20 e0       	ldi	r18, 0x00	; 0
    47c8:	30 e0       	ldi	r19, 0x00	; 0
    47ca:	40 e2       	ldi	r20, 0x20	; 32
    47cc:	51 e4       	ldi	r21, 0x41	; 65
    47ce:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    47d2:	dc 01       	movw	r26, r24
    47d4:	cb 01       	movw	r24, r22
    47d6:	bc 01       	movw	r22, r24
    47d8:	cd 01       	movw	r24, r26
    47da:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    47de:	dc 01       	movw	r26, r24
    47e0:	cb 01       	movw	r24, r22
    47e2:	98 ab       	std	Y+48, r25	; 0x30
    47e4:	8f a7       	std	Y+47, r24	; 0x2f
    47e6:	0f c0       	rjmp	.+30     	; 0x4806 <Lcd_VidDisplayChracter+0x55c>
    47e8:	89 e1       	ldi	r24, 0x19	; 25
    47ea:	90 e0       	ldi	r25, 0x00	; 0
    47ec:	9e a7       	std	Y+46, r25	; 0x2e
    47ee:	8d a7       	std	Y+45, r24	; 0x2d
    47f0:	8d a5       	ldd	r24, Y+45	; 0x2d
    47f2:	9e a5       	ldd	r25, Y+46	; 0x2e
    47f4:	01 97       	sbiw	r24, 0x01	; 1
    47f6:	f1 f7       	brne	.-4      	; 0x47f4 <Lcd_VidDisplayChracter+0x54a>
    47f8:	9e a7       	std	Y+46, r25	; 0x2e
    47fa:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    47fe:	98 a9       	ldd	r25, Y+48	; 0x30
    4800:	01 97       	sbiw	r24, 0x01	; 1
    4802:	98 ab       	std	Y+48, r25	; 0x30
    4804:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4806:	8f a5       	ldd	r24, Y+47	; 0x2f
    4808:	98 a9       	ldd	r25, Y+48	; 0x30
    480a:	00 97       	sbiw	r24, 0x00	; 0
    480c:	69 f7       	brne	.-38     	; 0x47e8 <Lcd_VidDisplayChracter+0x53e>
    480e:	14 c0       	rjmp	.+40     	; 0x4838 <Lcd_VidDisplayChracter+0x58e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4810:	69 a9       	ldd	r22, Y+49	; 0x31
    4812:	7a a9       	ldd	r23, Y+50	; 0x32
    4814:	8b a9       	ldd	r24, Y+51	; 0x33
    4816:	9c a9       	ldd	r25, Y+52	; 0x34
    4818:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    481c:	dc 01       	movw	r26, r24
    481e:	cb 01       	movw	r24, r22
    4820:	98 ab       	std	Y+48, r25	; 0x30
    4822:	8f a7       	std	Y+47, r24	; 0x2f
    4824:	8f a5       	ldd	r24, Y+47	; 0x2f
    4826:	98 a9       	ldd	r25, Y+48	; 0x30
    4828:	9c a7       	std	Y+44, r25	; 0x2c
    482a:	8b a7       	std	Y+43, r24	; 0x2b
    482c:	8b a5       	ldd	r24, Y+43	; 0x2b
    482e:	9c a5       	ldd	r25, Y+44	; 0x2c
    4830:	01 97       	sbiw	r24, 0x01	; 1
    4832:	f1 f7       	brne	.-4      	; 0x4830 <Lcd_VidDisplayChracter+0x586>
    4834:	9c a7       	std	Y+44, r25	; 0x2c
    4836:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    4838:	81 e1       	ldi	r24, 0x11	; 17
    483a:	61 e0       	ldi	r22, 0x01	; 1
    483c:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    4840:	80 e0       	ldi	r24, 0x00	; 0
    4842:	90 e0       	ldi	r25, 0x00	; 0
    4844:	a0 e8       	ldi	r26, 0x80	; 128
    4846:	bf e3       	ldi	r27, 0x3F	; 63
    4848:	8f a3       	std	Y+39, r24	; 0x27
    484a:	98 a7       	std	Y+40, r25	; 0x28
    484c:	a9 a7       	std	Y+41, r26	; 0x29
    484e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4850:	6f a1       	ldd	r22, Y+39	; 0x27
    4852:	78 a5       	ldd	r23, Y+40	; 0x28
    4854:	89 a5       	ldd	r24, Y+41	; 0x29
    4856:	9a a5       	ldd	r25, Y+42	; 0x2a
    4858:	20 e0       	ldi	r18, 0x00	; 0
    485a:	30 e0       	ldi	r19, 0x00	; 0
    485c:	4a e7       	ldi	r20, 0x7A	; 122
    485e:	53 e4       	ldi	r21, 0x43	; 67
    4860:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4864:	dc 01       	movw	r26, r24
    4866:	cb 01       	movw	r24, r22
    4868:	8b a3       	std	Y+35, r24	; 0x23
    486a:	9c a3       	std	Y+36, r25	; 0x24
    486c:	ad a3       	std	Y+37, r26	; 0x25
    486e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4870:	6b a1       	ldd	r22, Y+35	; 0x23
    4872:	7c a1       	ldd	r23, Y+36	; 0x24
    4874:	8d a1       	ldd	r24, Y+37	; 0x25
    4876:	9e a1       	ldd	r25, Y+38	; 0x26
    4878:	20 e0       	ldi	r18, 0x00	; 0
    487a:	30 e0       	ldi	r19, 0x00	; 0
    487c:	40 e8       	ldi	r20, 0x80	; 128
    487e:	5f e3       	ldi	r21, 0x3F	; 63
    4880:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    4884:	88 23       	and	r24, r24
    4886:	2c f4       	brge	.+10     	; 0x4892 <Lcd_VidDisplayChracter+0x5e8>
		__ticks = 1;
    4888:	81 e0       	ldi	r24, 0x01	; 1
    488a:	90 e0       	ldi	r25, 0x00	; 0
    488c:	9a a3       	std	Y+34, r25	; 0x22
    488e:	89 a3       	std	Y+33, r24	; 0x21
    4890:	3f c0       	rjmp	.+126    	; 0x4910 <Lcd_VidDisplayChracter+0x666>
	else if (__tmp > 65535)
    4892:	6b a1       	ldd	r22, Y+35	; 0x23
    4894:	7c a1       	ldd	r23, Y+36	; 0x24
    4896:	8d a1       	ldd	r24, Y+37	; 0x25
    4898:	9e a1       	ldd	r25, Y+38	; 0x26
    489a:	20 e0       	ldi	r18, 0x00	; 0
    489c:	3f ef       	ldi	r19, 0xFF	; 255
    489e:	4f e7       	ldi	r20, 0x7F	; 127
    48a0:	57 e4       	ldi	r21, 0x47	; 71
    48a2:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    48a6:	18 16       	cp	r1, r24
    48a8:	4c f5       	brge	.+82     	; 0x48fc <Lcd_VidDisplayChracter+0x652>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48aa:	6f a1       	ldd	r22, Y+39	; 0x27
    48ac:	78 a5       	ldd	r23, Y+40	; 0x28
    48ae:	89 a5       	ldd	r24, Y+41	; 0x29
    48b0:	9a a5       	ldd	r25, Y+42	; 0x2a
    48b2:	20 e0       	ldi	r18, 0x00	; 0
    48b4:	30 e0       	ldi	r19, 0x00	; 0
    48b6:	40 e2       	ldi	r20, 0x20	; 32
    48b8:	51 e4       	ldi	r21, 0x41	; 65
    48ba:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    48be:	dc 01       	movw	r26, r24
    48c0:	cb 01       	movw	r24, r22
    48c2:	bc 01       	movw	r22, r24
    48c4:	cd 01       	movw	r24, r26
    48c6:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    48ca:	dc 01       	movw	r26, r24
    48cc:	cb 01       	movw	r24, r22
    48ce:	9a a3       	std	Y+34, r25	; 0x22
    48d0:	89 a3       	std	Y+33, r24	; 0x21
    48d2:	0f c0       	rjmp	.+30     	; 0x48f2 <Lcd_VidDisplayChracter+0x648>
    48d4:	89 e1       	ldi	r24, 0x19	; 25
    48d6:	90 e0       	ldi	r25, 0x00	; 0
    48d8:	98 a3       	std	Y+32, r25	; 0x20
    48da:	8f 8f       	std	Y+31, r24	; 0x1f
    48dc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    48de:	98 a1       	ldd	r25, Y+32	; 0x20
    48e0:	01 97       	sbiw	r24, 0x01	; 1
    48e2:	f1 f7       	brne	.-4      	; 0x48e0 <Lcd_VidDisplayChracter+0x636>
    48e4:	98 a3       	std	Y+32, r25	; 0x20
    48e6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48e8:	89 a1       	ldd	r24, Y+33	; 0x21
    48ea:	9a a1       	ldd	r25, Y+34	; 0x22
    48ec:	01 97       	sbiw	r24, 0x01	; 1
    48ee:	9a a3       	std	Y+34, r25	; 0x22
    48f0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48f2:	89 a1       	ldd	r24, Y+33	; 0x21
    48f4:	9a a1       	ldd	r25, Y+34	; 0x22
    48f6:	00 97       	sbiw	r24, 0x00	; 0
    48f8:	69 f7       	brne	.-38     	; 0x48d4 <Lcd_VidDisplayChracter+0x62a>
    48fa:	14 c0       	rjmp	.+40     	; 0x4924 <Lcd_VidDisplayChracter+0x67a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48fc:	6b a1       	ldd	r22, Y+35	; 0x23
    48fe:	7c a1       	ldd	r23, Y+36	; 0x24
    4900:	8d a1       	ldd	r24, Y+37	; 0x25
    4902:	9e a1       	ldd	r25, Y+38	; 0x26
    4904:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4908:	dc 01       	movw	r26, r24
    490a:	cb 01       	movw	r24, r22
    490c:	9a a3       	std	Y+34, r25	; 0x22
    490e:	89 a3       	std	Y+33, r24	; 0x21
    4910:	89 a1       	ldd	r24, Y+33	; 0x21
    4912:	9a a1       	ldd	r25, Y+34	; 0x22
    4914:	9e 8f       	std	Y+30, r25	; 0x1e
    4916:	8d 8f       	std	Y+29, r24	; 0x1d
    4918:	8d 8d       	ldd	r24, Y+29	; 0x1d
    491a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    491c:	01 97       	sbiw	r24, 0x01	; 1
    491e:	f1 f7       	brne	.-4      	; 0x491c <Lcd_VidDisplayChracter+0x672>
    4920:	9e 8f       	std	Y+30, r25	; 0x1e
    4922:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);


	Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,0));
    4924:	fe 01       	movw	r30, r28
    4926:	ed 59       	subi	r30, 0x9D	; 157
    4928:	ff 4f       	sbci	r31, 0xFF	; 255
    492a:	80 81       	ld	r24, Z
    492c:	98 2f       	mov	r25, r24
    492e:	91 70       	andi	r25, 0x01	; 1
    4930:	82 e1       	ldi	r24, 0x12	; 18
    4932:	69 2f       	mov	r22, r25
    4934:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,1));
    4938:	fe 01       	movw	r30, r28
    493a:	ed 59       	subi	r30, 0x9D	; 157
    493c:	ff 4f       	sbci	r31, 0xFF	; 255
    493e:	80 81       	ld	r24, Z
    4940:	88 2f       	mov	r24, r24
    4942:	90 e0       	ldi	r25, 0x00	; 0
    4944:	82 70       	andi	r24, 0x02	; 2
    4946:	90 70       	andi	r25, 0x00	; 0
    4948:	95 95       	asr	r25
    494a:	87 95       	ror	r24
    494c:	98 2f       	mov	r25, r24
    494e:	83 e1       	ldi	r24, 0x13	; 19
    4950:	69 2f       	mov	r22, r25
    4952:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,2));
    4956:	fe 01       	movw	r30, r28
    4958:	ed 59       	subi	r30, 0x9D	; 157
    495a:	ff 4f       	sbci	r31, 0xFF	; 255
    495c:	80 81       	ld	r24, Z
    495e:	88 2f       	mov	r24, r24
    4960:	90 e0       	ldi	r25, 0x00	; 0
    4962:	84 70       	andi	r24, 0x04	; 4
    4964:	90 70       	andi	r25, 0x00	; 0
    4966:	95 95       	asr	r25
    4968:	87 95       	ror	r24
    496a:	95 95       	asr	r25
    496c:	87 95       	ror	r24
    496e:	98 2f       	mov	r25, r24
    4970:	84 e1       	ldi	r24, 0x14	; 20
    4972:	69 2f       	mov	r22, r25
    4974:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
	Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,3));
    4978:	fe 01       	movw	r30, r28
    497a:	ed 59       	subi	r30, 0x9D	; 157
    497c:	ff 4f       	sbci	r31, 0xFF	; 255
    497e:	80 81       	ld	r24, Z
    4980:	88 2f       	mov	r24, r24
    4982:	90 e0       	ldi	r25, 0x00	; 0
    4984:	88 70       	andi	r24, 0x08	; 8
    4986:	90 70       	andi	r25, 0x00	; 0
    4988:	95 95       	asr	r25
    498a:	87 95       	ror	r24
    498c:	95 95       	asr	r25
    498e:	87 95       	ror	r24
    4990:	95 95       	asr	r25
    4992:	87 95       	ror	r24
    4994:	98 2f       	mov	r25, r24
    4996:	85 e1       	ldi	r24, 0x15	; 21
    4998:	69 2f       	mov	r22, r25
    499a:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    499e:	80 e0       	ldi	r24, 0x00	; 0
    49a0:	90 e0       	ldi	r25, 0x00	; 0
    49a2:	a0 e8       	ldi	r26, 0x80	; 128
    49a4:	bf e3       	ldi	r27, 0x3F	; 63
    49a6:	89 8f       	std	Y+25, r24	; 0x19
    49a8:	9a 8f       	std	Y+26, r25	; 0x1a
    49aa:	ab 8f       	std	Y+27, r26	; 0x1b
    49ac:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49ae:	69 8d       	ldd	r22, Y+25	; 0x19
    49b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    49b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    49b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    49b6:	20 e0       	ldi	r18, 0x00	; 0
    49b8:	30 e0       	ldi	r19, 0x00	; 0
    49ba:	4a e7       	ldi	r20, 0x7A	; 122
    49bc:	53 e4       	ldi	r21, 0x43	; 67
    49be:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    49c2:	dc 01       	movw	r26, r24
    49c4:	cb 01       	movw	r24, r22
    49c6:	8d 8b       	std	Y+21, r24	; 0x15
    49c8:	9e 8b       	std	Y+22, r25	; 0x16
    49ca:	af 8b       	std	Y+23, r26	; 0x17
    49cc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    49ce:	6d 89       	ldd	r22, Y+21	; 0x15
    49d0:	7e 89       	ldd	r23, Y+22	; 0x16
    49d2:	8f 89       	ldd	r24, Y+23	; 0x17
    49d4:	98 8d       	ldd	r25, Y+24	; 0x18
    49d6:	20 e0       	ldi	r18, 0x00	; 0
    49d8:	30 e0       	ldi	r19, 0x00	; 0
    49da:	40 e8       	ldi	r20, 0x80	; 128
    49dc:	5f e3       	ldi	r21, 0x3F	; 63
    49de:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    49e2:	88 23       	and	r24, r24
    49e4:	2c f4       	brge	.+10     	; 0x49f0 <Lcd_VidDisplayChracter+0x746>
		__ticks = 1;
    49e6:	81 e0       	ldi	r24, 0x01	; 1
    49e8:	90 e0       	ldi	r25, 0x00	; 0
    49ea:	9c 8b       	std	Y+20, r25	; 0x14
    49ec:	8b 8b       	std	Y+19, r24	; 0x13
    49ee:	3f c0       	rjmp	.+126    	; 0x4a6e <Lcd_VidDisplayChracter+0x7c4>
	else if (__tmp > 65535)
    49f0:	6d 89       	ldd	r22, Y+21	; 0x15
    49f2:	7e 89       	ldd	r23, Y+22	; 0x16
    49f4:	8f 89       	ldd	r24, Y+23	; 0x17
    49f6:	98 8d       	ldd	r25, Y+24	; 0x18
    49f8:	20 e0       	ldi	r18, 0x00	; 0
    49fa:	3f ef       	ldi	r19, 0xFF	; 255
    49fc:	4f e7       	ldi	r20, 0x7F	; 127
    49fe:	57 e4       	ldi	r21, 0x47	; 71
    4a00:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    4a04:	18 16       	cp	r1, r24
    4a06:	4c f5       	brge	.+82     	; 0x4a5a <Lcd_VidDisplayChracter+0x7b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a08:	69 8d       	ldd	r22, Y+25	; 0x19
    4a0a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4a0c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a0e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a10:	20 e0       	ldi	r18, 0x00	; 0
    4a12:	30 e0       	ldi	r19, 0x00	; 0
    4a14:	40 e2       	ldi	r20, 0x20	; 32
    4a16:	51 e4       	ldi	r21, 0x41	; 65
    4a18:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4a1c:	dc 01       	movw	r26, r24
    4a1e:	cb 01       	movw	r24, r22
    4a20:	bc 01       	movw	r22, r24
    4a22:	cd 01       	movw	r24, r26
    4a24:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4a28:	dc 01       	movw	r26, r24
    4a2a:	cb 01       	movw	r24, r22
    4a2c:	9c 8b       	std	Y+20, r25	; 0x14
    4a2e:	8b 8b       	std	Y+19, r24	; 0x13
    4a30:	0f c0       	rjmp	.+30     	; 0x4a50 <Lcd_VidDisplayChracter+0x7a6>
    4a32:	89 e1       	ldi	r24, 0x19	; 25
    4a34:	90 e0       	ldi	r25, 0x00	; 0
    4a36:	9a 8b       	std	Y+18, r25	; 0x12
    4a38:	89 8b       	std	Y+17, r24	; 0x11
    4a3a:	89 89       	ldd	r24, Y+17	; 0x11
    4a3c:	9a 89       	ldd	r25, Y+18	; 0x12
    4a3e:	01 97       	sbiw	r24, 0x01	; 1
    4a40:	f1 f7       	brne	.-4      	; 0x4a3e <Lcd_VidDisplayChracter+0x794>
    4a42:	9a 8b       	std	Y+18, r25	; 0x12
    4a44:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a46:	8b 89       	ldd	r24, Y+19	; 0x13
    4a48:	9c 89       	ldd	r25, Y+20	; 0x14
    4a4a:	01 97       	sbiw	r24, 0x01	; 1
    4a4c:	9c 8b       	std	Y+20, r25	; 0x14
    4a4e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a50:	8b 89       	ldd	r24, Y+19	; 0x13
    4a52:	9c 89       	ldd	r25, Y+20	; 0x14
    4a54:	00 97       	sbiw	r24, 0x00	; 0
    4a56:	69 f7       	brne	.-38     	; 0x4a32 <Lcd_VidDisplayChracter+0x788>
    4a58:	14 c0       	rjmp	.+40     	; 0x4a82 <Lcd_VidDisplayChracter+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a5a:	6d 89       	ldd	r22, Y+21	; 0x15
    4a5c:	7e 89       	ldd	r23, Y+22	; 0x16
    4a5e:	8f 89       	ldd	r24, Y+23	; 0x17
    4a60:	98 8d       	ldd	r25, Y+24	; 0x18
    4a62:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4a66:	dc 01       	movw	r26, r24
    4a68:	cb 01       	movw	r24, r22
    4a6a:	9c 8b       	std	Y+20, r25	; 0x14
    4a6c:	8b 8b       	std	Y+19, r24	; 0x13
    4a6e:	8b 89       	ldd	r24, Y+19	; 0x13
    4a70:	9c 89       	ldd	r25, Y+20	; 0x14
    4a72:	98 8b       	std	Y+16, r25	; 0x10
    4a74:	8f 87       	std	Y+15, r24	; 0x0f
    4a76:	8f 85       	ldd	r24, Y+15	; 0x0f
    4a78:	98 89       	ldd	r25, Y+16	; 0x10
    4a7a:	01 97       	sbiw	r24, 0x01	; 1
    4a7c:	f1 f7       	brne	.-4      	; 0x4a7a <Lcd_VidDisplayChracter+0x7d0>
    4a7e:	98 8b       	std	Y+16, r25	; 0x10
    4a80:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    4a82:	81 e1       	ldi	r24, 0x11	; 17
    4a84:	60 e0       	ldi	r22, 0x00	; 0
    4a86:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    4a8a:	80 e0       	ldi	r24, 0x00	; 0
    4a8c:	90 e0       	ldi	r25, 0x00	; 0
    4a8e:	a0 e8       	ldi	r26, 0x80	; 128
    4a90:	bf e3       	ldi	r27, 0x3F	; 63
    4a92:	8b 87       	std	Y+11, r24	; 0x0b
    4a94:	9c 87       	std	Y+12, r25	; 0x0c
    4a96:	ad 87       	std	Y+13, r26	; 0x0d
    4a98:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a9a:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a9c:	7c 85       	ldd	r23, Y+12	; 0x0c
    4a9e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4aa0:	9e 85       	ldd	r25, Y+14	; 0x0e
    4aa2:	20 e0       	ldi	r18, 0x00	; 0
    4aa4:	30 e0       	ldi	r19, 0x00	; 0
    4aa6:	4a e7       	ldi	r20, 0x7A	; 122
    4aa8:	53 e4       	ldi	r21, 0x43	; 67
    4aaa:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4aae:	dc 01       	movw	r26, r24
    4ab0:	cb 01       	movw	r24, r22
    4ab2:	8f 83       	std	Y+7, r24	; 0x07
    4ab4:	98 87       	std	Y+8, r25	; 0x08
    4ab6:	a9 87       	std	Y+9, r26	; 0x09
    4ab8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4aba:	6f 81       	ldd	r22, Y+7	; 0x07
    4abc:	78 85       	ldd	r23, Y+8	; 0x08
    4abe:	89 85       	ldd	r24, Y+9	; 0x09
    4ac0:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ac2:	20 e0       	ldi	r18, 0x00	; 0
    4ac4:	30 e0       	ldi	r19, 0x00	; 0
    4ac6:	40 e8       	ldi	r20, 0x80	; 128
    4ac8:	5f e3       	ldi	r21, 0x3F	; 63
    4aca:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    4ace:	88 23       	and	r24, r24
    4ad0:	2c f4       	brge	.+10     	; 0x4adc <Lcd_VidDisplayChracter+0x832>
		__ticks = 1;
    4ad2:	81 e0       	ldi	r24, 0x01	; 1
    4ad4:	90 e0       	ldi	r25, 0x00	; 0
    4ad6:	9e 83       	std	Y+6, r25	; 0x06
    4ad8:	8d 83       	std	Y+5, r24	; 0x05
    4ada:	3f c0       	rjmp	.+126    	; 0x4b5a <Lcd_VidDisplayChracter+0x8b0>
	else if (__tmp > 65535)
    4adc:	6f 81       	ldd	r22, Y+7	; 0x07
    4ade:	78 85       	ldd	r23, Y+8	; 0x08
    4ae0:	89 85       	ldd	r24, Y+9	; 0x09
    4ae2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ae4:	20 e0       	ldi	r18, 0x00	; 0
    4ae6:	3f ef       	ldi	r19, 0xFF	; 255
    4ae8:	4f e7       	ldi	r20, 0x7F	; 127
    4aea:	57 e4       	ldi	r21, 0x47	; 71
    4aec:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    4af0:	18 16       	cp	r1, r24
    4af2:	4c f5       	brge	.+82     	; 0x4b46 <Lcd_VidDisplayChracter+0x89c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4af4:	6b 85       	ldd	r22, Y+11	; 0x0b
    4af6:	7c 85       	ldd	r23, Y+12	; 0x0c
    4af8:	8d 85       	ldd	r24, Y+13	; 0x0d
    4afa:	9e 85       	ldd	r25, Y+14	; 0x0e
    4afc:	20 e0       	ldi	r18, 0x00	; 0
    4afe:	30 e0       	ldi	r19, 0x00	; 0
    4b00:	40 e2       	ldi	r20, 0x20	; 32
    4b02:	51 e4       	ldi	r21, 0x41	; 65
    4b04:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4b08:	dc 01       	movw	r26, r24
    4b0a:	cb 01       	movw	r24, r22
    4b0c:	bc 01       	movw	r22, r24
    4b0e:	cd 01       	movw	r24, r26
    4b10:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4b14:	dc 01       	movw	r26, r24
    4b16:	cb 01       	movw	r24, r22
    4b18:	9e 83       	std	Y+6, r25	; 0x06
    4b1a:	8d 83       	std	Y+5, r24	; 0x05
    4b1c:	0f c0       	rjmp	.+30     	; 0x4b3c <Lcd_VidDisplayChracter+0x892>
    4b1e:	89 e1       	ldi	r24, 0x19	; 25
    4b20:	90 e0       	ldi	r25, 0x00	; 0
    4b22:	9c 83       	std	Y+4, r25	; 0x04
    4b24:	8b 83       	std	Y+3, r24	; 0x03
    4b26:	8b 81       	ldd	r24, Y+3	; 0x03
    4b28:	9c 81       	ldd	r25, Y+4	; 0x04
    4b2a:	01 97       	sbiw	r24, 0x01	; 1
    4b2c:	f1 f7       	brne	.-4      	; 0x4b2a <Lcd_VidDisplayChracter+0x880>
    4b2e:	9c 83       	std	Y+4, r25	; 0x04
    4b30:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b32:	8d 81       	ldd	r24, Y+5	; 0x05
    4b34:	9e 81       	ldd	r25, Y+6	; 0x06
    4b36:	01 97       	sbiw	r24, 0x01	; 1
    4b38:	9e 83       	std	Y+6, r25	; 0x06
    4b3a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b3c:	8d 81       	ldd	r24, Y+5	; 0x05
    4b3e:	9e 81       	ldd	r25, Y+6	; 0x06
    4b40:	00 97       	sbiw	r24, 0x00	; 0
    4b42:	69 f7       	brne	.-38     	; 0x4b1e <Lcd_VidDisplayChracter+0x874>
    4b44:	14 c0       	rjmp	.+40     	; 0x4b6e <Lcd_VidDisplayChracter+0x8c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b46:	6f 81       	ldd	r22, Y+7	; 0x07
    4b48:	78 85       	ldd	r23, Y+8	; 0x08
    4b4a:	89 85       	ldd	r24, Y+9	; 0x09
    4b4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b4e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4b52:	dc 01       	movw	r26, r24
    4b54:	cb 01       	movw	r24, r22
    4b56:	9e 83       	std	Y+6, r25	; 0x06
    4b58:	8d 83       	std	Y+5, r24	; 0x05
    4b5a:	8d 81       	ldd	r24, Y+5	; 0x05
    4b5c:	9e 81       	ldd	r25, Y+6	; 0x06
    4b5e:	9a 83       	std	Y+2, r25	; 0x02
    4b60:	89 83       	std	Y+1, r24	; 0x01
    4b62:	89 81       	ldd	r24, Y+1	; 0x01
    4b64:	9a 81       	ldd	r25, Y+2	; 0x02
    4b66:	01 97       	sbiw	r24, 0x01	; 1
    4b68:	f1 f7       	brne	.-4      	; 0x4b66 <Lcd_VidDisplayChracter+0x8bc>
    4b6a:	9a 83       	std	Y+2, r25	; 0x02
    4b6c:	89 83       	std	Y+1, r24	; 0x01
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
	_delay_ms(1);
	Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
	_delay_ms(2);
#endif
}
    4b6e:	cd 59       	subi	r28, 0x9D	; 157
    4b70:	df 4f       	sbci	r29, 0xFF	; 255
    4b72:	0f b6       	in	r0, 0x3f	; 63
    4b74:	f8 94       	cli
    4b76:	de bf       	out	0x3e, r29	; 62
    4b78:	0f be       	out	0x3f, r0	; 63
    4b7a:	cd bf       	out	0x3d, r28	; 61
    4b7c:	cf 91       	pop	r28
    4b7e:	df 91       	pop	r29
    4b80:	1f 91       	pop	r17
    4b82:	0f 91       	pop	r16
    4b84:	08 95       	ret

00004b86 <Lcd_VidCreateCustomCharacter>:



void Lcd_VidCreateCustomCharacter(pu8 Add_Pu8CustomCharcter,uint8 Index)
{
    4b86:	df 93       	push	r29
    4b88:	cf 93       	push	r28
    4b8a:	cd b7       	in	r28, 0x3d	; 61
    4b8c:	de b7       	in	r29, 0x3e	; 62
    4b8e:	62 97       	sbiw	r28, 0x12	; 18
    4b90:	0f b6       	in	r0, 0x3f	; 63
    4b92:	f8 94       	cli
    4b94:	de bf       	out	0x3e, r29	; 62
    4b96:	0f be       	out	0x3f, r0	; 63
    4b98:	cd bf       	out	0x3d, r28	; 61
    4b9a:	99 8b       	std	Y+17, r25	; 0x11
    4b9c:	88 8b       	std	Y+16, r24	; 0x10
    4b9e:	6a 8b       	std	Y+18, r22	; 0x12
	uint8 LOC_u8Iterator=0;
    4ba0:	1f 86       	std	Y+15, r1	; 0x0f
	if(Index<8)
    4ba2:	8a 89       	ldd	r24, Y+18	; 0x12
    4ba4:	88 30       	cpi	r24, 0x08	; 8
    4ba6:	08 f0       	brcs	.+2      	; 0x4baa <Lcd_VidCreateCustomCharacter+0x24>
    4ba8:	94 c0       	rjmp	.+296    	; 0x4cd2 <Lcd_VidCreateCustomCharacter+0x14c>
	{
		Lcd_VidSendCommand(0x40+(Index*8));
    4baa:	8a 89       	ldd	r24, Y+18	; 0x12
    4bac:	88 2f       	mov	r24, r24
    4bae:	90 e0       	ldi	r25, 0x00	; 0
    4bb0:	08 96       	adiw	r24, 0x08	; 8
    4bb2:	88 0f       	add	r24, r24
    4bb4:	99 1f       	adc	r25, r25
    4bb6:	88 0f       	add	r24, r24
    4bb8:	99 1f       	adc	r25, r25
    4bba:	88 0f       	add	r24, r24
    4bbc:	99 1f       	adc	r25, r25
    4bbe:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
    4bc2:	80 e0       	ldi	r24, 0x00	; 0
    4bc4:	90 e0       	ldi	r25, 0x00	; 0
    4bc6:	a0 e8       	ldi	r26, 0x80	; 128
    4bc8:	bf e3       	ldi	r27, 0x3F	; 63
    4bca:	8b 87       	std	Y+11, r24	; 0x0b
    4bcc:	9c 87       	std	Y+12, r25	; 0x0c
    4bce:	ad 87       	std	Y+13, r26	; 0x0d
    4bd0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4bd2:	6b 85       	ldd	r22, Y+11	; 0x0b
    4bd4:	7c 85       	ldd	r23, Y+12	; 0x0c
    4bd6:	8d 85       	ldd	r24, Y+13	; 0x0d
    4bd8:	9e 85       	ldd	r25, Y+14	; 0x0e
    4bda:	20 e0       	ldi	r18, 0x00	; 0
    4bdc:	30 e0       	ldi	r19, 0x00	; 0
    4bde:	4a e7       	ldi	r20, 0x7A	; 122
    4be0:	53 e4       	ldi	r21, 0x43	; 67
    4be2:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4be6:	dc 01       	movw	r26, r24
    4be8:	cb 01       	movw	r24, r22
    4bea:	8f 83       	std	Y+7, r24	; 0x07
    4bec:	98 87       	std	Y+8, r25	; 0x08
    4bee:	a9 87       	std	Y+9, r26	; 0x09
    4bf0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4bf2:	6f 81       	ldd	r22, Y+7	; 0x07
    4bf4:	78 85       	ldd	r23, Y+8	; 0x08
    4bf6:	89 85       	ldd	r24, Y+9	; 0x09
    4bf8:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bfa:	20 e0       	ldi	r18, 0x00	; 0
    4bfc:	30 e0       	ldi	r19, 0x00	; 0
    4bfe:	40 e8       	ldi	r20, 0x80	; 128
    4c00:	5f e3       	ldi	r21, 0x3F	; 63
    4c02:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    4c06:	88 23       	and	r24, r24
    4c08:	2c f4       	brge	.+10     	; 0x4c14 <Lcd_VidCreateCustomCharacter+0x8e>
		__ticks = 1;
    4c0a:	81 e0       	ldi	r24, 0x01	; 1
    4c0c:	90 e0       	ldi	r25, 0x00	; 0
    4c0e:	9e 83       	std	Y+6, r25	; 0x06
    4c10:	8d 83       	std	Y+5, r24	; 0x05
    4c12:	3f c0       	rjmp	.+126    	; 0x4c92 <Lcd_VidCreateCustomCharacter+0x10c>
	else if (__tmp > 65535)
    4c14:	6f 81       	ldd	r22, Y+7	; 0x07
    4c16:	78 85       	ldd	r23, Y+8	; 0x08
    4c18:	89 85       	ldd	r24, Y+9	; 0x09
    4c1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c1c:	20 e0       	ldi	r18, 0x00	; 0
    4c1e:	3f ef       	ldi	r19, 0xFF	; 255
    4c20:	4f e7       	ldi	r20, 0x7F	; 127
    4c22:	57 e4       	ldi	r21, 0x47	; 71
    4c24:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    4c28:	18 16       	cp	r1, r24
    4c2a:	4c f5       	brge	.+82     	; 0x4c7e <Lcd_VidCreateCustomCharacter+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c2c:	6b 85       	ldd	r22, Y+11	; 0x0b
    4c2e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4c30:	8d 85       	ldd	r24, Y+13	; 0x0d
    4c32:	9e 85       	ldd	r25, Y+14	; 0x0e
    4c34:	20 e0       	ldi	r18, 0x00	; 0
    4c36:	30 e0       	ldi	r19, 0x00	; 0
    4c38:	40 e2       	ldi	r20, 0x20	; 32
    4c3a:	51 e4       	ldi	r21, 0x41	; 65
    4c3c:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    4c40:	dc 01       	movw	r26, r24
    4c42:	cb 01       	movw	r24, r22
    4c44:	bc 01       	movw	r22, r24
    4c46:	cd 01       	movw	r24, r26
    4c48:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4c4c:	dc 01       	movw	r26, r24
    4c4e:	cb 01       	movw	r24, r22
    4c50:	9e 83       	std	Y+6, r25	; 0x06
    4c52:	8d 83       	std	Y+5, r24	; 0x05
    4c54:	0f c0       	rjmp	.+30     	; 0x4c74 <Lcd_VidCreateCustomCharacter+0xee>
    4c56:	89 e1       	ldi	r24, 0x19	; 25
    4c58:	90 e0       	ldi	r25, 0x00	; 0
    4c5a:	9c 83       	std	Y+4, r25	; 0x04
    4c5c:	8b 83       	std	Y+3, r24	; 0x03
    4c5e:	8b 81       	ldd	r24, Y+3	; 0x03
    4c60:	9c 81       	ldd	r25, Y+4	; 0x04
    4c62:	01 97       	sbiw	r24, 0x01	; 1
    4c64:	f1 f7       	brne	.-4      	; 0x4c62 <Lcd_VidCreateCustomCharacter+0xdc>
    4c66:	9c 83       	std	Y+4, r25	; 0x04
    4c68:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c6a:	8d 81       	ldd	r24, Y+5	; 0x05
    4c6c:	9e 81       	ldd	r25, Y+6	; 0x06
    4c6e:	01 97       	sbiw	r24, 0x01	; 1
    4c70:	9e 83       	std	Y+6, r25	; 0x06
    4c72:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c74:	8d 81       	ldd	r24, Y+5	; 0x05
    4c76:	9e 81       	ldd	r25, Y+6	; 0x06
    4c78:	00 97       	sbiw	r24, 0x00	; 0
    4c7a:	69 f7       	brne	.-38     	; 0x4c56 <Lcd_VidCreateCustomCharacter+0xd0>
    4c7c:	14 c0       	rjmp	.+40     	; 0x4ca6 <Lcd_VidCreateCustomCharacter+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c7e:	6f 81       	ldd	r22, Y+7	; 0x07
    4c80:	78 85       	ldd	r23, Y+8	; 0x08
    4c82:	89 85       	ldd	r24, Y+9	; 0x09
    4c84:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c86:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4c8a:	dc 01       	movw	r26, r24
    4c8c:	cb 01       	movw	r24, r22
    4c8e:	9e 83       	std	Y+6, r25	; 0x06
    4c90:	8d 83       	std	Y+5, r24	; 0x05
    4c92:	8d 81       	ldd	r24, Y+5	; 0x05
    4c94:	9e 81       	ldd	r25, Y+6	; 0x06
    4c96:	9a 83       	std	Y+2, r25	; 0x02
    4c98:	89 83       	std	Y+1, r24	; 0x01
    4c9a:	89 81       	ldd	r24, Y+1	; 0x01
    4c9c:	9a 81       	ldd	r25, Y+2	; 0x02
    4c9e:	01 97       	sbiw	r24, 0x01	; 1
    4ca0:	f1 f7       	brne	.-4      	; 0x4c9e <Lcd_VidCreateCustomCharacter+0x118>
    4ca2:	9a 83       	std	Y+2, r25	; 0x02
    4ca4:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);
		for(LOC_u8Iterator=0;LOC_u8Iterator<8;LOC_u8Iterator++)
    4ca6:	1f 86       	std	Y+15, r1	; 0x0f
    4ca8:	0e c0       	rjmp	.+28     	; 0x4cc6 <Lcd_VidCreateCustomCharacter+0x140>
		{
			Lcd_VidDisplayChracter(Add_Pu8CustomCharcter[LOC_u8Iterator]);
    4caa:	8f 85       	ldd	r24, Y+15	; 0x0f
    4cac:	28 2f       	mov	r18, r24
    4cae:	30 e0       	ldi	r19, 0x00	; 0
    4cb0:	88 89       	ldd	r24, Y+16	; 0x10
    4cb2:	99 89       	ldd	r25, Y+17	; 0x11
    4cb4:	fc 01       	movw	r30, r24
    4cb6:	e2 0f       	add	r30, r18
    4cb8:	f3 1f       	adc	r31, r19
    4cba:	80 81       	ld	r24, Z
    4cbc:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
	uint8 LOC_u8Iterator=0;
	if(Index<8)
	{
		Lcd_VidSendCommand(0x40+(Index*8));
		_delay_ms(1);
		for(LOC_u8Iterator=0;LOC_u8Iterator<8;LOC_u8Iterator++)
    4cc0:	8f 85       	ldd	r24, Y+15	; 0x0f
    4cc2:	8f 5f       	subi	r24, 0xFF	; 255
    4cc4:	8f 87       	std	Y+15, r24	; 0x0f
    4cc6:	8f 85       	ldd	r24, Y+15	; 0x0f
    4cc8:	88 30       	cpi	r24, 0x08	; 8
    4cca:	78 f3       	brcs	.-34     	; 0x4caa <Lcd_VidCreateCustomCharacter+0x124>
		{
			Lcd_VidDisplayChracter(Add_Pu8CustomCharcter[LOC_u8Iterator]);
		}
		Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD);
    4ccc:	80 e8       	ldi	r24, 0x80	; 128
    4cce:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>



	}
}
    4cd2:	62 96       	adiw	r28, 0x12	; 18
    4cd4:	0f b6       	in	r0, 0x3f	; 63
    4cd6:	f8 94       	cli
    4cd8:	de bf       	out	0x3e, r29	; 62
    4cda:	0f be       	out	0x3f, r0	; 63
    4cdc:	cd bf       	out	0x3d, r28	; 61
    4cde:	cf 91       	pop	r28
    4ce0:	df 91       	pop	r29
    4ce2:	08 95       	ret

00004ce4 <Lcd_VidGoToXY>:



void Lcd_VidGoToXY(uint8 Copy_u8Row,uint8 Copy_u8Column)
{if(Copy_u8Row == 0)
    4ce4:	df 93       	push	r29
    4ce6:	cf 93       	push	r28
    4ce8:	00 d0       	rcall	.+0      	; 0x4cea <Lcd_VidGoToXY+0x6>
    4cea:	cd b7       	in	r28, 0x3d	; 61
    4cec:	de b7       	in	r29, 0x3e	; 62
    4cee:	89 83       	std	Y+1, r24	; 0x01
    4cf0:	6a 83       	std	Y+2, r22	; 0x02
    4cf2:	89 81       	ldd	r24, Y+1	; 0x01
    4cf4:	88 23       	and	r24, r24
    4cf6:	29 f4       	brne	.+10     	; 0x4d02 <Lcd_VidGoToXY+0x1e>
{
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0 + Copy_u8Column);
    4cf8:	8a 81       	ldd	r24, Y+2	; 0x02
    4cfa:	80 58       	subi	r24, 0x80	; 128
    4cfc:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
    4d00:	17 c0       	rjmp	.+46     	; 0x4d30 <Lcd_VidGoToXY+0x4c>
}
else if (Copy_u8Row == 1)
    4d02:	89 81       	ldd	r24, Y+1	; 0x01
    4d04:	81 30       	cpi	r24, 0x01	; 1
    4d06:	29 f4       	brne	.+10     	; 0x4d12 <Lcd_VidGoToXY+0x2e>
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0x40 + Copy_u8Column);
    4d08:	8a 81       	ldd	r24, Y+2	; 0x02
    4d0a:	80 54       	subi	r24, 0x40	; 64
    4d0c:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
    4d10:	0f c0       	rjmp	.+30     	; 0x4d30 <Lcd_VidGoToXY+0x4c>
else if (Copy_u8Row == 2)
    4d12:	89 81       	ldd	r24, Y+1	; 0x01
    4d14:	82 30       	cpi	r24, 0x02	; 2
    4d16:	29 f4       	brne	.+10     	; 0x4d22 <Lcd_VidGoToXY+0x3e>
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0x14 + Copy_u8Column);
    4d18:	8a 81       	ldd	r24, Y+2	; 0x02
    4d1a:	8c 56       	subi	r24, 0x6C	; 108
    4d1c:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
    4d20:	07 c0       	rjmp	.+14     	; 0x4d30 <Lcd_VidGoToXY+0x4c>
else if (Copy_u8Row == 3)
    4d22:	89 81       	ldd	r24, Y+1	; 0x01
    4d24:	83 30       	cpi	r24, 0x03	; 3
    4d26:	21 f4       	brne	.+8      	; 0x4d30 <Lcd_VidGoToXY+0x4c>
	Lcd_VidSendCommand(LCD_SET_DDRAM_ADDR_CMD + 0x54 + Copy_u8Column);
    4d28:	8a 81       	ldd	r24, Y+2	; 0x02
    4d2a:	8c 52       	subi	r24, 0x2C	; 44
    4d2c:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
}
    4d30:	0f 90       	pop	r0
    4d32:	0f 90       	pop	r0
    4d34:	cf 91       	pop	r28
    4d36:	df 91       	pop	r29
    4d38:	08 95       	ret

00004d3a <Lcd_VidDisplayString>:


void Lcd_VidDisplayString(const pu8 Add_pu8String )
{
    4d3a:	df 93       	push	r29
    4d3c:	cf 93       	push	r28
    4d3e:	00 d0       	rcall	.+0      	; 0x4d40 <Lcd_VidDisplayString+0x6>
    4d40:	0f 92       	push	r0
    4d42:	cd b7       	in	r28, 0x3d	; 61
    4d44:	de b7       	in	r29, 0x3e	; 62
    4d46:	9b 83       	std	Y+3, r25	; 0x03
    4d48:	8a 83       	std	Y+2, r24	; 0x02
	uint8 LOC_u8Iterator=0;
    4d4a:	19 82       	std	Y+1, r1	; 0x01
    4d4c:	0e c0       	rjmp	.+28     	; 0x4d6a <Lcd_VidDisplayString+0x30>
	while(Add_pu8String[LOC_u8Iterator] != '\0')
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
    4d4e:	89 81       	ldd	r24, Y+1	; 0x01
    4d50:	28 2f       	mov	r18, r24
    4d52:	30 e0       	ldi	r19, 0x00	; 0
    4d54:	8a 81       	ldd	r24, Y+2	; 0x02
    4d56:	9b 81       	ldd	r25, Y+3	; 0x03
    4d58:	fc 01       	movw	r30, r24
    4d5a:	e2 0f       	add	r30, r18
    4d5c:	f3 1f       	adc	r31, r19
    4d5e:	80 81       	ld	r24, Z
    4d60:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
		LOC_u8Iterator++;
    4d64:	89 81       	ldd	r24, Y+1	; 0x01
    4d66:	8f 5f       	subi	r24, 0xFF	; 255
    4d68:	89 83       	std	Y+1, r24	; 0x01


void Lcd_VidDisplayString(const pu8 Add_pu8String )
{
	uint8 LOC_u8Iterator=0;
	while(Add_pu8String[LOC_u8Iterator] != '\0')
    4d6a:	89 81       	ldd	r24, Y+1	; 0x01
    4d6c:	28 2f       	mov	r18, r24
    4d6e:	30 e0       	ldi	r19, 0x00	; 0
    4d70:	8a 81       	ldd	r24, Y+2	; 0x02
    4d72:	9b 81       	ldd	r25, Y+3	; 0x03
    4d74:	fc 01       	movw	r30, r24
    4d76:	e2 0f       	add	r30, r18
    4d78:	f3 1f       	adc	r31, r19
    4d7a:	80 81       	ld	r24, Z
    4d7c:	88 23       	and	r24, r24
    4d7e:	39 f7       	brne	.-50     	; 0x4d4e <Lcd_VidDisplayString+0x14>
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
		LOC_u8Iterator++;
	}
}
    4d80:	0f 90       	pop	r0
    4d82:	0f 90       	pop	r0
    4d84:	0f 90       	pop	r0
    4d86:	cf 91       	pop	r28
    4d88:	df 91       	pop	r29
    4d8a:	08 95       	ret

00004d8c <Lcd_VidDisplayNumber>:

void Lcd_VidDisplayNumber(uint64 Copy_u64Num )
{
    4d8c:	af 92       	push	r10
    4d8e:	bf 92       	push	r11
    4d90:	cf 92       	push	r12
    4d92:	df 92       	push	r13
    4d94:	ef 92       	push	r14
    4d96:	ff 92       	push	r15
    4d98:	0f 93       	push	r16
    4d9a:	1f 93       	push	r17
    4d9c:	df 93       	push	r29
    4d9e:	cf 93       	push	r28
    4da0:	cd b7       	in	r28, 0x3d	; 61
    4da2:	de b7       	in	r29, 0x3e	; 62
    4da4:	c6 56       	subi	r28, 0x66	; 102
    4da6:	d0 40       	sbci	r29, 0x00	; 0
    4da8:	0f b6       	in	r0, 0x3f	; 63
    4daa:	f8 94       	cli
    4dac:	de bf       	out	0x3e, r29	; 62
    4dae:	0f be       	out	0x3f, r0	; 63
    4db0:	cd bf       	out	0x3d, r28	; 61
    4db2:	29 87       	std	Y+9, r18	; 0x09
    4db4:	3a 87       	std	Y+10, r19	; 0x0a
    4db6:	4b 87       	std	Y+11, r20	; 0x0b
    4db8:	5c 87       	std	Y+12, r21	; 0x0c
    4dba:	6d 87       	std	Y+13, r22	; 0x0d
    4dbc:	7e 87       	std	Y+14, r23	; 0x0e
    4dbe:	8f 87       	std	Y+15, r24	; 0x0f
    4dc0:	98 8b       	std	Y+16, r25	; 0x10
	uint64 LOC_u8Inverse=1;
    4dc2:	81 e0       	ldi	r24, 0x01	; 1
    4dc4:	89 83       	std	Y+1, r24	; 0x01
    4dc6:	1a 82       	std	Y+2, r1	; 0x02
    4dc8:	1b 82       	std	Y+3, r1	; 0x03
    4dca:	1c 82       	std	Y+4, r1	; 0x04
    4dcc:	1d 82       	std	Y+5, r1	; 0x05
    4dce:	1e 82       	std	Y+6, r1	; 0x06
    4dd0:	1f 82       	std	Y+7, r1	; 0x07
    4dd2:	18 86       	std	Y+8, r1	; 0x08
	if(Copy_u64Num==0)
    4dd4:	89 85       	ldd	r24, Y+9	; 0x09
    4dd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dd8:	89 2b       	or	r24, r25
    4dda:	9b 85       	ldd	r25, Y+11	; 0x0b
    4ddc:	89 2b       	or	r24, r25
    4dde:	9c 85       	ldd	r25, Y+12	; 0x0c
    4de0:	89 2b       	or	r24, r25
    4de2:	9d 85       	ldd	r25, Y+13	; 0x0d
    4de4:	89 2b       	or	r24, r25
    4de6:	9e 85       	ldd	r25, Y+14	; 0x0e
    4de8:	89 2b       	or	r24, r25
    4dea:	9f 85       	ldd	r25, Y+15	; 0x0f
    4dec:	89 2b       	or	r24, r25
    4dee:	98 89       	ldd	r25, Y+16	; 0x10
    4df0:	89 2b       	or	r24, r25
    4df2:	88 23       	and	r24, r24
    4df4:	09 f0       	breq	.+2      	; 0x4df8 <Lcd_VidDisplayNumber+0x6c>
    4df6:	62 c3       	rjmp	.+1732   	; 0x54bc <Lcd_VidDisplayNumber+0x730>
	{
		Lcd_VidDisplayChracter('0');
    4df8:	80 e3       	ldi	r24, 0x30	; 48
    4dfa:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
    4dfe:	5e c3       	rjmp	.+1724   	; 0x54bc <Lcd_VidDisplayNumber+0x730>
	}
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
    4e00:	29 81       	ldd	r18, Y+1	; 0x01
    4e02:	3a 81       	ldd	r19, Y+2	; 0x02
    4e04:	4b 81       	ldd	r20, Y+3	; 0x03
    4e06:	5c 81       	ldd	r21, Y+4	; 0x04
    4e08:	6d 81       	ldd	r22, Y+5	; 0x05
    4e0a:	7e 81       	ldd	r23, Y+6	; 0x06
    4e0c:	8f 81       	ldd	r24, Y+7	; 0x07
    4e0e:	98 85       	ldd	r25, Y+8	; 0x08
    4e10:	a2 2e       	mov	r10, r18
    4e12:	b3 2e       	mov	r11, r19
    4e14:	c4 2e       	mov	r12, r20
    4e16:	d5 2e       	mov	r13, r21
    4e18:	e6 2e       	mov	r14, r22
    4e1a:	f7 2e       	mov	r15, r23
    4e1c:	08 2f       	mov	r16, r24
    4e1e:	19 2f       	mov	r17, r25
    4e20:	2a 2d       	mov	r18, r10
    4e22:	3b 2d       	mov	r19, r11
    4e24:	4c 2d       	mov	r20, r12
    4e26:	5d 2d       	mov	r21, r13
    4e28:	6e 2d       	mov	r22, r14
    4e2a:	7f 2d       	mov	r23, r15
    4e2c:	80 2f       	mov	r24, r16
    4e2e:	91 2f       	mov	r25, r17
    4e30:	01 e0       	ldi	r16, 0x01	; 1
    4e32:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    4e36:	29 a3       	std	Y+33, r18	; 0x21
    4e38:	3a a3       	std	Y+34, r19	; 0x22
    4e3a:	4b a3       	std	Y+35, r20	; 0x23
    4e3c:	5c a3       	std	Y+36, r21	; 0x24
    4e3e:	6d a3       	std	Y+37, r22	; 0x25
    4e40:	7e a3       	std	Y+38, r23	; 0x26
    4e42:	8f a3       	std	Y+39, r24	; 0x27
    4e44:	98 a7       	std	Y+40, r25	; 0x28
    4e46:	29 a1       	ldd	r18, Y+33	; 0x21
    4e48:	3a a1       	ldd	r19, Y+34	; 0x22
    4e4a:	4b a1       	ldd	r20, Y+35	; 0x23
    4e4c:	5c a1       	ldd	r21, Y+36	; 0x24
    4e4e:	6d a1       	ldd	r22, Y+37	; 0x25
    4e50:	7e a1       	ldd	r23, Y+38	; 0x26
    4e52:	8f a1       	ldd	r24, Y+39	; 0x27
    4e54:	98 a5       	ldd	r25, Y+40	; 0x28
    4e56:	02 e0       	ldi	r16, 0x02	; 2
    4e58:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    4e5c:	29 a7       	std	Y+41, r18	; 0x29
    4e5e:	3a a7       	std	Y+42, r19	; 0x2a
    4e60:	4b a7       	std	Y+43, r20	; 0x2b
    4e62:	5c a7       	std	Y+44, r21	; 0x2c
    4e64:	6d a7       	std	Y+45, r22	; 0x2d
    4e66:	7e a7       	std	Y+46, r23	; 0x2e
    4e68:	8f a7       	std	Y+47, r24	; 0x2f
    4e6a:	98 ab       	std	Y+48, r25	; 0x30
    4e6c:	89 a1       	ldd	r24, Y+33	; 0x21
    4e6e:	99 a5       	ldd	r25, Y+41	; 0x29
    4e70:	89 0f       	add	r24, r25
    4e72:	89 ab       	std	Y+49, r24	; 0x31
    4e74:	81 e0       	ldi	r24, 0x01	; 1
    4e76:	89 af       	std	Y+57, r24	; 0x39
    4e78:	99 a9       	ldd	r25, Y+49	; 0x31
    4e7a:	89 a1       	ldd	r24, Y+33	; 0x21
    4e7c:	98 17       	cp	r25, r24
    4e7e:	08 f0       	brcs	.+2      	; 0x4e82 <Lcd_VidDisplayNumber+0xf6>
    4e80:	19 ae       	std	Y+57, r1	; 0x39
    4e82:	9a a1       	ldd	r25, Y+34	; 0x22
    4e84:	8a a5       	ldd	r24, Y+42	; 0x2a
    4e86:	98 0f       	add	r25, r24
    4e88:	9a ab       	std	Y+50, r25	; 0x32
    4e8a:	91 e0       	ldi	r25, 0x01	; 1
    4e8c:	9a af       	std	Y+58, r25	; 0x3a
    4e8e:	8a a9       	ldd	r24, Y+50	; 0x32
    4e90:	9a a1       	ldd	r25, Y+34	; 0x22
    4e92:	89 17       	cp	r24, r25
    4e94:	08 f0       	brcs	.+2      	; 0x4e98 <Lcd_VidDisplayNumber+0x10c>
    4e96:	1a ae       	std	Y+58, r1	; 0x3a
    4e98:	89 ad       	ldd	r24, Y+57	; 0x39
    4e9a:	9a a9       	ldd	r25, Y+50	; 0x32
    4e9c:	89 0f       	add	r24, r25
    4e9e:	8b af       	std	Y+59, r24	; 0x3b
    4ea0:	81 e0       	ldi	r24, 0x01	; 1
    4ea2:	8c af       	std	Y+60, r24	; 0x3c
    4ea4:	9b ad       	ldd	r25, Y+59	; 0x3b
    4ea6:	8a a9       	ldd	r24, Y+50	; 0x32
    4ea8:	98 17       	cp	r25, r24
    4eaa:	08 f0       	brcs	.+2      	; 0x4eae <Lcd_VidDisplayNumber+0x122>
    4eac:	1c ae       	std	Y+60, r1	; 0x3c
    4eae:	9a ad       	ldd	r25, Y+58	; 0x3a
    4eb0:	8c ad       	ldd	r24, Y+60	; 0x3c
    4eb2:	98 2b       	or	r25, r24
    4eb4:	9a af       	std	Y+58, r25	; 0x3a
    4eb6:	9b ad       	ldd	r25, Y+59	; 0x3b
    4eb8:	9a ab       	std	Y+50, r25	; 0x32
    4eba:	8b a1       	ldd	r24, Y+35	; 0x23
    4ebc:	9b a5       	ldd	r25, Y+43	; 0x2b
    4ebe:	89 0f       	add	r24, r25
    4ec0:	8b ab       	std	Y+51, r24	; 0x33
    4ec2:	81 e0       	ldi	r24, 0x01	; 1
    4ec4:	8d af       	std	Y+61, r24	; 0x3d
    4ec6:	9b a9       	ldd	r25, Y+51	; 0x33
    4ec8:	8b a1       	ldd	r24, Y+35	; 0x23
    4eca:	98 17       	cp	r25, r24
    4ecc:	08 f0       	brcs	.+2      	; 0x4ed0 <Lcd_VidDisplayNumber+0x144>
    4ece:	1d ae       	std	Y+61, r1	; 0x3d
    4ed0:	9a ad       	ldd	r25, Y+58	; 0x3a
    4ed2:	8b a9       	ldd	r24, Y+51	; 0x33
    4ed4:	98 0f       	add	r25, r24
    4ed6:	9e af       	std	Y+62, r25	; 0x3e
    4ed8:	91 e0       	ldi	r25, 0x01	; 1
    4eda:	9f af       	std	Y+63, r25	; 0x3f
    4edc:	8e ad       	ldd	r24, Y+62	; 0x3e
    4ede:	9b a9       	ldd	r25, Y+51	; 0x33
    4ee0:	89 17       	cp	r24, r25
    4ee2:	08 f0       	brcs	.+2      	; 0x4ee6 <Lcd_VidDisplayNumber+0x15a>
    4ee4:	1f ae       	std	Y+63, r1	; 0x3f
    4ee6:	8d ad       	ldd	r24, Y+61	; 0x3d
    4ee8:	9f ad       	ldd	r25, Y+63	; 0x3f
    4eea:	89 2b       	or	r24, r25
    4eec:	8d af       	std	Y+61, r24	; 0x3d
    4eee:	8e ad       	ldd	r24, Y+62	; 0x3e
    4ef0:	8b ab       	std	Y+51, r24	; 0x33
    4ef2:	9c a1       	ldd	r25, Y+36	; 0x24
    4ef4:	8c a5       	ldd	r24, Y+44	; 0x2c
    4ef6:	98 0f       	add	r25, r24
    4ef8:	9c ab       	std	Y+52, r25	; 0x34
    4efa:	91 e0       	ldi	r25, 0x01	; 1
    4efc:	21 96       	adiw	r28, 0x01	; 1
    4efe:	9f af       	std	Y+63, r25	; 0x3f
    4f00:	21 97       	sbiw	r28, 0x01	; 1
    4f02:	8c a9       	ldd	r24, Y+52	; 0x34
    4f04:	9c a1       	ldd	r25, Y+36	; 0x24
    4f06:	89 17       	cp	r24, r25
    4f08:	18 f0       	brcs	.+6      	; 0x4f10 <Lcd_VidDisplayNumber+0x184>
    4f0a:	21 96       	adiw	r28, 0x01	; 1
    4f0c:	1f ae       	std	Y+63, r1	; 0x3f
    4f0e:	21 97       	sbiw	r28, 0x01	; 1
    4f10:	8d ad       	ldd	r24, Y+61	; 0x3d
    4f12:	9c a9       	ldd	r25, Y+52	; 0x34
    4f14:	89 0f       	add	r24, r25
    4f16:	22 96       	adiw	r28, 0x02	; 2
    4f18:	8f af       	std	Y+63, r24	; 0x3f
    4f1a:	22 97       	sbiw	r28, 0x02	; 2
    4f1c:	81 e0       	ldi	r24, 0x01	; 1
    4f1e:	23 96       	adiw	r28, 0x03	; 3
    4f20:	8f af       	std	Y+63, r24	; 0x3f
    4f22:	23 97       	sbiw	r28, 0x03	; 3
    4f24:	22 96       	adiw	r28, 0x02	; 2
    4f26:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f28:	22 97       	sbiw	r28, 0x02	; 2
    4f2a:	8c a9       	ldd	r24, Y+52	; 0x34
    4f2c:	98 17       	cp	r25, r24
    4f2e:	18 f0       	brcs	.+6      	; 0x4f36 <Lcd_VidDisplayNumber+0x1aa>
    4f30:	23 96       	adiw	r28, 0x03	; 3
    4f32:	1f ae       	std	Y+63, r1	; 0x3f
    4f34:	23 97       	sbiw	r28, 0x03	; 3
    4f36:	21 96       	adiw	r28, 0x01	; 1
    4f38:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f3a:	21 97       	sbiw	r28, 0x01	; 1
    4f3c:	23 96       	adiw	r28, 0x03	; 3
    4f3e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f40:	23 97       	sbiw	r28, 0x03	; 3
    4f42:	98 2b       	or	r25, r24
    4f44:	21 96       	adiw	r28, 0x01	; 1
    4f46:	9f af       	std	Y+63, r25	; 0x3f
    4f48:	21 97       	sbiw	r28, 0x01	; 1
    4f4a:	22 96       	adiw	r28, 0x02	; 2
    4f4c:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f4e:	22 97       	sbiw	r28, 0x02	; 2
    4f50:	9c ab       	std	Y+52, r25	; 0x34
    4f52:	8d a1       	ldd	r24, Y+37	; 0x25
    4f54:	9d a5       	ldd	r25, Y+45	; 0x2d
    4f56:	89 0f       	add	r24, r25
    4f58:	8d ab       	std	Y+53, r24	; 0x35
    4f5a:	81 e0       	ldi	r24, 0x01	; 1
    4f5c:	24 96       	adiw	r28, 0x04	; 4
    4f5e:	8f af       	std	Y+63, r24	; 0x3f
    4f60:	24 97       	sbiw	r28, 0x04	; 4
    4f62:	9d a9       	ldd	r25, Y+53	; 0x35
    4f64:	8d a1       	ldd	r24, Y+37	; 0x25
    4f66:	98 17       	cp	r25, r24
    4f68:	18 f0       	brcs	.+6      	; 0x4f70 <Lcd_VidDisplayNumber+0x1e4>
    4f6a:	24 96       	adiw	r28, 0x04	; 4
    4f6c:	1f ae       	std	Y+63, r1	; 0x3f
    4f6e:	24 97       	sbiw	r28, 0x04	; 4
    4f70:	21 96       	adiw	r28, 0x01	; 1
    4f72:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f74:	21 97       	sbiw	r28, 0x01	; 1
    4f76:	8d a9       	ldd	r24, Y+53	; 0x35
    4f78:	98 0f       	add	r25, r24
    4f7a:	25 96       	adiw	r28, 0x05	; 5
    4f7c:	9f af       	std	Y+63, r25	; 0x3f
    4f7e:	25 97       	sbiw	r28, 0x05	; 5
    4f80:	91 e0       	ldi	r25, 0x01	; 1
    4f82:	26 96       	adiw	r28, 0x06	; 6
    4f84:	9f af       	std	Y+63, r25	; 0x3f
    4f86:	26 97       	sbiw	r28, 0x06	; 6
    4f88:	25 96       	adiw	r28, 0x05	; 5
    4f8a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f8c:	25 97       	sbiw	r28, 0x05	; 5
    4f8e:	9d a9       	ldd	r25, Y+53	; 0x35
    4f90:	89 17       	cp	r24, r25
    4f92:	18 f0       	brcs	.+6      	; 0x4f9a <Lcd_VidDisplayNumber+0x20e>
    4f94:	26 96       	adiw	r28, 0x06	; 6
    4f96:	1f ae       	std	Y+63, r1	; 0x3f
    4f98:	26 97       	sbiw	r28, 0x06	; 6
    4f9a:	24 96       	adiw	r28, 0x04	; 4
    4f9c:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f9e:	24 97       	sbiw	r28, 0x04	; 4
    4fa0:	26 96       	adiw	r28, 0x06	; 6
    4fa2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fa4:	26 97       	sbiw	r28, 0x06	; 6
    4fa6:	89 2b       	or	r24, r25
    4fa8:	24 96       	adiw	r28, 0x04	; 4
    4faa:	8f af       	std	Y+63, r24	; 0x3f
    4fac:	24 97       	sbiw	r28, 0x04	; 4
    4fae:	25 96       	adiw	r28, 0x05	; 5
    4fb0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fb2:	25 97       	sbiw	r28, 0x05	; 5
    4fb4:	8d ab       	std	Y+53, r24	; 0x35
    4fb6:	9e a1       	ldd	r25, Y+38	; 0x26
    4fb8:	8e a5       	ldd	r24, Y+46	; 0x2e
    4fba:	98 0f       	add	r25, r24
    4fbc:	9e ab       	std	Y+54, r25	; 0x36
    4fbe:	91 e0       	ldi	r25, 0x01	; 1
    4fc0:	27 96       	adiw	r28, 0x07	; 7
    4fc2:	9f af       	std	Y+63, r25	; 0x3f
    4fc4:	27 97       	sbiw	r28, 0x07	; 7
    4fc6:	8e a9       	ldd	r24, Y+54	; 0x36
    4fc8:	9e a1       	ldd	r25, Y+38	; 0x26
    4fca:	89 17       	cp	r24, r25
    4fcc:	18 f0       	brcs	.+6      	; 0x4fd4 <Lcd_VidDisplayNumber+0x248>
    4fce:	27 96       	adiw	r28, 0x07	; 7
    4fd0:	1f ae       	std	Y+63, r1	; 0x3f
    4fd2:	27 97       	sbiw	r28, 0x07	; 7
    4fd4:	24 96       	adiw	r28, 0x04	; 4
    4fd6:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fd8:	24 97       	sbiw	r28, 0x04	; 4
    4fda:	9e a9       	ldd	r25, Y+54	; 0x36
    4fdc:	89 0f       	add	r24, r25
    4fde:	28 96       	adiw	r28, 0x08	; 8
    4fe0:	8f af       	std	Y+63, r24	; 0x3f
    4fe2:	28 97       	sbiw	r28, 0x08	; 8
    4fe4:	81 e0       	ldi	r24, 0x01	; 1
    4fe6:	29 96       	adiw	r28, 0x09	; 9
    4fe8:	8f af       	std	Y+63, r24	; 0x3f
    4fea:	29 97       	sbiw	r28, 0x09	; 9
    4fec:	28 96       	adiw	r28, 0x08	; 8
    4fee:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ff0:	28 97       	sbiw	r28, 0x08	; 8
    4ff2:	8e a9       	ldd	r24, Y+54	; 0x36
    4ff4:	98 17       	cp	r25, r24
    4ff6:	18 f0       	brcs	.+6      	; 0x4ffe <Lcd_VidDisplayNumber+0x272>
    4ff8:	29 96       	adiw	r28, 0x09	; 9
    4ffa:	1f ae       	std	Y+63, r1	; 0x3f
    4ffc:	29 97       	sbiw	r28, 0x09	; 9
    4ffe:	27 96       	adiw	r28, 0x07	; 7
    5000:	9f ad       	ldd	r25, Y+63	; 0x3f
    5002:	27 97       	sbiw	r28, 0x07	; 7
    5004:	29 96       	adiw	r28, 0x09	; 9
    5006:	8f ad       	ldd	r24, Y+63	; 0x3f
    5008:	29 97       	sbiw	r28, 0x09	; 9
    500a:	98 2b       	or	r25, r24
    500c:	27 96       	adiw	r28, 0x07	; 7
    500e:	9f af       	std	Y+63, r25	; 0x3f
    5010:	27 97       	sbiw	r28, 0x07	; 7
    5012:	28 96       	adiw	r28, 0x08	; 8
    5014:	9f ad       	ldd	r25, Y+63	; 0x3f
    5016:	28 97       	sbiw	r28, 0x08	; 8
    5018:	9e ab       	std	Y+54, r25	; 0x36
    501a:	8f a1       	ldd	r24, Y+39	; 0x27
    501c:	9f a5       	ldd	r25, Y+47	; 0x2f
    501e:	89 0f       	add	r24, r25
    5020:	8f ab       	std	Y+55, r24	; 0x37
    5022:	81 e0       	ldi	r24, 0x01	; 1
    5024:	2a 96       	adiw	r28, 0x0a	; 10
    5026:	8f af       	std	Y+63, r24	; 0x3f
    5028:	2a 97       	sbiw	r28, 0x0a	; 10
    502a:	9f a9       	ldd	r25, Y+55	; 0x37
    502c:	8f a1       	ldd	r24, Y+39	; 0x27
    502e:	98 17       	cp	r25, r24
    5030:	18 f0       	brcs	.+6      	; 0x5038 <Lcd_VidDisplayNumber+0x2ac>
    5032:	2a 96       	adiw	r28, 0x0a	; 10
    5034:	1f ae       	std	Y+63, r1	; 0x3f
    5036:	2a 97       	sbiw	r28, 0x0a	; 10
    5038:	27 96       	adiw	r28, 0x07	; 7
    503a:	9f ad       	ldd	r25, Y+63	; 0x3f
    503c:	27 97       	sbiw	r28, 0x07	; 7
    503e:	8f a9       	ldd	r24, Y+55	; 0x37
    5040:	98 0f       	add	r25, r24
    5042:	2b 96       	adiw	r28, 0x0b	; 11
    5044:	9f af       	std	Y+63, r25	; 0x3f
    5046:	2b 97       	sbiw	r28, 0x0b	; 11
    5048:	91 e0       	ldi	r25, 0x01	; 1
    504a:	2c 96       	adiw	r28, 0x0c	; 12
    504c:	9f af       	std	Y+63, r25	; 0x3f
    504e:	2c 97       	sbiw	r28, 0x0c	; 12
    5050:	2b 96       	adiw	r28, 0x0b	; 11
    5052:	8f ad       	ldd	r24, Y+63	; 0x3f
    5054:	2b 97       	sbiw	r28, 0x0b	; 11
    5056:	9f a9       	ldd	r25, Y+55	; 0x37
    5058:	89 17       	cp	r24, r25
    505a:	18 f0       	brcs	.+6      	; 0x5062 <Lcd_VidDisplayNumber+0x2d6>
    505c:	2c 96       	adiw	r28, 0x0c	; 12
    505e:	1f ae       	std	Y+63, r1	; 0x3f
    5060:	2c 97       	sbiw	r28, 0x0c	; 12
    5062:	2a 96       	adiw	r28, 0x0a	; 10
    5064:	8f ad       	ldd	r24, Y+63	; 0x3f
    5066:	2a 97       	sbiw	r28, 0x0a	; 10
    5068:	2c 96       	adiw	r28, 0x0c	; 12
    506a:	9f ad       	ldd	r25, Y+63	; 0x3f
    506c:	2c 97       	sbiw	r28, 0x0c	; 12
    506e:	89 2b       	or	r24, r25
    5070:	2a 96       	adiw	r28, 0x0a	; 10
    5072:	8f af       	std	Y+63, r24	; 0x3f
    5074:	2a 97       	sbiw	r28, 0x0a	; 10
    5076:	2b 96       	adiw	r28, 0x0b	; 11
    5078:	8f ad       	ldd	r24, Y+63	; 0x3f
    507a:	2b 97       	sbiw	r28, 0x0b	; 11
    507c:	8f ab       	std	Y+55, r24	; 0x37
    507e:	98 a5       	ldd	r25, Y+40	; 0x28
    5080:	88 a9       	ldd	r24, Y+48	; 0x30
    5082:	98 0f       	add	r25, r24
    5084:	98 af       	std	Y+56, r25	; 0x38
    5086:	2a 96       	adiw	r28, 0x0a	; 10
    5088:	8f ad       	ldd	r24, Y+63	; 0x3f
    508a:	2a 97       	sbiw	r28, 0x0a	; 10
    508c:	98 ad       	ldd	r25, Y+56	; 0x38
    508e:	89 0f       	add	r24, r25
    5090:	88 af       	std	Y+56, r24	; 0x38
    5092:	89 a9       	ldd	r24, Y+49	; 0x31
    5094:	89 8f       	std	Y+25, r24	; 0x19
    5096:	9a a9       	ldd	r25, Y+50	; 0x32
    5098:	9a 8f       	std	Y+26, r25	; 0x1a
    509a:	8b a9       	ldd	r24, Y+51	; 0x33
    509c:	8b 8f       	std	Y+27, r24	; 0x1b
    509e:	9c a9       	ldd	r25, Y+52	; 0x34
    50a0:	9c 8f       	std	Y+28, r25	; 0x1c
    50a2:	8d a9       	ldd	r24, Y+53	; 0x35
    50a4:	8d 8f       	std	Y+29, r24	; 0x1d
    50a6:	9e a9       	ldd	r25, Y+54	; 0x36
    50a8:	9e 8f       	std	Y+30, r25	; 0x1e
    50aa:	8f a9       	ldd	r24, Y+55	; 0x37
    50ac:	8f 8f       	std	Y+31, r24	; 0x1f
    50ae:	98 ad       	ldd	r25, Y+56	; 0x38
    50b0:	98 a3       	std	Y+32, r25	; 0x20
    50b2:	a9 84       	ldd	r10, Y+9	; 0x09
    50b4:	ba 84       	ldd	r11, Y+10	; 0x0a
    50b6:	cb 84       	ldd	r12, Y+11	; 0x0b
    50b8:	dc 84       	ldd	r13, Y+12	; 0x0c
    50ba:	ed 84       	ldd	r14, Y+13	; 0x0d
    50bc:	fe 84       	ldd	r15, Y+14	; 0x0e
    50be:	0f 85       	ldd	r16, Y+15	; 0x0f
    50c0:	18 89       	ldd	r17, Y+16	; 0x10
    50c2:	2a 2d       	mov	r18, r10
    50c4:	3b 2d       	mov	r19, r11
    50c6:	4c 2d       	mov	r20, r12
    50c8:	5d 2d       	mov	r21, r13
    50ca:	6e 2d       	mov	r22, r14
    50cc:	7f 2d       	mov	r23, r15
    50ce:	80 2f       	mov	r24, r16
    50d0:	91 2f       	mov	r25, r17
    50d2:	0f 2e       	mov	r0, r31
    50d4:	fa e0       	ldi	r31, 0x0A	; 10
    50d6:	af 2e       	mov	r10, r31
    50d8:	f0 2d       	mov	r31, r0
    50da:	bb 24       	eor	r11, r11
    50dc:	cc 24       	eor	r12, r12
    50de:	dd 24       	eor	r13, r13
    50e0:	ee 24       	eor	r14, r14
    50e2:	ff 24       	eor	r15, r15
    50e4:	00 e0       	ldi	r16, 0x00	; 0
    50e6:	10 e0       	ldi	r17, 0x00	; 0
    50e8:	0e 94 61 07 	call	0xec2	; 0xec2 <__umoddi3>
    50ec:	a2 2e       	mov	r10, r18
    50ee:	b3 2e       	mov	r11, r19
    50f0:	c4 2e       	mov	r12, r20
    50f2:	d5 2e       	mov	r13, r21
    50f4:	e6 2e       	mov	r14, r22
    50f6:	f7 2e       	mov	r15, r23
    50f8:	08 2f       	mov	r16, r24
    50fa:	19 2f       	mov	r17, r25
    50fc:	a9 8a       	std	Y+17, r10	; 0x11
    50fe:	ba 8a       	std	Y+18, r11	; 0x12
    5100:	cb 8a       	std	Y+19, r12	; 0x13
    5102:	dc 8a       	std	Y+20, r13	; 0x14
    5104:	ed 8a       	std	Y+21, r14	; 0x15
    5106:	fe 8a       	std	Y+22, r15	; 0x16
    5108:	0f 8b       	std	Y+23, r16	; 0x17
    510a:	18 8f       	std	Y+24, r17	; 0x18
    510c:	89 8d       	ldd	r24, Y+25	; 0x19
    510e:	99 89       	ldd	r25, Y+17	; 0x11
    5110:	89 0f       	add	r24, r25
    5112:	2d 96       	adiw	r28, 0x0d	; 13
    5114:	8f af       	std	Y+63, r24	; 0x3f
    5116:	2d 97       	sbiw	r28, 0x0d	; 13
    5118:	81 e0       	ldi	r24, 0x01	; 1
    511a:	65 96       	adiw	r28, 0x15	; 21
    511c:	8f af       	std	Y+63, r24	; 0x3f
    511e:	65 97       	sbiw	r28, 0x15	; 21
    5120:	2d 96       	adiw	r28, 0x0d	; 13
    5122:	9f ad       	ldd	r25, Y+63	; 0x3f
    5124:	2d 97       	sbiw	r28, 0x0d	; 13
    5126:	89 8d       	ldd	r24, Y+25	; 0x19
    5128:	98 17       	cp	r25, r24
    512a:	18 f0       	brcs	.+6      	; 0x5132 <Lcd_VidDisplayNumber+0x3a6>
    512c:	65 96       	adiw	r28, 0x15	; 21
    512e:	1f ae       	std	Y+63, r1	; 0x3f
    5130:	65 97       	sbiw	r28, 0x15	; 21
    5132:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5134:	8a 89       	ldd	r24, Y+18	; 0x12
    5136:	98 0f       	add	r25, r24
    5138:	2e 96       	adiw	r28, 0x0e	; 14
    513a:	9f af       	std	Y+63, r25	; 0x3f
    513c:	2e 97       	sbiw	r28, 0x0e	; 14
    513e:	91 e0       	ldi	r25, 0x01	; 1
    5140:	66 96       	adiw	r28, 0x16	; 22
    5142:	9f af       	std	Y+63, r25	; 0x3f
    5144:	66 97       	sbiw	r28, 0x16	; 22
    5146:	2e 96       	adiw	r28, 0x0e	; 14
    5148:	8f ad       	ldd	r24, Y+63	; 0x3f
    514a:	2e 97       	sbiw	r28, 0x0e	; 14
    514c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    514e:	89 17       	cp	r24, r25
    5150:	18 f0       	brcs	.+6      	; 0x5158 <Lcd_VidDisplayNumber+0x3cc>
    5152:	66 96       	adiw	r28, 0x16	; 22
    5154:	1f ae       	std	Y+63, r1	; 0x3f
    5156:	66 97       	sbiw	r28, 0x16	; 22
    5158:	65 96       	adiw	r28, 0x15	; 21
    515a:	8f ad       	ldd	r24, Y+63	; 0x3f
    515c:	65 97       	sbiw	r28, 0x15	; 21
    515e:	2e 96       	adiw	r28, 0x0e	; 14
    5160:	9f ad       	ldd	r25, Y+63	; 0x3f
    5162:	2e 97       	sbiw	r28, 0x0e	; 14
    5164:	89 0f       	add	r24, r25
    5166:	67 96       	adiw	r28, 0x17	; 23
    5168:	8f af       	std	Y+63, r24	; 0x3f
    516a:	67 97       	sbiw	r28, 0x17	; 23
    516c:	81 e0       	ldi	r24, 0x01	; 1
    516e:	68 96       	adiw	r28, 0x18	; 24
    5170:	8f af       	std	Y+63, r24	; 0x3f
    5172:	68 97       	sbiw	r28, 0x18	; 24
    5174:	67 96       	adiw	r28, 0x17	; 23
    5176:	9f ad       	ldd	r25, Y+63	; 0x3f
    5178:	67 97       	sbiw	r28, 0x17	; 23
    517a:	2e 96       	adiw	r28, 0x0e	; 14
    517c:	8f ad       	ldd	r24, Y+63	; 0x3f
    517e:	2e 97       	sbiw	r28, 0x0e	; 14
    5180:	98 17       	cp	r25, r24
    5182:	18 f0       	brcs	.+6      	; 0x518a <Lcd_VidDisplayNumber+0x3fe>
    5184:	68 96       	adiw	r28, 0x18	; 24
    5186:	1f ae       	std	Y+63, r1	; 0x3f
    5188:	68 97       	sbiw	r28, 0x18	; 24
    518a:	66 96       	adiw	r28, 0x16	; 22
    518c:	9f ad       	ldd	r25, Y+63	; 0x3f
    518e:	66 97       	sbiw	r28, 0x16	; 22
    5190:	68 96       	adiw	r28, 0x18	; 24
    5192:	8f ad       	ldd	r24, Y+63	; 0x3f
    5194:	68 97       	sbiw	r28, 0x18	; 24
    5196:	98 2b       	or	r25, r24
    5198:	66 96       	adiw	r28, 0x16	; 22
    519a:	9f af       	std	Y+63, r25	; 0x3f
    519c:	66 97       	sbiw	r28, 0x16	; 22
    519e:	67 96       	adiw	r28, 0x17	; 23
    51a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    51a2:	67 97       	sbiw	r28, 0x17	; 23
    51a4:	2e 96       	adiw	r28, 0x0e	; 14
    51a6:	9f af       	std	Y+63, r25	; 0x3f
    51a8:	2e 97       	sbiw	r28, 0x0e	; 14
    51aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    51ac:	9b 89       	ldd	r25, Y+19	; 0x13
    51ae:	89 0f       	add	r24, r25
    51b0:	2f 96       	adiw	r28, 0x0f	; 15
    51b2:	8f af       	std	Y+63, r24	; 0x3f
    51b4:	2f 97       	sbiw	r28, 0x0f	; 15
    51b6:	81 e0       	ldi	r24, 0x01	; 1
    51b8:	69 96       	adiw	r28, 0x19	; 25
    51ba:	8f af       	std	Y+63, r24	; 0x3f
    51bc:	69 97       	sbiw	r28, 0x19	; 25
    51be:	2f 96       	adiw	r28, 0x0f	; 15
    51c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    51c2:	2f 97       	sbiw	r28, 0x0f	; 15
    51c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    51c6:	98 17       	cp	r25, r24
    51c8:	18 f0       	brcs	.+6      	; 0x51d0 <Lcd_VidDisplayNumber+0x444>
    51ca:	69 96       	adiw	r28, 0x19	; 25
    51cc:	1f ae       	std	Y+63, r1	; 0x3f
    51ce:	69 97       	sbiw	r28, 0x19	; 25
    51d0:	66 96       	adiw	r28, 0x16	; 22
    51d2:	9f ad       	ldd	r25, Y+63	; 0x3f
    51d4:	66 97       	sbiw	r28, 0x16	; 22
    51d6:	2f 96       	adiw	r28, 0x0f	; 15
    51d8:	8f ad       	ldd	r24, Y+63	; 0x3f
    51da:	2f 97       	sbiw	r28, 0x0f	; 15
    51dc:	98 0f       	add	r25, r24
    51de:	6a 96       	adiw	r28, 0x1a	; 26
    51e0:	9f af       	std	Y+63, r25	; 0x3f
    51e2:	6a 97       	sbiw	r28, 0x1a	; 26
    51e4:	91 e0       	ldi	r25, 0x01	; 1
    51e6:	6b 96       	adiw	r28, 0x1b	; 27
    51e8:	9f af       	std	Y+63, r25	; 0x3f
    51ea:	6b 97       	sbiw	r28, 0x1b	; 27
    51ec:	6a 96       	adiw	r28, 0x1a	; 26
    51ee:	8f ad       	ldd	r24, Y+63	; 0x3f
    51f0:	6a 97       	sbiw	r28, 0x1a	; 26
    51f2:	2f 96       	adiw	r28, 0x0f	; 15
    51f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    51f6:	2f 97       	sbiw	r28, 0x0f	; 15
    51f8:	89 17       	cp	r24, r25
    51fa:	18 f0       	brcs	.+6      	; 0x5202 <Lcd_VidDisplayNumber+0x476>
    51fc:	6b 96       	adiw	r28, 0x1b	; 27
    51fe:	1f ae       	std	Y+63, r1	; 0x3f
    5200:	6b 97       	sbiw	r28, 0x1b	; 27
    5202:	69 96       	adiw	r28, 0x19	; 25
    5204:	8f ad       	ldd	r24, Y+63	; 0x3f
    5206:	69 97       	sbiw	r28, 0x19	; 25
    5208:	6b 96       	adiw	r28, 0x1b	; 27
    520a:	9f ad       	ldd	r25, Y+63	; 0x3f
    520c:	6b 97       	sbiw	r28, 0x1b	; 27
    520e:	89 2b       	or	r24, r25
    5210:	69 96       	adiw	r28, 0x19	; 25
    5212:	8f af       	std	Y+63, r24	; 0x3f
    5214:	69 97       	sbiw	r28, 0x19	; 25
    5216:	6a 96       	adiw	r28, 0x1a	; 26
    5218:	8f ad       	ldd	r24, Y+63	; 0x3f
    521a:	6a 97       	sbiw	r28, 0x1a	; 26
    521c:	2f 96       	adiw	r28, 0x0f	; 15
    521e:	8f af       	std	Y+63, r24	; 0x3f
    5220:	2f 97       	sbiw	r28, 0x0f	; 15
    5222:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5224:	8c 89       	ldd	r24, Y+20	; 0x14
    5226:	98 0f       	add	r25, r24
    5228:	60 96       	adiw	r28, 0x10	; 16
    522a:	9f af       	std	Y+63, r25	; 0x3f
    522c:	60 97       	sbiw	r28, 0x10	; 16
    522e:	91 e0       	ldi	r25, 0x01	; 1
    5230:	6c 96       	adiw	r28, 0x1c	; 28
    5232:	9f af       	std	Y+63, r25	; 0x3f
    5234:	6c 97       	sbiw	r28, 0x1c	; 28
    5236:	60 96       	adiw	r28, 0x10	; 16
    5238:	8f ad       	ldd	r24, Y+63	; 0x3f
    523a:	60 97       	sbiw	r28, 0x10	; 16
    523c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    523e:	89 17       	cp	r24, r25
    5240:	18 f0       	brcs	.+6      	; 0x5248 <Lcd_VidDisplayNumber+0x4bc>
    5242:	6c 96       	adiw	r28, 0x1c	; 28
    5244:	1f ae       	std	Y+63, r1	; 0x3f
    5246:	6c 97       	sbiw	r28, 0x1c	; 28
    5248:	69 96       	adiw	r28, 0x19	; 25
    524a:	8f ad       	ldd	r24, Y+63	; 0x3f
    524c:	69 97       	sbiw	r28, 0x19	; 25
    524e:	60 96       	adiw	r28, 0x10	; 16
    5250:	9f ad       	ldd	r25, Y+63	; 0x3f
    5252:	60 97       	sbiw	r28, 0x10	; 16
    5254:	89 0f       	add	r24, r25
    5256:	6d 96       	adiw	r28, 0x1d	; 29
    5258:	8f af       	std	Y+63, r24	; 0x3f
    525a:	6d 97       	sbiw	r28, 0x1d	; 29
    525c:	81 e0       	ldi	r24, 0x01	; 1
    525e:	6e 96       	adiw	r28, 0x1e	; 30
    5260:	8f af       	std	Y+63, r24	; 0x3f
    5262:	6e 97       	sbiw	r28, 0x1e	; 30
    5264:	6d 96       	adiw	r28, 0x1d	; 29
    5266:	9f ad       	ldd	r25, Y+63	; 0x3f
    5268:	6d 97       	sbiw	r28, 0x1d	; 29
    526a:	60 96       	adiw	r28, 0x10	; 16
    526c:	8f ad       	ldd	r24, Y+63	; 0x3f
    526e:	60 97       	sbiw	r28, 0x10	; 16
    5270:	98 17       	cp	r25, r24
    5272:	18 f0       	brcs	.+6      	; 0x527a <Lcd_VidDisplayNumber+0x4ee>
    5274:	6e 96       	adiw	r28, 0x1e	; 30
    5276:	1f ae       	std	Y+63, r1	; 0x3f
    5278:	6e 97       	sbiw	r28, 0x1e	; 30
    527a:	6c 96       	adiw	r28, 0x1c	; 28
    527c:	9f ad       	ldd	r25, Y+63	; 0x3f
    527e:	6c 97       	sbiw	r28, 0x1c	; 28
    5280:	6e 96       	adiw	r28, 0x1e	; 30
    5282:	8f ad       	ldd	r24, Y+63	; 0x3f
    5284:	6e 97       	sbiw	r28, 0x1e	; 30
    5286:	98 2b       	or	r25, r24
    5288:	6c 96       	adiw	r28, 0x1c	; 28
    528a:	9f af       	std	Y+63, r25	; 0x3f
    528c:	6c 97       	sbiw	r28, 0x1c	; 28
    528e:	6d 96       	adiw	r28, 0x1d	; 29
    5290:	9f ad       	ldd	r25, Y+63	; 0x3f
    5292:	6d 97       	sbiw	r28, 0x1d	; 29
    5294:	60 96       	adiw	r28, 0x10	; 16
    5296:	9f af       	std	Y+63, r25	; 0x3f
    5298:	60 97       	sbiw	r28, 0x10	; 16
    529a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    529c:	9d 89       	ldd	r25, Y+21	; 0x15
    529e:	89 0f       	add	r24, r25
    52a0:	61 96       	adiw	r28, 0x11	; 17
    52a2:	8f af       	std	Y+63, r24	; 0x3f
    52a4:	61 97       	sbiw	r28, 0x11	; 17
    52a6:	81 e0       	ldi	r24, 0x01	; 1
    52a8:	6f 96       	adiw	r28, 0x1f	; 31
    52aa:	8f af       	std	Y+63, r24	; 0x3f
    52ac:	6f 97       	sbiw	r28, 0x1f	; 31
    52ae:	61 96       	adiw	r28, 0x11	; 17
    52b0:	9f ad       	ldd	r25, Y+63	; 0x3f
    52b2:	61 97       	sbiw	r28, 0x11	; 17
    52b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    52b6:	98 17       	cp	r25, r24
    52b8:	18 f0       	brcs	.+6      	; 0x52c0 <Lcd_VidDisplayNumber+0x534>
    52ba:	6f 96       	adiw	r28, 0x1f	; 31
    52bc:	1f ae       	std	Y+63, r1	; 0x3f
    52be:	6f 97       	sbiw	r28, 0x1f	; 31
    52c0:	6c 96       	adiw	r28, 0x1c	; 28
    52c2:	9f ad       	ldd	r25, Y+63	; 0x3f
    52c4:	6c 97       	sbiw	r28, 0x1c	; 28
    52c6:	61 96       	adiw	r28, 0x11	; 17
    52c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    52ca:	61 97       	sbiw	r28, 0x11	; 17
    52cc:	98 0f       	add	r25, r24
    52ce:	a0 96       	adiw	r28, 0x20	; 32
    52d0:	9f af       	std	Y+63, r25	; 0x3f
    52d2:	a0 97       	sbiw	r28, 0x20	; 32
    52d4:	91 e0       	ldi	r25, 0x01	; 1
    52d6:	a1 96       	adiw	r28, 0x21	; 33
    52d8:	9f af       	std	Y+63, r25	; 0x3f
    52da:	a1 97       	sbiw	r28, 0x21	; 33
    52dc:	a0 96       	adiw	r28, 0x20	; 32
    52de:	8f ad       	ldd	r24, Y+63	; 0x3f
    52e0:	a0 97       	sbiw	r28, 0x20	; 32
    52e2:	61 96       	adiw	r28, 0x11	; 17
    52e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    52e6:	61 97       	sbiw	r28, 0x11	; 17
    52e8:	89 17       	cp	r24, r25
    52ea:	18 f0       	brcs	.+6      	; 0x52f2 <Lcd_VidDisplayNumber+0x566>
    52ec:	a1 96       	adiw	r28, 0x21	; 33
    52ee:	1f ae       	std	Y+63, r1	; 0x3f
    52f0:	a1 97       	sbiw	r28, 0x21	; 33
    52f2:	6f 96       	adiw	r28, 0x1f	; 31
    52f4:	8f ad       	ldd	r24, Y+63	; 0x3f
    52f6:	6f 97       	sbiw	r28, 0x1f	; 31
    52f8:	a1 96       	adiw	r28, 0x21	; 33
    52fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    52fc:	a1 97       	sbiw	r28, 0x21	; 33
    52fe:	89 2b       	or	r24, r25
    5300:	6f 96       	adiw	r28, 0x1f	; 31
    5302:	8f af       	std	Y+63, r24	; 0x3f
    5304:	6f 97       	sbiw	r28, 0x1f	; 31
    5306:	a0 96       	adiw	r28, 0x20	; 32
    5308:	8f ad       	ldd	r24, Y+63	; 0x3f
    530a:	a0 97       	sbiw	r28, 0x20	; 32
    530c:	61 96       	adiw	r28, 0x11	; 17
    530e:	8f af       	std	Y+63, r24	; 0x3f
    5310:	61 97       	sbiw	r28, 0x11	; 17
    5312:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5314:	8e 89       	ldd	r24, Y+22	; 0x16
    5316:	98 0f       	add	r25, r24
    5318:	62 96       	adiw	r28, 0x12	; 18
    531a:	9f af       	std	Y+63, r25	; 0x3f
    531c:	62 97       	sbiw	r28, 0x12	; 18
    531e:	91 e0       	ldi	r25, 0x01	; 1
    5320:	a2 96       	adiw	r28, 0x22	; 34
    5322:	9f af       	std	Y+63, r25	; 0x3f
    5324:	a2 97       	sbiw	r28, 0x22	; 34
    5326:	62 96       	adiw	r28, 0x12	; 18
    5328:	8f ad       	ldd	r24, Y+63	; 0x3f
    532a:	62 97       	sbiw	r28, 0x12	; 18
    532c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    532e:	89 17       	cp	r24, r25
    5330:	18 f0       	brcs	.+6      	; 0x5338 <Lcd_VidDisplayNumber+0x5ac>
    5332:	a2 96       	adiw	r28, 0x22	; 34
    5334:	1f ae       	std	Y+63, r1	; 0x3f
    5336:	a2 97       	sbiw	r28, 0x22	; 34
    5338:	6f 96       	adiw	r28, 0x1f	; 31
    533a:	8f ad       	ldd	r24, Y+63	; 0x3f
    533c:	6f 97       	sbiw	r28, 0x1f	; 31
    533e:	62 96       	adiw	r28, 0x12	; 18
    5340:	9f ad       	ldd	r25, Y+63	; 0x3f
    5342:	62 97       	sbiw	r28, 0x12	; 18
    5344:	89 0f       	add	r24, r25
    5346:	a3 96       	adiw	r28, 0x23	; 35
    5348:	8f af       	std	Y+63, r24	; 0x3f
    534a:	a3 97       	sbiw	r28, 0x23	; 35
    534c:	81 e0       	ldi	r24, 0x01	; 1
    534e:	a4 96       	adiw	r28, 0x24	; 36
    5350:	8f af       	std	Y+63, r24	; 0x3f
    5352:	a4 97       	sbiw	r28, 0x24	; 36
    5354:	a3 96       	adiw	r28, 0x23	; 35
    5356:	9f ad       	ldd	r25, Y+63	; 0x3f
    5358:	a3 97       	sbiw	r28, 0x23	; 35
    535a:	62 96       	adiw	r28, 0x12	; 18
    535c:	8f ad       	ldd	r24, Y+63	; 0x3f
    535e:	62 97       	sbiw	r28, 0x12	; 18
    5360:	98 17       	cp	r25, r24
    5362:	18 f0       	brcs	.+6      	; 0x536a <Lcd_VidDisplayNumber+0x5de>
    5364:	a4 96       	adiw	r28, 0x24	; 36
    5366:	1f ae       	std	Y+63, r1	; 0x3f
    5368:	a4 97       	sbiw	r28, 0x24	; 36
    536a:	a2 96       	adiw	r28, 0x22	; 34
    536c:	9f ad       	ldd	r25, Y+63	; 0x3f
    536e:	a2 97       	sbiw	r28, 0x22	; 34
    5370:	a4 96       	adiw	r28, 0x24	; 36
    5372:	8f ad       	ldd	r24, Y+63	; 0x3f
    5374:	a4 97       	sbiw	r28, 0x24	; 36
    5376:	98 2b       	or	r25, r24
    5378:	a2 96       	adiw	r28, 0x22	; 34
    537a:	9f af       	std	Y+63, r25	; 0x3f
    537c:	a2 97       	sbiw	r28, 0x22	; 34
    537e:	a3 96       	adiw	r28, 0x23	; 35
    5380:	9f ad       	ldd	r25, Y+63	; 0x3f
    5382:	a3 97       	sbiw	r28, 0x23	; 35
    5384:	62 96       	adiw	r28, 0x12	; 18
    5386:	9f af       	std	Y+63, r25	; 0x3f
    5388:	62 97       	sbiw	r28, 0x12	; 18
    538a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    538c:	9f 89       	ldd	r25, Y+23	; 0x17
    538e:	89 0f       	add	r24, r25
    5390:	63 96       	adiw	r28, 0x13	; 19
    5392:	8f af       	std	Y+63, r24	; 0x3f
    5394:	63 97       	sbiw	r28, 0x13	; 19
    5396:	81 e0       	ldi	r24, 0x01	; 1
    5398:	a5 96       	adiw	r28, 0x25	; 37
    539a:	8f af       	std	Y+63, r24	; 0x3f
    539c:	a5 97       	sbiw	r28, 0x25	; 37
    539e:	63 96       	adiw	r28, 0x13	; 19
    53a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    53a2:	63 97       	sbiw	r28, 0x13	; 19
    53a4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    53a6:	98 17       	cp	r25, r24
    53a8:	18 f0       	brcs	.+6      	; 0x53b0 <Lcd_VidDisplayNumber+0x624>
    53aa:	a5 96       	adiw	r28, 0x25	; 37
    53ac:	1f ae       	std	Y+63, r1	; 0x3f
    53ae:	a5 97       	sbiw	r28, 0x25	; 37
    53b0:	a2 96       	adiw	r28, 0x22	; 34
    53b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    53b4:	a2 97       	sbiw	r28, 0x22	; 34
    53b6:	63 96       	adiw	r28, 0x13	; 19
    53b8:	8f ad       	ldd	r24, Y+63	; 0x3f
    53ba:	63 97       	sbiw	r28, 0x13	; 19
    53bc:	98 0f       	add	r25, r24
    53be:	a6 96       	adiw	r28, 0x26	; 38
    53c0:	9f af       	std	Y+63, r25	; 0x3f
    53c2:	a6 97       	sbiw	r28, 0x26	; 38
    53c4:	91 e0       	ldi	r25, 0x01	; 1
    53c6:	a7 96       	adiw	r28, 0x27	; 39
    53c8:	9f af       	std	Y+63, r25	; 0x3f
    53ca:	a7 97       	sbiw	r28, 0x27	; 39
    53cc:	a6 96       	adiw	r28, 0x26	; 38
    53ce:	8f ad       	ldd	r24, Y+63	; 0x3f
    53d0:	a6 97       	sbiw	r28, 0x26	; 38
    53d2:	63 96       	adiw	r28, 0x13	; 19
    53d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    53d6:	63 97       	sbiw	r28, 0x13	; 19
    53d8:	89 17       	cp	r24, r25
    53da:	18 f0       	brcs	.+6      	; 0x53e2 <Lcd_VidDisplayNumber+0x656>
    53dc:	a7 96       	adiw	r28, 0x27	; 39
    53de:	1f ae       	std	Y+63, r1	; 0x3f
    53e0:	a7 97       	sbiw	r28, 0x27	; 39
    53e2:	a5 96       	adiw	r28, 0x25	; 37
    53e4:	8f ad       	ldd	r24, Y+63	; 0x3f
    53e6:	a5 97       	sbiw	r28, 0x25	; 37
    53e8:	a7 96       	adiw	r28, 0x27	; 39
    53ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    53ec:	a7 97       	sbiw	r28, 0x27	; 39
    53ee:	89 2b       	or	r24, r25
    53f0:	a5 96       	adiw	r28, 0x25	; 37
    53f2:	8f af       	std	Y+63, r24	; 0x3f
    53f4:	a5 97       	sbiw	r28, 0x25	; 37
    53f6:	a6 96       	adiw	r28, 0x26	; 38
    53f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    53fa:	a6 97       	sbiw	r28, 0x26	; 38
    53fc:	63 96       	adiw	r28, 0x13	; 19
    53fe:	8f af       	std	Y+63, r24	; 0x3f
    5400:	63 97       	sbiw	r28, 0x13	; 19
    5402:	98 a1       	ldd	r25, Y+32	; 0x20
    5404:	88 8d       	ldd	r24, Y+24	; 0x18
    5406:	98 0f       	add	r25, r24
    5408:	64 96       	adiw	r28, 0x14	; 20
    540a:	9f af       	std	Y+63, r25	; 0x3f
    540c:	64 97       	sbiw	r28, 0x14	; 20
    540e:	a5 96       	adiw	r28, 0x25	; 37
    5410:	8f ad       	ldd	r24, Y+63	; 0x3f
    5412:	a5 97       	sbiw	r28, 0x25	; 37
    5414:	64 96       	adiw	r28, 0x14	; 20
    5416:	9f ad       	ldd	r25, Y+63	; 0x3f
    5418:	64 97       	sbiw	r28, 0x14	; 20
    541a:	89 0f       	add	r24, r25
    541c:	64 96       	adiw	r28, 0x14	; 20
    541e:	8f af       	std	Y+63, r24	; 0x3f
    5420:	64 97       	sbiw	r28, 0x14	; 20
    5422:	2d 96       	adiw	r28, 0x0d	; 13
    5424:	8f ad       	ldd	r24, Y+63	; 0x3f
    5426:	2d 97       	sbiw	r28, 0x0d	; 13
    5428:	89 83       	std	Y+1, r24	; 0x01
    542a:	2e 96       	adiw	r28, 0x0e	; 14
    542c:	9f ad       	ldd	r25, Y+63	; 0x3f
    542e:	2e 97       	sbiw	r28, 0x0e	; 14
    5430:	9a 83       	std	Y+2, r25	; 0x02
    5432:	2f 96       	adiw	r28, 0x0f	; 15
    5434:	8f ad       	ldd	r24, Y+63	; 0x3f
    5436:	2f 97       	sbiw	r28, 0x0f	; 15
    5438:	8b 83       	std	Y+3, r24	; 0x03
    543a:	60 96       	adiw	r28, 0x10	; 16
    543c:	9f ad       	ldd	r25, Y+63	; 0x3f
    543e:	60 97       	sbiw	r28, 0x10	; 16
    5440:	9c 83       	std	Y+4, r25	; 0x04
    5442:	61 96       	adiw	r28, 0x11	; 17
    5444:	8f ad       	ldd	r24, Y+63	; 0x3f
    5446:	61 97       	sbiw	r28, 0x11	; 17
    5448:	8d 83       	std	Y+5, r24	; 0x05
    544a:	62 96       	adiw	r28, 0x12	; 18
    544c:	9f ad       	ldd	r25, Y+63	; 0x3f
    544e:	62 97       	sbiw	r28, 0x12	; 18
    5450:	9e 83       	std	Y+6, r25	; 0x06
    5452:	63 96       	adiw	r28, 0x13	; 19
    5454:	8f ad       	ldd	r24, Y+63	; 0x3f
    5456:	63 97       	sbiw	r28, 0x13	; 19
    5458:	8f 83       	std	Y+7, r24	; 0x07
    545a:	64 96       	adiw	r28, 0x14	; 20
    545c:	9f ad       	ldd	r25, Y+63	; 0x3f
    545e:	64 97       	sbiw	r28, 0x14	; 20
    5460:	98 87       	std	Y+8, r25	; 0x08
		Copy_u64Num /=10;
    5462:	a9 84       	ldd	r10, Y+9	; 0x09
    5464:	ba 84       	ldd	r11, Y+10	; 0x0a
    5466:	cb 84       	ldd	r12, Y+11	; 0x0b
    5468:	dc 84       	ldd	r13, Y+12	; 0x0c
    546a:	ed 84       	ldd	r14, Y+13	; 0x0d
    546c:	fe 84       	ldd	r15, Y+14	; 0x0e
    546e:	0f 85       	ldd	r16, Y+15	; 0x0f
    5470:	18 89       	ldd	r17, Y+16	; 0x10
    5472:	2a 2d       	mov	r18, r10
    5474:	3b 2d       	mov	r19, r11
    5476:	4c 2d       	mov	r20, r12
    5478:	5d 2d       	mov	r21, r13
    547a:	6e 2d       	mov	r22, r14
    547c:	7f 2d       	mov	r23, r15
    547e:	80 2f       	mov	r24, r16
    5480:	91 2f       	mov	r25, r17
    5482:	0f 2e       	mov	r0, r31
    5484:	fa e0       	ldi	r31, 0x0A	; 10
    5486:	af 2e       	mov	r10, r31
    5488:	f0 2d       	mov	r31, r0
    548a:	bb 24       	eor	r11, r11
    548c:	cc 24       	eor	r12, r12
    548e:	dd 24       	eor	r13, r13
    5490:	ee 24       	eor	r14, r14
    5492:	ff 24       	eor	r15, r15
    5494:	00 e0       	ldi	r16, 0x00	; 0
    5496:	10 e0       	ldi	r17, 0x00	; 0
    5498:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__udivdi3>
    549c:	a2 2e       	mov	r10, r18
    549e:	b3 2e       	mov	r11, r19
    54a0:	c4 2e       	mov	r12, r20
    54a2:	d5 2e       	mov	r13, r21
    54a4:	e6 2e       	mov	r14, r22
    54a6:	f7 2e       	mov	r15, r23
    54a8:	08 2f       	mov	r16, r24
    54aa:	19 2f       	mov	r17, r25
    54ac:	a9 86       	std	Y+9, r10	; 0x09
    54ae:	ba 86       	std	Y+10, r11	; 0x0a
    54b0:	cb 86       	std	Y+11, r12	; 0x0b
    54b2:	dc 86       	std	Y+12, r13	; 0x0c
    54b4:	ed 86       	std	Y+13, r14	; 0x0d
    54b6:	fe 86       	std	Y+14, r15	; 0x0e
    54b8:	0f 87       	std	Y+15, r16	; 0x0f
    54ba:	18 8b       	std	Y+16, r17	; 0x10
	uint64 LOC_u8Inverse=1;
	if(Copy_u64Num==0)
	{
		Lcd_VidDisplayChracter('0');
	}
	while(Copy_u64Num != 0)
    54bc:	89 85       	ldd	r24, Y+9	; 0x09
    54be:	9a 85       	ldd	r25, Y+10	; 0x0a
    54c0:	89 2b       	or	r24, r25
    54c2:	9b 85       	ldd	r25, Y+11	; 0x0b
    54c4:	89 2b       	or	r24, r25
    54c6:	9c 85       	ldd	r25, Y+12	; 0x0c
    54c8:	89 2b       	or	r24, r25
    54ca:	9d 85       	ldd	r25, Y+13	; 0x0d
    54cc:	89 2b       	or	r24, r25
    54ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    54d0:	89 2b       	or	r24, r25
    54d2:	9f 85       	ldd	r25, Y+15	; 0x0f
    54d4:	89 2b       	or	r24, r25
    54d6:	98 89       	ldd	r25, Y+16	; 0x10
    54d8:	89 2b       	or	r24, r25
    54da:	88 23       	and	r24, r24
    54dc:	09 f0       	breq	.+2      	; 0x54e0 <Lcd_VidDisplayNumber+0x754>
    54de:	90 cc       	rjmp	.-1760   	; 0x4e00 <Lcd_VidDisplayNumber+0x74>
    54e0:	5e c0       	rjmp	.+188    	; 0x559e <Lcd_VidDisplayNumber+0x812>
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
    54e2:	a9 80       	ldd	r10, Y+1	; 0x01
    54e4:	ba 80       	ldd	r11, Y+2	; 0x02
    54e6:	cb 80       	ldd	r12, Y+3	; 0x03
    54e8:	dc 80       	ldd	r13, Y+4	; 0x04
    54ea:	ed 80       	ldd	r14, Y+5	; 0x05
    54ec:	fe 80       	ldd	r15, Y+6	; 0x06
    54ee:	0f 81       	ldd	r16, Y+7	; 0x07
    54f0:	18 85       	ldd	r17, Y+8	; 0x08
    54f2:	2a 2d       	mov	r18, r10
    54f4:	3b 2d       	mov	r19, r11
    54f6:	4c 2d       	mov	r20, r12
    54f8:	5d 2d       	mov	r21, r13
    54fa:	6e 2d       	mov	r22, r14
    54fc:	7f 2d       	mov	r23, r15
    54fe:	80 2f       	mov	r24, r16
    5500:	91 2f       	mov	r25, r17
    5502:	0f 2e       	mov	r0, r31
    5504:	fa e0       	ldi	r31, 0x0A	; 10
    5506:	af 2e       	mov	r10, r31
    5508:	f0 2d       	mov	r31, r0
    550a:	bb 24       	eor	r11, r11
    550c:	cc 24       	eor	r12, r12
    550e:	dd 24       	eor	r13, r13
    5510:	ee 24       	eor	r14, r14
    5512:	ff 24       	eor	r15, r15
    5514:	00 e0       	ldi	r16, 0x00	; 0
    5516:	10 e0       	ldi	r17, 0x00	; 0
    5518:	0e 94 61 07 	call	0xec2	; 0xec2 <__umoddi3>
    551c:	a2 2e       	mov	r10, r18
    551e:	b3 2e       	mov	r11, r19
    5520:	c4 2e       	mov	r12, r20
    5522:	d5 2e       	mov	r13, r21
    5524:	e6 2e       	mov	r14, r22
    5526:	f7 2e       	mov	r15, r23
    5528:	08 2f       	mov	r16, r24
    552a:	19 2f       	mov	r17, r25
    552c:	2a 2d       	mov	r18, r10
    552e:	3b 2d       	mov	r19, r11
    5530:	4c 2d       	mov	r20, r12
    5532:	5d 2d       	mov	r21, r13
    5534:	6e 2d       	mov	r22, r14
    5536:	7f 2d       	mov	r23, r15
    5538:	80 2f       	mov	r24, r16
    553a:	91 2f       	mov	r25, r17
    553c:	82 2f       	mov	r24, r18
    553e:	80 5d       	subi	r24, 0xD0	; 208
    5540:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
		LOC_u8Inverse /=10;
    5544:	a9 80       	ldd	r10, Y+1	; 0x01
    5546:	ba 80       	ldd	r11, Y+2	; 0x02
    5548:	cb 80       	ldd	r12, Y+3	; 0x03
    554a:	dc 80       	ldd	r13, Y+4	; 0x04
    554c:	ed 80       	ldd	r14, Y+5	; 0x05
    554e:	fe 80       	ldd	r15, Y+6	; 0x06
    5550:	0f 81       	ldd	r16, Y+7	; 0x07
    5552:	18 85       	ldd	r17, Y+8	; 0x08
    5554:	2a 2d       	mov	r18, r10
    5556:	3b 2d       	mov	r19, r11
    5558:	4c 2d       	mov	r20, r12
    555a:	5d 2d       	mov	r21, r13
    555c:	6e 2d       	mov	r22, r14
    555e:	7f 2d       	mov	r23, r15
    5560:	80 2f       	mov	r24, r16
    5562:	91 2f       	mov	r25, r17
    5564:	0f 2e       	mov	r0, r31
    5566:	fa e0       	ldi	r31, 0x0A	; 10
    5568:	af 2e       	mov	r10, r31
    556a:	f0 2d       	mov	r31, r0
    556c:	bb 24       	eor	r11, r11
    556e:	cc 24       	eor	r12, r12
    5570:	dd 24       	eor	r13, r13
    5572:	ee 24       	eor	r14, r14
    5574:	ff 24       	eor	r15, r15
    5576:	00 e0       	ldi	r16, 0x00	; 0
    5578:	10 e0       	ldi	r17, 0x00	; 0
    557a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__udivdi3>
    557e:	a2 2e       	mov	r10, r18
    5580:	b3 2e       	mov	r11, r19
    5582:	c4 2e       	mov	r12, r20
    5584:	d5 2e       	mov	r13, r21
    5586:	e6 2e       	mov	r14, r22
    5588:	f7 2e       	mov	r15, r23
    558a:	08 2f       	mov	r16, r24
    558c:	19 2f       	mov	r17, r25
    558e:	a9 82       	std	Y+1, r10	; 0x01
    5590:	ba 82       	std	Y+2, r11	; 0x02
    5592:	cb 82       	std	Y+3, r12	; 0x03
    5594:	dc 82       	std	Y+4, r13	; 0x04
    5596:	ed 82       	std	Y+5, r14	; 0x05
    5598:	fe 82       	std	Y+6, r15	; 0x06
    559a:	0f 83       	std	Y+7, r16	; 0x07
    559c:	18 87       	std	Y+8, r17	; 0x08
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
    559e:	89 81       	ldd	r24, Y+1	; 0x01
    55a0:	81 30       	cpi	r24, 0x01	; 1
    55a2:	09 f0       	breq	.+2      	; 0x55a6 <Lcd_VidDisplayNumber+0x81a>
    55a4:	9e cf       	rjmp	.-196    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
    55a6:	8a 81       	ldd	r24, Y+2	; 0x02
    55a8:	88 23       	and	r24, r24
    55aa:	09 f0       	breq	.+2      	; 0x55ae <Lcd_VidDisplayNumber+0x822>
    55ac:	9a cf       	rjmp	.-204    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
    55ae:	8b 81       	ldd	r24, Y+3	; 0x03
    55b0:	88 23       	and	r24, r24
    55b2:	09 f0       	breq	.+2      	; 0x55b6 <Lcd_VidDisplayNumber+0x82a>
    55b4:	96 cf       	rjmp	.-212    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
    55b6:	8c 81       	ldd	r24, Y+4	; 0x04
    55b8:	88 23       	and	r24, r24
    55ba:	09 f0       	breq	.+2      	; 0x55be <Lcd_VidDisplayNumber+0x832>
    55bc:	92 cf       	rjmp	.-220    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
    55be:	8d 81       	ldd	r24, Y+5	; 0x05
    55c0:	88 23       	and	r24, r24
    55c2:	09 f0       	breq	.+2      	; 0x55c6 <Lcd_VidDisplayNumber+0x83a>
    55c4:	8e cf       	rjmp	.-228    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
    55c6:	8e 81       	ldd	r24, Y+6	; 0x06
    55c8:	88 23       	and	r24, r24
    55ca:	09 f0       	breq	.+2      	; 0x55ce <Lcd_VidDisplayNumber+0x842>
    55cc:	8a cf       	rjmp	.-236    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
    55ce:	8f 81       	ldd	r24, Y+7	; 0x07
    55d0:	88 23       	and	r24, r24
    55d2:	09 f0       	breq	.+2      	; 0x55d6 <Lcd_VidDisplayNumber+0x84a>
    55d4:	86 cf       	rjmp	.-244    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
    55d6:	88 85       	ldd	r24, Y+8	; 0x08
    55d8:	88 23       	and	r24, r24
    55da:	09 f0       	breq	.+2      	; 0x55de <Lcd_VidDisplayNumber+0x852>
    55dc:	82 cf       	rjmp	.-252    	; 0x54e2 <Lcd_VidDisplayNumber+0x756>
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
		LOC_u8Inverse /=10;
	}
}
    55de:	ca 59       	subi	r28, 0x9A	; 154
    55e0:	df 4f       	sbci	r29, 0xFF	; 255
    55e2:	0f b6       	in	r0, 0x3f	; 63
    55e4:	f8 94       	cli
    55e6:	de bf       	out	0x3e, r29	; 62
    55e8:	0f be       	out	0x3f, r0	; 63
    55ea:	cd bf       	out	0x3d, r28	; 61
    55ec:	cf 91       	pop	r28
    55ee:	df 91       	pop	r29
    55f0:	1f 91       	pop	r17
    55f2:	0f 91       	pop	r16
    55f4:	ff 90       	pop	r15
    55f6:	ef 90       	pop	r14
    55f8:	df 90       	pop	r13
    55fa:	cf 90       	pop	r12
    55fc:	bf 90       	pop	r11
    55fe:	af 90       	pop	r10
    5600:	08 95       	ret

00005602 <LCD_vidClrDisplay>:

void LCD_vidClrDisplay(void)
{
    5602:	df 93       	push	r29
    5604:	cf 93       	push	r28
    5606:	cd b7       	in	r28, 0x3d	; 61
    5608:	de b7       	in	r29, 0x3e	; 62
    560a:	6c 97       	sbiw	r28, 0x1c	; 28
    560c:	0f b6       	in	r0, 0x3f	; 63
    560e:	f8 94       	cli
    5610:	de bf       	out	0x3e, r29	; 62
    5612:	0f be       	out	0x3f, r0	; 63
    5614:	cd bf       	out	0x3d, r28	; 61
	Lcd_VidSendCommand(LCD_CLEAR_DISPLAY);
    5616:	81 e0       	ldi	r24, 0x01	; 1
    5618:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
    561c:	80 e0       	ldi	r24, 0x00	; 0
    561e:	90 e0       	ldi	r25, 0x00	; 0
    5620:	a0 e8       	ldi	r26, 0x80	; 128
    5622:	b0 e4       	ldi	r27, 0x40	; 64
    5624:	89 8f       	std	Y+25, r24	; 0x19
    5626:	9a 8f       	std	Y+26, r25	; 0x1a
    5628:	ab 8f       	std	Y+27, r26	; 0x1b
    562a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    562c:	69 8d       	ldd	r22, Y+25	; 0x19
    562e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5630:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5632:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5634:	20 e0       	ldi	r18, 0x00	; 0
    5636:	30 e0       	ldi	r19, 0x00	; 0
    5638:	4a e7       	ldi	r20, 0x7A	; 122
    563a:	53 e4       	ldi	r21, 0x43	; 67
    563c:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    5640:	dc 01       	movw	r26, r24
    5642:	cb 01       	movw	r24, r22
    5644:	8d 8b       	std	Y+21, r24	; 0x15
    5646:	9e 8b       	std	Y+22, r25	; 0x16
    5648:	af 8b       	std	Y+23, r26	; 0x17
    564a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    564c:	6d 89       	ldd	r22, Y+21	; 0x15
    564e:	7e 89       	ldd	r23, Y+22	; 0x16
    5650:	8f 89       	ldd	r24, Y+23	; 0x17
    5652:	98 8d       	ldd	r25, Y+24	; 0x18
    5654:	20 e0       	ldi	r18, 0x00	; 0
    5656:	30 e0       	ldi	r19, 0x00	; 0
    5658:	40 e8       	ldi	r20, 0x80	; 128
    565a:	5f e3       	ldi	r21, 0x3F	; 63
    565c:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    5660:	88 23       	and	r24, r24
    5662:	2c f4       	brge	.+10     	; 0x566e <LCD_vidClrDisplay+0x6c>
		__ticks = 1;
    5664:	81 e0       	ldi	r24, 0x01	; 1
    5666:	90 e0       	ldi	r25, 0x00	; 0
    5668:	9c 8b       	std	Y+20, r25	; 0x14
    566a:	8b 8b       	std	Y+19, r24	; 0x13
    566c:	3f c0       	rjmp	.+126    	; 0x56ec <LCD_vidClrDisplay+0xea>
	else if (__tmp > 65535)
    566e:	6d 89       	ldd	r22, Y+21	; 0x15
    5670:	7e 89       	ldd	r23, Y+22	; 0x16
    5672:	8f 89       	ldd	r24, Y+23	; 0x17
    5674:	98 8d       	ldd	r25, Y+24	; 0x18
    5676:	20 e0       	ldi	r18, 0x00	; 0
    5678:	3f ef       	ldi	r19, 0xFF	; 255
    567a:	4f e7       	ldi	r20, 0x7F	; 127
    567c:	57 e4       	ldi	r21, 0x47	; 71
    567e:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    5682:	18 16       	cp	r1, r24
    5684:	4c f5       	brge	.+82     	; 0x56d8 <LCD_vidClrDisplay+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5686:	69 8d       	ldd	r22, Y+25	; 0x19
    5688:	7a 8d       	ldd	r23, Y+26	; 0x1a
    568a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    568c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    568e:	20 e0       	ldi	r18, 0x00	; 0
    5690:	30 e0       	ldi	r19, 0x00	; 0
    5692:	40 e2       	ldi	r20, 0x20	; 32
    5694:	51 e4       	ldi	r21, 0x41	; 65
    5696:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    569a:	dc 01       	movw	r26, r24
    569c:	cb 01       	movw	r24, r22
    569e:	bc 01       	movw	r22, r24
    56a0:	cd 01       	movw	r24, r26
    56a2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    56a6:	dc 01       	movw	r26, r24
    56a8:	cb 01       	movw	r24, r22
    56aa:	9c 8b       	std	Y+20, r25	; 0x14
    56ac:	8b 8b       	std	Y+19, r24	; 0x13
    56ae:	0f c0       	rjmp	.+30     	; 0x56ce <LCD_vidClrDisplay+0xcc>
    56b0:	89 e1       	ldi	r24, 0x19	; 25
    56b2:	90 e0       	ldi	r25, 0x00	; 0
    56b4:	9a 8b       	std	Y+18, r25	; 0x12
    56b6:	89 8b       	std	Y+17, r24	; 0x11
    56b8:	89 89       	ldd	r24, Y+17	; 0x11
    56ba:	9a 89       	ldd	r25, Y+18	; 0x12
    56bc:	01 97       	sbiw	r24, 0x01	; 1
    56be:	f1 f7       	brne	.-4      	; 0x56bc <LCD_vidClrDisplay+0xba>
    56c0:	9a 8b       	std	Y+18, r25	; 0x12
    56c2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    56c4:	8b 89       	ldd	r24, Y+19	; 0x13
    56c6:	9c 89       	ldd	r25, Y+20	; 0x14
    56c8:	01 97       	sbiw	r24, 0x01	; 1
    56ca:	9c 8b       	std	Y+20, r25	; 0x14
    56cc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    56ce:	8b 89       	ldd	r24, Y+19	; 0x13
    56d0:	9c 89       	ldd	r25, Y+20	; 0x14
    56d2:	00 97       	sbiw	r24, 0x00	; 0
    56d4:	69 f7       	brne	.-38     	; 0x56b0 <LCD_vidClrDisplay+0xae>
    56d6:	14 c0       	rjmp	.+40     	; 0x5700 <LCD_vidClrDisplay+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    56d8:	6d 89       	ldd	r22, Y+21	; 0x15
    56da:	7e 89       	ldd	r23, Y+22	; 0x16
    56dc:	8f 89       	ldd	r24, Y+23	; 0x17
    56de:	98 8d       	ldd	r25, Y+24	; 0x18
    56e0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    56e4:	dc 01       	movw	r26, r24
    56e6:	cb 01       	movw	r24, r22
    56e8:	9c 8b       	std	Y+20, r25	; 0x14
    56ea:	8b 8b       	std	Y+19, r24	; 0x13
    56ec:	8b 89       	ldd	r24, Y+19	; 0x13
    56ee:	9c 89       	ldd	r25, Y+20	; 0x14
    56f0:	98 8b       	std	Y+16, r25	; 0x10
    56f2:	8f 87       	std	Y+15, r24	; 0x0f
    56f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    56f6:	98 89       	ldd	r25, Y+16	; 0x10
    56f8:	01 97       	sbiw	r24, 0x01	; 1
    56fa:	f1 f7       	brne	.-4      	; 0x56f8 <LCD_vidClrDisplay+0xf6>
    56fc:	98 8b       	std	Y+16, r25	; 0x10
    56fe:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(4);
	Lcd_VidSendCommand(LCD_CURSOR_HOME);
    5700:	82 e0       	ldi	r24, 0x02	; 2
    5702:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <Lcd_VidSendCommand>
    5706:	80 e0       	ldi	r24, 0x00	; 0
    5708:	90 e0       	ldi	r25, 0x00	; 0
    570a:	a0 e8       	ldi	r26, 0x80	; 128
    570c:	b0 e4       	ldi	r27, 0x40	; 64
    570e:	8b 87       	std	Y+11, r24	; 0x0b
    5710:	9c 87       	std	Y+12, r25	; 0x0c
    5712:	ad 87       	std	Y+13, r26	; 0x0d
    5714:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5716:	6b 85       	ldd	r22, Y+11	; 0x0b
    5718:	7c 85       	ldd	r23, Y+12	; 0x0c
    571a:	8d 85       	ldd	r24, Y+13	; 0x0d
    571c:	9e 85       	ldd	r25, Y+14	; 0x0e
    571e:	20 e0       	ldi	r18, 0x00	; 0
    5720:	30 e0       	ldi	r19, 0x00	; 0
    5722:	4a e7       	ldi	r20, 0x7A	; 122
    5724:	53 e4       	ldi	r21, 0x43	; 67
    5726:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    572a:	dc 01       	movw	r26, r24
    572c:	cb 01       	movw	r24, r22
    572e:	8f 83       	std	Y+7, r24	; 0x07
    5730:	98 87       	std	Y+8, r25	; 0x08
    5732:	a9 87       	std	Y+9, r26	; 0x09
    5734:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5736:	6f 81       	ldd	r22, Y+7	; 0x07
    5738:	78 85       	ldd	r23, Y+8	; 0x08
    573a:	89 85       	ldd	r24, Y+9	; 0x09
    573c:	9a 85       	ldd	r25, Y+10	; 0x0a
    573e:	20 e0       	ldi	r18, 0x00	; 0
    5740:	30 e0       	ldi	r19, 0x00	; 0
    5742:	40 e8       	ldi	r20, 0x80	; 128
    5744:	5f e3       	ldi	r21, 0x3F	; 63
    5746:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    574a:	88 23       	and	r24, r24
    574c:	2c f4       	brge	.+10     	; 0x5758 <LCD_vidClrDisplay+0x156>
		__ticks = 1;
    574e:	81 e0       	ldi	r24, 0x01	; 1
    5750:	90 e0       	ldi	r25, 0x00	; 0
    5752:	9e 83       	std	Y+6, r25	; 0x06
    5754:	8d 83       	std	Y+5, r24	; 0x05
    5756:	3f c0       	rjmp	.+126    	; 0x57d6 <LCD_vidClrDisplay+0x1d4>
	else if (__tmp > 65535)
    5758:	6f 81       	ldd	r22, Y+7	; 0x07
    575a:	78 85       	ldd	r23, Y+8	; 0x08
    575c:	89 85       	ldd	r24, Y+9	; 0x09
    575e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5760:	20 e0       	ldi	r18, 0x00	; 0
    5762:	3f ef       	ldi	r19, 0xFF	; 255
    5764:	4f e7       	ldi	r20, 0x7F	; 127
    5766:	57 e4       	ldi	r21, 0x47	; 71
    5768:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    576c:	18 16       	cp	r1, r24
    576e:	4c f5       	brge	.+82     	; 0x57c2 <LCD_vidClrDisplay+0x1c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5770:	6b 85       	ldd	r22, Y+11	; 0x0b
    5772:	7c 85       	ldd	r23, Y+12	; 0x0c
    5774:	8d 85       	ldd	r24, Y+13	; 0x0d
    5776:	9e 85       	ldd	r25, Y+14	; 0x0e
    5778:	20 e0       	ldi	r18, 0x00	; 0
    577a:	30 e0       	ldi	r19, 0x00	; 0
    577c:	40 e2       	ldi	r20, 0x20	; 32
    577e:	51 e4       	ldi	r21, 0x41	; 65
    5780:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    5784:	dc 01       	movw	r26, r24
    5786:	cb 01       	movw	r24, r22
    5788:	bc 01       	movw	r22, r24
    578a:	cd 01       	movw	r24, r26
    578c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    5790:	dc 01       	movw	r26, r24
    5792:	cb 01       	movw	r24, r22
    5794:	9e 83       	std	Y+6, r25	; 0x06
    5796:	8d 83       	std	Y+5, r24	; 0x05
    5798:	0f c0       	rjmp	.+30     	; 0x57b8 <LCD_vidClrDisplay+0x1b6>
    579a:	89 e1       	ldi	r24, 0x19	; 25
    579c:	90 e0       	ldi	r25, 0x00	; 0
    579e:	9c 83       	std	Y+4, r25	; 0x04
    57a0:	8b 83       	std	Y+3, r24	; 0x03
    57a2:	8b 81       	ldd	r24, Y+3	; 0x03
    57a4:	9c 81       	ldd	r25, Y+4	; 0x04
    57a6:	01 97       	sbiw	r24, 0x01	; 1
    57a8:	f1 f7       	brne	.-4      	; 0x57a6 <LCD_vidClrDisplay+0x1a4>
    57aa:	9c 83       	std	Y+4, r25	; 0x04
    57ac:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    57ae:	8d 81       	ldd	r24, Y+5	; 0x05
    57b0:	9e 81       	ldd	r25, Y+6	; 0x06
    57b2:	01 97       	sbiw	r24, 0x01	; 1
    57b4:	9e 83       	std	Y+6, r25	; 0x06
    57b6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    57b8:	8d 81       	ldd	r24, Y+5	; 0x05
    57ba:	9e 81       	ldd	r25, Y+6	; 0x06
    57bc:	00 97       	sbiw	r24, 0x00	; 0
    57be:	69 f7       	brne	.-38     	; 0x579a <LCD_vidClrDisplay+0x198>
    57c0:	14 c0       	rjmp	.+40     	; 0x57ea <LCD_vidClrDisplay+0x1e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    57c2:	6f 81       	ldd	r22, Y+7	; 0x07
    57c4:	78 85       	ldd	r23, Y+8	; 0x08
    57c6:	89 85       	ldd	r24, Y+9	; 0x09
    57c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    57ca:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    57ce:	dc 01       	movw	r26, r24
    57d0:	cb 01       	movw	r24, r22
    57d2:	9e 83       	std	Y+6, r25	; 0x06
    57d4:	8d 83       	std	Y+5, r24	; 0x05
    57d6:	8d 81       	ldd	r24, Y+5	; 0x05
    57d8:	9e 81       	ldd	r25, Y+6	; 0x06
    57da:	9a 83       	std	Y+2, r25	; 0x02
    57dc:	89 83       	std	Y+1, r24	; 0x01
    57de:	89 81       	ldd	r24, Y+1	; 0x01
    57e0:	9a 81       	ldd	r25, Y+2	; 0x02
    57e2:	01 97       	sbiw	r24, 0x01	; 1
    57e4:	f1 f7       	brne	.-4      	; 0x57e2 <LCD_vidClrDisplay+0x1e0>
    57e6:	9a 83       	std	Y+2, r25	; 0x02
    57e8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(4);

}
    57ea:	6c 96       	adiw	r28, 0x1c	; 28
    57ec:	0f b6       	in	r0, 0x3f	; 63
    57ee:	f8 94       	cli
    57f0:	de bf       	out	0x3e, r29	; 62
    57f2:	0f be       	out	0x3f, r0	; 63
    57f4:	cd bf       	out	0x3d, r28	; 61
    57f6:	cf 91       	pop	r28
    57f8:	df 91       	pop	r29
    57fa:	08 95       	ret

000057fc <LCD_DisplayStringXY>:

void LCD_DisplayStringXY(uint8 Copy_u8Row,uint8 Copy_u8Column,const char* Add_pu8String)
{
    57fc:	df 93       	push	r29
    57fe:	cf 93       	push	r28
    5800:	00 d0       	rcall	.+0      	; 0x5802 <LCD_DisplayStringXY+0x6>
    5802:	00 d0       	rcall	.+0      	; 0x5804 <LCD_DisplayStringXY+0x8>
    5804:	0f 92       	push	r0
    5806:	cd b7       	in	r28, 0x3d	; 61
    5808:	de b7       	in	r29, 0x3e	; 62
    580a:	8a 83       	std	Y+2, r24	; 0x02
    580c:	6b 83       	std	Y+3, r22	; 0x03
    580e:	5d 83       	std	Y+5, r21	; 0x05
    5810:	4c 83       	std	Y+4, r20	; 0x04
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
    5812:	8a 81       	ldd	r24, Y+2	; 0x02
    5814:	6b 81       	ldd	r22, Y+3	; 0x03
    5816:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <Lcd_VidGoToXY>
	uint8 LOC_u8Iterator=0;
    581a:	19 82       	std	Y+1, r1	; 0x01
    581c:	0e c0       	rjmp	.+28     	; 0x583a <LCD_DisplayStringXY+0x3e>
	while(Add_pu8String[LOC_u8Iterator] != '\0')
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
    581e:	89 81       	ldd	r24, Y+1	; 0x01
    5820:	28 2f       	mov	r18, r24
    5822:	30 e0       	ldi	r19, 0x00	; 0
    5824:	8c 81       	ldd	r24, Y+4	; 0x04
    5826:	9d 81       	ldd	r25, Y+5	; 0x05
    5828:	fc 01       	movw	r30, r24
    582a:	e2 0f       	add	r30, r18
    582c:	f3 1f       	adc	r31, r19
    582e:	80 81       	ld	r24, Z
    5830:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
		LOC_u8Iterator++;
    5834:	89 81       	ldd	r24, Y+1	; 0x01
    5836:	8f 5f       	subi	r24, 0xFF	; 255
    5838:	89 83       	std	Y+1, r24	; 0x01

void LCD_DisplayStringXY(uint8 Copy_u8Row,uint8 Copy_u8Column,const char* Add_pu8String)
{
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
	uint8 LOC_u8Iterator=0;
	while(Add_pu8String[LOC_u8Iterator] != '\0')
    583a:	89 81       	ldd	r24, Y+1	; 0x01
    583c:	28 2f       	mov	r18, r24
    583e:	30 e0       	ldi	r19, 0x00	; 0
    5840:	8c 81       	ldd	r24, Y+4	; 0x04
    5842:	9d 81       	ldd	r25, Y+5	; 0x05
    5844:	fc 01       	movw	r30, r24
    5846:	e2 0f       	add	r30, r18
    5848:	f3 1f       	adc	r31, r19
    584a:	80 81       	ld	r24, Z
    584c:	88 23       	and	r24, r24
    584e:	39 f7       	brne	.-50     	; 0x581e <LCD_DisplayStringXY+0x22>
	{
		Lcd_VidDisplayChracter(Add_pu8String[LOC_u8Iterator]);
		LOC_u8Iterator++;
	}
}
    5850:	0f 90       	pop	r0
    5852:	0f 90       	pop	r0
    5854:	0f 90       	pop	r0
    5856:	0f 90       	pop	r0
    5858:	0f 90       	pop	r0
    585a:	cf 91       	pop	r28
    585c:	df 91       	pop	r29
    585e:	08 95       	ret

00005860 <Lcd_VidDisplayNumberXY>:


void Lcd_VidDisplayNumberXY(uint8 Copy_u8Row,uint8 Copy_u8Column,uint64 Copy_u64Num )
{
    5860:	af 92       	push	r10
    5862:	bf 92       	push	r11
    5864:	cf 92       	push	r12
    5866:	df 92       	push	r13
    5868:	ef 92       	push	r14
    586a:	ff 92       	push	r15
    586c:	0f 93       	push	r16
    586e:	1f 93       	push	r17
    5870:	df 93       	push	r29
    5872:	cf 93       	push	r28
    5874:	cd b7       	in	r28, 0x3d	; 61
    5876:	de b7       	in	r29, 0x3e	; 62
    5878:	c8 56       	subi	r28, 0x68	; 104
    587a:	d0 40       	sbci	r29, 0x00	; 0
    587c:	0f b6       	in	r0, 0x3f	; 63
    587e:	f8 94       	cli
    5880:	de bf       	out	0x3e, r29	; 62
    5882:	0f be       	out	0x3f, r0	; 63
    5884:	cd bf       	out	0x3d, r28	; 61
    5886:	89 87       	std	Y+9, r24	; 0x09
    5888:	6a 87       	std	Y+10, r22	; 0x0a
    588a:	eb 86       	std	Y+11, r14	; 0x0b
    588c:	fc 86       	std	Y+12, r15	; 0x0c
    588e:	0d 87       	std	Y+13, r16	; 0x0d
    5890:	1e 87       	std	Y+14, r17	; 0x0e
    5892:	2f 87       	std	Y+15, r18	; 0x0f
    5894:	38 8b       	std	Y+16, r19	; 0x10
    5896:	49 8b       	std	Y+17, r20	; 0x11
    5898:	5a 8b       	std	Y+18, r21	; 0x12
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
    589a:	89 85       	ldd	r24, Y+9	; 0x09
    589c:	6a 85       	ldd	r22, Y+10	; 0x0a
    589e:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <Lcd_VidGoToXY>
	uint64 LOC_u8Inverse=1;
    58a2:	81 e0       	ldi	r24, 0x01	; 1
    58a4:	89 83       	std	Y+1, r24	; 0x01
    58a6:	1a 82       	std	Y+2, r1	; 0x02
    58a8:	1b 82       	std	Y+3, r1	; 0x03
    58aa:	1c 82       	std	Y+4, r1	; 0x04
    58ac:	1d 82       	std	Y+5, r1	; 0x05
    58ae:	1e 82       	std	Y+6, r1	; 0x06
    58b0:	1f 82       	std	Y+7, r1	; 0x07
    58b2:	18 86       	std	Y+8, r1	; 0x08
	if(Copy_u64Num==0)
    58b4:	8b 85       	ldd	r24, Y+11	; 0x0b
    58b6:	9c 85       	ldd	r25, Y+12	; 0x0c
    58b8:	89 2b       	or	r24, r25
    58ba:	9d 85       	ldd	r25, Y+13	; 0x0d
    58bc:	89 2b       	or	r24, r25
    58be:	9e 85       	ldd	r25, Y+14	; 0x0e
    58c0:	89 2b       	or	r24, r25
    58c2:	9f 85       	ldd	r25, Y+15	; 0x0f
    58c4:	89 2b       	or	r24, r25
    58c6:	98 89       	ldd	r25, Y+16	; 0x10
    58c8:	89 2b       	or	r24, r25
    58ca:	99 89       	ldd	r25, Y+17	; 0x11
    58cc:	89 2b       	or	r24, r25
    58ce:	9a 89       	ldd	r25, Y+18	; 0x12
    58d0:	89 2b       	or	r24, r25
    58d2:	88 23       	and	r24, r24
    58d4:	09 f0       	breq	.+2      	; 0x58d8 <Lcd_VidDisplayNumberXY+0x78>
    58d6:	6e c3       	rjmp	.+1756   	; 0x5fb4 <Lcd_VidDisplayNumberXY+0x754>
	{
		Lcd_VidDisplayChracter('0');
    58d8:	80 e3       	ldi	r24, 0x30	; 48
    58da:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
    58de:	6a c3       	rjmp	.+1748   	; 0x5fb4 <Lcd_VidDisplayNumberXY+0x754>
	}
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
    58e0:	29 81       	ldd	r18, Y+1	; 0x01
    58e2:	3a 81       	ldd	r19, Y+2	; 0x02
    58e4:	4b 81       	ldd	r20, Y+3	; 0x03
    58e6:	5c 81       	ldd	r21, Y+4	; 0x04
    58e8:	6d 81       	ldd	r22, Y+5	; 0x05
    58ea:	7e 81       	ldd	r23, Y+6	; 0x06
    58ec:	8f 81       	ldd	r24, Y+7	; 0x07
    58ee:	98 85       	ldd	r25, Y+8	; 0x08
    58f0:	a2 2e       	mov	r10, r18
    58f2:	b3 2e       	mov	r11, r19
    58f4:	c4 2e       	mov	r12, r20
    58f6:	d5 2e       	mov	r13, r21
    58f8:	e6 2e       	mov	r14, r22
    58fa:	f7 2e       	mov	r15, r23
    58fc:	08 2f       	mov	r16, r24
    58fe:	19 2f       	mov	r17, r25
    5900:	2a 2d       	mov	r18, r10
    5902:	3b 2d       	mov	r19, r11
    5904:	4c 2d       	mov	r20, r12
    5906:	5d 2d       	mov	r21, r13
    5908:	6e 2d       	mov	r22, r14
    590a:	7f 2d       	mov	r23, r15
    590c:	80 2f       	mov	r24, r16
    590e:	91 2f       	mov	r25, r17
    5910:	01 e0       	ldi	r16, 0x01	; 1
    5912:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    5916:	2b a3       	std	Y+35, r18	; 0x23
    5918:	3c a3       	std	Y+36, r19	; 0x24
    591a:	4d a3       	std	Y+37, r20	; 0x25
    591c:	5e a3       	std	Y+38, r21	; 0x26
    591e:	6f a3       	std	Y+39, r22	; 0x27
    5920:	78 a7       	std	Y+40, r23	; 0x28
    5922:	89 a7       	std	Y+41, r24	; 0x29
    5924:	9a a7       	std	Y+42, r25	; 0x2a
    5926:	2b a1       	ldd	r18, Y+35	; 0x23
    5928:	3c a1       	ldd	r19, Y+36	; 0x24
    592a:	4d a1       	ldd	r20, Y+37	; 0x25
    592c:	5e a1       	ldd	r21, Y+38	; 0x26
    592e:	6f a1       	ldd	r22, Y+39	; 0x27
    5930:	78 a5       	ldd	r23, Y+40	; 0x28
    5932:	89 a5       	ldd	r24, Y+41	; 0x29
    5934:	9a a5       	ldd	r25, Y+42	; 0x2a
    5936:	02 e0       	ldi	r16, 0x02	; 2
    5938:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    593c:	2b a7       	std	Y+43, r18	; 0x2b
    593e:	3c a7       	std	Y+44, r19	; 0x2c
    5940:	4d a7       	std	Y+45, r20	; 0x2d
    5942:	5e a7       	std	Y+46, r21	; 0x2e
    5944:	6f a7       	std	Y+47, r22	; 0x2f
    5946:	78 ab       	std	Y+48, r23	; 0x30
    5948:	89 ab       	std	Y+49, r24	; 0x31
    594a:	9a ab       	std	Y+50, r25	; 0x32
    594c:	8b a1       	ldd	r24, Y+35	; 0x23
    594e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5950:	89 0f       	add	r24, r25
    5952:	8b ab       	std	Y+51, r24	; 0x33
    5954:	81 e0       	ldi	r24, 0x01	; 1
    5956:	8b af       	std	Y+59, r24	; 0x3b
    5958:	9b a9       	ldd	r25, Y+51	; 0x33
    595a:	8b a1       	ldd	r24, Y+35	; 0x23
    595c:	98 17       	cp	r25, r24
    595e:	08 f0       	brcs	.+2      	; 0x5962 <Lcd_VidDisplayNumberXY+0x102>
    5960:	1b ae       	std	Y+59, r1	; 0x3b
    5962:	9c a1       	ldd	r25, Y+36	; 0x24
    5964:	8c a5       	ldd	r24, Y+44	; 0x2c
    5966:	98 0f       	add	r25, r24
    5968:	9c ab       	std	Y+52, r25	; 0x34
    596a:	91 e0       	ldi	r25, 0x01	; 1
    596c:	9c af       	std	Y+60, r25	; 0x3c
    596e:	8c a9       	ldd	r24, Y+52	; 0x34
    5970:	9c a1       	ldd	r25, Y+36	; 0x24
    5972:	89 17       	cp	r24, r25
    5974:	08 f0       	brcs	.+2      	; 0x5978 <Lcd_VidDisplayNumberXY+0x118>
    5976:	1c ae       	std	Y+60, r1	; 0x3c
    5978:	8b ad       	ldd	r24, Y+59	; 0x3b
    597a:	9c a9       	ldd	r25, Y+52	; 0x34
    597c:	89 0f       	add	r24, r25
    597e:	8d af       	std	Y+61, r24	; 0x3d
    5980:	81 e0       	ldi	r24, 0x01	; 1
    5982:	8e af       	std	Y+62, r24	; 0x3e
    5984:	9d ad       	ldd	r25, Y+61	; 0x3d
    5986:	8c a9       	ldd	r24, Y+52	; 0x34
    5988:	98 17       	cp	r25, r24
    598a:	08 f0       	brcs	.+2      	; 0x598e <Lcd_VidDisplayNumberXY+0x12e>
    598c:	1e ae       	std	Y+62, r1	; 0x3e
    598e:	9c ad       	ldd	r25, Y+60	; 0x3c
    5990:	8e ad       	ldd	r24, Y+62	; 0x3e
    5992:	98 2b       	or	r25, r24
    5994:	9c af       	std	Y+60, r25	; 0x3c
    5996:	9d ad       	ldd	r25, Y+61	; 0x3d
    5998:	9c ab       	std	Y+52, r25	; 0x34
    599a:	8d a1       	ldd	r24, Y+37	; 0x25
    599c:	9d a5       	ldd	r25, Y+45	; 0x2d
    599e:	89 0f       	add	r24, r25
    59a0:	8d ab       	std	Y+53, r24	; 0x35
    59a2:	81 e0       	ldi	r24, 0x01	; 1
    59a4:	8f af       	std	Y+63, r24	; 0x3f
    59a6:	9d a9       	ldd	r25, Y+53	; 0x35
    59a8:	8d a1       	ldd	r24, Y+37	; 0x25
    59aa:	98 17       	cp	r25, r24
    59ac:	08 f0       	brcs	.+2      	; 0x59b0 <Lcd_VidDisplayNumberXY+0x150>
    59ae:	1f ae       	std	Y+63, r1	; 0x3f
    59b0:	9c ad       	ldd	r25, Y+60	; 0x3c
    59b2:	8d a9       	ldd	r24, Y+53	; 0x35
    59b4:	98 0f       	add	r25, r24
    59b6:	21 96       	adiw	r28, 0x01	; 1
    59b8:	9f af       	std	Y+63, r25	; 0x3f
    59ba:	21 97       	sbiw	r28, 0x01	; 1
    59bc:	91 e0       	ldi	r25, 0x01	; 1
    59be:	22 96       	adiw	r28, 0x02	; 2
    59c0:	9f af       	std	Y+63, r25	; 0x3f
    59c2:	22 97       	sbiw	r28, 0x02	; 2
    59c4:	21 96       	adiw	r28, 0x01	; 1
    59c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    59c8:	21 97       	sbiw	r28, 0x01	; 1
    59ca:	9d a9       	ldd	r25, Y+53	; 0x35
    59cc:	89 17       	cp	r24, r25
    59ce:	18 f0       	brcs	.+6      	; 0x59d6 <Lcd_VidDisplayNumberXY+0x176>
    59d0:	22 96       	adiw	r28, 0x02	; 2
    59d2:	1f ae       	std	Y+63, r1	; 0x3f
    59d4:	22 97       	sbiw	r28, 0x02	; 2
    59d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    59d8:	22 96       	adiw	r28, 0x02	; 2
    59da:	9f ad       	ldd	r25, Y+63	; 0x3f
    59dc:	22 97       	sbiw	r28, 0x02	; 2
    59de:	89 2b       	or	r24, r25
    59e0:	8f af       	std	Y+63, r24	; 0x3f
    59e2:	21 96       	adiw	r28, 0x01	; 1
    59e4:	8f ad       	ldd	r24, Y+63	; 0x3f
    59e6:	21 97       	sbiw	r28, 0x01	; 1
    59e8:	8d ab       	std	Y+53, r24	; 0x35
    59ea:	9e a1       	ldd	r25, Y+38	; 0x26
    59ec:	8e a5       	ldd	r24, Y+46	; 0x2e
    59ee:	98 0f       	add	r25, r24
    59f0:	9e ab       	std	Y+54, r25	; 0x36
    59f2:	91 e0       	ldi	r25, 0x01	; 1
    59f4:	23 96       	adiw	r28, 0x03	; 3
    59f6:	9f af       	std	Y+63, r25	; 0x3f
    59f8:	23 97       	sbiw	r28, 0x03	; 3
    59fa:	8e a9       	ldd	r24, Y+54	; 0x36
    59fc:	9e a1       	ldd	r25, Y+38	; 0x26
    59fe:	89 17       	cp	r24, r25
    5a00:	18 f0       	brcs	.+6      	; 0x5a08 <Lcd_VidDisplayNumberXY+0x1a8>
    5a02:	23 96       	adiw	r28, 0x03	; 3
    5a04:	1f ae       	std	Y+63, r1	; 0x3f
    5a06:	23 97       	sbiw	r28, 0x03	; 3
    5a08:	8f ad       	ldd	r24, Y+63	; 0x3f
    5a0a:	9e a9       	ldd	r25, Y+54	; 0x36
    5a0c:	89 0f       	add	r24, r25
    5a0e:	24 96       	adiw	r28, 0x04	; 4
    5a10:	8f af       	std	Y+63, r24	; 0x3f
    5a12:	24 97       	sbiw	r28, 0x04	; 4
    5a14:	81 e0       	ldi	r24, 0x01	; 1
    5a16:	25 96       	adiw	r28, 0x05	; 5
    5a18:	8f af       	std	Y+63, r24	; 0x3f
    5a1a:	25 97       	sbiw	r28, 0x05	; 5
    5a1c:	24 96       	adiw	r28, 0x04	; 4
    5a1e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a20:	24 97       	sbiw	r28, 0x04	; 4
    5a22:	8e a9       	ldd	r24, Y+54	; 0x36
    5a24:	98 17       	cp	r25, r24
    5a26:	18 f0       	brcs	.+6      	; 0x5a2e <Lcd_VidDisplayNumberXY+0x1ce>
    5a28:	25 96       	adiw	r28, 0x05	; 5
    5a2a:	1f ae       	std	Y+63, r1	; 0x3f
    5a2c:	25 97       	sbiw	r28, 0x05	; 5
    5a2e:	23 96       	adiw	r28, 0x03	; 3
    5a30:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a32:	23 97       	sbiw	r28, 0x03	; 3
    5a34:	25 96       	adiw	r28, 0x05	; 5
    5a36:	8f ad       	ldd	r24, Y+63	; 0x3f
    5a38:	25 97       	sbiw	r28, 0x05	; 5
    5a3a:	98 2b       	or	r25, r24
    5a3c:	23 96       	adiw	r28, 0x03	; 3
    5a3e:	9f af       	std	Y+63, r25	; 0x3f
    5a40:	23 97       	sbiw	r28, 0x03	; 3
    5a42:	24 96       	adiw	r28, 0x04	; 4
    5a44:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a46:	24 97       	sbiw	r28, 0x04	; 4
    5a48:	9e ab       	std	Y+54, r25	; 0x36
    5a4a:	8f a1       	ldd	r24, Y+39	; 0x27
    5a4c:	9f a5       	ldd	r25, Y+47	; 0x2f
    5a4e:	89 0f       	add	r24, r25
    5a50:	8f ab       	std	Y+55, r24	; 0x37
    5a52:	81 e0       	ldi	r24, 0x01	; 1
    5a54:	26 96       	adiw	r28, 0x06	; 6
    5a56:	8f af       	std	Y+63, r24	; 0x3f
    5a58:	26 97       	sbiw	r28, 0x06	; 6
    5a5a:	9f a9       	ldd	r25, Y+55	; 0x37
    5a5c:	8f a1       	ldd	r24, Y+39	; 0x27
    5a5e:	98 17       	cp	r25, r24
    5a60:	18 f0       	brcs	.+6      	; 0x5a68 <Lcd_VidDisplayNumberXY+0x208>
    5a62:	26 96       	adiw	r28, 0x06	; 6
    5a64:	1f ae       	std	Y+63, r1	; 0x3f
    5a66:	26 97       	sbiw	r28, 0x06	; 6
    5a68:	23 96       	adiw	r28, 0x03	; 3
    5a6a:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a6c:	23 97       	sbiw	r28, 0x03	; 3
    5a6e:	8f a9       	ldd	r24, Y+55	; 0x37
    5a70:	98 0f       	add	r25, r24
    5a72:	27 96       	adiw	r28, 0x07	; 7
    5a74:	9f af       	std	Y+63, r25	; 0x3f
    5a76:	27 97       	sbiw	r28, 0x07	; 7
    5a78:	91 e0       	ldi	r25, 0x01	; 1
    5a7a:	28 96       	adiw	r28, 0x08	; 8
    5a7c:	9f af       	std	Y+63, r25	; 0x3f
    5a7e:	28 97       	sbiw	r28, 0x08	; 8
    5a80:	27 96       	adiw	r28, 0x07	; 7
    5a82:	8f ad       	ldd	r24, Y+63	; 0x3f
    5a84:	27 97       	sbiw	r28, 0x07	; 7
    5a86:	9f a9       	ldd	r25, Y+55	; 0x37
    5a88:	89 17       	cp	r24, r25
    5a8a:	18 f0       	brcs	.+6      	; 0x5a92 <Lcd_VidDisplayNumberXY+0x232>
    5a8c:	28 96       	adiw	r28, 0x08	; 8
    5a8e:	1f ae       	std	Y+63, r1	; 0x3f
    5a90:	28 97       	sbiw	r28, 0x08	; 8
    5a92:	26 96       	adiw	r28, 0x06	; 6
    5a94:	8f ad       	ldd	r24, Y+63	; 0x3f
    5a96:	26 97       	sbiw	r28, 0x06	; 6
    5a98:	28 96       	adiw	r28, 0x08	; 8
    5a9a:	9f ad       	ldd	r25, Y+63	; 0x3f
    5a9c:	28 97       	sbiw	r28, 0x08	; 8
    5a9e:	89 2b       	or	r24, r25
    5aa0:	26 96       	adiw	r28, 0x06	; 6
    5aa2:	8f af       	std	Y+63, r24	; 0x3f
    5aa4:	26 97       	sbiw	r28, 0x06	; 6
    5aa6:	27 96       	adiw	r28, 0x07	; 7
    5aa8:	8f ad       	ldd	r24, Y+63	; 0x3f
    5aaa:	27 97       	sbiw	r28, 0x07	; 7
    5aac:	8f ab       	std	Y+55, r24	; 0x37
    5aae:	98 a5       	ldd	r25, Y+40	; 0x28
    5ab0:	88 a9       	ldd	r24, Y+48	; 0x30
    5ab2:	98 0f       	add	r25, r24
    5ab4:	98 af       	std	Y+56, r25	; 0x38
    5ab6:	91 e0       	ldi	r25, 0x01	; 1
    5ab8:	29 96       	adiw	r28, 0x09	; 9
    5aba:	9f af       	std	Y+63, r25	; 0x3f
    5abc:	29 97       	sbiw	r28, 0x09	; 9
    5abe:	88 ad       	ldd	r24, Y+56	; 0x38
    5ac0:	98 a5       	ldd	r25, Y+40	; 0x28
    5ac2:	89 17       	cp	r24, r25
    5ac4:	18 f0       	brcs	.+6      	; 0x5acc <Lcd_VidDisplayNumberXY+0x26c>
    5ac6:	29 96       	adiw	r28, 0x09	; 9
    5ac8:	1f ae       	std	Y+63, r1	; 0x3f
    5aca:	29 97       	sbiw	r28, 0x09	; 9
    5acc:	26 96       	adiw	r28, 0x06	; 6
    5ace:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ad0:	26 97       	sbiw	r28, 0x06	; 6
    5ad2:	98 ad       	ldd	r25, Y+56	; 0x38
    5ad4:	89 0f       	add	r24, r25
    5ad6:	2a 96       	adiw	r28, 0x0a	; 10
    5ad8:	8f af       	std	Y+63, r24	; 0x3f
    5ada:	2a 97       	sbiw	r28, 0x0a	; 10
    5adc:	81 e0       	ldi	r24, 0x01	; 1
    5ade:	2b 96       	adiw	r28, 0x0b	; 11
    5ae0:	8f af       	std	Y+63, r24	; 0x3f
    5ae2:	2b 97       	sbiw	r28, 0x0b	; 11
    5ae4:	2a 96       	adiw	r28, 0x0a	; 10
    5ae6:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ae8:	2a 97       	sbiw	r28, 0x0a	; 10
    5aea:	88 ad       	ldd	r24, Y+56	; 0x38
    5aec:	98 17       	cp	r25, r24
    5aee:	18 f0       	brcs	.+6      	; 0x5af6 <Lcd_VidDisplayNumberXY+0x296>
    5af0:	2b 96       	adiw	r28, 0x0b	; 11
    5af2:	1f ae       	std	Y+63, r1	; 0x3f
    5af4:	2b 97       	sbiw	r28, 0x0b	; 11
    5af6:	29 96       	adiw	r28, 0x09	; 9
    5af8:	9f ad       	ldd	r25, Y+63	; 0x3f
    5afa:	29 97       	sbiw	r28, 0x09	; 9
    5afc:	2b 96       	adiw	r28, 0x0b	; 11
    5afe:	8f ad       	ldd	r24, Y+63	; 0x3f
    5b00:	2b 97       	sbiw	r28, 0x0b	; 11
    5b02:	98 2b       	or	r25, r24
    5b04:	29 96       	adiw	r28, 0x09	; 9
    5b06:	9f af       	std	Y+63, r25	; 0x3f
    5b08:	29 97       	sbiw	r28, 0x09	; 9
    5b0a:	2a 96       	adiw	r28, 0x0a	; 10
    5b0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    5b0e:	2a 97       	sbiw	r28, 0x0a	; 10
    5b10:	98 af       	std	Y+56, r25	; 0x38
    5b12:	89 a5       	ldd	r24, Y+41	; 0x29
    5b14:	99 a9       	ldd	r25, Y+49	; 0x31
    5b16:	89 0f       	add	r24, r25
    5b18:	89 af       	std	Y+57, r24	; 0x39
    5b1a:	81 e0       	ldi	r24, 0x01	; 1
    5b1c:	2c 96       	adiw	r28, 0x0c	; 12
    5b1e:	8f af       	std	Y+63, r24	; 0x3f
    5b20:	2c 97       	sbiw	r28, 0x0c	; 12
    5b22:	99 ad       	ldd	r25, Y+57	; 0x39
    5b24:	89 a5       	ldd	r24, Y+41	; 0x29
    5b26:	98 17       	cp	r25, r24
    5b28:	18 f0       	brcs	.+6      	; 0x5b30 <Lcd_VidDisplayNumberXY+0x2d0>
    5b2a:	2c 96       	adiw	r28, 0x0c	; 12
    5b2c:	1f ae       	std	Y+63, r1	; 0x3f
    5b2e:	2c 97       	sbiw	r28, 0x0c	; 12
    5b30:	29 96       	adiw	r28, 0x09	; 9
    5b32:	9f ad       	ldd	r25, Y+63	; 0x3f
    5b34:	29 97       	sbiw	r28, 0x09	; 9
    5b36:	89 ad       	ldd	r24, Y+57	; 0x39
    5b38:	98 0f       	add	r25, r24
    5b3a:	2d 96       	adiw	r28, 0x0d	; 13
    5b3c:	9f af       	std	Y+63, r25	; 0x3f
    5b3e:	2d 97       	sbiw	r28, 0x0d	; 13
    5b40:	91 e0       	ldi	r25, 0x01	; 1
    5b42:	2e 96       	adiw	r28, 0x0e	; 14
    5b44:	9f af       	std	Y+63, r25	; 0x3f
    5b46:	2e 97       	sbiw	r28, 0x0e	; 14
    5b48:	2d 96       	adiw	r28, 0x0d	; 13
    5b4a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5b4c:	2d 97       	sbiw	r28, 0x0d	; 13
    5b4e:	99 ad       	ldd	r25, Y+57	; 0x39
    5b50:	89 17       	cp	r24, r25
    5b52:	18 f0       	brcs	.+6      	; 0x5b5a <Lcd_VidDisplayNumberXY+0x2fa>
    5b54:	2e 96       	adiw	r28, 0x0e	; 14
    5b56:	1f ae       	std	Y+63, r1	; 0x3f
    5b58:	2e 97       	sbiw	r28, 0x0e	; 14
    5b5a:	2c 96       	adiw	r28, 0x0c	; 12
    5b5c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5b5e:	2c 97       	sbiw	r28, 0x0c	; 12
    5b60:	2e 96       	adiw	r28, 0x0e	; 14
    5b62:	9f ad       	ldd	r25, Y+63	; 0x3f
    5b64:	2e 97       	sbiw	r28, 0x0e	; 14
    5b66:	89 2b       	or	r24, r25
    5b68:	2c 96       	adiw	r28, 0x0c	; 12
    5b6a:	8f af       	std	Y+63, r24	; 0x3f
    5b6c:	2c 97       	sbiw	r28, 0x0c	; 12
    5b6e:	2d 96       	adiw	r28, 0x0d	; 13
    5b70:	8f ad       	ldd	r24, Y+63	; 0x3f
    5b72:	2d 97       	sbiw	r28, 0x0d	; 13
    5b74:	89 af       	std	Y+57, r24	; 0x39
    5b76:	9a a5       	ldd	r25, Y+42	; 0x2a
    5b78:	8a a9       	ldd	r24, Y+50	; 0x32
    5b7a:	98 0f       	add	r25, r24
    5b7c:	9a af       	std	Y+58, r25	; 0x3a
    5b7e:	2c 96       	adiw	r28, 0x0c	; 12
    5b80:	8f ad       	ldd	r24, Y+63	; 0x3f
    5b82:	2c 97       	sbiw	r28, 0x0c	; 12
    5b84:	9a ad       	ldd	r25, Y+58	; 0x3a
    5b86:	89 0f       	add	r24, r25
    5b88:	8a af       	std	Y+58, r24	; 0x3a
    5b8a:	8b a9       	ldd	r24, Y+51	; 0x33
    5b8c:	8b 8f       	std	Y+27, r24	; 0x1b
    5b8e:	9c a9       	ldd	r25, Y+52	; 0x34
    5b90:	9c 8f       	std	Y+28, r25	; 0x1c
    5b92:	8d a9       	ldd	r24, Y+53	; 0x35
    5b94:	8d 8f       	std	Y+29, r24	; 0x1d
    5b96:	9e a9       	ldd	r25, Y+54	; 0x36
    5b98:	9e 8f       	std	Y+30, r25	; 0x1e
    5b9a:	8f a9       	ldd	r24, Y+55	; 0x37
    5b9c:	8f 8f       	std	Y+31, r24	; 0x1f
    5b9e:	98 ad       	ldd	r25, Y+56	; 0x38
    5ba0:	98 a3       	std	Y+32, r25	; 0x20
    5ba2:	89 ad       	ldd	r24, Y+57	; 0x39
    5ba4:	89 a3       	std	Y+33, r24	; 0x21
    5ba6:	9a ad       	ldd	r25, Y+58	; 0x3a
    5ba8:	9a a3       	std	Y+34, r25	; 0x22
    5baa:	ab 84       	ldd	r10, Y+11	; 0x0b
    5bac:	bc 84       	ldd	r11, Y+12	; 0x0c
    5bae:	cd 84       	ldd	r12, Y+13	; 0x0d
    5bb0:	de 84       	ldd	r13, Y+14	; 0x0e
    5bb2:	ef 84       	ldd	r14, Y+15	; 0x0f
    5bb4:	f8 88       	ldd	r15, Y+16	; 0x10
    5bb6:	09 89       	ldd	r16, Y+17	; 0x11
    5bb8:	1a 89       	ldd	r17, Y+18	; 0x12
    5bba:	2a 2d       	mov	r18, r10
    5bbc:	3b 2d       	mov	r19, r11
    5bbe:	4c 2d       	mov	r20, r12
    5bc0:	5d 2d       	mov	r21, r13
    5bc2:	6e 2d       	mov	r22, r14
    5bc4:	7f 2d       	mov	r23, r15
    5bc6:	80 2f       	mov	r24, r16
    5bc8:	91 2f       	mov	r25, r17
    5bca:	0f 2e       	mov	r0, r31
    5bcc:	fa e0       	ldi	r31, 0x0A	; 10
    5bce:	af 2e       	mov	r10, r31
    5bd0:	f0 2d       	mov	r31, r0
    5bd2:	bb 24       	eor	r11, r11
    5bd4:	cc 24       	eor	r12, r12
    5bd6:	dd 24       	eor	r13, r13
    5bd8:	ee 24       	eor	r14, r14
    5bda:	ff 24       	eor	r15, r15
    5bdc:	00 e0       	ldi	r16, 0x00	; 0
    5bde:	10 e0       	ldi	r17, 0x00	; 0
    5be0:	0e 94 61 07 	call	0xec2	; 0xec2 <__umoddi3>
    5be4:	a2 2e       	mov	r10, r18
    5be6:	b3 2e       	mov	r11, r19
    5be8:	c4 2e       	mov	r12, r20
    5bea:	d5 2e       	mov	r13, r21
    5bec:	e6 2e       	mov	r14, r22
    5bee:	f7 2e       	mov	r15, r23
    5bf0:	08 2f       	mov	r16, r24
    5bf2:	19 2f       	mov	r17, r25
    5bf4:	ab 8a       	std	Y+19, r10	; 0x13
    5bf6:	bc 8a       	std	Y+20, r11	; 0x14
    5bf8:	cd 8a       	std	Y+21, r12	; 0x15
    5bfa:	de 8a       	std	Y+22, r13	; 0x16
    5bfc:	ef 8a       	std	Y+23, r14	; 0x17
    5bfe:	f8 8e       	std	Y+24, r15	; 0x18
    5c00:	09 8f       	std	Y+25, r16	; 0x19
    5c02:	1a 8f       	std	Y+26, r17	; 0x1a
    5c04:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5c06:	9b 89       	ldd	r25, Y+19	; 0x13
    5c08:	89 0f       	add	r24, r25
    5c0a:	2f 96       	adiw	r28, 0x0f	; 15
    5c0c:	8f af       	std	Y+63, r24	; 0x3f
    5c0e:	2f 97       	sbiw	r28, 0x0f	; 15
    5c10:	81 e0       	ldi	r24, 0x01	; 1
    5c12:	67 96       	adiw	r28, 0x17	; 23
    5c14:	8f af       	std	Y+63, r24	; 0x3f
    5c16:	67 97       	sbiw	r28, 0x17	; 23
    5c18:	2f 96       	adiw	r28, 0x0f	; 15
    5c1a:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c1c:	2f 97       	sbiw	r28, 0x0f	; 15
    5c1e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5c20:	98 17       	cp	r25, r24
    5c22:	18 f0       	brcs	.+6      	; 0x5c2a <Lcd_VidDisplayNumberXY+0x3ca>
    5c24:	67 96       	adiw	r28, 0x17	; 23
    5c26:	1f ae       	std	Y+63, r1	; 0x3f
    5c28:	67 97       	sbiw	r28, 0x17	; 23
    5c2a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5c2c:	8c 89       	ldd	r24, Y+20	; 0x14
    5c2e:	98 0f       	add	r25, r24
    5c30:	60 96       	adiw	r28, 0x10	; 16
    5c32:	9f af       	std	Y+63, r25	; 0x3f
    5c34:	60 97       	sbiw	r28, 0x10	; 16
    5c36:	91 e0       	ldi	r25, 0x01	; 1
    5c38:	68 96       	adiw	r28, 0x18	; 24
    5c3a:	9f af       	std	Y+63, r25	; 0x3f
    5c3c:	68 97       	sbiw	r28, 0x18	; 24
    5c3e:	60 96       	adiw	r28, 0x10	; 16
    5c40:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c42:	60 97       	sbiw	r28, 0x10	; 16
    5c44:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5c46:	89 17       	cp	r24, r25
    5c48:	18 f0       	brcs	.+6      	; 0x5c50 <Lcd_VidDisplayNumberXY+0x3f0>
    5c4a:	68 96       	adiw	r28, 0x18	; 24
    5c4c:	1f ae       	std	Y+63, r1	; 0x3f
    5c4e:	68 97       	sbiw	r28, 0x18	; 24
    5c50:	67 96       	adiw	r28, 0x17	; 23
    5c52:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c54:	67 97       	sbiw	r28, 0x17	; 23
    5c56:	60 96       	adiw	r28, 0x10	; 16
    5c58:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c5a:	60 97       	sbiw	r28, 0x10	; 16
    5c5c:	89 0f       	add	r24, r25
    5c5e:	69 96       	adiw	r28, 0x19	; 25
    5c60:	8f af       	std	Y+63, r24	; 0x3f
    5c62:	69 97       	sbiw	r28, 0x19	; 25
    5c64:	81 e0       	ldi	r24, 0x01	; 1
    5c66:	6a 96       	adiw	r28, 0x1a	; 26
    5c68:	8f af       	std	Y+63, r24	; 0x3f
    5c6a:	6a 97       	sbiw	r28, 0x1a	; 26
    5c6c:	69 96       	adiw	r28, 0x19	; 25
    5c6e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c70:	69 97       	sbiw	r28, 0x19	; 25
    5c72:	60 96       	adiw	r28, 0x10	; 16
    5c74:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c76:	60 97       	sbiw	r28, 0x10	; 16
    5c78:	98 17       	cp	r25, r24
    5c7a:	18 f0       	brcs	.+6      	; 0x5c82 <Lcd_VidDisplayNumberXY+0x422>
    5c7c:	6a 96       	adiw	r28, 0x1a	; 26
    5c7e:	1f ae       	std	Y+63, r1	; 0x3f
    5c80:	6a 97       	sbiw	r28, 0x1a	; 26
    5c82:	68 96       	adiw	r28, 0x18	; 24
    5c84:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c86:	68 97       	sbiw	r28, 0x18	; 24
    5c88:	6a 96       	adiw	r28, 0x1a	; 26
    5c8a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5c8c:	6a 97       	sbiw	r28, 0x1a	; 26
    5c8e:	98 2b       	or	r25, r24
    5c90:	68 96       	adiw	r28, 0x18	; 24
    5c92:	9f af       	std	Y+63, r25	; 0x3f
    5c94:	68 97       	sbiw	r28, 0x18	; 24
    5c96:	69 96       	adiw	r28, 0x19	; 25
    5c98:	9f ad       	ldd	r25, Y+63	; 0x3f
    5c9a:	69 97       	sbiw	r28, 0x19	; 25
    5c9c:	60 96       	adiw	r28, 0x10	; 16
    5c9e:	9f af       	std	Y+63, r25	; 0x3f
    5ca0:	60 97       	sbiw	r28, 0x10	; 16
    5ca2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5ca4:	9d 89       	ldd	r25, Y+21	; 0x15
    5ca6:	89 0f       	add	r24, r25
    5ca8:	61 96       	adiw	r28, 0x11	; 17
    5caa:	8f af       	std	Y+63, r24	; 0x3f
    5cac:	61 97       	sbiw	r28, 0x11	; 17
    5cae:	81 e0       	ldi	r24, 0x01	; 1
    5cb0:	6b 96       	adiw	r28, 0x1b	; 27
    5cb2:	8f af       	std	Y+63, r24	; 0x3f
    5cb4:	6b 97       	sbiw	r28, 0x1b	; 27
    5cb6:	61 96       	adiw	r28, 0x11	; 17
    5cb8:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cba:	61 97       	sbiw	r28, 0x11	; 17
    5cbc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5cbe:	98 17       	cp	r25, r24
    5cc0:	18 f0       	brcs	.+6      	; 0x5cc8 <Lcd_VidDisplayNumberXY+0x468>
    5cc2:	6b 96       	adiw	r28, 0x1b	; 27
    5cc4:	1f ae       	std	Y+63, r1	; 0x3f
    5cc6:	6b 97       	sbiw	r28, 0x1b	; 27
    5cc8:	68 96       	adiw	r28, 0x18	; 24
    5cca:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ccc:	68 97       	sbiw	r28, 0x18	; 24
    5cce:	61 96       	adiw	r28, 0x11	; 17
    5cd0:	8f ad       	ldd	r24, Y+63	; 0x3f
    5cd2:	61 97       	sbiw	r28, 0x11	; 17
    5cd4:	98 0f       	add	r25, r24
    5cd6:	6c 96       	adiw	r28, 0x1c	; 28
    5cd8:	9f af       	std	Y+63, r25	; 0x3f
    5cda:	6c 97       	sbiw	r28, 0x1c	; 28
    5cdc:	91 e0       	ldi	r25, 0x01	; 1
    5cde:	6d 96       	adiw	r28, 0x1d	; 29
    5ce0:	9f af       	std	Y+63, r25	; 0x3f
    5ce2:	6d 97       	sbiw	r28, 0x1d	; 29
    5ce4:	6c 96       	adiw	r28, 0x1c	; 28
    5ce6:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ce8:	6c 97       	sbiw	r28, 0x1c	; 28
    5cea:	61 96       	adiw	r28, 0x11	; 17
    5cec:	9f ad       	ldd	r25, Y+63	; 0x3f
    5cee:	61 97       	sbiw	r28, 0x11	; 17
    5cf0:	89 17       	cp	r24, r25
    5cf2:	18 f0       	brcs	.+6      	; 0x5cfa <Lcd_VidDisplayNumberXY+0x49a>
    5cf4:	6d 96       	adiw	r28, 0x1d	; 29
    5cf6:	1f ae       	std	Y+63, r1	; 0x3f
    5cf8:	6d 97       	sbiw	r28, 0x1d	; 29
    5cfa:	6b 96       	adiw	r28, 0x1b	; 27
    5cfc:	8f ad       	ldd	r24, Y+63	; 0x3f
    5cfe:	6b 97       	sbiw	r28, 0x1b	; 27
    5d00:	6d 96       	adiw	r28, 0x1d	; 29
    5d02:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d04:	6d 97       	sbiw	r28, 0x1d	; 29
    5d06:	89 2b       	or	r24, r25
    5d08:	6b 96       	adiw	r28, 0x1b	; 27
    5d0a:	8f af       	std	Y+63, r24	; 0x3f
    5d0c:	6b 97       	sbiw	r28, 0x1b	; 27
    5d0e:	6c 96       	adiw	r28, 0x1c	; 28
    5d10:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d12:	6c 97       	sbiw	r28, 0x1c	; 28
    5d14:	61 96       	adiw	r28, 0x11	; 17
    5d16:	8f af       	std	Y+63, r24	; 0x3f
    5d18:	61 97       	sbiw	r28, 0x11	; 17
    5d1a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5d1c:	8e 89       	ldd	r24, Y+22	; 0x16
    5d1e:	98 0f       	add	r25, r24
    5d20:	62 96       	adiw	r28, 0x12	; 18
    5d22:	9f af       	std	Y+63, r25	; 0x3f
    5d24:	62 97       	sbiw	r28, 0x12	; 18
    5d26:	91 e0       	ldi	r25, 0x01	; 1
    5d28:	6e 96       	adiw	r28, 0x1e	; 30
    5d2a:	9f af       	std	Y+63, r25	; 0x3f
    5d2c:	6e 97       	sbiw	r28, 0x1e	; 30
    5d2e:	62 96       	adiw	r28, 0x12	; 18
    5d30:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d32:	62 97       	sbiw	r28, 0x12	; 18
    5d34:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5d36:	89 17       	cp	r24, r25
    5d38:	18 f0       	brcs	.+6      	; 0x5d40 <Lcd_VidDisplayNumberXY+0x4e0>
    5d3a:	6e 96       	adiw	r28, 0x1e	; 30
    5d3c:	1f ae       	std	Y+63, r1	; 0x3f
    5d3e:	6e 97       	sbiw	r28, 0x1e	; 30
    5d40:	6b 96       	adiw	r28, 0x1b	; 27
    5d42:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d44:	6b 97       	sbiw	r28, 0x1b	; 27
    5d46:	62 96       	adiw	r28, 0x12	; 18
    5d48:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d4a:	62 97       	sbiw	r28, 0x12	; 18
    5d4c:	89 0f       	add	r24, r25
    5d4e:	6f 96       	adiw	r28, 0x1f	; 31
    5d50:	8f af       	std	Y+63, r24	; 0x3f
    5d52:	6f 97       	sbiw	r28, 0x1f	; 31
    5d54:	81 e0       	ldi	r24, 0x01	; 1
    5d56:	a0 96       	adiw	r28, 0x20	; 32
    5d58:	8f af       	std	Y+63, r24	; 0x3f
    5d5a:	a0 97       	sbiw	r28, 0x20	; 32
    5d5c:	6f 96       	adiw	r28, 0x1f	; 31
    5d5e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d60:	6f 97       	sbiw	r28, 0x1f	; 31
    5d62:	62 96       	adiw	r28, 0x12	; 18
    5d64:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d66:	62 97       	sbiw	r28, 0x12	; 18
    5d68:	98 17       	cp	r25, r24
    5d6a:	18 f0       	brcs	.+6      	; 0x5d72 <Lcd_VidDisplayNumberXY+0x512>
    5d6c:	a0 96       	adiw	r28, 0x20	; 32
    5d6e:	1f ae       	std	Y+63, r1	; 0x3f
    5d70:	a0 97       	sbiw	r28, 0x20	; 32
    5d72:	6e 96       	adiw	r28, 0x1e	; 30
    5d74:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d76:	6e 97       	sbiw	r28, 0x1e	; 30
    5d78:	a0 96       	adiw	r28, 0x20	; 32
    5d7a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5d7c:	a0 97       	sbiw	r28, 0x20	; 32
    5d7e:	98 2b       	or	r25, r24
    5d80:	6e 96       	adiw	r28, 0x1e	; 30
    5d82:	9f af       	std	Y+63, r25	; 0x3f
    5d84:	6e 97       	sbiw	r28, 0x1e	; 30
    5d86:	6f 96       	adiw	r28, 0x1f	; 31
    5d88:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d8a:	6f 97       	sbiw	r28, 0x1f	; 31
    5d8c:	62 96       	adiw	r28, 0x12	; 18
    5d8e:	9f af       	std	Y+63, r25	; 0x3f
    5d90:	62 97       	sbiw	r28, 0x12	; 18
    5d92:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5d94:	9f 89       	ldd	r25, Y+23	; 0x17
    5d96:	89 0f       	add	r24, r25
    5d98:	63 96       	adiw	r28, 0x13	; 19
    5d9a:	8f af       	std	Y+63, r24	; 0x3f
    5d9c:	63 97       	sbiw	r28, 0x13	; 19
    5d9e:	81 e0       	ldi	r24, 0x01	; 1
    5da0:	a1 96       	adiw	r28, 0x21	; 33
    5da2:	8f af       	std	Y+63, r24	; 0x3f
    5da4:	a1 97       	sbiw	r28, 0x21	; 33
    5da6:	63 96       	adiw	r28, 0x13	; 19
    5da8:	9f ad       	ldd	r25, Y+63	; 0x3f
    5daa:	63 97       	sbiw	r28, 0x13	; 19
    5dac:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5dae:	98 17       	cp	r25, r24
    5db0:	18 f0       	brcs	.+6      	; 0x5db8 <Lcd_VidDisplayNumberXY+0x558>
    5db2:	a1 96       	adiw	r28, 0x21	; 33
    5db4:	1f ae       	std	Y+63, r1	; 0x3f
    5db6:	a1 97       	sbiw	r28, 0x21	; 33
    5db8:	6e 96       	adiw	r28, 0x1e	; 30
    5dba:	9f ad       	ldd	r25, Y+63	; 0x3f
    5dbc:	6e 97       	sbiw	r28, 0x1e	; 30
    5dbe:	63 96       	adiw	r28, 0x13	; 19
    5dc0:	8f ad       	ldd	r24, Y+63	; 0x3f
    5dc2:	63 97       	sbiw	r28, 0x13	; 19
    5dc4:	98 0f       	add	r25, r24
    5dc6:	a2 96       	adiw	r28, 0x22	; 34
    5dc8:	9f af       	std	Y+63, r25	; 0x3f
    5dca:	a2 97       	sbiw	r28, 0x22	; 34
    5dcc:	91 e0       	ldi	r25, 0x01	; 1
    5dce:	a3 96       	adiw	r28, 0x23	; 35
    5dd0:	9f af       	std	Y+63, r25	; 0x3f
    5dd2:	a3 97       	sbiw	r28, 0x23	; 35
    5dd4:	a2 96       	adiw	r28, 0x22	; 34
    5dd6:	8f ad       	ldd	r24, Y+63	; 0x3f
    5dd8:	a2 97       	sbiw	r28, 0x22	; 34
    5dda:	63 96       	adiw	r28, 0x13	; 19
    5ddc:	9f ad       	ldd	r25, Y+63	; 0x3f
    5dde:	63 97       	sbiw	r28, 0x13	; 19
    5de0:	89 17       	cp	r24, r25
    5de2:	18 f0       	brcs	.+6      	; 0x5dea <Lcd_VidDisplayNumberXY+0x58a>
    5de4:	a3 96       	adiw	r28, 0x23	; 35
    5de6:	1f ae       	std	Y+63, r1	; 0x3f
    5de8:	a3 97       	sbiw	r28, 0x23	; 35
    5dea:	a1 96       	adiw	r28, 0x21	; 33
    5dec:	8f ad       	ldd	r24, Y+63	; 0x3f
    5dee:	a1 97       	sbiw	r28, 0x21	; 33
    5df0:	a3 96       	adiw	r28, 0x23	; 35
    5df2:	9f ad       	ldd	r25, Y+63	; 0x3f
    5df4:	a3 97       	sbiw	r28, 0x23	; 35
    5df6:	89 2b       	or	r24, r25
    5df8:	a1 96       	adiw	r28, 0x21	; 33
    5dfa:	8f af       	std	Y+63, r24	; 0x3f
    5dfc:	a1 97       	sbiw	r28, 0x21	; 33
    5dfe:	a2 96       	adiw	r28, 0x22	; 34
    5e00:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e02:	a2 97       	sbiw	r28, 0x22	; 34
    5e04:	63 96       	adiw	r28, 0x13	; 19
    5e06:	8f af       	std	Y+63, r24	; 0x3f
    5e08:	63 97       	sbiw	r28, 0x13	; 19
    5e0a:	98 a1       	ldd	r25, Y+32	; 0x20
    5e0c:	88 8d       	ldd	r24, Y+24	; 0x18
    5e0e:	98 0f       	add	r25, r24
    5e10:	64 96       	adiw	r28, 0x14	; 20
    5e12:	9f af       	std	Y+63, r25	; 0x3f
    5e14:	64 97       	sbiw	r28, 0x14	; 20
    5e16:	91 e0       	ldi	r25, 0x01	; 1
    5e18:	a4 96       	adiw	r28, 0x24	; 36
    5e1a:	9f af       	std	Y+63, r25	; 0x3f
    5e1c:	a4 97       	sbiw	r28, 0x24	; 36
    5e1e:	64 96       	adiw	r28, 0x14	; 20
    5e20:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e22:	64 97       	sbiw	r28, 0x14	; 20
    5e24:	98 a1       	ldd	r25, Y+32	; 0x20
    5e26:	89 17       	cp	r24, r25
    5e28:	18 f0       	brcs	.+6      	; 0x5e30 <Lcd_VidDisplayNumberXY+0x5d0>
    5e2a:	a4 96       	adiw	r28, 0x24	; 36
    5e2c:	1f ae       	std	Y+63, r1	; 0x3f
    5e2e:	a4 97       	sbiw	r28, 0x24	; 36
    5e30:	a1 96       	adiw	r28, 0x21	; 33
    5e32:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e34:	a1 97       	sbiw	r28, 0x21	; 33
    5e36:	64 96       	adiw	r28, 0x14	; 20
    5e38:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e3a:	64 97       	sbiw	r28, 0x14	; 20
    5e3c:	89 0f       	add	r24, r25
    5e3e:	a5 96       	adiw	r28, 0x25	; 37
    5e40:	8f af       	std	Y+63, r24	; 0x3f
    5e42:	a5 97       	sbiw	r28, 0x25	; 37
    5e44:	81 e0       	ldi	r24, 0x01	; 1
    5e46:	a6 96       	adiw	r28, 0x26	; 38
    5e48:	8f af       	std	Y+63, r24	; 0x3f
    5e4a:	a6 97       	sbiw	r28, 0x26	; 38
    5e4c:	a5 96       	adiw	r28, 0x25	; 37
    5e4e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e50:	a5 97       	sbiw	r28, 0x25	; 37
    5e52:	64 96       	adiw	r28, 0x14	; 20
    5e54:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e56:	64 97       	sbiw	r28, 0x14	; 20
    5e58:	98 17       	cp	r25, r24
    5e5a:	18 f0       	brcs	.+6      	; 0x5e62 <Lcd_VidDisplayNumberXY+0x602>
    5e5c:	a6 96       	adiw	r28, 0x26	; 38
    5e5e:	1f ae       	std	Y+63, r1	; 0x3f
    5e60:	a6 97       	sbiw	r28, 0x26	; 38
    5e62:	a4 96       	adiw	r28, 0x24	; 36
    5e64:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e66:	a4 97       	sbiw	r28, 0x24	; 36
    5e68:	a6 96       	adiw	r28, 0x26	; 38
    5e6a:	8f ad       	ldd	r24, Y+63	; 0x3f
    5e6c:	a6 97       	sbiw	r28, 0x26	; 38
    5e6e:	98 2b       	or	r25, r24
    5e70:	a4 96       	adiw	r28, 0x24	; 36
    5e72:	9f af       	std	Y+63, r25	; 0x3f
    5e74:	a4 97       	sbiw	r28, 0x24	; 36
    5e76:	a5 96       	adiw	r28, 0x25	; 37
    5e78:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e7a:	a5 97       	sbiw	r28, 0x25	; 37
    5e7c:	64 96       	adiw	r28, 0x14	; 20
    5e7e:	9f af       	std	Y+63, r25	; 0x3f
    5e80:	64 97       	sbiw	r28, 0x14	; 20
    5e82:	89 a1       	ldd	r24, Y+33	; 0x21
    5e84:	99 8d       	ldd	r25, Y+25	; 0x19
    5e86:	89 0f       	add	r24, r25
    5e88:	65 96       	adiw	r28, 0x15	; 21
    5e8a:	8f af       	std	Y+63, r24	; 0x3f
    5e8c:	65 97       	sbiw	r28, 0x15	; 21
    5e8e:	81 e0       	ldi	r24, 0x01	; 1
    5e90:	a7 96       	adiw	r28, 0x27	; 39
    5e92:	8f af       	std	Y+63, r24	; 0x3f
    5e94:	a7 97       	sbiw	r28, 0x27	; 39
    5e96:	65 96       	adiw	r28, 0x15	; 21
    5e98:	9f ad       	ldd	r25, Y+63	; 0x3f
    5e9a:	65 97       	sbiw	r28, 0x15	; 21
    5e9c:	89 a1       	ldd	r24, Y+33	; 0x21
    5e9e:	98 17       	cp	r25, r24
    5ea0:	18 f0       	brcs	.+6      	; 0x5ea8 <Lcd_VidDisplayNumberXY+0x648>
    5ea2:	a7 96       	adiw	r28, 0x27	; 39
    5ea4:	1f ae       	std	Y+63, r1	; 0x3f
    5ea6:	a7 97       	sbiw	r28, 0x27	; 39
    5ea8:	a4 96       	adiw	r28, 0x24	; 36
    5eaa:	9f ad       	ldd	r25, Y+63	; 0x3f
    5eac:	a4 97       	sbiw	r28, 0x24	; 36
    5eae:	65 96       	adiw	r28, 0x15	; 21
    5eb0:	8f ad       	ldd	r24, Y+63	; 0x3f
    5eb2:	65 97       	sbiw	r28, 0x15	; 21
    5eb4:	98 0f       	add	r25, r24
    5eb6:	a8 96       	adiw	r28, 0x28	; 40
    5eb8:	9f af       	std	Y+63, r25	; 0x3f
    5eba:	a8 97       	sbiw	r28, 0x28	; 40
    5ebc:	91 e0       	ldi	r25, 0x01	; 1
    5ebe:	a9 96       	adiw	r28, 0x29	; 41
    5ec0:	9f af       	std	Y+63, r25	; 0x3f
    5ec2:	a9 97       	sbiw	r28, 0x29	; 41
    5ec4:	a8 96       	adiw	r28, 0x28	; 40
    5ec6:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ec8:	a8 97       	sbiw	r28, 0x28	; 40
    5eca:	65 96       	adiw	r28, 0x15	; 21
    5ecc:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ece:	65 97       	sbiw	r28, 0x15	; 21
    5ed0:	89 17       	cp	r24, r25
    5ed2:	18 f0       	brcs	.+6      	; 0x5eda <Lcd_VidDisplayNumberXY+0x67a>
    5ed4:	a9 96       	adiw	r28, 0x29	; 41
    5ed6:	1f ae       	std	Y+63, r1	; 0x3f
    5ed8:	a9 97       	sbiw	r28, 0x29	; 41
    5eda:	a7 96       	adiw	r28, 0x27	; 39
    5edc:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ede:	a7 97       	sbiw	r28, 0x27	; 39
    5ee0:	a9 96       	adiw	r28, 0x29	; 41
    5ee2:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ee4:	a9 97       	sbiw	r28, 0x29	; 41
    5ee6:	89 2b       	or	r24, r25
    5ee8:	a7 96       	adiw	r28, 0x27	; 39
    5eea:	8f af       	std	Y+63, r24	; 0x3f
    5eec:	a7 97       	sbiw	r28, 0x27	; 39
    5eee:	a8 96       	adiw	r28, 0x28	; 40
    5ef0:	8f ad       	ldd	r24, Y+63	; 0x3f
    5ef2:	a8 97       	sbiw	r28, 0x28	; 40
    5ef4:	65 96       	adiw	r28, 0x15	; 21
    5ef6:	8f af       	std	Y+63, r24	; 0x3f
    5ef8:	65 97       	sbiw	r28, 0x15	; 21
    5efa:	9a a1       	ldd	r25, Y+34	; 0x22
    5efc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5efe:	98 0f       	add	r25, r24
    5f00:	66 96       	adiw	r28, 0x16	; 22
    5f02:	9f af       	std	Y+63, r25	; 0x3f
    5f04:	66 97       	sbiw	r28, 0x16	; 22
    5f06:	a7 96       	adiw	r28, 0x27	; 39
    5f08:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f0a:	a7 97       	sbiw	r28, 0x27	; 39
    5f0c:	66 96       	adiw	r28, 0x16	; 22
    5f0e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f10:	66 97       	sbiw	r28, 0x16	; 22
    5f12:	89 0f       	add	r24, r25
    5f14:	66 96       	adiw	r28, 0x16	; 22
    5f16:	8f af       	std	Y+63, r24	; 0x3f
    5f18:	66 97       	sbiw	r28, 0x16	; 22
    5f1a:	2f 96       	adiw	r28, 0x0f	; 15
    5f1c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f1e:	2f 97       	sbiw	r28, 0x0f	; 15
    5f20:	89 83       	std	Y+1, r24	; 0x01
    5f22:	60 96       	adiw	r28, 0x10	; 16
    5f24:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f26:	60 97       	sbiw	r28, 0x10	; 16
    5f28:	9a 83       	std	Y+2, r25	; 0x02
    5f2a:	61 96       	adiw	r28, 0x11	; 17
    5f2c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f2e:	61 97       	sbiw	r28, 0x11	; 17
    5f30:	8b 83       	std	Y+3, r24	; 0x03
    5f32:	62 96       	adiw	r28, 0x12	; 18
    5f34:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f36:	62 97       	sbiw	r28, 0x12	; 18
    5f38:	9c 83       	std	Y+4, r25	; 0x04
    5f3a:	63 96       	adiw	r28, 0x13	; 19
    5f3c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f3e:	63 97       	sbiw	r28, 0x13	; 19
    5f40:	8d 83       	std	Y+5, r24	; 0x05
    5f42:	64 96       	adiw	r28, 0x14	; 20
    5f44:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f46:	64 97       	sbiw	r28, 0x14	; 20
    5f48:	9e 83       	std	Y+6, r25	; 0x06
    5f4a:	65 96       	adiw	r28, 0x15	; 21
    5f4c:	8f ad       	ldd	r24, Y+63	; 0x3f
    5f4e:	65 97       	sbiw	r28, 0x15	; 21
    5f50:	8f 83       	std	Y+7, r24	; 0x07
    5f52:	66 96       	adiw	r28, 0x16	; 22
    5f54:	9f ad       	ldd	r25, Y+63	; 0x3f
    5f56:	66 97       	sbiw	r28, 0x16	; 22
    5f58:	98 87       	std	Y+8, r25	; 0x08
		Copy_u64Num /=10;
    5f5a:	ab 84       	ldd	r10, Y+11	; 0x0b
    5f5c:	bc 84       	ldd	r11, Y+12	; 0x0c
    5f5e:	cd 84       	ldd	r12, Y+13	; 0x0d
    5f60:	de 84       	ldd	r13, Y+14	; 0x0e
    5f62:	ef 84       	ldd	r14, Y+15	; 0x0f
    5f64:	f8 88       	ldd	r15, Y+16	; 0x10
    5f66:	09 89       	ldd	r16, Y+17	; 0x11
    5f68:	1a 89       	ldd	r17, Y+18	; 0x12
    5f6a:	2a 2d       	mov	r18, r10
    5f6c:	3b 2d       	mov	r19, r11
    5f6e:	4c 2d       	mov	r20, r12
    5f70:	5d 2d       	mov	r21, r13
    5f72:	6e 2d       	mov	r22, r14
    5f74:	7f 2d       	mov	r23, r15
    5f76:	80 2f       	mov	r24, r16
    5f78:	91 2f       	mov	r25, r17
    5f7a:	0f 2e       	mov	r0, r31
    5f7c:	fa e0       	ldi	r31, 0x0A	; 10
    5f7e:	af 2e       	mov	r10, r31
    5f80:	f0 2d       	mov	r31, r0
    5f82:	bb 24       	eor	r11, r11
    5f84:	cc 24       	eor	r12, r12
    5f86:	dd 24       	eor	r13, r13
    5f88:	ee 24       	eor	r14, r14
    5f8a:	ff 24       	eor	r15, r15
    5f8c:	00 e0       	ldi	r16, 0x00	; 0
    5f8e:	10 e0       	ldi	r17, 0x00	; 0
    5f90:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__udivdi3>
    5f94:	a2 2e       	mov	r10, r18
    5f96:	b3 2e       	mov	r11, r19
    5f98:	c4 2e       	mov	r12, r20
    5f9a:	d5 2e       	mov	r13, r21
    5f9c:	e6 2e       	mov	r14, r22
    5f9e:	f7 2e       	mov	r15, r23
    5fa0:	08 2f       	mov	r16, r24
    5fa2:	19 2f       	mov	r17, r25
    5fa4:	ab 86       	std	Y+11, r10	; 0x0b
    5fa6:	bc 86       	std	Y+12, r11	; 0x0c
    5fa8:	cd 86       	std	Y+13, r12	; 0x0d
    5faa:	de 86       	std	Y+14, r13	; 0x0e
    5fac:	ef 86       	std	Y+15, r14	; 0x0f
    5fae:	f8 8a       	std	Y+16, r15	; 0x10
    5fb0:	09 8b       	std	Y+17, r16	; 0x11
    5fb2:	1a 8b       	std	Y+18, r17	; 0x12
	uint64 LOC_u8Inverse=1;
	if(Copy_u64Num==0)
	{
		Lcd_VidDisplayChracter('0');
	}
	while(Copy_u64Num != 0)
    5fb4:	8b 85       	ldd	r24, Y+11	; 0x0b
    5fb6:	9c 85       	ldd	r25, Y+12	; 0x0c
    5fb8:	89 2b       	or	r24, r25
    5fba:	9d 85       	ldd	r25, Y+13	; 0x0d
    5fbc:	89 2b       	or	r24, r25
    5fbe:	9e 85       	ldd	r25, Y+14	; 0x0e
    5fc0:	89 2b       	or	r24, r25
    5fc2:	9f 85       	ldd	r25, Y+15	; 0x0f
    5fc4:	89 2b       	or	r24, r25
    5fc6:	98 89       	ldd	r25, Y+16	; 0x10
    5fc8:	89 2b       	or	r24, r25
    5fca:	99 89       	ldd	r25, Y+17	; 0x11
    5fcc:	89 2b       	or	r24, r25
    5fce:	9a 89       	ldd	r25, Y+18	; 0x12
    5fd0:	89 2b       	or	r24, r25
    5fd2:	88 23       	and	r24, r24
    5fd4:	09 f0       	breq	.+2      	; 0x5fd8 <Lcd_VidDisplayNumberXY+0x778>
    5fd6:	84 cc       	rjmp	.-1784   	; 0x58e0 <Lcd_VidDisplayNumberXY+0x80>
    5fd8:	5e c0       	rjmp	.+188    	; 0x6096 <Lcd_VidDisplayNumberXY+0x836>
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
    5fda:	a9 80       	ldd	r10, Y+1	; 0x01
    5fdc:	ba 80       	ldd	r11, Y+2	; 0x02
    5fde:	cb 80       	ldd	r12, Y+3	; 0x03
    5fe0:	dc 80       	ldd	r13, Y+4	; 0x04
    5fe2:	ed 80       	ldd	r14, Y+5	; 0x05
    5fe4:	fe 80       	ldd	r15, Y+6	; 0x06
    5fe6:	0f 81       	ldd	r16, Y+7	; 0x07
    5fe8:	18 85       	ldd	r17, Y+8	; 0x08
    5fea:	2a 2d       	mov	r18, r10
    5fec:	3b 2d       	mov	r19, r11
    5fee:	4c 2d       	mov	r20, r12
    5ff0:	5d 2d       	mov	r21, r13
    5ff2:	6e 2d       	mov	r22, r14
    5ff4:	7f 2d       	mov	r23, r15
    5ff6:	80 2f       	mov	r24, r16
    5ff8:	91 2f       	mov	r25, r17
    5ffa:	0f 2e       	mov	r0, r31
    5ffc:	fa e0       	ldi	r31, 0x0A	; 10
    5ffe:	af 2e       	mov	r10, r31
    6000:	f0 2d       	mov	r31, r0
    6002:	bb 24       	eor	r11, r11
    6004:	cc 24       	eor	r12, r12
    6006:	dd 24       	eor	r13, r13
    6008:	ee 24       	eor	r14, r14
    600a:	ff 24       	eor	r15, r15
    600c:	00 e0       	ldi	r16, 0x00	; 0
    600e:	10 e0       	ldi	r17, 0x00	; 0
    6010:	0e 94 61 07 	call	0xec2	; 0xec2 <__umoddi3>
    6014:	a2 2e       	mov	r10, r18
    6016:	b3 2e       	mov	r11, r19
    6018:	c4 2e       	mov	r12, r20
    601a:	d5 2e       	mov	r13, r21
    601c:	e6 2e       	mov	r14, r22
    601e:	f7 2e       	mov	r15, r23
    6020:	08 2f       	mov	r16, r24
    6022:	19 2f       	mov	r17, r25
    6024:	2a 2d       	mov	r18, r10
    6026:	3b 2d       	mov	r19, r11
    6028:	4c 2d       	mov	r20, r12
    602a:	5d 2d       	mov	r21, r13
    602c:	6e 2d       	mov	r22, r14
    602e:	7f 2d       	mov	r23, r15
    6030:	80 2f       	mov	r24, r16
    6032:	91 2f       	mov	r25, r17
    6034:	82 2f       	mov	r24, r18
    6036:	80 5d       	subi	r24, 0xD0	; 208
    6038:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
		LOC_u8Inverse /=10;
    603c:	a9 80       	ldd	r10, Y+1	; 0x01
    603e:	ba 80       	ldd	r11, Y+2	; 0x02
    6040:	cb 80       	ldd	r12, Y+3	; 0x03
    6042:	dc 80       	ldd	r13, Y+4	; 0x04
    6044:	ed 80       	ldd	r14, Y+5	; 0x05
    6046:	fe 80       	ldd	r15, Y+6	; 0x06
    6048:	0f 81       	ldd	r16, Y+7	; 0x07
    604a:	18 85       	ldd	r17, Y+8	; 0x08
    604c:	2a 2d       	mov	r18, r10
    604e:	3b 2d       	mov	r19, r11
    6050:	4c 2d       	mov	r20, r12
    6052:	5d 2d       	mov	r21, r13
    6054:	6e 2d       	mov	r22, r14
    6056:	7f 2d       	mov	r23, r15
    6058:	80 2f       	mov	r24, r16
    605a:	91 2f       	mov	r25, r17
    605c:	0f 2e       	mov	r0, r31
    605e:	fa e0       	ldi	r31, 0x0A	; 10
    6060:	af 2e       	mov	r10, r31
    6062:	f0 2d       	mov	r31, r0
    6064:	bb 24       	eor	r11, r11
    6066:	cc 24       	eor	r12, r12
    6068:	dd 24       	eor	r13, r13
    606a:	ee 24       	eor	r14, r14
    606c:	ff 24       	eor	r15, r15
    606e:	00 e0       	ldi	r16, 0x00	; 0
    6070:	10 e0       	ldi	r17, 0x00	; 0
    6072:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__udivdi3>
    6076:	a2 2e       	mov	r10, r18
    6078:	b3 2e       	mov	r11, r19
    607a:	c4 2e       	mov	r12, r20
    607c:	d5 2e       	mov	r13, r21
    607e:	e6 2e       	mov	r14, r22
    6080:	f7 2e       	mov	r15, r23
    6082:	08 2f       	mov	r16, r24
    6084:	19 2f       	mov	r17, r25
    6086:	a9 82       	std	Y+1, r10	; 0x01
    6088:	ba 82       	std	Y+2, r11	; 0x02
    608a:	cb 82       	std	Y+3, r12	; 0x03
    608c:	dc 82       	std	Y+4, r13	; 0x04
    608e:	ed 82       	std	Y+5, r14	; 0x05
    6090:	fe 82       	std	Y+6, r15	; 0x06
    6092:	0f 83       	std	Y+7, r16	; 0x07
    6094:	18 87       	std	Y+8, r17	; 0x08
	while(Copy_u64Num != 0)
	{
		LOC_u8Inverse=(LOC_u8Inverse*10)+(Copy_u64Num%10);
		Copy_u64Num /=10;
	}
	while(LOC_u8Inverse != 1)
    6096:	89 81       	ldd	r24, Y+1	; 0x01
    6098:	81 30       	cpi	r24, 0x01	; 1
    609a:	09 f0       	breq	.+2      	; 0x609e <Lcd_VidDisplayNumberXY+0x83e>
    609c:	9e cf       	rjmp	.-196    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
    609e:	8a 81       	ldd	r24, Y+2	; 0x02
    60a0:	88 23       	and	r24, r24
    60a2:	09 f0       	breq	.+2      	; 0x60a6 <Lcd_VidDisplayNumberXY+0x846>
    60a4:	9a cf       	rjmp	.-204    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
    60a6:	8b 81       	ldd	r24, Y+3	; 0x03
    60a8:	88 23       	and	r24, r24
    60aa:	09 f0       	breq	.+2      	; 0x60ae <Lcd_VidDisplayNumberXY+0x84e>
    60ac:	96 cf       	rjmp	.-212    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
    60ae:	8c 81       	ldd	r24, Y+4	; 0x04
    60b0:	88 23       	and	r24, r24
    60b2:	09 f0       	breq	.+2      	; 0x60b6 <Lcd_VidDisplayNumberXY+0x856>
    60b4:	92 cf       	rjmp	.-220    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
    60b6:	8d 81       	ldd	r24, Y+5	; 0x05
    60b8:	88 23       	and	r24, r24
    60ba:	09 f0       	breq	.+2      	; 0x60be <Lcd_VidDisplayNumberXY+0x85e>
    60bc:	8e cf       	rjmp	.-228    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
    60be:	8e 81       	ldd	r24, Y+6	; 0x06
    60c0:	88 23       	and	r24, r24
    60c2:	09 f0       	breq	.+2      	; 0x60c6 <Lcd_VidDisplayNumberXY+0x866>
    60c4:	8a cf       	rjmp	.-236    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
    60c6:	8f 81       	ldd	r24, Y+7	; 0x07
    60c8:	88 23       	and	r24, r24
    60ca:	09 f0       	breq	.+2      	; 0x60ce <Lcd_VidDisplayNumberXY+0x86e>
    60cc:	86 cf       	rjmp	.-244    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
    60ce:	88 85       	ldd	r24, Y+8	; 0x08
    60d0:	88 23       	and	r24, r24
    60d2:	09 f0       	breq	.+2      	; 0x60d6 <Lcd_VidDisplayNumberXY+0x876>
    60d4:	82 cf       	rjmp	.-252    	; 0x5fda <Lcd_VidDisplayNumberXY+0x77a>
	{
		Lcd_VidDisplayChracter(((LOC_u8Inverse%10)+'0'));
		LOC_u8Inverse /=10;
	}

}
    60d6:	c8 59       	subi	r28, 0x98	; 152
    60d8:	df 4f       	sbci	r29, 0xFF	; 255
    60da:	0f b6       	in	r0, 0x3f	; 63
    60dc:	f8 94       	cli
    60de:	de bf       	out	0x3e, r29	; 62
    60e0:	0f be       	out	0x3f, r0	; 63
    60e2:	cd bf       	out	0x3d, r28	; 61
    60e4:	cf 91       	pop	r28
    60e6:	df 91       	pop	r29
    60e8:	1f 91       	pop	r17
    60ea:	0f 91       	pop	r16
    60ec:	ff 90       	pop	r15
    60ee:	ef 90       	pop	r14
    60f0:	df 90       	pop	r13
    60f2:	cf 90       	pop	r12
    60f4:	bf 90       	pop	r11
    60f6:	af 90       	pop	r10
    60f8:	08 95       	ret

000060fa <LCD_VidDisplayFloat>:
void LCD_VidDisplayFloat(float32 Copy_u32Num)
{
    60fa:	af 92       	push	r10
    60fc:	bf 92       	push	r11
    60fe:	cf 92       	push	r12
    6100:	df 92       	push	r13
    6102:	ef 92       	push	r14
    6104:	ff 92       	push	r15
    6106:	0f 93       	push	r16
    6108:	1f 93       	push	r17
    610a:	df 93       	push	r29
    610c:	cf 93       	push	r28
    610e:	cd b7       	in	r28, 0x3d	; 61
    6110:	de b7       	in	r29, 0x3e	; 62
    6112:	2c 97       	sbiw	r28, 0x0c	; 12
    6114:	0f b6       	in	r0, 0x3f	; 63
    6116:	f8 94       	cli
    6118:	de bf       	out	0x3e, r29	; 62
    611a:	0f be       	out	0x3f, r0	; 63
    611c:	cd bf       	out	0x3d, r28	; 61
    611e:	69 87       	std	Y+9, r22	; 0x09
    6120:	7a 87       	std	Y+10, r23	; 0x0a
    6122:	8b 87       	std	Y+11, r24	; 0x0b
    6124:	9c 87       	std	Y+12, r25	; 0x0c
	uint32 AfterDot=(uint32) (Copy_u32Num *10) %10;
    6126:	69 85       	ldd	r22, Y+9	; 0x09
    6128:	7a 85       	ldd	r23, Y+10	; 0x0a
    612a:	8b 85       	ldd	r24, Y+11	; 0x0b
    612c:	9c 85       	ldd	r25, Y+12	; 0x0c
    612e:	20 e0       	ldi	r18, 0x00	; 0
    6130:	30 e0       	ldi	r19, 0x00	; 0
    6132:	40 e2       	ldi	r20, 0x20	; 32
    6134:	51 e4       	ldi	r21, 0x41	; 65
    6136:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    613a:	dc 01       	movw	r26, r24
    613c:	cb 01       	movw	r24, r22
    613e:	bc 01       	movw	r22, r24
    6140:	cd 01       	movw	r24, r26
    6142:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6146:	dc 01       	movw	r26, r24
    6148:	cb 01       	movw	r24, r22
    614a:	2a e0       	ldi	r18, 0x0A	; 10
    614c:	30 e0       	ldi	r19, 0x00	; 0
    614e:	40 e0       	ldi	r20, 0x00	; 0
    6150:	50 e0       	ldi	r21, 0x00	; 0
    6152:	bc 01       	movw	r22, r24
    6154:	cd 01       	movw	r24, r26
    6156:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__udivmodsi4>
    615a:	dc 01       	movw	r26, r24
    615c:	cb 01       	movw	r24, r22
    615e:	8d 83       	std	Y+5, r24	; 0x05
    6160:	9e 83       	std	Y+6, r25	; 0x06
    6162:	af 83       	std	Y+7, r26	; 0x07
    6164:	b8 87       	std	Y+8, r27	; 0x08
	uint32 BeforDot=(Copy_u32Num *10)/10;
    6166:	69 85       	ldd	r22, Y+9	; 0x09
    6168:	7a 85       	ldd	r23, Y+10	; 0x0a
    616a:	8b 85       	ldd	r24, Y+11	; 0x0b
    616c:	9c 85       	ldd	r25, Y+12	; 0x0c
    616e:	20 e0       	ldi	r18, 0x00	; 0
    6170:	30 e0       	ldi	r19, 0x00	; 0
    6172:	40 e2       	ldi	r20, 0x20	; 32
    6174:	51 e4       	ldi	r21, 0x41	; 65
    6176:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    617a:	dc 01       	movw	r26, r24
    617c:	cb 01       	movw	r24, r22
    617e:	bc 01       	movw	r22, r24
    6180:	cd 01       	movw	r24, r26
    6182:	20 e0       	ldi	r18, 0x00	; 0
    6184:	30 e0       	ldi	r19, 0x00	; 0
    6186:	40 e2       	ldi	r20, 0x20	; 32
    6188:	51 e4       	ldi	r21, 0x41	; 65
    618a:	0e 94 75 10 	call	0x20ea	; 0x20ea <__divsf3>
    618e:	dc 01       	movw	r26, r24
    6190:	cb 01       	movw	r24, r22
    6192:	bc 01       	movw	r22, r24
    6194:	cd 01       	movw	r24, r26
    6196:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    619a:	dc 01       	movw	r26, r24
    619c:	cb 01       	movw	r24, r22
    619e:	89 83       	std	Y+1, r24	; 0x01
    61a0:	9a 83       	std	Y+2, r25	; 0x02
    61a2:	ab 83       	std	Y+3, r26	; 0x03
    61a4:	bc 83       	std	Y+4, r27	; 0x04
	Lcd_VidDisplayNumber(BeforDot);
    61a6:	89 81       	ldd	r24, Y+1	; 0x01
    61a8:	9a 81       	ldd	r25, Y+2	; 0x02
    61aa:	ab 81       	ldd	r26, Y+3	; 0x03
    61ac:	bc 81       	ldd	r27, Y+4	; 0x04
    61ae:	5c 01       	movw	r10, r24
    61b0:	6d 01       	movw	r12, r26
    61b2:	ee 24       	eor	r14, r14
    61b4:	ff 24       	eor	r15, r15
    61b6:	87 01       	movw	r16, r14
    61b8:	2a 2d       	mov	r18, r10
    61ba:	3b 2d       	mov	r19, r11
    61bc:	4c 2d       	mov	r20, r12
    61be:	5d 2d       	mov	r21, r13
    61c0:	6e 2d       	mov	r22, r14
    61c2:	7f 2d       	mov	r23, r15
    61c4:	80 2f       	mov	r24, r16
    61c6:	91 2f       	mov	r25, r17
    61c8:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <Lcd_VidDisplayNumber>
	Lcd_VidDisplayChracter('.');
    61cc:	8e e2       	ldi	r24, 0x2E	; 46
    61ce:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
	Lcd_VidDisplayNumber(AfterDot);
    61d2:	8d 81       	ldd	r24, Y+5	; 0x05
    61d4:	9e 81       	ldd	r25, Y+6	; 0x06
    61d6:	af 81       	ldd	r26, Y+7	; 0x07
    61d8:	b8 85       	ldd	r27, Y+8	; 0x08
    61da:	5c 01       	movw	r10, r24
    61dc:	6d 01       	movw	r12, r26
    61de:	ee 24       	eor	r14, r14
    61e0:	ff 24       	eor	r15, r15
    61e2:	87 01       	movw	r16, r14
    61e4:	2a 2d       	mov	r18, r10
    61e6:	3b 2d       	mov	r19, r11
    61e8:	4c 2d       	mov	r20, r12
    61ea:	5d 2d       	mov	r21, r13
    61ec:	6e 2d       	mov	r22, r14
    61ee:	7f 2d       	mov	r23, r15
    61f0:	80 2f       	mov	r24, r16
    61f2:	91 2f       	mov	r25, r17
    61f4:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <Lcd_VidDisplayNumber>

}
    61f8:	2c 96       	adiw	r28, 0x0c	; 12
    61fa:	0f b6       	in	r0, 0x3f	; 63
    61fc:	f8 94       	cli
    61fe:	de bf       	out	0x3e, r29	; 62
    6200:	0f be       	out	0x3f, r0	; 63
    6202:	cd bf       	out	0x3d, r28	; 61
    6204:	cf 91       	pop	r28
    6206:	df 91       	pop	r29
    6208:	1f 91       	pop	r17
    620a:	0f 91       	pop	r16
    620c:	ff 90       	pop	r15
    620e:	ef 90       	pop	r14
    6210:	df 90       	pop	r13
    6212:	cf 90       	pop	r12
    6214:	bf 90       	pop	r11
    6216:	af 90       	pop	r10
    6218:	08 95       	ret

0000621a <Lcd_VidDisplayChracterXY>:


void Lcd_VidDisplayChracterXY(uint8 Copy_u8Row,uint8 Copy_u8Column,uint8 Copy_u8Command)
{
    621a:	0f 93       	push	r16
    621c:	1f 93       	push	r17
    621e:	df 93       	push	r29
    6220:	cf 93       	push	r28
    6222:	cd b7       	in	r28, 0x3d	; 61
    6224:	de b7       	in	r29, 0x3e	; 62
    6226:	c5 56       	subi	r28, 0x65	; 101
    6228:	d0 40       	sbci	r29, 0x00	; 0
    622a:	0f b6       	in	r0, 0x3f	; 63
    622c:	f8 94       	cli
    622e:	de bf       	out	0x3e, r29	; 62
    6230:	0f be       	out	0x3f, r0	; 63
    6232:	cd bf       	out	0x3d, r28	; 61
    6234:	fe 01       	movw	r30, r28
    6236:	ed 59       	subi	r30, 0x9D	; 157
    6238:	ff 4f       	sbci	r31, 0xFF	; 255
    623a:	80 83       	st	Z, r24
    623c:	fe 01       	movw	r30, r28
    623e:	ec 59       	subi	r30, 0x9C	; 156
    6240:	ff 4f       	sbci	r31, 0xFF	; 255
    6242:	60 83       	st	Z, r22
    6244:	fe 01       	movw	r30, r28
    6246:	eb 59       	subi	r30, 0x9B	; 155
    6248:	ff 4f       	sbci	r31, 0xFF	; 255
    624a:	40 83       	st	Z, r20
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
    624c:	fe 01       	movw	r30, r28
    624e:	ed 59       	subi	r30, 0x9D	; 157
    6250:	ff 4f       	sbci	r31, 0xFF	; 255
    6252:	de 01       	movw	r26, r28
    6254:	ac 59       	subi	r26, 0x9C	; 156
    6256:	bf 4f       	sbci	r27, 0xFF	; 255
    6258:	80 81       	ld	r24, Z
    625a:	6c 91       	ld	r22, X
    625c:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <Lcd_VidGoToXY>
	Dio_enuWriteChannel(LCD_RS_PIN_NUM,DIO_LOGIC_HIGH);
    6260:	80 e1       	ldi	r24, 0x10	; 16
    6262:	61 e0       	ldi	r22, 0x01	; 1
    6264:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    6268:	fe 01       	movw	r30, r28
    626a:	e1 5a       	subi	r30, 0xA1	; 161
    626c:	ff 4f       	sbci	r31, 0xFF	; 255
    626e:	80 e0       	ldi	r24, 0x00	; 0
    6270:	90 e0       	ldi	r25, 0x00	; 0
    6272:	a0 e8       	ldi	r26, 0x80	; 128
    6274:	bf e3       	ldi	r27, 0x3F	; 63
    6276:	80 83       	st	Z, r24
    6278:	91 83       	std	Z+1, r25	; 0x01
    627a:	a2 83       	std	Z+2, r26	; 0x02
    627c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    627e:	8e 01       	movw	r16, r28
    6280:	05 5a       	subi	r16, 0xA5	; 165
    6282:	1f 4f       	sbci	r17, 0xFF	; 255
    6284:	fe 01       	movw	r30, r28
    6286:	e1 5a       	subi	r30, 0xA1	; 161
    6288:	ff 4f       	sbci	r31, 0xFF	; 255
    628a:	60 81       	ld	r22, Z
    628c:	71 81       	ldd	r23, Z+1	; 0x01
    628e:	82 81       	ldd	r24, Z+2	; 0x02
    6290:	93 81       	ldd	r25, Z+3	; 0x03
    6292:	20 e0       	ldi	r18, 0x00	; 0
    6294:	30 e0       	ldi	r19, 0x00	; 0
    6296:	4a e7       	ldi	r20, 0x7A	; 122
    6298:	53 e4       	ldi	r21, 0x43	; 67
    629a:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    629e:	dc 01       	movw	r26, r24
    62a0:	cb 01       	movw	r24, r22
    62a2:	f8 01       	movw	r30, r16
    62a4:	80 83       	st	Z, r24
    62a6:	91 83       	std	Z+1, r25	; 0x01
    62a8:	a2 83       	std	Z+2, r26	; 0x02
    62aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    62ac:	fe 01       	movw	r30, r28
    62ae:	e5 5a       	subi	r30, 0xA5	; 165
    62b0:	ff 4f       	sbci	r31, 0xFF	; 255
    62b2:	60 81       	ld	r22, Z
    62b4:	71 81       	ldd	r23, Z+1	; 0x01
    62b6:	82 81       	ldd	r24, Z+2	; 0x02
    62b8:	93 81       	ldd	r25, Z+3	; 0x03
    62ba:	20 e0       	ldi	r18, 0x00	; 0
    62bc:	30 e0       	ldi	r19, 0x00	; 0
    62be:	40 e8       	ldi	r20, 0x80	; 128
    62c0:	5f e3       	ldi	r21, 0x3F	; 63
    62c2:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    62c6:	88 23       	and	r24, r24
    62c8:	44 f4       	brge	.+16     	; 0x62da <Lcd_VidDisplayChracterXY+0xc0>
		__ticks = 1;
    62ca:	fe 01       	movw	r30, r28
    62cc:	e7 5a       	subi	r30, 0xA7	; 167
    62ce:	ff 4f       	sbci	r31, 0xFF	; 255
    62d0:	81 e0       	ldi	r24, 0x01	; 1
    62d2:	90 e0       	ldi	r25, 0x00	; 0
    62d4:	91 83       	std	Z+1, r25	; 0x01
    62d6:	80 83       	st	Z, r24
    62d8:	64 c0       	rjmp	.+200    	; 0x63a2 <Lcd_VidDisplayChracterXY+0x188>
	else if (__tmp > 65535)
    62da:	fe 01       	movw	r30, r28
    62dc:	e5 5a       	subi	r30, 0xA5	; 165
    62de:	ff 4f       	sbci	r31, 0xFF	; 255
    62e0:	60 81       	ld	r22, Z
    62e2:	71 81       	ldd	r23, Z+1	; 0x01
    62e4:	82 81       	ldd	r24, Z+2	; 0x02
    62e6:	93 81       	ldd	r25, Z+3	; 0x03
    62e8:	20 e0       	ldi	r18, 0x00	; 0
    62ea:	3f ef       	ldi	r19, 0xFF	; 255
    62ec:	4f e7       	ldi	r20, 0x7F	; 127
    62ee:	57 e4       	ldi	r21, 0x47	; 71
    62f0:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    62f4:	18 16       	cp	r1, r24
    62f6:	0c f0       	brlt	.+2      	; 0x62fa <Lcd_VidDisplayChracterXY+0xe0>
    62f8:	43 c0       	rjmp	.+134    	; 0x6380 <Lcd_VidDisplayChracterXY+0x166>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    62fa:	fe 01       	movw	r30, r28
    62fc:	e1 5a       	subi	r30, 0xA1	; 161
    62fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6300:	60 81       	ld	r22, Z
    6302:	71 81       	ldd	r23, Z+1	; 0x01
    6304:	82 81       	ldd	r24, Z+2	; 0x02
    6306:	93 81       	ldd	r25, Z+3	; 0x03
    6308:	20 e0       	ldi	r18, 0x00	; 0
    630a:	30 e0       	ldi	r19, 0x00	; 0
    630c:	40 e2       	ldi	r20, 0x20	; 32
    630e:	51 e4       	ldi	r21, 0x41	; 65
    6310:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6314:	dc 01       	movw	r26, r24
    6316:	cb 01       	movw	r24, r22
    6318:	8e 01       	movw	r16, r28
    631a:	07 5a       	subi	r16, 0xA7	; 167
    631c:	1f 4f       	sbci	r17, 0xFF	; 255
    631e:	bc 01       	movw	r22, r24
    6320:	cd 01       	movw	r24, r26
    6322:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6326:	dc 01       	movw	r26, r24
    6328:	cb 01       	movw	r24, r22
    632a:	f8 01       	movw	r30, r16
    632c:	91 83       	std	Z+1, r25	; 0x01
    632e:	80 83       	st	Z, r24
    6330:	1f c0       	rjmp	.+62     	; 0x6370 <Lcd_VidDisplayChracterXY+0x156>
    6332:	fe 01       	movw	r30, r28
    6334:	e9 5a       	subi	r30, 0xA9	; 169
    6336:	ff 4f       	sbci	r31, 0xFF	; 255
    6338:	89 e1       	ldi	r24, 0x19	; 25
    633a:	90 e0       	ldi	r25, 0x00	; 0
    633c:	91 83       	std	Z+1, r25	; 0x01
    633e:	80 83       	st	Z, r24
    6340:	fe 01       	movw	r30, r28
    6342:	e9 5a       	subi	r30, 0xA9	; 169
    6344:	ff 4f       	sbci	r31, 0xFF	; 255
    6346:	80 81       	ld	r24, Z
    6348:	91 81       	ldd	r25, Z+1	; 0x01
    634a:	01 97       	sbiw	r24, 0x01	; 1
    634c:	f1 f7       	brne	.-4      	; 0x634a <Lcd_VidDisplayChracterXY+0x130>
    634e:	fe 01       	movw	r30, r28
    6350:	e9 5a       	subi	r30, 0xA9	; 169
    6352:	ff 4f       	sbci	r31, 0xFF	; 255
    6354:	91 83       	std	Z+1, r25	; 0x01
    6356:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6358:	de 01       	movw	r26, r28
    635a:	a7 5a       	subi	r26, 0xA7	; 167
    635c:	bf 4f       	sbci	r27, 0xFF	; 255
    635e:	fe 01       	movw	r30, r28
    6360:	e7 5a       	subi	r30, 0xA7	; 167
    6362:	ff 4f       	sbci	r31, 0xFF	; 255
    6364:	80 81       	ld	r24, Z
    6366:	91 81       	ldd	r25, Z+1	; 0x01
    6368:	01 97       	sbiw	r24, 0x01	; 1
    636a:	11 96       	adiw	r26, 0x01	; 1
    636c:	9c 93       	st	X, r25
    636e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6370:	fe 01       	movw	r30, r28
    6372:	e7 5a       	subi	r30, 0xA7	; 167
    6374:	ff 4f       	sbci	r31, 0xFF	; 255
    6376:	80 81       	ld	r24, Z
    6378:	91 81       	ldd	r25, Z+1	; 0x01
    637a:	00 97       	sbiw	r24, 0x00	; 0
    637c:	d1 f6       	brne	.-76     	; 0x6332 <Lcd_VidDisplayChracterXY+0x118>
    637e:	27 c0       	rjmp	.+78     	; 0x63ce <Lcd_VidDisplayChracterXY+0x1b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6380:	8e 01       	movw	r16, r28
    6382:	07 5a       	subi	r16, 0xA7	; 167
    6384:	1f 4f       	sbci	r17, 0xFF	; 255
    6386:	fe 01       	movw	r30, r28
    6388:	e5 5a       	subi	r30, 0xA5	; 165
    638a:	ff 4f       	sbci	r31, 0xFF	; 255
    638c:	60 81       	ld	r22, Z
    638e:	71 81       	ldd	r23, Z+1	; 0x01
    6390:	82 81       	ldd	r24, Z+2	; 0x02
    6392:	93 81       	ldd	r25, Z+3	; 0x03
    6394:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6398:	dc 01       	movw	r26, r24
    639a:	cb 01       	movw	r24, r22
    639c:	f8 01       	movw	r30, r16
    639e:	91 83       	std	Z+1, r25	; 0x01
    63a0:	80 83       	st	Z, r24
    63a2:	de 01       	movw	r26, r28
    63a4:	ab 5a       	subi	r26, 0xAB	; 171
    63a6:	bf 4f       	sbci	r27, 0xFF	; 255
    63a8:	fe 01       	movw	r30, r28
    63aa:	e7 5a       	subi	r30, 0xA7	; 167
    63ac:	ff 4f       	sbci	r31, 0xFF	; 255
    63ae:	80 81       	ld	r24, Z
    63b0:	91 81       	ldd	r25, Z+1	; 0x01
    63b2:	8d 93       	st	X+, r24
    63b4:	9c 93       	st	X, r25
    63b6:	fe 01       	movw	r30, r28
    63b8:	eb 5a       	subi	r30, 0xAB	; 171
    63ba:	ff 4f       	sbci	r31, 0xFF	; 255
    63bc:	80 81       	ld	r24, Z
    63be:	91 81       	ldd	r25, Z+1	; 0x01
    63c0:	01 97       	sbiw	r24, 0x01	; 1
    63c2:	f1 f7       	brne	.-4      	; 0x63c0 <Lcd_VidDisplayChracterXY+0x1a6>
    63c4:	fe 01       	movw	r30, r28
    63c6:	eb 5a       	subi	r30, 0xAB	; 171
    63c8:	ff 4f       	sbci	r31, 0xFF	; 255
    63ca:	91 83       	std	Z+1, r25	; 0x01
    63cc:	80 83       	st	Z, r24
		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    63ce:	81 e1       	ldi	r24, 0x11	; 17
    63d0:	61 e0       	ldi	r22, 0x01	; 1
    63d2:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    63d6:	fe 01       	movw	r30, r28
    63d8:	ef 5a       	subi	r30, 0xAF	; 175
    63da:	ff 4f       	sbci	r31, 0xFF	; 255
    63dc:	80 e0       	ldi	r24, 0x00	; 0
    63de:	90 e0       	ldi	r25, 0x00	; 0
    63e0:	a0 e8       	ldi	r26, 0x80	; 128
    63e2:	bf e3       	ldi	r27, 0x3F	; 63
    63e4:	80 83       	st	Z, r24
    63e6:	91 83       	std	Z+1, r25	; 0x01
    63e8:	a2 83       	std	Z+2, r26	; 0x02
    63ea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    63ec:	8e 01       	movw	r16, r28
    63ee:	03 5b       	subi	r16, 0xB3	; 179
    63f0:	1f 4f       	sbci	r17, 0xFF	; 255
    63f2:	fe 01       	movw	r30, r28
    63f4:	ef 5a       	subi	r30, 0xAF	; 175
    63f6:	ff 4f       	sbci	r31, 0xFF	; 255
    63f8:	60 81       	ld	r22, Z
    63fa:	71 81       	ldd	r23, Z+1	; 0x01
    63fc:	82 81       	ldd	r24, Z+2	; 0x02
    63fe:	93 81       	ldd	r25, Z+3	; 0x03
    6400:	20 e0       	ldi	r18, 0x00	; 0
    6402:	30 e0       	ldi	r19, 0x00	; 0
    6404:	4a e7       	ldi	r20, 0x7A	; 122
    6406:	53 e4       	ldi	r21, 0x43	; 67
    6408:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    640c:	dc 01       	movw	r26, r24
    640e:	cb 01       	movw	r24, r22
    6410:	f8 01       	movw	r30, r16
    6412:	80 83       	st	Z, r24
    6414:	91 83       	std	Z+1, r25	; 0x01
    6416:	a2 83       	std	Z+2, r26	; 0x02
    6418:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    641a:	fe 01       	movw	r30, r28
    641c:	e3 5b       	subi	r30, 0xB3	; 179
    641e:	ff 4f       	sbci	r31, 0xFF	; 255
    6420:	60 81       	ld	r22, Z
    6422:	71 81       	ldd	r23, Z+1	; 0x01
    6424:	82 81       	ldd	r24, Z+2	; 0x02
    6426:	93 81       	ldd	r25, Z+3	; 0x03
    6428:	20 e0       	ldi	r18, 0x00	; 0
    642a:	30 e0       	ldi	r19, 0x00	; 0
    642c:	40 e8       	ldi	r20, 0x80	; 128
    642e:	5f e3       	ldi	r21, 0x3F	; 63
    6430:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6434:	88 23       	and	r24, r24
    6436:	44 f4       	brge	.+16     	; 0x6448 <Lcd_VidDisplayChracterXY+0x22e>
		__ticks = 1;
    6438:	fe 01       	movw	r30, r28
    643a:	e5 5b       	subi	r30, 0xB5	; 181
    643c:	ff 4f       	sbci	r31, 0xFF	; 255
    643e:	81 e0       	ldi	r24, 0x01	; 1
    6440:	90 e0       	ldi	r25, 0x00	; 0
    6442:	91 83       	std	Z+1, r25	; 0x01
    6444:	80 83       	st	Z, r24
    6446:	64 c0       	rjmp	.+200    	; 0x6510 <Lcd_VidDisplayChracterXY+0x2f6>
	else if (__tmp > 65535)
    6448:	fe 01       	movw	r30, r28
    644a:	e3 5b       	subi	r30, 0xB3	; 179
    644c:	ff 4f       	sbci	r31, 0xFF	; 255
    644e:	60 81       	ld	r22, Z
    6450:	71 81       	ldd	r23, Z+1	; 0x01
    6452:	82 81       	ldd	r24, Z+2	; 0x02
    6454:	93 81       	ldd	r25, Z+3	; 0x03
    6456:	20 e0       	ldi	r18, 0x00	; 0
    6458:	3f ef       	ldi	r19, 0xFF	; 255
    645a:	4f e7       	ldi	r20, 0x7F	; 127
    645c:	57 e4       	ldi	r21, 0x47	; 71
    645e:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    6462:	18 16       	cp	r1, r24
    6464:	0c f0       	brlt	.+2      	; 0x6468 <Lcd_VidDisplayChracterXY+0x24e>
    6466:	43 c0       	rjmp	.+134    	; 0x64ee <Lcd_VidDisplayChracterXY+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6468:	fe 01       	movw	r30, r28
    646a:	ef 5a       	subi	r30, 0xAF	; 175
    646c:	ff 4f       	sbci	r31, 0xFF	; 255
    646e:	60 81       	ld	r22, Z
    6470:	71 81       	ldd	r23, Z+1	; 0x01
    6472:	82 81       	ldd	r24, Z+2	; 0x02
    6474:	93 81       	ldd	r25, Z+3	; 0x03
    6476:	20 e0       	ldi	r18, 0x00	; 0
    6478:	30 e0       	ldi	r19, 0x00	; 0
    647a:	40 e2       	ldi	r20, 0x20	; 32
    647c:	51 e4       	ldi	r21, 0x41	; 65
    647e:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6482:	dc 01       	movw	r26, r24
    6484:	cb 01       	movw	r24, r22
    6486:	8e 01       	movw	r16, r28
    6488:	05 5b       	subi	r16, 0xB5	; 181
    648a:	1f 4f       	sbci	r17, 0xFF	; 255
    648c:	bc 01       	movw	r22, r24
    648e:	cd 01       	movw	r24, r26
    6490:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6494:	dc 01       	movw	r26, r24
    6496:	cb 01       	movw	r24, r22
    6498:	f8 01       	movw	r30, r16
    649a:	91 83       	std	Z+1, r25	; 0x01
    649c:	80 83       	st	Z, r24
    649e:	1f c0       	rjmp	.+62     	; 0x64de <Lcd_VidDisplayChracterXY+0x2c4>
    64a0:	fe 01       	movw	r30, r28
    64a2:	e7 5b       	subi	r30, 0xB7	; 183
    64a4:	ff 4f       	sbci	r31, 0xFF	; 255
    64a6:	89 e1       	ldi	r24, 0x19	; 25
    64a8:	90 e0       	ldi	r25, 0x00	; 0
    64aa:	91 83       	std	Z+1, r25	; 0x01
    64ac:	80 83       	st	Z, r24
    64ae:	fe 01       	movw	r30, r28
    64b0:	e7 5b       	subi	r30, 0xB7	; 183
    64b2:	ff 4f       	sbci	r31, 0xFF	; 255
    64b4:	80 81       	ld	r24, Z
    64b6:	91 81       	ldd	r25, Z+1	; 0x01
    64b8:	01 97       	sbiw	r24, 0x01	; 1
    64ba:	f1 f7       	brne	.-4      	; 0x64b8 <Lcd_VidDisplayChracterXY+0x29e>
    64bc:	fe 01       	movw	r30, r28
    64be:	e7 5b       	subi	r30, 0xB7	; 183
    64c0:	ff 4f       	sbci	r31, 0xFF	; 255
    64c2:	91 83       	std	Z+1, r25	; 0x01
    64c4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    64c6:	de 01       	movw	r26, r28
    64c8:	a5 5b       	subi	r26, 0xB5	; 181
    64ca:	bf 4f       	sbci	r27, 0xFF	; 255
    64cc:	fe 01       	movw	r30, r28
    64ce:	e5 5b       	subi	r30, 0xB5	; 181
    64d0:	ff 4f       	sbci	r31, 0xFF	; 255
    64d2:	80 81       	ld	r24, Z
    64d4:	91 81       	ldd	r25, Z+1	; 0x01
    64d6:	01 97       	sbiw	r24, 0x01	; 1
    64d8:	11 96       	adiw	r26, 0x01	; 1
    64da:	9c 93       	st	X, r25
    64dc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    64de:	fe 01       	movw	r30, r28
    64e0:	e5 5b       	subi	r30, 0xB5	; 181
    64e2:	ff 4f       	sbci	r31, 0xFF	; 255
    64e4:	80 81       	ld	r24, Z
    64e6:	91 81       	ldd	r25, Z+1	; 0x01
    64e8:	00 97       	sbiw	r24, 0x00	; 0
    64ea:	d1 f6       	brne	.-76     	; 0x64a0 <Lcd_VidDisplayChracterXY+0x286>
    64ec:	27 c0       	rjmp	.+78     	; 0x653c <Lcd_VidDisplayChracterXY+0x322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    64ee:	8e 01       	movw	r16, r28
    64f0:	05 5b       	subi	r16, 0xB5	; 181
    64f2:	1f 4f       	sbci	r17, 0xFF	; 255
    64f4:	fe 01       	movw	r30, r28
    64f6:	e3 5b       	subi	r30, 0xB3	; 179
    64f8:	ff 4f       	sbci	r31, 0xFF	; 255
    64fa:	60 81       	ld	r22, Z
    64fc:	71 81       	ldd	r23, Z+1	; 0x01
    64fe:	82 81       	ldd	r24, Z+2	; 0x02
    6500:	93 81       	ldd	r25, Z+3	; 0x03
    6502:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6506:	dc 01       	movw	r26, r24
    6508:	cb 01       	movw	r24, r22
    650a:	f8 01       	movw	r30, r16
    650c:	91 83       	std	Z+1, r25	; 0x01
    650e:	80 83       	st	Z, r24
    6510:	de 01       	movw	r26, r28
    6512:	a9 5b       	subi	r26, 0xB9	; 185
    6514:	bf 4f       	sbci	r27, 0xFF	; 255
    6516:	fe 01       	movw	r30, r28
    6518:	e5 5b       	subi	r30, 0xB5	; 181
    651a:	ff 4f       	sbci	r31, 0xFF	; 255
    651c:	80 81       	ld	r24, Z
    651e:	91 81       	ldd	r25, Z+1	; 0x01
    6520:	8d 93       	st	X+, r24
    6522:	9c 93       	st	X, r25
    6524:	fe 01       	movw	r30, r28
    6526:	e9 5b       	subi	r30, 0xB9	; 185
    6528:	ff 4f       	sbci	r31, 0xFF	; 255
    652a:	80 81       	ld	r24, Z
    652c:	91 81       	ldd	r25, Z+1	; 0x01
    652e:	01 97       	sbiw	r24, 0x01	; 1
    6530:	f1 f7       	brne	.-4      	; 0x652e <Lcd_VidDisplayChracterXY+0x314>
    6532:	fe 01       	movw	r30, r28
    6534:	e9 5b       	subi	r30, 0xB9	; 185
    6536:	ff 4f       	sbci	r31, 0xFF	; 255
    6538:	91 83       	std	Z+1, r25	; 0x01
    653a:	80 83       	st	Z, r24
		_delay_ms(1);
	#if(LCD_DATA_MODE==LCD_FOUR_BIT_MODE)
		Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,4));
    653c:	fe 01       	movw	r30, r28
    653e:	eb 59       	subi	r30, 0x9B	; 155
    6540:	ff 4f       	sbci	r31, 0xFF	; 255
    6542:	80 81       	ld	r24, Z
    6544:	88 2f       	mov	r24, r24
    6546:	90 e0       	ldi	r25, 0x00	; 0
    6548:	80 71       	andi	r24, 0x10	; 16
    654a:	90 70       	andi	r25, 0x00	; 0
    654c:	95 95       	asr	r25
    654e:	87 95       	ror	r24
    6550:	95 95       	asr	r25
    6552:	87 95       	ror	r24
    6554:	95 95       	asr	r25
    6556:	87 95       	ror	r24
    6558:	95 95       	asr	r25
    655a:	87 95       	ror	r24
    655c:	98 2f       	mov	r25, r24
    655e:	82 e1       	ldi	r24, 0x12	; 18
    6560:	69 2f       	mov	r22, r25
    6562:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,5));
    6566:	fe 01       	movw	r30, r28
    6568:	eb 59       	subi	r30, 0x9B	; 155
    656a:	ff 4f       	sbci	r31, 0xFF	; 255
    656c:	80 81       	ld	r24, Z
    656e:	88 2f       	mov	r24, r24
    6570:	90 e0       	ldi	r25, 0x00	; 0
    6572:	80 72       	andi	r24, 0x20	; 32
    6574:	90 70       	andi	r25, 0x00	; 0
    6576:	95 95       	asr	r25
    6578:	87 95       	ror	r24
    657a:	95 95       	asr	r25
    657c:	87 95       	ror	r24
    657e:	95 95       	asr	r25
    6580:	87 95       	ror	r24
    6582:	95 95       	asr	r25
    6584:	87 95       	ror	r24
    6586:	95 95       	asr	r25
    6588:	87 95       	ror	r24
    658a:	98 2f       	mov	r25, r24
    658c:	83 e1       	ldi	r24, 0x13	; 19
    658e:	69 2f       	mov	r22, r25
    6590:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,6));
    6594:	fe 01       	movw	r30, r28
    6596:	eb 59       	subi	r30, 0x9B	; 155
    6598:	ff 4f       	sbci	r31, 0xFF	; 255
    659a:	80 81       	ld	r24, Z
    659c:	88 2f       	mov	r24, r24
    659e:	90 e0       	ldi	r25, 0x00	; 0
    65a0:	80 74       	andi	r24, 0x40	; 64
    65a2:	90 70       	andi	r25, 0x00	; 0
    65a4:	08 2e       	mov	r0, r24
    65a6:	89 2f       	mov	r24, r25
    65a8:	00 0c       	add	r0, r0
    65aa:	88 1f       	adc	r24, r24
    65ac:	99 0b       	sbc	r25, r25
    65ae:	00 0c       	add	r0, r0
    65b0:	88 1f       	adc	r24, r24
    65b2:	99 1f       	adc	r25, r25
    65b4:	98 2f       	mov	r25, r24
    65b6:	84 e1       	ldi	r24, 0x14	; 20
    65b8:	69 2f       	mov	r22, r25
    65ba:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,7));
    65be:	fe 01       	movw	r30, r28
    65c0:	eb 59       	subi	r30, 0x9B	; 155
    65c2:	ff 4f       	sbci	r31, 0xFF	; 255
    65c4:	80 81       	ld	r24, Z
    65c6:	98 2f       	mov	r25, r24
    65c8:	99 1f       	adc	r25, r25
    65ca:	99 27       	eor	r25, r25
    65cc:	99 1f       	adc	r25, r25
    65ce:	85 e1       	ldi	r24, 0x15	; 21
    65d0:	69 2f       	mov	r22, r25
    65d2:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    65d6:	fe 01       	movw	r30, r28
    65d8:	ed 5b       	subi	r30, 0xBD	; 189
    65da:	ff 4f       	sbci	r31, 0xFF	; 255
    65dc:	80 e0       	ldi	r24, 0x00	; 0
    65de:	90 e0       	ldi	r25, 0x00	; 0
    65e0:	a0 e8       	ldi	r26, 0x80	; 128
    65e2:	bf e3       	ldi	r27, 0x3F	; 63
    65e4:	80 83       	st	Z, r24
    65e6:	91 83       	std	Z+1, r25	; 0x01
    65e8:	a2 83       	std	Z+2, r26	; 0x02
    65ea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    65ec:	8e 01       	movw	r16, r28
    65ee:	01 5c       	subi	r16, 0xC1	; 193
    65f0:	1f 4f       	sbci	r17, 0xFF	; 255
    65f2:	fe 01       	movw	r30, r28
    65f4:	ed 5b       	subi	r30, 0xBD	; 189
    65f6:	ff 4f       	sbci	r31, 0xFF	; 255
    65f8:	60 81       	ld	r22, Z
    65fa:	71 81       	ldd	r23, Z+1	; 0x01
    65fc:	82 81       	ldd	r24, Z+2	; 0x02
    65fe:	93 81       	ldd	r25, Z+3	; 0x03
    6600:	20 e0       	ldi	r18, 0x00	; 0
    6602:	30 e0       	ldi	r19, 0x00	; 0
    6604:	4a e7       	ldi	r20, 0x7A	; 122
    6606:	53 e4       	ldi	r21, 0x43	; 67
    6608:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    660c:	dc 01       	movw	r26, r24
    660e:	cb 01       	movw	r24, r22
    6610:	f8 01       	movw	r30, r16
    6612:	80 83       	st	Z, r24
    6614:	91 83       	std	Z+1, r25	; 0x01
    6616:	a2 83       	std	Z+2, r26	; 0x02
    6618:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    661a:	fe 01       	movw	r30, r28
    661c:	ff 96       	adiw	r30, 0x3f	; 63
    661e:	60 81       	ld	r22, Z
    6620:	71 81       	ldd	r23, Z+1	; 0x01
    6622:	82 81       	ldd	r24, Z+2	; 0x02
    6624:	93 81       	ldd	r25, Z+3	; 0x03
    6626:	20 e0       	ldi	r18, 0x00	; 0
    6628:	30 e0       	ldi	r19, 0x00	; 0
    662a:	40 e8       	ldi	r20, 0x80	; 128
    662c:	5f e3       	ldi	r21, 0x3F	; 63
    662e:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6632:	88 23       	and	r24, r24
    6634:	2c f4       	brge	.+10     	; 0x6640 <Lcd_VidDisplayChracterXY+0x426>
		__ticks = 1;
    6636:	81 e0       	ldi	r24, 0x01	; 1
    6638:	90 e0       	ldi	r25, 0x00	; 0
    663a:	9e af       	std	Y+62, r25	; 0x3e
    663c:	8d af       	std	Y+61, r24	; 0x3d
    663e:	46 c0       	rjmp	.+140    	; 0x66cc <Lcd_VidDisplayChracterXY+0x4b2>
	else if (__tmp > 65535)
    6640:	fe 01       	movw	r30, r28
    6642:	ff 96       	adiw	r30, 0x3f	; 63
    6644:	60 81       	ld	r22, Z
    6646:	71 81       	ldd	r23, Z+1	; 0x01
    6648:	82 81       	ldd	r24, Z+2	; 0x02
    664a:	93 81       	ldd	r25, Z+3	; 0x03
    664c:	20 e0       	ldi	r18, 0x00	; 0
    664e:	3f ef       	ldi	r19, 0xFF	; 255
    6650:	4f e7       	ldi	r20, 0x7F	; 127
    6652:	57 e4       	ldi	r21, 0x47	; 71
    6654:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    6658:	18 16       	cp	r1, r24
    665a:	64 f5       	brge	.+88     	; 0x66b4 <Lcd_VidDisplayChracterXY+0x49a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    665c:	fe 01       	movw	r30, r28
    665e:	ed 5b       	subi	r30, 0xBD	; 189
    6660:	ff 4f       	sbci	r31, 0xFF	; 255
    6662:	60 81       	ld	r22, Z
    6664:	71 81       	ldd	r23, Z+1	; 0x01
    6666:	82 81       	ldd	r24, Z+2	; 0x02
    6668:	93 81       	ldd	r25, Z+3	; 0x03
    666a:	20 e0       	ldi	r18, 0x00	; 0
    666c:	30 e0       	ldi	r19, 0x00	; 0
    666e:	40 e2       	ldi	r20, 0x20	; 32
    6670:	51 e4       	ldi	r21, 0x41	; 65
    6672:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6676:	dc 01       	movw	r26, r24
    6678:	cb 01       	movw	r24, r22
    667a:	bc 01       	movw	r22, r24
    667c:	cd 01       	movw	r24, r26
    667e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6682:	dc 01       	movw	r26, r24
    6684:	cb 01       	movw	r24, r22
    6686:	9e af       	std	Y+62, r25	; 0x3e
    6688:	8d af       	std	Y+61, r24	; 0x3d
    668a:	0f c0       	rjmp	.+30     	; 0x66aa <Lcd_VidDisplayChracterXY+0x490>
    668c:	89 e1       	ldi	r24, 0x19	; 25
    668e:	90 e0       	ldi	r25, 0x00	; 0
    6690:	9c af       	std	Y+60, r25	; 0x3c
    6692:	8b af       	std	Y+59, r24	; 0x3b
    6694:	8b ad       	ldd	r24, Y+59	; 0x3b
    6696:	9c ad       	ldd	r25, Y+60	; 0x3c
    6698:	01 97       	sbiw	r24, 0x01	; 1
    669a:	f1 f7       	brne	.-4      	; 0x6698 <Lcd_VidDisplayChracterXY+0x47e>
    669c:	9c af       	std	Y+60, r25	; 0x3c
    669e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    66a0:	8d ad       	ldd	r24, Y+61	; 0x3d
    66a2:	9e ad       	ldd	r25, Y+62	; 0x3e
    66a4:	01 97       	sbiw	r24, 0x01	; 1
    66a6:	9e af       	std	Y+62, r25	; 0x3e
    66a8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    66aa:	8d ad       	ldd	r24, Y+61	; 0x3d
    66ac:	9e ad       	ldd	r25, Y+62	; 0x3e
    66ae:	00 97       	sbiw	r24, 0x00	; 0
    66b0:	69 f7       	brne	.-38     	; 0x668c <Lcd_VidDisplayChracterXY+0x472>
    66b2:	16 c0       	rjmp	.+44     	; 0x66e0 <Lcd_VidDisplayChracterXY+0x4c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    66b4:	fe 01       	movw	r30, r28
    66b6:	ff 96       	adiw	r30, 0x3f	; 63
    66b8:	60 81       	ld	r22, Z
    66ba:	71 81       	ldd	r23, Z+1	; 0x01
    66bc:	82 81       	ldd	r24, Z+2	; 0x02
    66be:	93 81       	ldd	r25, Z+3	; 0x03
    66c0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    66c4:	dc 01       	movw	r26, r24
    66c6:	cb 01       	movw	r24, r22
    66c8:	9e af       	std	Y+62, r25	; 0x3e
    66ca:	8d af       	std	Y+61, r24	; 0x3d
    66cc:	8d ad       	ldd	r24, Y+61	; 0x3d
    66ce:	9e ad       	ldd	r25, Y+62	; 0x3e
    66d0:	9a af       	std	Y+58, r25	; 0x3a
    66d2:	89 af       	std	Y+57, r24	; 0x39
    66d4:	89 ad       	ldd	r24, Y+57	; 0x39
    66d6:	9a ad       	ldd	r25, Y+58	; 0x3a
    66d8:	01 97       	sbiw	r24, 0x01	; 1
    66da:	f1 f7       	brne	.-4      	; 0x66d8 <Lcd_VidDisplayChracterXY+0x4be>
    66dc:	9a af       	std	Y+58, r25	; 0x3a
    66de:	89 af       	std	Y+57, r24	; 0x39

		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    66e0:	81 e1       	ldi	r24, 0x11	; 17
    66e2:	60 e0       	ldi	r22, 0x00	; 0
    66e4:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    66e8:	80 e0       	ldi	r24, 0x00	; 0
    66ea:	90 e0       	ldi	r25, 0x00	; 0
    66ec:	a0 e8       	ldi	r26, 0x80	; 128
    66ee:	bf e3       	ldi	r27, 0x3F	; 63
    66f0:	8d ab       	std	Y+53, r24	; 0x35
    66f2:	9e ab       	std	Y+54, r25	; 0x36
    66f4:	af ab       	std	Y+55, r26	; 0x37
    66f6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    66f8:	6d a9       	ldd	r22, Y+53	; 0x35
    66fa:	7e a9       	ldd	r23, Y+54	; 0x36
    66fc:	8f a9       	ldd	r24, Y+55	; 0x37
    66fe:	98 ad       	ldd	r25, Y+56	; 0x38
    6700:	20 e0       	ldi	r18, 0x00	; 0
    6702:	30 e0       	ldi	r19, 0x00	; 0
    6704:	4a e7       	ldi	r20, 0x7A	; 122
    6706:	53 e4       	ldi	r21, 0x43	; 67
    6708:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    670c:	dc 01       	movw	r26, r24
    670e:	cb 01       	movw	r24, r22
    6710:	89 ab       	std	Y+49, r24	; 0x31
    6712:	9a ab       	std	Y+50, r25	; 0x32
    6714:	ab ab       	std	Y+51, r26	; 0x33
    6716:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    6718:	69 a9       	ldd	r22, Y+49	; 0x31
    671a:	7a a9       	ldd	r23, Y+50	; 0x32
    671c:	8b a9       	ldd	r24, Y+51	; 0x33
    671e:	9c a9       	ldd	r25, Y+52	; 0x34
    6720:	20 e0       	ldi	r18, 0x00	; 0
    6722:	30 e0       	ldi	r19, 0x00	; 0
    6724:	40 e8       	ldi	r20, 0x80	; 128
    6726:	5f e3       	ldi	r21, 0x3F	; 63
    6728:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    672c:	88 23       	and	r24, r24
    672e:	2c f4       	brge	.+10     	; 0x673a <Lcd_VidDisplayChracterXY+0x520>
		__ticks = 1;
    6730:	81 e0       	ldi	r24, 0x01	; 1
    6732:	90 e0       	ldi	r25, 0x00	; 0
    6734:	98 ab       	std	Y+48, r25	; 0x30
    6736:	8f a7       	std	Y+47, r24	; 0x2f
    6738:	3f c0       	rjmp	.+126    	; 0x67b8 <Lcd_VidDisplayChracterXY+0x59e>
	else if (__tmp > 65535)
    673a:	69 a9       	ldd	r22, Y+49	; 0x31
    673c:	7a a9       	ldd	r23, Y+50	; 0x32
    673e:	8b a9       	ldd	r24, Y+51	; 0x33
    6740:	9c a9       	ldd	r25, Y+52	; 0x34
    6742:	20 e0       	ldi	r18, 0x00	; 0
    6744:	3f ef       	ldi	r19, 0xFF	; 255
    6746:	4f e7       	ldi	r20, 0x7F	; 127
    6748:	57 e4       	ldi	r21, 0x47	; 71
    674a:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    674e:	18 16       	cp	r1, r24
    6750:	4c f5       	brge	.+82     	; 0x67a4 <Lcd_VidDisplayChracterXY+0x58a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6752:	6d a9       	ldd	r22, Y+53	; 0x35
    6754:	7e a9       	ldd	r23, Y+54	; 0x36
    6756:	8f a9       	ldd	r24, Y+55	; 0x37
    6758:	98 ad       	ldd	r25, Y+56	; 0x38
    675a:	20 e0       	ldi	r18, 0x00	; 0
    675c:	30 e0       	ldi	r19, 0x00	; 0
    675e:	40 e2       	ldi	r20, 0x20	; 32
    6760:	51 e4       	ldi	r21, 0x41	; 65
    6762:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6766:	dc 01       	movw	r26, r24
    6768:	cb 01       	movw	r24, r22
    676a:	bc 01       	movw	r22, r24
    676c:	cd 01       	movw	r24, r26
    676e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6772:	dc 01       	movw	r26, r24
    6774:	cb 01       	movw	r24, r22
    6776:	98 ab       	std	Y+48, r25	; 0x30
    6778:	8f a7       	std	Y+47, r24	; 0x2f
    677a:	0f c0       	rjmp	.+30     	; 0x679a <Lcd_VidDisplayChracterXY+0x580>
    677c:	89 e1       	ldi	r24, 0x19	; 25
    677e:	90 e0       	ldi	r25, 0x00	; 0
    6780:	9e a7       	std	Y+46, r25	; 0x2e
    6782:	8d a7       	std	Y+45, r24	; 0x2d
    6784:	8d a5       	ldd	r24, Y+45	; 0x2d
    6786:	9e a5       	ldd	r25, Y+46	; 0x2e
    6788:	01 97       	sbiw	r24, 0x01	; 1
    678a:	f1 f7       	brne	.-4      	; 0x6788 <Lcd_VidDisplayChracterXY+0x56e>
    678c:	9e a7       	std	Y+46, r25	; 0x2e
    678e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6790:	8f a5       	ldd	r24, Y+47	; 0x2f
    6792:	98 a9       	ldd	r25, Y+48	; 0x30
    6794:	01 97       	sbiw	r24, 0x01	; 1
    6796:	98 ab       	std	Y+48, r25	; 0x30
    6798:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    679a:	8f a5       	ldd	r24, Y+47	; 0x2f
    679c:	98 a9       	ldd	r25, Y+48	; 0x30
    679e:	00 97       	sbiw	r24, 0x00	; 0
    67a0:	69 f7       	brne	.-38     	; 0x677c <Lcd_VidDisplayChracterXY+0x562>
    67a2:	14 c0       	rjmp	.+40     	; 0x67cc <Lcd_VidDisplayChracterXY+0x5b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    67a4:	69 a9       	ldd	r22, Y+49	; 0x31
    67a6:	7a a9       	ldd	r23, Y+50	; 0x32
    67a8:	8b a9       	ldd	r24, Y+51	; 0x33
    67aa:	9c a9       	ldd	r25, Y+52	; 0x34
    67ac:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    67b0:	dc 01       	movw	r26, r24
    67b2:	cb 01       	movw	r24, r22
    67b4:	98 ab       	std	Y+48, r25	; 0x30
    67b6:	8f a7       	std	Y+47, r24	; 0x2f
    67b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    67ba:	98 a9       	ldd	r25, Y+48	; 0x30
    67bc:	9c a7       	std	Y+44, r25	; 0x2c
    67be:	8b a7       	std	Y+43, r24	; 0x2b
    67c0:	8b a5       	ldd	r24, Y+43	; 0x2b
    67c2:	9c a5       	ldd	r25, Y+44	; 0x2c
    67c4:	01 97       	sbiw	r24, 0x01	; 1
    67c6:	f1 f7       	brne	.-4      	; 0x67c4 <Lcd_VidDisplayChracterXY+0x5aa>
    67c8:	9c a7       	std	Y+44, r25	; 0x2c
    67ca:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
    67cc:	81 e1       	ldi	r24, 0x11	; 17
    67ce:	61 e0       	ldi	r22, 0x01	; 1
    67d0:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    67d4:	80 e0       	ldi	r24, 0x00	; 0
    67d6:	90 e0       	ldi	r25, 0x00	; 0
    67d8:	a0 e8       	ldi	r26, 0x80	; 128
    67da:	bf e3       	ldi	r27, 0x3F	; 63
    67dc:	8f a3       	std	Y+39, r24	; 0x27
    67de:	98 a7       	std	Y+40, r25	; 0x28
    67e0:	a9 a7       	std	Y+41, r26	; 0x29
    67e2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    67e4:	6f a1       	ldd	r22, Y+39	; 0x27
    67e6:	78 a5       	ldd	r23, Y+40	; 0x28
    67e8:	89 a5       	ldd	r24, Y+41	; 0x29
    67ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    67ec:	20 e0       	ldi	r18, 0x00	; 0
    67ee:	30 e0       	ldi	r19, 0x00	; 0
    67f0:	4a e7       	ldi	r20, 0x7A	; 122
    67f2:	53 e4       	ldi	r21, 0x43	; 67
    67f4:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    67f8:	dc 01       	movw	r26, r24
    67fa:	cb 01       	movw	r24, r22
    67fc:	8b a3       	std	Y+35, r24	; 0x23
    67fe:	9c a3       	std	Y+36, r25	; 0x24
    6800:	ad a3       	std	Y+37, r26	; 0x25
    6802:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    6804:	6b a1       	ldd	r22, Y+35	; 0x23
    6806:	7c a1       	ldd	r23, Y+36	; 0x24
    6808:	8d a1       	ldd	r24, Y+37	; 0x25
    680a:	9e a1       	ldd	r25, Y+38	; 0x26
    680c:	20 e0       	ldi	r18, 0x00	; 0
    680e:	30 e0       	ldi	r19, 0x00	; 0
    6810:	40 e8       	ldi	r20, 0x80	; 128
    6812:	5f e3       	ldi	r21, 0x3F	; 63
    6814:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6818:	88 23       	and	r24, r24
    681a:	2c f4       	brge	.+10     	; 0x6826 <Lcd_VidDisplayChracterXY+0x60c>
		__ticks = 1;
    681c:	81 e0       	ldi	r24, 0x01	; 1
    681e:	90 e0       	ldi	r25, 0x00	; 0
    6820:	9a a3       	std	Y+34, r25	; 0x22
    6822:	89 a3       	std	Y+33, r24	; 0x21
    6824:	3f c0       	rjmp	.+126    	; 0x68a4 <Lcd_VidDisplayChracterXY+0x68a>
	else if (__tmp > 65535)
    6826:	6b a1       	ldd	r22, Y+35	; 0x23
    6828:	7c a1       	ldd	r23, Y+36	; 0x24
    682a:	8d a1       	ldd	r24, Y+37	; 0x25
    682c:	9e a1       	ldd	r25, Y+38	; 0x26
    682e:	20 e0       	ldi	r18, 0x00	; 0
    6830:	3f ef       	ldi	r19, 0xFF	; 255
    6832:	4f e7       	ldi	r20, 0x7F	; 127
    6834:	57 e4       	ldi	r21, 0x47	; 71
    6836:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    683a:	18 16       	cp	r1, r24
    683c:	4c f5       	brge	.+82     	; 0x6890 <Lcd_VidDisplayChracterXY+0x676>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    683e:	6f a1       	ldd	r22, Y+39	; 0x27
    6840:	78 a5       	ldd	r23, Y+40	; 0x28
    6842:	89 a5       	ldd	r24, Y+41	; 0x29
    6844:	9a a5       	ldd	r25, Y+42	; 0x2a
    6846:	20 e0       	ldi	r18, 0x00	; 0
    6848:	30 e0       	ldi	r19, 0x00	; 0
    684a:	40 e2       	ldi	r20, 0x20	; 32
    684c:	51 e4       	ldi	r21, 0x41	; 65
    684e:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6852:	dc 01       	movw	r26, r24
    6854:	cb 01       	movw	r24, r22
    6856:	bc 01       	movw	r22, r24
    6858:	cd 01       	movw	r24, r26
    685a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    685e:	dc 01       	movw	r26, r24
    6860:	cb 01       	movw	r24, r22
    6862:	9a a3       	std	Y+34, r25	; 0x22
    6864:	89 a3       	std	Y+33, r24	; 0x21
    6866:	0f c0       	rjmp	.+30     	; 0x6886 <Lcd_VidDisplayChracterXY+0x66c>
    6868:	89 e1       	ldi	r24, 0x19	; 25
    686a:	90 e0       	ldi	r25, 0x00	; 0
    686c:	98 a3       	std	Y+32, r25	; 0x20
    686e:	8f 8f       	std	Y+31, r24	; 0x1f
    6870:	8f 8d       	ldd	r24, Y+31	; 0x1f
    6872:	98 a1       	ldd	r25, Y+32	; 0x20
    6874:	01 97       	sbiw	r24, 0x01	; 1
    6876:	f1 f7       	brne	.-4      	; 0x6874 <Lcd_VidDisplayChracterXY+0x65a>
    6878:	98 a3       	std	Y+32, r25	; 0x20
    687a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    687c:	89 a1       	ldd	r24, Y+33	; 0x21
    687e:	9a a1       	ldd	r25, Y+34	; 0x22
    6880:	01 97       	sbiw	r24, 0x01	; 1
    6882:	9a a3       	std	Y+34, r25	; 0x22
    6884:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6886:	89 a1       	ldd	r24, Y+33	; 0x21
    6888:	9a a1       	ldd	r25, Y+34	; 0x22
    688a:	00 97       	sbiw	r24, 0x00	; 0
    688c:	69 f7       	brne	.-38     	; 0x6868 <Lcd_VidDisplayChracterXY+0x64e>
    688e:	14 c0       	rjmp	.+40     	; 0x68b8 <Lcd_VidDisplayChracterXY+0x69e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6890:	6b a1       	ldd	r22, Y+35	; 0x23
    6892:	7c a1       	ldd	r23, Y+36	; 0x24
    6894:	8d a1       	ldd	r24, Y+37	; 0x25
    6896:	9e a1       	ldd	r25, Y+38	; 0x26
    6898:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    689c:	dc 01       	movw	r26, r24
    689e:	cb 01       	movw	r24, r22
    68a0:	9a a3       	std	Y+34, r25	; 0x22
    68a2:	89 a3       	std	Y+33, r24	; 0x21
    68a4:	89 a1       	ldd	r24, Y+33	; 0x21
    68a6:	9a a1       	ldd	r25, Y+34	; 0x22
    68a8:	9e 8f       	std	Y+30, r25	; 0x1e
    68aa:	8d 8f       	std	Y+29, r24	; 0x1d
    68ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
    68ae:	9e 8d       	ldd	r25, Y+30	; 0x1e
    68b0:	01 97       	sbiw	r24, 0x01	; 1
    68b2:	f1 f7       	brne	.-4      	; 0x68b0 <Lcd_VidDisplayChracterXY+0x696>
    68b4:	9e 8f       	std	Y+30, r25	; 0x1e
    68b6:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);


		Dio_enuWriteChannel(LCD_DATA_PIN4,GET_BIT(Copy_u8Command,0));
    68b8:	fe 01       	movw	r30, r28
    68ba:	eb 59       	subi	r30, 0x9B	; 155
    68bc:	ff 4f       	sbci	r31, 0xFF	; 255
    68be:	80 81       	ld	r24, Z
    68c0:	98 2f       	mov	r25, r24
    68c2:	91 70       	andi	r25, 0x01	; 1
    68c4:	82 e1       	ldi	r24, 0x12	; 18
    68c6:	69 2f       	mov	r22, r25
    68c8:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN5,GET_BIT(Copy_u8Command,1));
    68cc:	fe 01       	movw	r30, r28
    68ce:	eb 59       	subi	r30, 0x9B	; 155
    68d0:	ff 4f       	sbci	r31, 0xFF	; 255
    68d2:	80 81       	ld	r24, Z
    68d4:	88 2f       	mov	r24, r24
    68d6:	90 e0       	ldi	r25, 0x00	; 0
    68d8:	82 70       	andi	r24, 0x02	; 2
    68da:	90 70       	andi	r25, 0x00	; 0
    68dc:	95 95       	asr	r25
    68de:	87 95       	ror	r24
    68e0:	98 2f       	mov	r25, r24
    68e2:	83 e1       	ldi	r24, 0x13	; 19
    68e4:	69 2f       	mov	r22, r25
    68e6:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN6,GET_BIT(Copy_u8Command,2));
    68ea:	fe 01       	movw	r30, r28
    68ec:	eb 59       	subi	r30, 0x9B	; 155
    68ee:	ff 4f       	sbci	r31, 0xFF	; 255
    68f0:	80 81       	ld	r24, Z
    68f2:	88 2f       	mov	r24, r24
    68f4:	90 e0       	ldi	r25, 0x00	; 0
    68f6:	84 70       	andi	r24, 0x04	; 4
    68f8:	90 70       	andi	r25, 0x00	; 0
    68fa:	95 95       	asr	r25
    68fc:	87 95       	ror	r24
    68fe:	95 95       	asr	r25
    6900:	87 95       	ror	r24
    6902:	98 2f       	mov	r25, r24
    6904:	84 e1       	ldi	r24, 0x14	; 20
    6906:	69 2f       	mov	r22, r25
    6908:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
		Dio_enuWriteChannel(LCD_DATA_PIN7,GET_BIT(Copy_u8Command,3));
    690c:	fe 01       	movw	r30, r28
    690e:	eb 59       	subi	r30, 0x9B	; 155
    6910:	ff 4f       	sbci	r31, 0xFF	; 255
    6912:	80 81       	ld	r24, Z
    6914:	88 2f       	mov	r24, r24
    6916:	90 e0       	ldi	r25, 0x00	; 0
    6918:	88 70       	andi	r24, 0x08	; 8
    691a:	90 70       	andi	r25, 0x00	; 0
    691c:	95 95       	asr	r25
    691e:	87 95       	ror	r24
    6920:	95 95       	asr	r25
    6922:	87 95       	ror	r24
    6924:	95 95       	asr	r25
    6926:	87 95       	ror	r24
    6928:	98 2f       	mov	r25, r24
    692a:	85 e1       	ldi	r24, 0x15	; 21
    692c:	69 2f       	mov	r22, r25
    692e:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    6932:	80 e0       	ldi	r24, 0x00	; 0
    6934:	90 e0       	ldi	r25, 0x00	; 0
    6936:	a0 e8       	ldi	r26, 0x80	; 128
    6938:	bf e3       	ldi	r27, 0x3F	; 63
    693a:	89 8f       	std	Y+25, r24	; 0x19
    693c:	9a 8f       	std	Y+26, r25	; 0x1a
    693e:	ab 8f       	std	Y+27, r26	; 0x1b
    6940:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6942:	69 8d       	ldd	r22, Y+25	; 0x19
    6944:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6946:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6948:	9c 8d       	ldd	r25, Y+28	; 0x1c
    694a:	20 e0       	ldi	r18, 0x00	; 0
    694c:	30 e0       	ldi	r19, 0x00	; 0
    694e:	4a e7       	ldi	r20, 0x7A	; 122
    6950:	53 e4       	ldi	r21, 0x43	; 67
    6952:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6956:	dc 01       	movw	r26, r24
    6958:	cb 01       	movw	r24, r22
    695a:	8d 8b       	std	Y+21, r24	; 0x15
    695c:	9e 8b       	std	Y+22, r25	; 0x16
    695e:	af 8b       	std	Y+23, r26	; 0x17
    6960:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    6962:	6d 89       	ldd	r22, Y+21	; 0x15
    6964:	7e 89       	ldd	r23, Y+22	; 0x16
    6966:	8f 89       	ldd	r24, Y+23	; 0x17
    6968:	98 8d       	ldd	r25, Y+24	; 0x18
    696a:	20 e0       	ldi	r18, 0x00	; 0
    696c:	30 e0       	ldi	r19, 0x00	; 0
    696e:	40 e8       	ldi	r20, 0x80	; 128
    6970:	5f e3       	ldi	r21, 0x3F	; 63
    6972:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6976:	88 23       	and	r24, r24
    6978:	2c f4       	brge	.+10     	; 0x6984 <Lcd_VidDisplayChracterXY+0x76a>
		__ticks = 1;
    697a:	81 e0       	ldi	r24, 0x01	; 1
    697c:	90 e0       	ldi	r25, 0x00	; 0
    697e:	9c 8b       	std	Y+20, r25	; 0x14
    6980:	8b 8b       	std	Y+19, r24	; 0x13
    6982:	3f c0       	rjmp	.+126    	; 0x6a02 <Lcd_VidDisplayChracterXY+0x7e8>
	else if (__tmp > 65535)
    6984:	6d 89       	ldd	r22, Y+21	; 0x15
    6986:	7e 89       	ldd	r23, Y+22	; 0x16
    6988:	8f 89       	ldd	r24, Y+23	; 0x17
    698a:	98 8d       	ldd	r25, Y+24	; 0x18
    698c:	20 e0       	ldi	r18, 0x00	; 0
    698e:	3f ef       	ldi	r19, 0xFF	; 255
    6990:	4f e7       	ldi	r20, 0x7F	; 127
    6992:	57 e4       	ldi	r21, 0x47	; 71
    6994:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    6998:	18 16       	cp	r1, r24
    699a:	4c f5       	brge	.+82     	; 0x69ee <Lcd_VidDisplayChracterXY+0x7d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    699c:	69 8d       	ldd	r22, Y+25	; 0x19
    699e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    69a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    69a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    69a4:	20 e0       	ldi	r18, 0x00	; 0
    69a6:	30 e0       	ldi	r19, 0x00	; 0
    69a8:	40 e2       	ldi	r20, 0x20	; 32
    69aa:	51 e4       	ldi	r21, 0x41	; 65
    69ac:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    69b0:	dc 01       	movw	r26, r24
    69b2:	cb 01       	movw	r24, r22
    69b4:	bc 01       	movw	r22, r24
    69b6:	cd 01       	movw	r24, r26
    69b8:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    69bc:	dc 01       	movw	r26, r24
    69be:	cb 01       	movw	r24, r22
    69c0:	9c 8b       	std	Y+20, r25	; 0x14
    69c2:	8b 8b       	std	Y+19, r24	; 0x13
    69c4:	0f c0       	rjmp	.+30     	; 0x69e4 <Lcd_VidDisplayChracterXY+0x7ca>
    69c6:	89 e1       	ldi	r24, 0x19	; 25
    69c8:	90 e0       	ldi	r25, 0x00	; 0
    69ca:	9a 8b       	std	Y+18, r25	; 0x12
    69cc:	89 8b       	std	Y+17, r24	; 0x11
    69ce:	89 89       	ldd	r24, Y+17	; 0x11
    69d0:	9a 89       	ldd	r25, Y+18	; 0x12
    69d2:	01 97       	sbiw	r24, 0x01	; 1
    69d4:	f1 f7       	brne	.-4      	; 0x69d2 <Lcd_VidDisplayChracterXY+0x7b8>
    69d6:	9a 8b       	std	Y+18, r25	; 0x12
    69d8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    69da:	8b 89       	ldd	r24, Y+19	; 0x13
    69dc:	9c 89       	ldd	r25, Y+20	; 0x14
    69de:	01 97       	sbiw	r24, 0x01	; 1
    69e0:	9c 8b       	std	Y+20, r25	; 0x14
    69e2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    69e4:	8b 89       	ldd	r24, Y+19	; 0x13
    69e6:	9c 89       	ldd	r25, Y+20	; 0x14
    69e8:	00 97       	sbiw	r24, 0x00	; 0
    69ea:	69 f7       	brne	.-38     	; 0x69c6 <Lcd_VidDisplayChracterXY+0x7ac>
    69ec:	14 c0       	rjmp	.+40     	; 0x6a16 <Lcd_VidDisplayChracterXY+0x7fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    69ee:	6d 89       	ldd	r22, Y+21	; 0x15
    69f0:	7e 89       	ldd	r23, Y+22	; 0x16
    69f2:	8f 89       	ldd	r24, Y+23	; 0x17
    69f4:	98 8d       	ldd	r25, Y+24	; 0x18
    69f6:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    69fa:	dc 01       	movw	r26, r24
    69fc:	cb 01       	movw	r24, r22
    69fe:	9c 8b       	std	Y+20, r25	; 0x14
    6a00:	8b 8b       	std	Y+19, r24	; 0x13
    6a02:	8b 89       	ldd	r24, Y+19	; 0x13
    6a04:	9c 89       	ldd	r25, Y+20	; 0x14
    6a06:	98 8b       	std	Y+16, r25	; 0x10
    6a08:	8f 87       	std	Y+15, r24	; 0x0f
    6a0a:	8f 85       	ldd	r24, Y+15	; 0x0f
    6a0c:	98 89       	ldd	r25, Y+16	; 0x10
    6a0e:	01 97       	sbiw	r24, 0x01	; 1
    6a10:	f1 f7       	brne	.-4      	; 0x6a0e <Lcd_VidDisplayChracterXY+0x7f4>
    6a12:	98 8b       	std	Y+16, r25	; 0x10
    6a14:	8f 87       	std	Y+15, r24	; 0x0f

		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
    6a16:	81 e1       	ldi	r24, 0x11	; 17
    6a18:	60 e0       	ldi	r22, 0x00	; 0
    6a1a:	0e 94 94 18 	call	0x3128	; 0x3128 <Dio_enuWriteChannel>
    6a1e:	80 e0       	ldi	r24, 0x00	; 0
    6a20:	90 e0       	ldi	r25, 0x00	; 0
    6a22:	a0 e8       	ldi	r26, 0x80	; 128
    6a24:	bf e3       	ldi	r27, 0x3F	; 63
    6a26:	8b 87       	std	Y+11, r24	; 0x0b
    6a28:	9c 87       	std	Y+12, r25	; 0x0c
    6a2a:	ad 87       	std	Y+13, r26	; 0x0d
    6a2c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6a2e:	6b 85       	ldd	r22, Y+11	; 0x0b
    6a30:	7c 85       	ldd	r23, Y+12	; 0x0c
    6a32:	8d 85       	ldd	r24, Y+13	; 0x0d
    6a34:	9e 85       	ldd	r25, Y+14	; 0x0e
    6a36:	20 e0       	ldi	r18, 0x00	; 0
    6a38:	30 e0       	ldi	r19, 0x00	; 0
    6a3a:	4a e7       	ldi	r20, 0x7A	; 122
    6a3c:	53 e4       	ldi	r21, 0x43	; 67
    6a3e:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6a42:	dc 01       	movw	r26, r24
    6a44:	cb 01       	movw	r24, r22
    6a46:	8f 83       	std	Y+7, r24	; 0x07
    6a48:	98 87       	std	Y+8, r25	; 0x08
    6a4a:	a9 87       	std	Y+9, r26	; 0x09
    6a4c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6a4e:	6f 81       	ldd	r22, Y+7	; 0x07
    6a50:	78 85       	ldd	r23, Y+8	; 0x08
    6a52:	89 85       	ldd	r24, Y+9	; 0x09
    6a54:	9a 85       	ldd	r25, Y+10	; 0x0a
    6a56:	20 e0       	ldi	r18, 0x00	; 0
    6a58:	30 e0       	ldi	r19, 0x00	; 0
    6a5a:	40 e8       	ldi	r20, 0x80	; 128
    6a5c:	5f e3       	ldi	r21, 0x3F	; 63
    6a5e:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6a62:	88 23       	and	r24, r24
    6a64:	2c f4       	brge	.+10     	; 0x6a70 <Lcd_VidDisplayChracterXY+0x856>
		__ticks = 1;
    6a66:	81 e0       	ldi	r24, 0x01	; 1
    6a68:	90 e0       	ldi	r25, 0x00	; 0
    6a6a:	9e 83       	std	Y+6, r25	; 0x06
    6a6c:	8d 83       	std	Y+5, r24	; 0x05
    6a6e:	3f c0       	rjmp	.+126    	; 0x6aee <Lcd_VidDisplayChracterXY+0x8d4>
	else if (__tmp > 65535)
    6a70:	6f 81       	ldd	r22, Y+7	; 0x07
    6a72:	78 85       	ldd	r23, Y+8	; 0x08
    6a74:	89 85       	ldd	r24, Y+9	; 0x09
    6a76:	9a 85       	ldd	r25, Y+10	; 0x0a
    6a78:	20 e0       	ldi	r18, 0x00	; 0
    6a7a:	3f ef       	ldi	r19, 0xFF	; 255
    6a7c:	4f e7       	ldi	r20, 0x7F	; 127
    6a7e:	57 e4       	ldi	r21, 0x47	; 71
    6a80:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    6a84:	18 16       	cp	r1, r24
    6a86:	4c f5       	brge	.+82     	; 0x6ada <Lcd_VidDisplayChracterXY+0x8c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6a88:	6b 85       	ldd	r22, Y+11	; 0x0b
    6a8a:	7c 85       	ldd	r23, Y+12	; 0x0c
    6a8c:	8d 85       	ldd	r24, Y+13	; 0x0d
    6a8e:	9e 85       	ldd	r25, Y+14	; 0x0e
    6a90:	20 e0       	ldi	r18, 0x00	; 0
    6a92:	30 e0       	ldi	r19, 0x00	; 0
    6a94:	40 e2       	ldi	r20, 0x20	; 32
    6a96:	51 e4       	ldi	r21, 0x41	; 65
    6a98:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6a9c:	dc 01       	movw	r26, r24
    6a9e:	cb 01       	movw	r24, r22
    6aa0:	bc 01       	movw	r22, r24
    6aa2:	cd 01       	movw	r24, r26
    6aa4:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6aa8:	dc 01       	movw	r26, r24
    6aaa:	cb 01       	movw	r24, r22
    6aac:	9e 83       	std	Y+6, r25	; 0x06
    6aae:	8d 83       	std	Y+5, r24	; 0x05
    6ab0:	0f c0       	rjmp	.+30     	; 0x6ad0 <Lcd_VidDisplayChracterXY+0x8b6>
    6ab2:	89 e1       	ldi	r24, 0x19	; 25
    6ab4:	90 e0       	ldi	r25, 0x00	; 0
    6ab6:	9c 83       	std	Y+4, r25	; 0x04
    6ab8:	8b 83       	std	Y+3, r24	; 0x03
    6aba:	8b 81       	ldd	r24, Y+3	; 0x03
    6abc:	9c 81       	ldd	r25, Y+4	; 0x04
    6abe:	01 97       	sbiw	r24, 0x01	; 1
    6ac0:	f1 f7       	brne	.-4      	; 0x6abe <Lcd_VidDisplayChracterXY+0x8a4>
    6ac2:	9c 83       	std	Y+4, r25	; 0x04
    6ac4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6ac6:	8d 81       	ldd	r24, Y+5	; 0x05
    6ac8:	9e 81       	ldd	r25, Y+6	; 0x06
    6aca:	01 97       	sbiw	r24, 0x01	; 1
    6acc:	9e 83       	std	Y+6, r25	; 0x06
    6ace:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6ad0:	8d 81       	ldd	r24, Y+5	; 0x05
    6ad2:	9e 81       	ldd	r25, Y+6	; 0x06
    6ad4:	00 97       	sbiw	r24, 0x00	; 0
    6ad6:	69 f7       	brne	.-38     	; 0x6ab2 <Lcd_VidDisplayChracterXY+0x898>
    6ad8:	14 c0       	rjmp	.+40     	; 0x6b02 <Lcd_VidDisplayChracterXY+0x8e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6ada:	6f 81       	ldd	r22, Y+7	; 0x07
    6adc:	78 85       	ldd	r23, Y+8	; 0x08
    6ade:	89 85       	ldd	r24, Y+9	; 0x09
    6ae0:	9a 85       	ldd	r25, Y+10	; 0x0a
    6ae2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6ae6:	dc 01       	movw	r26, r24
    6ae8:	cb 01       	movw	r24, r22
    6aea:	9e 83       	std	Y+6, r25	; 0x06
    6aec:	8d 83       	std	Y+5, r24	; 0x05
    6aee:	8d 81       	ldd	r24, Y+5	; 0x05
    6af0:	9e 81       	ldd	r25, Y+6	; 0x06
    6af2:	9a 83       	std	Y+2, r25	; 0x02
    6af4:	89 83       	std	Y+1, r24	; 0x01
    6af6:	89 81       	ldd	r24, Y+1	; 0x01
    6af8:	9a 81       	ldd	r25, Y+2	; 0x02
    6afa:	01 97       	sbiw	r24, 0x01	; 1
    6afc:	f1 f7       	brne	.-4      	; 0x6afa <Lcd_VidDisplayChracterXY+0x8e0>
    6afe:	9a 83       	std	Y+2, r25	; 0x02
    6b00:	89 83       	std	Y+1, r24	; 0x01
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_HIGH);
		_delay_ms(1);
		Dio_enuWriteChannel(LCD_E_PIN_NUM,DIO_LOGIC_LOW);
		_delay_ms(2);
	#endif
}
    6b02:	cb 59       	subi	r28, 0x9B	; 155
    6b04:	df 4f       	sbci	r29, 0xFF	; 255
    6b06:	0f b6       	in	r0, 0x3f	; 63
    6b08:	f8 94       	cli
    6b0a:	de bf       	out	0x3e, r29	; 62
    6b0c:	0f be       	out	0x3f, r0	; 63
    6b0e:	cd bf       	out	0x3d, r28	; 61
    6b10:	cf 91       	pop	r28
    6b12:	df 91       	pop	r29
    6b14:	1f 91       	pop	r17
    6b16:	0f 91       	pop	r16
    6b18:	08 95       	ret

00006b1a <LCD_vidClrDisplayXY>:
void LCD_vidClrDisplayXY(uint8 Copy_u8Row,uint8 Copy_u8Column)
{
    6b1a:	df 93       	push	r29
    6b1c:	cf 93       	push	r28
    6b1e:	00 d0       	rcall	.+0      	; 0x6b20 <LCD_vidClrDisplayXY+0x6>
    6b20:	cd b7       	in	r28, 0x3d	; 61
    6b22:	de b7       	in	r29, 0x3e	; 62
    6b24:	89 83       	std	Y+1, r24	; 0x01
    6b26:	6a 83       	std	Y+2, r22	; 0x02
	Lcd_VidGoToXY(Copy_u8Row,Copy_u8Column);
    6b28:	89 81       	ldd	r24, Y+1	; 0x01
    6b2a:	6a 81       	ldd	r22, Y+2	; 0x02
    6b2c:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <Lcd_VidGoToXY>
	Lcd_VidDisplayString((const pu8)" ");
    6b30:	80 e6       	ldi	r24, 0x60	; 96
    6b32:	90 e0       	ldi	r25, 0x00	; 0
    6b34:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <Lcd_VidDisplayString>
}
    6b38:	0f 90       	pop	r0
    6b3a:	0f 90       	pop	r0
    6b3c:	cf 91       	pop	r28
    6b3e:	df 91       	pop	r29
    6b40:	08 95       	ret

00006b42 <main>:
		0b00010,
		0b00010,
		0b00010
};
int main(void)
{
    6b42:	df 93       	push	r29
    6b44:	cf 93       	push	r28
    6b46:	cd b7       	in	r28, 0x3d	; 61
    6b48:	de b7       	in	r29, 0x3e	; 62
    6b4a:	ae 97       	sbiw	r28, 0x2e	; 46
    6b4c:	0f b6       	in	r0, 0x3f	; 63
    6b4e:	f8 94       	cli
    6b50:	de bf       	out	0x3e, r29	; 62
    6b52:	0f be       	out	0x3f, r0	; 63
    6b54:	cd bf       	out	0x3d, r28	; 61
	uint8 Row,Col;
	uint8 Iterator=0;
    6b56:	1c a6       	std	Y+44, r1	; 0x2c
	uint8 Termenator=0;
    6b58:	1b a6       	std	Y+43, r1	; 0x2b
	PORT_Init();
    6b5a:	0e 94 ab 13 	call	0x2756	; 0x2756 <PORT_Init>
	Lcd_Init();
    6b5e:	0e 94 d1 1c 	call	0x39a2	; 0x39a2 <Lcd_Init>

	Lcd_VidCreateCustomCharacter(customChar,0);
    6b62:	8a e7       	ldi	r24, 0x7A	; 122
    6b64:	91 e0       	ldi	r25, 0x01	; 1
    6b66:	60 e0       	ldi	r22, 0x00	; 0
    6b68:	0e 94 c3 25 	call	0x4b86	; 0x4b86 <Lcd_VidCreateCustomCharacter>
	Lcd_VidCreateCustomCharacter(Character,1);
    6b6c:	82 e8       	ldi	r24, 0x82	; 130
    6b6e:	91 e0       	ldi	r25, 0x01	; 1
    6b70:	61 e0       	ldi	r22, 0x01	; 1
    6b72:	0e 94 c3 25 	call	0x4b86	; 0x4b86 <Lcd_VidCreateCustomCharacter>
	Lcd_VidCreateCustomCharacter(Game_over,2);
    6b76:	8a e8       	ldi	r24, 0x8A	; 138
    6b78:	91 e0       	ldi	r25, 0x01	; 1
    6b7a:	62 e0       	ldi	r22, 0x02	; 2
    6b7c:	0e 94 c3 25 	call	0x4b86	; 0x4b86 <Lcd_VidCreateCustomCharacter>
	Lcd_VidCreateCustomCharacter(DOWn,3);
    6b80:	82 e9       	ldi	r24, 0x92	; 146
    6b82:	91 e0       	ldi	r25, 0x01	; 1
    6b84:	63 e0       	ldi	r22, 0x03	; 3
    6b86:	0e 94 c3 25 	call	0x4b86	; 0x4b86 <Lcd_VidCreateCustomCharacter>
	Lcd_VidCreateCustomCharacter(UP,4);
    6b8a:	8a e9       	ldi	r24, 0x9A	; 154
    6b8c:	91 e0       	ldi	r25, 0x01	; 1
    6b8e:	64 e0       	ldi	r22, 0x04	; 4
    6b90:	0e 94 c3 25 	call	0x4b86	; 0x4b86 <Lcd_VidCreateCustomCharacter>
	Lcd_VidCreateCustomCharacter(Stop,5);
    6b94:	82 ea       	ldi	r24, 0xA2	; 162
    6b96:	91 e0       	ldi	r25, 0x01	; 1
    6b98:	65 e0       	ldi	r22, 0x05	; 5
    6b9a:	0e 94 c3 25 	call	0x4b86	; 0x4b86 <Lcd_VidCreateCustomCharacter>

	for(Row=0;Row<3;Row++)
    6b9e:	1e a6       	std	Y+46, r1	; 0x2e
    6ba0:	15 c0       	rjmp	.+42     	; 0x6bcc <main+0x8a>
	{
		for(Col=0;Col<20;Col++)
    6ba2:	1d a6       	std	Y+45, r1	; 0x2d
    6ba4:	0d c0       	rjmp	.+26     	; 0x6bc0 <main+0x7e>
		{
			if(Row==1)
    6ba6:	8e a5       	ldd	r24, Y+46	; 0x2e
    6ba8:	81 30       	cpi	r24, 0x01	; 1
    6baa:	39 f0       	breq	.+14     	; 0x6bba <main+0x78>
				continue;
			Lcd_VidGoToXY(Row,Col);
    6bac:	8e a5       	ldd	r24, Y+46	; 0x2e
    6bae:	6d a5       	ldd	r22, Y+45	; 0x2d
    6bb0:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <Lcd_VidGoToXY>
			Lcd_VidDisplayChracter(0);
    6bb4:	80 e0       	ldi	r24, 0x00	; 0
    6bb6:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
	Lcd_VidCreateCustomCharacter(UP,4);
	Lcd_VidCreateCustomCharacter(Stop,5);

	for(Row=0;Row<3;Row++)
	{
		for(Col=0;Col<20;Col++)
    6bba:	8d a5       	ldd	r24, Y+45	; 0x2d
    6bbc:	8f 5f       	subi	r24, 0xFF	; 255
    6bbe:	8d a7       	std	Y+45, r24	; 0x2d
    6bc0:	8d a5       	ldd	r24, Y+45	; 0x2d
    6bc2:	84 31       	cpi	r24, 0x14	; 20
    6bc4:	80 f3       	brcs	.-32     	; 0x6ba6 <main+0x64>
	Lcd_VidCreateCustomCharacter(Game_over,2);
	Lcd_VidCreateCustomCharacter(DOWn,3);
	Lcd_VidCreateCustomCharacter(UP,4);
	Lcd_VidCreateCustomCharacter(Stop,5);

	for(Row=0;Row<3;Row++)
    6bc6:	8e a5       	ldd	r24, Y+46	; 0x2e
    6bc8:	8f 5f       	subi	r24, 0xFF	; 255
    6bca:	8e a7       	std	Y+46, r24	; 0x2e
    6bcc:	8e a5       	ldd	r24, Y+46	; 0x2e
    6bce:	83 30       	cpi	r24, 0x03	; 3
    6bd0:	40 f3       	brcs	.-48     	; 0x6ba2 <main+0x60>
			Lcd_VidGoToXY(Row,Col);
			Lcd_VidDisplayChracter(0);

		}
	}
	for(Col=0;Col<20;Col++)
    6bd2:	1d a6       	std	Y+45, r1	; 0x2d
    6bd4:	0a c0       	rjmp	.+20     	; 0x6bea <main+0xa8>
	{

		Lcd_VidGoToXY(3,Col);
    6bd6:	83 e0       	ldi	r24, 0x03	; 3
    6bd8:	6d a5       	ldd	r22, Y+45	; 0x2d
    6bda:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <Lcd_VidGoToXY>
		Lcd_VidDisplayChracter(2);
    6bde:	82 e0       	ldi	r24, 0x02	; 2
    6be0:	0e 94 55 21 	call	0x42aa	; 0x42aa <Lcd_VidDisplayChracter>
			Lcd_VidGoToXY(Row,Col);
			Lcd_VidDisplayChracter(0);

		}
	}
	for(Col=0;Col<20;Col++)
    6be4:	8d a5       	ldd	r24, Y+45	; 0x2d
    6be6:	8f 5f       	subi	r24, 0xFF	; 255
    6be8:	8d a7       	std	Y+45, r24	; 0x2d
    6bea:	8d a5       	ldd	r24, Y+45	; 0x2d
    6bec:	84 31       	cpi	r24, 0x14	; 20
    6bee:	98 f3       	brcs	.-26     	; 0x6bd6 <main+0x94>
		Lcd_VidDisplayChracter(2);

	}
	while(1)
	{
		Iterator++;
    6bf0:	8c a5       	ldd	r24, Y+44	; 0x2c
    6bf2:	8f 5f       	subi	r24, 0xFF	; 255
    6bf4:	8c a7       	std	Y+44, r24	; 0x2c
		if(Iterator==2)
    6bf6:	8c a5       	ldd	r24, Y+44	; 0x2c
    6bf8:	82 30       	cpi	r24, 0x02	; 2
    6bfa:	51 f4       	brne	.+20     	; 0x6c10 <main+0xce>
		{
			LCD_vidClrDisplayXY(0,15);
    6bfc:	80 e0       	ldi	r24, 0x00	; 0
    6bfe:	6f e0       	ldi	r22, 0x0F	; 15
    6c00:	0e 94 8d 35 	call	0x6b1a	; 0x6b1a <LCD_vidClrDisplayXY>
			Lcd_VidDisplayChracterXY(1,15,3);
    6c04:	81 e0       	ldi	r24, 0x01	; 1
    6c06:	6f e0       	ldi	r22, 0x0F	; 15
    6c08:	43 e0       	ldi	r20, 0x03	; 3
    6c0a:	0e 94 0d 31 	call	0x621a	; 0x621a <Lcd_VidDisplayChracterXY>
    6c0e:	a4 c0       	rjmp	.+328    	; 0x6d58 <main+0x216>
		}
		else if(Iterator==3)
    6c10:	8c a5       	ldd	r24, Y+44	; 0x2c
    6c12:	83 30       	cpi	r24, 0x03	; 3
    6c14:	51 f4       	brne	.+20     	; 0x6c2a <main+0xe8>
		{
			LCD_vidClrDisplayXY(2,13);
    6c16:	82 e0       	ldi	r24, 0x02	; 2
    6c18:	6d e0       	ldi	r22, 0x0D	; 13
    6c1a:	0e 94 8d 35 	call	0x6b1a	; 0x6b1a <LCD_vidClrDisplayXY>
			Lcd_VidDisplayChracterXY(2,13,4);
    6c1e:	82 e0       	ldi	r24, 0x02	; 2
    6c20:	6d e0       	ldi	r22, 0x0D	; 13
    6c22:	44 e0       	ldi	r20, 0x04	; 4
    6c24:	0e 94 0d 31 	call	0x621a	; 0x621a <Lcd_VidDisplayChracterXY>
    6c28:	97 c0       	rjmp	.+302    	; 0x6d58 <main+0x216>
		}
		else if(Iterator==4)
    6c2a:	8c a5       	ldd	r24, Y+44	; 0x2c
    6c2c:	84 30       	cpi	r24, 0x04	; 4
    6c2e:	51 f4       	brne	.+20     	; 0x6c44 <main+0x102>
		{
			LCD_vidClrDisplayXY(2,18);
    6c30:	82 e0       	ldi	r24, 0x02	; 2
    6c32:	62 e1       	ldi	r22, 0x12	; 18
    6c34:	0e 94 8d 35 	call	0x6b1a	; 0x6b1a <LCD_vidClrDisplayXY>
			Lcd_VidDisplayChracterXY(2,18,5);
    6c38:	82 e0       	ldi	r24, 0x02	; 2
    6c3a:	62 e1       	ldi	r22, 0x12	; 18
    6c3c:	45 e0       	ldi	r20, 0x05	; 5
    6c3e:	0e 94 0d 31 	call	0x621a	; 0x621a <Lcd_VidDisplayChracterXY>
    6c42:	8a c0       	rjmp	.+276    	; 0x6d58 <main+0x216>
		}
		else if(Iterator==5)
    6c44:	8c a5       	ldd	r24, Y+44	; 0x2c
    6c46:	85 30       	cpi	r24, 0x05	; 5
    6c48:	09 f0       	breq	.+2      	; 0x6c4c <main+0x10a>
    6c4a:	86 c0       	rjmp	.+268    	; 0x6d58 <main+0x216>
				{
			LCD_vidClrDisplay();
    6c4c:	0e 94 01 2b 	call	0x5602	; 0x5602 <LCD_vidClrDisplay>
			LCD_DisplayStringXY(1,0,"Loooseeer HAHAH");
    6c50:	22 e6       	ldi	r18, 0x62	; 98
    6c52:	30 e0       	ldi	r19, 0x00	; 0
    6c54:	81 e0       	ldi	r24, 0x01	; 1
    6c56:	60 e0       	ldi	r22, 0x00	; 0
    6c58:	a9 01       	movw	r20, r18
    6c5a:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <LCD_DisplayStringXY>
    6c5e:	80 e0       	ldi	r24, 0x00	; 0
    6c60:	90 e0       	ldi	r25, 0x00	; 0
    6c62:	aa e7       	ldi	r26, 0x7A	; 122
    6c64:	b4 e4       	ldi	r27, 0x44	; 68
    6c66:	8f a3       	std	Y+39, r24	; 0x27
    6c68:	98 a7       	std	Y+40, r25	; 0x28
    6c6a:	a9 a7       	std	Y+41, r26	; 0x29
    6c6c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6c6e:	6f a1       	ldd	r22, Y+39	; 0x27
    6c70:	78 a5       	ldd	r23, Y+40	; 0x28
    6c72:	89 a5       	ldd	r24, Y+41	; 0x29
    6c74:	9a a5       	ldd	r25, Y+42	; 0x2a
    6c76:	20 e0       	ldi	r18, 0x00	; 0
    6c78:	30 e0       	ldi	r19, 0x00	; 0
    6c7a:	4a e7       	ldi	r20, 0x7A	; 122
    6c7c:	53 e4       	ldi	r21, 0x43	; 67
    6c7e:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6c82:	dc 01       	movw	r26, r24
    6c84:	cb 01       	movw	r24, r22
    6c86:	8b a3       	std	Y+35, r24	; 0x23
    6c88:	9c a3       	std	Y+36, r25	; 0x24
    6c8a:	ad a3       	std	Y+37, r26	; 0x25
    6c8c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    6c8e:	6b a1       	ldd	r22, Y+35	; 0x23
    6c90:	7c a1       	ldd	r23, Y+36	; 0x24
    6c92:	8d a1       	ldd	r24, Y+37	; 0x25
    6c94:	9e a1       	ldd	r25, Y+38	; 0x26
    6c96:	20 e0       	ldi	r18, 0x00	; 0
    6c98:	30 e0       	ldi	r19, 0x00	; 0
    6c9a:	40 e8       	ldi	r20, 0x80	; 128
    6c9c:	5f e3       	ldi	r21, 0x3F	; 63
    6c9e:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6ca2:	88 23       	and	r24, r24
    6ca4:	2c f4       	brge	.+10     	; 0x6cb0 <main+0x16e>
		__ticks = 1;
    6ca6:	81 e0       	ldi	r24, 0x01	; 1
    6ca8:	90 e0       	ldi	r25, 0x00	; 0
    6caa:	9a a3       	std	Y+34, r25	; 0x22
    6cac:	89 a3       	std	Y+33, r24	; 0x21
    6cae:	3f c0       	rjmp	.+126    	; 0x6d2e <main+0x1ec>
	else if (__tmp > 65535)
    6cb0:	6b a1       	ldd	r22, Y+35	; 0x23
    6cb2:	7c a1       	ldd	r23, Y+36	; 0x24
    6cb4:	8d a1       	ldd	r24, Y+37	; 0x25
    6cb6:	9e a1       	ldd	r25, Y+38	; 0x26
    6cb8:	20 e0       	ldi	r18, 0x00	; 0
    6cba:	3f ef       	ldi	r19, 0xFF	; 255
    6cbc:	4f e7       	ldi	r20, 0x7F	; 127
    6cbe:	57 e4       	ldi	r21, 0x47	; 71
    6cc0:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    6cc4:	18 16       	cp	r1, r24
    6cc6:	4c f5       	brge	.+82     	; 0x6d1a <main+0x1d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6cc8:	6f a1       	ldd	r22, Y+39	; 0x27
    6cca:	78 a5       	ldd	r23, Y+40	; 0x28
    6ccc:	89 a5       	ldd	r24, Y+41	; 0x29
    6cce:	9a a5       	ldd	r25, Y+42	; 0x2a
    6cd0:	20 e0       	ldi	r18, 0x00	; 0
    6cd2:	30 e0       	ldi	r19, 0x00	; 0
    6cd4:	40 e2       	ldi	r20, 0x20	; 32
    6cd6:	51 e4       	ldi	r21, 0x41	; 65
    6cd8:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6cdc:	dc 01       	movw	r26, r24
    6cde:	cb 01       	movw	r24, r22
    6ce0:	bc 01       	movw	r22, r24
    6ce2:	cd 01       	movw	r24, r26
    6ce4:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6ce8:	dc 01       	movw	r26, r24
    6cea:	cb 01       	movw	r24, r22
    6cec:	9a a3       	std	Y+34, r25	; 0x22
    6cee:	89 a3       	std	Y+33, r24	; 0x21
    6cf0:	0f c0       	rjmp	.+30     	; 0x6d10 <main+0x1ce>
    6cf2:	89 e1       	ldi	r24, 0x19	; 25
    6cf4:	90 e0       	ldi	r25, 0x00	; 0
    6cf6:	98 a3       	std	Y+32, r25	; 0x20
    6cf8:	8f 8f       	std	Y+31, r24	; 0x1f
    6cfa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    6cfc:	98 a1       	ldd	r25, Y+32	; 0x20
    6cfe:	01 97       	sbiw	r24, 0x01	; 1
    6d00:	f1 f7       	brne	.-4      	; 0x6cfe <main+0x1bc>
    6d02:	98 a3       	std	Y+32, r25	; 0x20
    6d04:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6d06:	89 a1       	ldd	r24, Y+33	; 0x21
    6d08:	9a a1       	ldd	r25, Y+34	; 0x22
    6d0a:	01 97       	sbiw	r24, 0x01	; 1
    6d0c:	9a a3       	std	Y+34, r25	; 0x22
    6d0e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6d10:	89 a1       	ldd	r24, Y+33	; 0x21
    6d12:	9a a1       	ldd	r25, Y+34	; 0x22
    6d14:	00 97       	sbiw	r24, 0x00	; 0
    6d16:	69 f7       	brne	.-38     	; 0x6cf2 <main+0x1b0>
    6d18:	14 c0       	rjmp	.+40     	; 0x6d42 <main+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6d1a:	6b a1       	ldd	r22, Y+35	; 0x23
    6d1c:	7c a1       	ldd	r23, Y+36	; 0x24
    6d1e:	8d a1       	ldd	r24, Y+37	; 0x25
    6d20:	9e a1       	ldd	r25, Y+38	; 0x26
    6d22:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6d26:	dc 01       	movw	r26, r24
    6d28:	cb 01       	movw	r24, r22
    6d2a:	9a a3       	std	Y+34, r25	; 0x22
    6d2c:	89 a3       	std	Y+33, r24	; 0x21
    6d2e:	89 a1       	ldd	r24, Y+33	; 0x21
    6d30:	9a a1       	ldd	r25, Y+34	; 0x22
    6d32:	9e 8f       	std	Y+30, r25	; 0x1e
    6d34:	8d 8f       	std	Y+29, r24	; 0x1d
    6d36:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6d38:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6d3a:	01 97       	sbiw	r24, 0x01	; 1
    6d3c:	f1 f7       	brne	.-4      	; 0x6d3a <main+0x1f8>
    6d3e:	9e 8f       	std	Y+30, r25	; 0x1e
    6d40:	8d 8f       	std	Y+29, r24	; 0x1d
    6d42:	80 e0       	ldi	r24, 0x00	; 0
    6d44:	90 e0       	ldi	r25, 0x00	; 0
			}
		}

	}

}
    6d46:	ae 96       	adiw	r28, 0x2e	; 46
    6d48:	0f b6       	in	r0, 0x3f	; 63
    6d4a:	f8 94       	cli
    6d4c:	de bf       	out	0x3e, r29	; 62
    6d4e:	0f be       	out	0x3f, r0	; 63
    6d50:	cd bf       	out	0x3d, r28	; 61
    6d52:	cf 91       	pop	r28
    6d54:	df 91       	pop	r29
    6d56:	08 95       	ret
			_delay_ms(1000);
			break;
				}


		for(Row=0;Row<3;Row++)
    6d58:	1e a6       	std	Y+46, r1	; 0x2e
    6d5a:	42 c1       	rjmp	.+644    	; 0x6fe0 <main+0x49e>
		{
			for(Col=0;Col<20;Col++)
    6d5c:	1d a6       	std	Y+45, r1	; 0x2d
    6d5e:	39 c1       	rjmp	.+626    	; 0x6fd2 <main+0x490>
			{
				if(Row==1)
    6d60:	8e a5       	ldd	r24, Y+46	; 0x2e
    6d62:	81 30       	cpi	r24, 0x01	; 1
    6d64:	09 f4       	brne	.+2      	; 0x6d68 <main+0x226>
    6d66:	32 c1       	rjmp	.+612    	; 0x6fcc <main+0x48a>
					continue;

				if(Row==0 && Col==15 && Iterator==2)
    6d68:	8e a5       	ldd	r24, Y+46	; 0x2e
    6d6a:	88 23       	and	r24, r24
    6d6c:	a1 f4       	brne	.+40     	; 0x6d96 <main+0x254>
    6d6e:	8d a5       	ldd	r24, Y+45	; 0x2d
    6d70:	8f 30       	cpi	r24, 0x0F	; 15
    6d72:	89 f4       	brne	.+34     	; 0x6d96 <main+0x254>
    6d74:	8c a5       	ldd	r24, Y+44	; 0x2c
    6d76:	82 30       	cpi	r24, 0x02	; 2
    6d78:	71 f4       	brne	.+28     	; 0x6d96 <main+0x254>
				{
					Row=2;
    6d7a:	82 e0       	ldi	r24, 0x02	; 2
    6d7c:	8e a7       	std	Y+46, r24	; 0x2e
					Col=16;
    6d7e:	80 e1       	ldi	r24, 0x10	; 16
    6d80:	8d a7       	std	Y+45, r24	; 0x2d
					LCD_vidClrDisplayXY(1,15);
    6d82:	81 e0       	ldi	r24, 0x01	; 1
    6d84:	6f e0       	ldi	r22, 0x0F	; 15
    6d86:	0e 94 8d 35 	call	0x6b1a	; 0x6b1a <LCD_vidClrDisplayXY>
					Lcd_VidDisplayChracterXY(0,15,0);
    6d8a:	80 e0       	ldi	r24, 0x00	; 0
    6d8c:	6f e0       	ldi	r22, 0x0F	; 15
    6d8e:	40 e0       	ldi	r20, 0x00	; 0
    6d90:	0e 94 0d 31 	call	0x621a	; 0x621a <Lcd_VidDisplayChracterXY>
    6d94:	1b c1       	rjmp	.+566    	; 0x6fcc <main+0x48a>
					continue;
				}
				else if(Row==2 && Col==13 && Iterator==3)
    6d96:	8e a5       	ldd	r24, Y+46	; 0x2e
    6d98:	82 30       	cpi	r24, 0x02	; 2
    6d9a:	e9 f4       	brne	.+58     	; 0x6dd6 <main+0x294>
    6d9c:	8d a5       	ldd	r24, Y+45	; 0x2d
    6d9e:	8d 30       	cpi	r24, 0x0D	; 13
    6da0:	d1 f4       	brne	.+52     	; 0x6dd6 <main+0x294>
    6da2:	8c a5       	ldd	r24, Y+44	; 0x2c
    6da4:	83 30       	cpi	r24, 0x03	; 3
    6da6:	b9 f4       	brne	.+46     	; 0x6dd6 <main+0x294>
				{
					Termenator++;
    6da8:	8b a5       	ldd	r24, Y+43	; 0x2b
    6daa:	8f 5f       	subi	r24, 0xFF	; 255
    6dac:	8b a7       	std	Y+43, r24	; 0x2b
					Row=0;
    6dae:	1e a6       	std	Y+46, r1	; 0x2e
					Col=14;
    6db0:	8e e0       	ldi	r24, 0x0E	; 14
    6db2:	8d a7       	std	Y+45, r24	; 0x2d
					if(Termenator==2)
    6db4:	8b a5       	ldd	r24, Y+43	; 0x2b
    6db6:	82 30       	cpi	r24, 0x02	; 2
    6db8:	21 f4       	brne	.+8      	; 0x6dc2 <main+0x280>
					{
						Row=2;
    6dba:	82 e0       	ldi	r24, 0x02	; 2
    6dbc:	8e a7       	std	Y+46, r24	; 0x2e
						Col=13;
    6dbe:	8d e0       	ldi	r24, 0x0D	; 13
    6dc0:	8d a7       	std	Y+45, r24	; 0x2d
					}
					LCD_vidClrDisplayXY(2,13);
    6dc2:	82 e0       	ldi	r24, 0x02	; 2
    6dc4:	6d e0       	ldi	r22, 0x0D	; 13
    6dc6:	0e 94 8d 35 	call	0x6b1a	; 0x6b1a <LCD_vidClrDisplayXY>
					Lcd_VidDisplayChracterXY(2,13,0);
    6dca:	82 e0       	ldi	r24, 0x02	; 2
    6dcc:	6d e0       	ldi	r22, 0x0D	; 13
    6dce:	40 e0       	ldi	r20, 0x00	; 0
    6dd0:	0e 94 0d 31 	call	0x621a	; 0x621a <Lcd_VidDisplayChracterXY>
    6dd4:	fb c0       	rjmp	.+502    	; 0x6fcc <main+0x48a>
					continue;
				}
				else if(Row==2 && Col==18 && Iterator==4)
    6dd6:	8e a5       	ldd	r24, Y+46	; 0x2e
    6dd8:	82 30       	cpi	r24, 0x02	; 2
    6dda:	09 f0       	breq	.+2      	; 0x6dde <main+0x29c>
    6ddc:	7b c0       	rjmp	.+246    	; 0x6ed4 <main+0x392>
    6dde:	8d a5       	ldd	r24, Y+45	; 0x2d
    6de0:	82 31       	cpi	r24, 0x12	; 18
    6de2:	09 f0       	breq	.+2      	; 0x6de6 <main+0x2a4>
    6de4:	77 c0       	rjmp	.+238    	; 0x6ed4 <main+0x392>
    6de6:	8c a5       	ldd	r24, Y+44	; 0x2c
    6de8:	84 30       	cpi	r24, 0x04	; 4
    6dea:	09 f0       	breq	.+2      	; 0x6dee <main+0x2ac>
    6dec:	73 c0       	rjmp	.+230    	; 0x6ed4 <main+0x392>
    6dee:	80 e0       	ldi	r24, 0x00	; 0
    6df0:	90 e0       	ldi	r25, 0x00	; 0
    6df2:	aa e7       	ldi	r26, 0x7A	; 122
    6df4:	b4 e4       	ldi	r27, 0x44	; 68
    6df6:	89 8f       	std	Y+25, r24	; 0x19
    6df8:	9a 8f       	std	Y+26, r25	; 0x1a
    6dfa:	ab 8f       	std	Y+27, r26	; 0x1b
    6dfc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6dfe:	69 8d       	ldd	r22, Y+25	; 0x19
    6e00:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6e02:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6e04:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6e06:	20 e0       	ldi	r18, 0x00	; 0
    6e08:	30 e0       	ldi	r19, 0x00	; 0
    6e0a:	4a e7       	ldi	r20, 0x7A	; 122
    6e0c:	53 e4       	ldi	r21, 0x43	; 67
    6e0e:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6e12:	dc 01       	movw	r26, r24
    6e14:	cb 01       	movw	r24, r22
    6e16:	8d 8b       	std	Y+21, r24	; 0x15
    6e18:	9e 8b       	std	Y+22, r25	; 0x16
    6e1a:	af 8b       	std	Y+23, r26	; 0x17
    6e1c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    6e1e:	6d 89       	ldd	r22, Y+21	; 0x15
    6e20:	7e 89       	ldd	r23, Y+22	; 0x16
    6e22:	8f 89       	ldd	r24, Y+23	; 0x17
    6e24:	98 8d       	ldd	r25, Y+24	; 0x18
    6e26:	20 e0       	ldi	r18, 0x00	; 0
    6e28:	30 e0       	ldi	r19, 0x00	; 0
    6e2a:	40 e8       	ldi	r20, 0x80	; 128
    6e2c:	5f e3       	ldi	r21, 0x3F	; 63
    6e2e:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6e32:	88 23       	and	r24, r24
    6e34:	2c f4       	brge	.+10     	; 0x6e40 <main+0x2fe>
		__ticks = 1;
    6e36:	81 e0       	ldi	r24, 0x01	; 1
    6e38:	90 e0       	ldi	r25, 0x00	; 0
    6e3a:	9c 8b       	std	Y+20, r25	; 0x14
    6e3c:	8b 8b       	std	Y+19, r24	; 0x13
    6e3e:	3f c0       	rjmp	.+126    	; 0x6ebe <main+0x37c>
	else if (__tmp > 65535)
    6e40:	6d 89       	ldd	r22, Y+21	; 0x15
    6e42:	7e 89       	ldd	r23, Y+22	; 0x16
    6e44:	8f 89       	ldd	r24, Y+23	; 0x17
    6e46:	98 8d       	ldd	r25, Y+24	; 0x18
    6e48:	20 e0       	ldi	r18, 0x00	; 0
    6e4a:	3f ef       	ldi	r19, 0xFF	; 255
    6e4c:	4f e7       	ldi	r20, 0x7F	; 127
    6e4e:	57 e4       	ldi	r21, 0x47	; 71
    6e50:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    6e54:	18 16       	cp	r1, r24
    6e56:	4c f5       	brge	.+82     	; 0x6eaa <main+0x368>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6e58:	69 8d       	ldd	r22, Y+25	; 0x19
    6e5a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6e5c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6e5e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6e60:	20 e0       	ldi	r18, 0x00	; 0
    6e62:	30 e0       	ldi	r19, 0x00	; 0
    6e64:	40 e2       	ldi	r20, 0x20	; 32
    6e66:	51 e4       	ldi	r21, 0x41	; 65
    6e68:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6e6c:	dc 01       	movw	r26, r24
    6e6e:	cb 01       	movw	r24, r22
    6e70:	bc 01       	movw	r22, r24
    6e72:	cd 01       	movw	r24, r26
    6e74:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6e78:	dc 01       	movw	r26, r24
    6e7a:	cb 01       	movw	r24, r22
    6e7c:	9c 8b       	std	Y+20, r25	; 0x14
    6e7e:	8b 8b       	std	Y+19, r24	; 0x13
    6e80:	0f c0       	rjmp	.+30     	; 0x6ea0 <main+0x35e>
    6e82:	89 e1       	ldi	r24, 0x19	; 25
    6e84:	90 e0       	ldi	r25, 0x00	; 0
    6e86:	9a 8b       	std	Y+18, r25	; 0x12
    6e88:	89 8b       	std	Y+17, r24	; 0x11
    6e8a:	89 89       	ldd	r24, Y+17	; 0x11
    6e8c:	9a 89       	ldd	r25, Y+18	; 0x12
    6e8e:	01 97       	sbiw	r24, 0x01	; 1
    6e90:	f1 f7       	brne	.-4      	; 0x6e8e <main+0x34c>
    6e92:	9a 8b       	std	Y+18, r25	; 0x12
    6e94:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6e96:	8b 89       	ldd	r24, Y+19	; 0x13
    6e98:	9c 89       	ldd	r25, Y+20	; 0x14
    6e9a:	01 97       	sbiw	r24, 0x01	; 1
    6e9c:	9c 8b       	std	Y+20, r25	; 0x14
    6e9e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6ea0:	8b 89       	ldd	r24, Y+19	; 0x13
    6ea2:	9c 89       	ldd	r25, Y+20	; 0x14
    6ea4:	00 97       	sbiw	r24, 0x00	; 0
    6ea6:	69 f7       	brne	.-38     	; 0x6e82 <main+0x340>
    6ea8:	98 c0       	rjmp	.+304    	; 0x6fda <main+0x498>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6eaa:	6d 89       	ldd	r22, Y+21	; 0x15
    6eac:	7e 89       	ldd	r23, Y+22	; 0x16
    6eae:	8f 89       	ldd	r24, Y+23	; 0x17
    6eb0:	98 8d       	ldd	r25, Y+24	; 0x18
    6eb2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6eb6:	dc 01       	movw	r26, r24
    6eb8:	cb 01       	movw	r24, r22
    6eba:	9c 8b       	std	Y+20, r25	; 0x14
    6ebc:	8b 8b       	std	Y+19, r24	; 0x13
    6ebe:	8b 89       	ldd	r24, Y+19	; 0x13
    6ec0:	9c 89       	ldd	r25, Y+20	; 0x14
    6ec2:	98 8b       	std	Y+16, r25	; 0x10
    6ec4:	8f 87       	std	Y+15, r24	; 0x0f
    6ec6:	8f 85       	ldd	r24, Y+15	; 0x0f
    6ec8:	98 89       	ldd	r25, Y+16	; 0x10
    6eca:	01 97       	sbiw	r24, 0x01	; 1
    6ecc:	f1 f7       	brne	.-4      	; 0x6eca <main+0x388>
    6ece:	98 8b       	std	Y+16, r25	; 0x10
    6ed0:	8f 87       	std	Y+15, r24	; 0x0f
    6ed2:	83 c0       	rjmp	.+262    	; 0x6fda <main+0x498>
				{
					_delay_ms(1000);
					break;
				}
				Lcd_VidDisplayChracterXY(Row,Col,1);
    6ed4:	8e a5       	ldd	r24, Y+46	; 0x2e
    6ed6:	6d a5       	ldd	r22, Y+45	; 0x2d
    6ed8:	41 e0       	ldi	r20, 0x01	; 1
    6eda:	0e 94 0d 31 	call	0x621a	; 0x621a <Lcd_VidDisplayChracterXY>
    6ede:	80 e0       	ldi	r24, 0x00	; 0
    6ee0:	90 e0       	ldi	r25, 0x00	; 0
    6ee2:	aa e7       	ldi	r26, 0x7A	; 122
    6ee4:	b4 e4       	ldi	r27, 0x44	; 68
    6ee6:	8b 87       	std	Y+11, r24	; 0x0b
    6ee8:	9c 87       	std	Y+12, r25	; 0x0c
    6eea:	ad 87       	std	Y+13, r26	; 0x0d
    6eec:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6eee:	6b 85       	ldd	r22, Y+11	; 0x0b
    6ef0:	7c 85       	ldd	r23, Y+12	; 0x0c
    6ef2:	8d 85       	ldd	r24, Y+13	; 0x0d
    6ef4:	9e 85       	ldd	r25, Y+14	; 0x0e
    6ef6:	20 e0       	ldi	r18, 0x00	; 0
    6ef8:	30 e0       	ldi	r19, 0x00	; 0
    6efa:	4a e7       	ldi	r20, 0x7A	; 122
    6efc:	53 e4       	ldi	r21, 0x43	; 67
    6efe:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6f02:	dc 01       	movw	r26, r24
    6f04:	cb 01       	movw	r24, r22
    6f06:	8f 83       	std	Y+7, r24	; 0x07
    6f08:	98 87       	std	Y+8, r25	; 0x08
    6f0a:	a9 87       	std	Y+9, r26	; 0x09
    6f0c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6f0e:	6f 81       	ldd	r22, Y+7	; 0x07
    6f10:	78 85       	ldd	r23, Y+8	; 0x08
    6f12:	89 85       	ldd	r24, Y+9	; 0x09
    6f14:	9a 85       	ldd	r25, Y+10	; 0x0a
    6f16:	20 e0       	ldi	r18, 0x00	; 0
    6f18:	30 e0       	ldi	r19, 0x00	; 0
    6f1a:	40 e8       	ldi	r20, 0x80	; 128
    6f1c:	5f e3       	ldi	r21, 0x3F	; 63
    6f1e:	0e 94 81 11 	call	0x2302	; 0x2302 <__ltsf2>
    6f22:	88 23       	and	r24, r24
    6f24:	2c f4       	brge	.+10     	; 0x6f30 <main+0x3ee>
		__ticks = 1;
    6f26:	81 e0       	ldi	r24, 0x01	; 1
    6f28:	90 e0       	ldi	r25, 0x00	; 0
    6f2a:	9e 83       	std	Y+6, r25	; 0x06
    6f2c:	8d 83       	std	Y+5, r24	; 0x05
    6f2e:	3f c0       	rjmp	.+126    	; 0x6fae <main+0x46c>
	else if (__tmp > 65535)
    6f30:	6f 81       	ldd	r22, Y+7	; 0x07
    6f32:	78 85       	ldd	r23, Y+8	; 0x08
    6f34:	89 85       	ldd	r24, Y+9	; 0x09
    6f36:	9a 85       	ldd	r25, Y+10	; 0x0a
    6f38:	20 e0       	ldi	r18, 0x00	; 0
    6f3a:	3f ef       	ldi	r19, 0xFF	; 255
    6f3c:	4f e7       	ldi	r20, 0x7F	; 127
    6f3e:	57 e4       	ldi	r21, 0x47	; 71
    6f40:	0e 94 21 11 	call	0x2242	; 0x2242 <__gtsf2>
    6f44:	18 16       	cp	r1, r24
    6f46:	4c f5       	brge	.+82     	; 0x6f9a <main+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6f48:	6b 85       	ldd	r22, Y+11	; 0x0b
    6f4a:	7c 85       	ldd	r23, Y+12	; 0x0c
    6f4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    6f4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    6f50:	20 e0       	ldi	r18, 0x00	; 0
    6f52:	30 e0       	ldi	r19, 0x00	; 0
    6f54:	40 e2       	ldi	r20, 0x20	; 32
    6f56:	51 e4       	ldi	r21, 0x41	; 65
    6f58:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__mulsf3>
    6f5c:	dc 01       	movw	r26, r24
    6f5e:	cb 01       	movw	r24, r22
    6f60:	bc 01       	movw	r22, r24
    6f62:	cd 01       	movw	r24, r26
    6f64:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6f68:	dc 01       	movw	r26, r24
    6f6a:	cb 01       	movw	r24, r22
    6f6c:	9e 83       	std	Y+6, r25	; 0x06
    6f6e:	8d 83       	std	Y+5, r24	; 0x05
    6f70:	0f c0       	rjmp	.+30     	; 0x6f90 <main+0x44e>
    6f72:	89 e1       	ldi	r24, 0x19	; 25
    6f74:	90 e0       	ldi	r25, 0x00	; 0
    6f76:	9c 83       	std	Y+4, r25	; 0x04
    6f78:	8b 83       	std	Y+3, r24	; 0x03
    6f7a:	8b 81       	ldd	r24, Y+3	; 0x03
    6f7c:	9c 81       	ldd	r25, Y+4	; 0x04
    6f7e:	01 97       	sbiw	r24, 0x01	; 1
    6f80:	f1 f7       	brne	.-4      	; 0x6f7e <main+0x43c>
    6f82:	9c 83       	std	Y+4, r25	; 0x04
    6f84:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6f86:	8d 81       	ldd	r24, Y+5	; 0x05
    6f88:	9e 81       	ldd	r25, Y+6	; 0x06
    6f8a:	01 97       	sbiw	r24, 0x01	; 1
    6f8c:	9e 83       	std	Y+6, r25	; 0x06
    6f8e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6f90:	8d 81       	ldd	r24, Y+5	; 0x05
    6f92:	9e 81       	ldd	r25, Y+6	; 0x06
    6f94:	00 97       	sbiw	r24, 0x00	; 0
    6f96:	69 f7       	brne	.-38     	; 0x6f72 <main+0x430>
    6f98:	14 c0       	rjmp	.+40     	; 0x6fc2 <main+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6f9a:	6f 81       	ldd	r22, Y+7	; 0x07
    6f9c:	78 85       	ldd	r23, Y+8	; 0x08
    6f9e:	89 85       	ldd	r24, Y+9	; 0x09
    6fa0:	9a 85       	ldd	r25, Y+10	; 0x0a
    6fa2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    6fa6:	dc 01       	movw	r26, r24
    6fa8:	cb 01       	movw	r24, r22
    6faa:	9e 83       	std	Y+6, r25	; 0x06
    6fac:	8d 83       	std	Y+5, r24	; 0x05
    6fae:	8d 81       	ldd	r24, Y+5	; 0x05
    6fb0:	9e 81       	ldd	r25, Y+6	; 0x06
    6fb2:	9a 83       	std	Y+2, r25	; 0x02
    6fb4:	89 83       	std	Y+1, r24	; 0x01
    6fb6:	89 81       	ldd	r24, Y+1	; 0x01
    6fb8:	9a 81       	ldd	r25, Y+2	; 0x02
    6fba:	01 97       	sbiw	r24, 0x01	; 1
    6fbc:	f1 f7       	brne	.-4      	; 0x6fba <main+0x478>
    6fbe:	9a 83       	std	Y+2, r25	; 0x02
    6fc0:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(1000);
				Lcd_VidDisplayChracterXY(Row,Col,0);
    6fc2:	8e a5       	ldd	r24, Y+46	; 0x2e
    6fc4:	6d a5       	ldd	r22, Y+45	; 0x2d
    6fc6:	40 e0       	ldi	r20, 0x00	; 0
    6fc8:	0e 94 0d 31 	call	0x621a	; 0x621a <Lcd_VidDisplayChracterXY>
				}


		for(Row=0;Row<3;Row++)
		{
			for(Col=0;Col<20;Col++)
    6fcc:	8d a5       	ldd	r24, Y+45	; 0x2d
    6fce:	8f 5f       	subi	r24, 0xFF	; 255
    6fd0:	8d a7       	std	Y+45, r24	; 0x2d
    6fd2:	8d a5       	ldd	r24, Y+45	; 0x2d
    6fd4:	84 31       	cpi	r24, 0x14	; 20
    6fd6:	08 f4       	brcc	.+2      	; 0x6fda <main+0x498>
    6fd8:	c3 ce       	rjmp	.-634    	; 0x6d60 <main+0x21e>
			_delay_ms(1000);
			break;
				}


		for(Row=0;Row<3;Row++)
    6fda:	8e a5       	ldd	r24, Y+46	; 0x2e
    6fdc:	8f 5f       	subi	r24, 0xFF	; 255
    6fde:	8e a7       	std	Y+46, r24	; 0x2e
    6fe0:	8e a5       	ldd	r24, Y+46	; 0x2e
    6fe2:	83 30       	cpi	r24, 0x03	; 3
    6fe4:	08 f4       	brcc	.+2      	; 0x6fe8 <main+0x4a6>
    6fe6:	ba ce       	rjmp	.-652    	; 0x6d5c <main+0x21a>
    6fe8:	03 ce       	rjmp	.-1018   	; 0x6bf0 <main+0xae>

00006fea <__udivmodsi4>:
    6fea:	a1 e2       	ldi	r26, 0x21	; 33
    6fec:	1a 2e       	mov	r1, r26
    6fee:	aa 1b       	sub	r26, r26
    6ff0:	bb 1b       	sub	r27, r27
    6ff2:	fd 01       	movw	r30, r26
    6ff4:	0d c0       	rjmp	.+26     	; 0x7010 <__udivmodsi4_ep>

00006ff6 <__udivmodsi4_loop>:
    6ff6:	aa 1f       	adc	r26, r26
    6ff8:	bb 1f       	adc	r27, r27
    6ffa:	ee 1f       	adc	r30, r30
    6ffc:	ff 1f       	adc	r31, r31
    6ffe:	a2 17       	cp	r26, r18
    7000:	b3 07       	cpc	r27, r19
    7002:	e4 07       	cpc	r30, r20
    7004:	f5 07       	cpc	r31, r21
    7006:	20 f0       	brcs	.+8      	; 0x7010 <__udivmodsi4_ep>
    7008:	a2 1b       	sub	r26, r18
    700a:	b3 0b       	sbc	r27, r19
    700c:	e4 0b       	sbc	r30, r20
    700e:	f5 0b       	sbc	r31, r21

00007010 <__udivmodsi4_ep>:
    7010:	66 1f       	adc	r22, r22
    7012:	77 1f       	adc	r23, r23
    7014:	88 1f       	adc	r24, r24
    7016:	99 1f       	adc	r25, r25
    7018:	1a 94       	dec	r1
    701a:	69 f7       	brne	.-38     	; 0x6ff6 <__udivmodsi4_loop>
    701c:	60 95       	com	r22
    701e:	70 95       	com	r23
    7020:	80 95       	com	r24
    7022:	90 95       	com	r25
    7024:	9b 01       	movw	r18, r22
    7026:	ac 01       	movw	r20, r24
    7028:	bd 01       	movw	r22, r26
    702a:	cf 01       	movw	r24, r30
    702c:	08 95       	ret

0000702e <__mulsi3>:
    702e:	62 9f       	mul	r22, r18
    7030:	d0 01       	movw	r26, r0
    7032:	73 9f       	mul	r23, r19
    7034:	f0 01       	movw	r30, r0
    7036:	82 9f       	mul	r24, r18
    7038:	e0 0d       	add	r30, r0
    703a:	f1 1d       	adc	r31, r1
    703c:	64 9f       	mul	r22, r20
    703e:	e0 0d       	add	r30, r0
    7040:	f1 1d       	adc	r31, r1
    7042:	92 9f       	mul	r25, r18
    7044:	f0 0d       	add	r31, r0
    7046:	83 9f       	mul	r24, r19
    7048:	f0 0d       	add	r31, r0
    704a:	74 9f       	mul	r23, r20
    704c:	f0 0d       	add	r31, r0
    704e:	65 9f       	mul	r22, r21
    7050:	f0 0d       	add	r31, r0
    7052:	99 27       	eor	r25, r25
    7054:	72 9f       	mul	r23, r18
    7056:	b0 0d       	add	r27, r0
    7058:	e1 1d       	adc	r30, r1
    705a:	f9 1f       	adc	r31, r25
    705c:	63 9f       	mul	r22, r19
    705e:	b0 0d       	add	r27, r0
    7060:	e1 1d       	adc	r30, r1
    7062:	f9 1f       	adc	r31, r25
    7064:	bd 01       	movw	r22, r26
    7066:	cf 01       	movw	r24, r30
    7068:	11 24       	eor	r1, r1
    706a:	08 95       	ret

0000706c <__prologue_saves__>:
    706c:	2f 92       	push	r2
    706e:	3f 92       	push	r3
    7070:	4f 92       	push	r4
    7072:	5f 92       	push	r5
    7074:	6f 92       	push	r6
    7076:	7f 92       	push	r7
    7078:	8f 92       	push	r8
    707a:	9f 92       	push	r9
    707c:	af 92       	push	r10
    707e:	bf 92       	push	r11
    7080:	cf 92       	push	r12
    7082:	df 92       	push	r13
    7084:	ef 92       	push	r14
    7086:	ff 92       	push	r15
    7088:	0f 93       	push	r16
    708a:	1f 93       	push	r17
    708c:	cf 93       	push	r28
    708e:	df 93       	push	r29
    7090:	cd b7       	in	r28, 0x3d	; 61
    7092:	de b7       	in	r29, 0x3e	; 62
    7094:	ca 1b       	sub	r28, r26
    7096:	db 0b       	sbc	r29, r27
    7098:	0f b6       	in	r0, 0x3f	; 63
    709a:	f8 94       	cli
    709c:	de bf       	out	0x3e, r29	; 62
    709e:	0f be       	out	0x3f, r0	; 63
    70a0:	cd bf       	out	0x3d, r28	; 61
    70a2:	09 94       	ijmp

000070a4 <__epilogue_restores__>:
    70a4:	2a 88       	ldd	r2, Y+18	; 0x12
    70a6:	39 88       	ldd	r3, Y+17	; 0x11
    70a8:	48 88       	ldd	r4, Y+16	; 0x10
    70aa:	5f 84       	ldd	r5, Y+15	; 0x0f
    70ac:	6e 84       	ldd	r6, Y+14	; 0x0e
    70ae:	7d 84       	ldd	r7, Y+13	; 0x0d
    70b0:	8c 84       	ldd	r8, Y+12	; 0x0c
    70b2:	9b 84       	ldd	r9, Y+11	; 0x0b
    70b4:	aa 84       	ldd	r10, Y+10	; 0x0a
    70b6:	b9 84       	ldd	r11, Y+9	; 0x09
    70b8:	c8 84       	ldd	r12, Y+8	; 0x08
    70ba:	df 80       	ldd	r13, Y+7	; 0x07
    70bc:	ee 80       	ldd	r14, Y+6	; 0x06
    70be:	fd 80       	ldd	r15, Y+5	; 0x05
    70c0:	0c 81       	ldd	r16, Y+4	; 0x04
    70c2:	1b 81       	ldd	r17, Y+3	; 0x03
    70c4:	aa 81       	ldd	r26, Y+2	; 0x02
    70c6:	b9 81       	ldd	r27, Y+1	; 0x01
    70c8:	ce 0f       	add	r28, r30
    70ca:	d1 1d       	adc	r29, r1
    70cc:	0f b6       	in	r0, 0x3f	; 63
    70ce:	f8 94       	cli
    70d0:	de bf       	out	0x3e, r29	; 62
    70d2:	0f be       	out	0x3f, r0	; 63
    70d4:	cd bf       	out	0x3d, r28	; 61
    70d6:	ed 01       	movw	r28, r26
    70d8:	08 95       	ret

000070da <_exit>:
    70da:	f8 94       	cli

000070dc <__stop_program>:
    70dc:	ff cf       	rjmp	.-2      	; 0x70dc <__stop_program>
